# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          channels: conda-forge
          python-version: ${{ matrix.python-version }}
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      - name: Install SSH key 1
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSHK }}
          name: id_rsa
          known_hosts: github.com
      - name: Install SSH key 2
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSHK_CLONE_PAPYRI }}
          name: id_rsa_2
          known_hosts: github.com
      - name: SSH CONFIG
        run: |
          echo "Host ptest" >> ~/.ssh/config
          echo "    HostName ssh.github.com" >> ~/.ssh/config
          echo "    user git" >> ~/.ssh/config
          echo "    Port 443" >> ~/.ssh/config
          echo "    IdentityFile  ~/.ssh/id_rsa" >> ~/.ssh/config
          echo "Host clonep" >> ~/.ssh/config
          echo "    HostName ssh.github.com" >> ~/.ssh/config
          echo "    user git" >> ~/.ssh/config
          echo "    Port 443" >> ~/.ssh/config
          echo "    IdentityFile  ~/.ssh/id_rsa_2" >> ~/.ssh/config
      - name: SSH keyscan
        run: |
          ssh-keyscan -H ssh.github.com >> ~/.ssh/known_hosts
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - name: install dependency public and from prive repo
        shell: bash -l {0}
        run: |
          pip install papyri flit
          git clone https://github.com/jupyter/papyri
          cd papyri
          pip install flit tree_sitter
          flit install 
          git clone https://github.com/stsewd/tree-sitter-rst
          papyri build-parser
          cd ..
      - name:  Ingest data
        shell: bash -l {0}
        run: |
          python -m papyri ingest data/*
      - name:  Render data
        shell: bash -l {0}
        run: |
          python -m papyri render
      - name:  Compress artifact for installation
        shell: bash -l {0}
        run: |
          python zip_py.py
      - name: Git clone
        run: |
          git clone ssh://ptest/pydocs/pydocs.github.io
          cd pydocs.github.io
          rm -rf docs/
          cp -r ~/.papyri/html/ docs/
          mkdir docs/pkg/
          cp ../*.zip docs/pkg/
          cp ../index.json docs/pkg/
          git config --global user.email "bussonniermatthias@gmail.com"
          git config --global user.name "Matthias Bussonnier"
          git add docs
          git commit -am 'auto'
          git push
      #    mkdir ~/.ssh/
      #    echo $SSHK > ~/.ssh/id_rsa
      #    eval "$(ssh-agent -s)"
      #    ssh-add -K ~/.ssh/id_rsa
