{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Like complete but can also returns raw jedi completions as well as the origin of the completion text. This could (and should) be made much cleaner but that will be simpler once we drop the old (and stateful) "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "complete"
                  ],
                  "domain": null,
                  "role": "any"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " API."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "With current provisional API, cursor_pos act both (depending on the caller) as the offset in the "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "text"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " or "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "line",
                    "_",
                    "buffer"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", or as the "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "column"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " when passing multiline strings this could/should be renamed but would add extra noise."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": []
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "A tuple of N elements which are (likely):",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "matched_text: ? the text that the complete matched matches: list of completions ? matches_origin: ? list same lenght as matches, and where each completion came from jedi_matches: list of Jedi matches, have it's own structure."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Returns"
  ],
  "item_file": "/Users/bussonniermatthias/dev/ipython/IPython/core/completer.py",
  "item_line": 2037,
  "item_type": "<class 'function'>",
  "aliases": [
    "IPython.core.completer.IPCompleter._complete"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "_complete(self, *, cursor_line, cursor_pos, line_buffer=None, text=None, full_text=None) -> IPython.core.completer._CompleteResult"
}