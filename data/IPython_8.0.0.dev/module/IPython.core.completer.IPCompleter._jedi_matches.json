{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Return a list of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "jedi.api.Completions"
                  ],
                  "domain": null,
                  "role": "any"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " object from a "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "text"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and cursor position."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": []
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "cursor_column",
            "type_": "int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "column position of the cursor in "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "text"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", 0-indexed."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "cursor_line",
            "type_": "int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "line position of the cursor in "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "text"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", 0-indexed"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "text",
            "type_": "str",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "text to complete"
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "If "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "IPCompleter.debug"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "True"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " may return a "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "_",
                    "FakeJediCompletion"
                  ],
                  "domain": null,
                  "role": "any"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " object containing a string with the Jedi debug information attached."
                }
              }
            ]
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Notes"
  ],
  "item_file": "/Users/bussonniermatthias/dev/ipython/IPython/core/completer.py",
  "item_line": 1391,
  "item_type": "<class 'function'>",
  "aliases": [
    "IPython.core.completer.IPCompleter._jedi_matches"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "_jedi_matches(self, cursor_column: int, cursor_line: int, text: str) -> Iterable[Any]"
}