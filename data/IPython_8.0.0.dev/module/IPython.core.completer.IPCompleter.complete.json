{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Find completions for the given text and line context."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Note that both the text and the line_buffer are optional, but at least one of them must be given."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "text",
            "type_": "string, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Text to perform the completion on.  If not given, the line buffer is split using the instance's CompletionSplitter object."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "line_buffer",
            "type_": "string, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If not given, the completer attempts to obtain the current line buffer via readline.  This keyword allows clients which are requesting for text completions in non-readline contexts to inform the completer of the entire text."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "cursor_pos",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Index of the cursor in the full line buffer.  Should be provided by remote frontends where kernel has no access to frontend state."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "Tuple of two items:",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "text",
            "type_": "str",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Text that was actually used in the completion."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "matches",
            "type_": "list",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A list of completion matches."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                      "_number": 0,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    This API is likely to be deprecated and replaced by",
                      "_number": 0,
                      "_offset": 0
                    },
                    {
                      "_line": "    :any:`IPCompleter.completions` in the future.",
                      "_number": 1,
                      "_offset": 0
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "This API is likely to be deprecated and replaced by "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "IPCompleter.completions"
                        ],
                        "domain": null,
                        "role": "any"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " in the future."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes"
  ],
  "item_file": "/Users/bussonniermatthias/dev/ipython/IPython/core/completer.py",
  "item_line": 1996,
  "item_type": "<class 'function'>",
  "aliases": [
    "IPython.core.completer.IPCompleter.complete"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "complete(self, text=None, line_buffer=None, cursor_pos=None) -> Tuple[str, Sequence[str]]"
}