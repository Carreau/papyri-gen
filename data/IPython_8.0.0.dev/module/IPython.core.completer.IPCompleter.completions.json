{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Returns an iterator over the possible completions"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. warning:: Unstable",
                  "_number": 0,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 1,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": [
                {
                  "_line": "    This function is unstable, API may change without warning.",
                  "_number": 2,
                  "_offset": 0
                },
                {
                  "_line": "    It will also raise unless use in proper context manager.",
                  "_number": 3,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "warning",
            "args0": [
              " Unstable"
            ],
            "inner": {
              "inline": [
                {
                  "type": "Words",
                  "data": {
                    "value": "This function is unstable, API may change without warning. It will also raise unless use in proper context manager."
                  }
                }
              ],
              "inner": []
            }
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "text:str",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Full text of the current input, multi line string."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "offset:int",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Integer representing the position of the cursor in "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "text"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". Offset is 0-based indexed."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "Completion",
            "desc": []
          }
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The cursor on a text can either be seen as being \"in between\" characters or \"On\" a character depending on the interface visible to the user. For consistency the cursor being on \"in between\" characters X and Y is equivalent to the cursor being \"on\" character Y, that is to say the character the cursor is on is considered as being after the cursor."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Combining characters may span more that one position in the text."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. note::",
                  "_number": 9,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 10,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": [
                {
                  "_line": "    If ``IPCompleter.debug`` is :any:`True` will yield a ``--jedi/ipython--``",
                  "_number": 11,
                  "_offset": 0
                },
                {
                  "_line": "    fake Completion token to distinguish completion returned by Jedi",
                  "_number": 12,
                  "_offset": 0
                },
                {
                  "_line": "    and usual IPython completion.",
                  "_number": 13,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 14,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "note",
            "args0": [
              ""
            ],
            "inner": {
              "inline": [
                {
                  "type": "Words",
                  "data": {
                    "value": "If "
                  }
                },
                {
                  "type": "Verbatim",
                  "data": {
                    "value": [
                      "IPCompleter.debug"
                    ]
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": " is "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "True"
                    ],
                    "domain": null,
                    "role": "any"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": " will yield a "
                  }
                },
                {
                  "type": "Verbatim",
                  "data": {
                    "value": [
                      "--jedi/ipython--"
                    ]
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": " fake Completion token to distinguish completion returned by Jedi and usual IPython completion. "
                  }
                }
              ],
              "inner": []
            }
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. note::",
                  "_number": 15,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 16,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": [
                {
                  "_line": "    Completions are not completely deduplicated yet. If identical",
                  "_number": 17,
                  "_offset": 0
                },
                {
                  "_line": "    completions are coming from different sources this function does not",
                  "_number": 18,
                  "_offset": 0
                },
                {
                  "_line": "    ensure that each completion object will only be present once.",
                  "_number": 19,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "note",
            "args0": [
              ""
            ],
            "inner": {
              "inline": [
                {
                  "type": "Words",
                  "data": {
                    "value": "Completions are not completely deduplicated yet. If identical completions are coming from different sources this function does not ensure that each completion object will only be present once."
                  }
                }
              ],
              "inner": []
            }
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Yields",
    "Notes"
  ],
  "item_file": "/Users/bussonniermatthias/dev/ipython/IPython/core/completer.py",
  "item_line": 1836,
  "item_type": "<class 'function'>",
  "aliases": [
    "IPython.core.completer.IPCompleter.completions"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "signature": "completions(self, text: str, offset: int) -> Iterator[IPython.core.completer.Completion]",
  "references": null,
  "arbitrary": []
}