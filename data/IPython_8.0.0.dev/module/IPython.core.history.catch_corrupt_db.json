{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "A decorator which wraps HistoryAccessor method calls to catch errors from a corrupt SQLite database, move the old database out of the way, and create a new one."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "We avoid clobbering larger databases because this may be triggered due to filesystem issues, not just a corrupt file."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": []
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "<decorator-gen-7>",
  "item_line": 67,
  "item_type": "<class 'function'>",
  "aliases": [
    "IPython.core.history.catch_corrupt_db"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "catch_corrupt_db(f, self, *a, **kw)"
}