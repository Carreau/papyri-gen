{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Return as a string a set of input history slices."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": []
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "range_str",
            "type_": "string",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The set of slices is given as a string, like \"~5/6-~4/2 4:8 9\", since this function is for use by magic functions which get their arguments as strings. The number before the / is the session number: ~n goes n back from the current session."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "raw",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "By default, the processed input is used.  If this is true, the raw input history is used instead."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Slices can be described with two notations:"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "* "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "N",
                    ":",
                    "M"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " -> standard python form, means including items N...(M-1). * "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "N-M"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " -> include items N..M (closed endpoint)."
                }
              }
            ]
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Notes"
  ],
  "item_file": "/Users/bussonniermatthias/dev/ipython/IPython/core/interactiveshell.py",
  "item_line": 3645,
  "item_type": "<class 'function'>",
  "aliases": [
    "IPython.InteractiveShell.extract_input_lines"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "extract_input_lines(self, range_str, raw=False)"
}