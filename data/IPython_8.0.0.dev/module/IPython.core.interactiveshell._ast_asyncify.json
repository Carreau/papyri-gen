{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Parse a cell with top-level await and modify the AST to be able to run it later."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": []
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "cell: str",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The code cell to asyncronify"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "wrapper_name: str",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The name of the function to be used to wrap the passed "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "cell"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". It is advised to **not** use a python identifier in order to not pollute the global namespace in which the function will be ran."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "ModuleType:",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A module object AST containing **one** function named "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "wrapper",
                          "_",
                          "name"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The given code is wrapped in a async-def function, parsed into an AST, and the resulting function definition AST is modified to return the last expression."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The last expression or await node is moved into a return statement at the end of the function, and removed from its original location. If the last node is not Expr or Await nothing is done."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The function "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "_",
                          "_",
                          "code",
                          "_",
                          "_"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " will need to be later modified  (by "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "removed",
                          "_",
                          "co",
                          "_",
                          "newlocals"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ") in a subsequent step to not create new "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "locals()"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " meaning that the local and global scope are the same, ie as if the body of the function was at module level."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Lastly a call to "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "locals()"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is made just before the last expression of the function, or just after the last assignment or statement to make sure the global dict is updated as python function work with a local fast cache which is updated only on "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "local()"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " calls."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns"
  ],
  "item_file": "/Users/bussonniermatthias/dev/ipython/IPython/core/interactiveshell.py",
  "item_line": 173,
  "item_type": "<class 'function'>",
  "aliases": [
    "IPython.core.interactiveshell._ast_asyncify"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "_ast_asyncify(cell: str, wrapper_name: str) -> _ast.Module"
}