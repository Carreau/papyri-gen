{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Decorate the given method as line magic."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The decorator can be used with or without arguments, as follows."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "i) without arguments: it will create a line magic named as the method being decorated::"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "    @deco",
                  "_number": 5,
                  "_offset": 4
                },
                {
                  "_line": "    def foo(...)",
                  "_number": 6,
                  "_offset": 4
                },
                {
                  "_line": "",
                  "_number": 7,
                  "_offset": 4
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "will create a line magic named "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "foo"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "ii) with one string argument: which will be used as the actual name of the resulting magic::"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "    @deco('bar')",
                  "_number": 13,
                  "_offset": 4
                },
                {
                  "_line": "    def foo(...)",
                  "_number": 14,
                  "_offset": 4
                },
                {
                  "_line": "",
                  "_number": 15,
                  "_offset": 4
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "will create a line magic named "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "bar"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "To register a class magic use "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "Interactiveshell.register",
                    "_",
                    "magic(class",
                    " ",
                    "or",
                    " ",
                    "instance)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/Users/bussonniermatthias/dev/ipython/IPython/core/magic.py",
  "item_line": 186,
  "item_type": "<class 'function'>",
  "aliases": [
    "IPython.core.magic.cell_magic",
    "IPython.core.magic.line_cell_magic",
    "IPython.core.magic.line_magic",
    "IPython.core.magics.display.cell_magic",
    "IPython.core.magics.execution.line_cell_magic",
    "IPython.core.magics.execution.line_magic",
    "IPython.core.magics.osm.cell_magic",
    "IPython.core.magics.osm.line_cell_magic",
    "IPython.core.magics.osm.line_magic",
    "IPython.core.magics.script.cell_magic",
    "IPython.core.magics.script.line_magic"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "signature": "magic_deco(arg)",
  "references": null,
  "arbitrary": []
}