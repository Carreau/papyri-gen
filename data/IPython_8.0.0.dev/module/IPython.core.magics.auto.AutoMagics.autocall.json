{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Make functions callable without having to type parentheses."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Usage:"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   %autocall [mode]"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The mode can be one of: 0->Off, 1->Smart, 2->Full.  If not given, the value is toggled on and off (remembering the previous state)."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "In more detail, these values mean:"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "0 -> fully disabled"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "1 -> active, but do not apply if there are no arguments on the line."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "In this mode, you get::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "  In [1]: callable",
                  "_number": 15,
                  "_offset": 2
                },
                {
                  "_line": "  Out[1]: <built-in function callable>",
                  "_number": 16,
                  "_offset": 2
                },
                {
                  "_line": "",
                  "_number": 17,
                  "_offset": 2
                },
                {
                  "_line": "  In [2]: callable 'hello'",
                  "_number": 18,
                  "_offset": 2
                },
                {
                  "_line": "  ------> callable('hello')",
                  "_number": 19,
                  "_offset": 2
                },
                {
                  "_line": "  Out[2]: False",
                  "_number": 20,
                  "_offset": 2
                },
                {
                  "_line": "",
                  "_number": 21,
                  "_offset": 2
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "2 -> Active always.  Even if no arguments are present, the callable object is called::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "  In [2]: float",
                  "_number": 25,
                  "_offset": 2
                },
                {
                  "_line": "  ------> float()",
                  "_number": 26,
                  "_offset": 2
                },
                {
                  "_line": "  Out[2]: 0.0",
                  "_number": 27,
                  "_offset": 2
                },
                {
                  "_line": "",
                  "_number": 28,
                  "_offset": 2
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Note that even with autocall off, you can still use '/' at the start of a line to treat the first argument on the command line as a function and add parentheses to it::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "  In [8]: /str 43",
                  "_number": 33,
                  "_offset": 2
                },
                {
                  "_line": "  ------> str(43)",
                  "_number": 34,
                  "_offset": 2
                },
                {
                  "_line": "  Out[8]: '43'",
                  "_number": 35,
                  "_offset": 2
                },
                {
                  "_line": "",
                  "_number": 36,
                  "_offset": 2
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "# all-random (note for auto-testing)"
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": []
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "<decorator-gen-22>",
  "item_line": 62,
  "item_type": "<class 'function'>",
  "aliases": [
    "IPython.core.magics.AutoMagics.autocall"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "autocall(self, parameter_s='')"
}