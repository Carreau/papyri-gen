{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Shell execute - run shell command and capture output (!! is short-hand)."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "%sx command"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "IPython will run the given command using commands.getoutput(), and return the result formatted as a list (split on '\\n').  Since the output is _returned_, it will be stored in ipython's regular output cache Out[N] and in the '_N' automatic variables."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Notes:"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "1) If an input line begins with '!!', then %sx is automatically invoked.  That is, while::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "  !ls",
                  "_number": 12,
                  "_offset": 2
                },
                {
                  "_line": "",
                  "_number": 13,
                  "_offset": 2
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "causes ipython to simply issue system('ls'), typing::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "  !!ls",
                  "_number": 16,
                  "_offset": 2
                },
                {
                  "_line": "",
                  "_number": 17,
                  "_offset": 2
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "is a shorthand equivalent to::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "  %sx ls",
                  "_number": 20,
                  "_offset": 2
                },
                {
                  "_line": "",
                  "_number": 21,
                  "_offset": 2
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "2) %sx differs from %sc in that %sx automatically splits into a list, like '%sc -l'.  The reason for this is to make it as easy as possible to process line-oriented shell output via further python commands. %sc is meant to provide much finer control, but requires more typing."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "3) Just like %sc -l, this is a list with special attributes: ::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "  .l (or .list) : value as list.",
                  "_number": 31,
                  "_offset": 2
                },
                {
                  "_line": "  .n (or .nlstr): value as newline-separated string.",
                  "_number": 32,
                  "_offset": 2
                },
                {
                  "_line": "  .s (or .spstr): value as whitespace-separated string.",
                  "_number": 33,
                  "_offset": 2
                },
                {
                  "_line": "",
                  "_number": 34,
                  "_offset": 2
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "This is very useful when trying to use such lists as arguments to system commands."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": []
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "<decorator-gen-95>",
  "item_line": 681,
  "item_type": "<class 'function'>",
  "aliases": [
    "IPython.core.magics.OSMagics.sx",
    "IPython.core.magics.OSMagics.system",
    "IPython.core.magics.OSMagics.bang"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "sx(self, line='', cell=None)"
}