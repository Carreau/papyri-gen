{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Open a command in a shell subprocess and execute a callback."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "This function provides common scaffolding for creating subprocess.Popen() calls.  It creates a Popen object and then calls the callback with it."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "cmd",
            "type_": "str or list",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A command to be executed by the system, using "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "subprocess.Popen"
                        ],
                        "domain": null,
                        "role": "class"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". If a string is passed, it will be run in the system shell. If a list is passed, it will be used directly as arguments."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "callback",
            "type_": "callable",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A one-argument function that will be called with the Popen object."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "stderr",
            "type_": "file descriptor number, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "By default this is set to "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "subprocess.PIPE"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", but you can also pass the value "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "subprocess.STDOUT"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " to force the subprocess' stderr to go into the same file descriptor as its stdout.  This is useful to read stdout and stderr combined in the order they are generated."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "The return value of the provided callback is returned.",
            "desc": []
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "item_file": "/Users/bussonniermatthias/dev/ipython/IPython/utils/_process_common.py",
  "item_line": 43,
  "item_type": "<class 'function'>",
  "aliases": [
    "IPython.utils._process_common.process_handler"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "process_handler(cmd, callback, stderr=-1)"
}