{
  "aliases": [],
  "arbitrary": [
    {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "note "
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "To Jupyter users: Magics are specific to and provided by the IPython kernel. Whether Magics are available on a kernel is a decision that is made by the kernel developer on a per-kernel basis. To work properly, Magics must use a syntax element which is not valid in the underlying language. For example, the IPython kernel uses the "
                },
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "%"
                },
                {
                  "type": "text",
                  "value": " syntax element for Magics as "
                },
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "%"
                },
                {
                  "type": "text",
                  "value": " is not a valid unary operator in Python. However, "
                },
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "%"
                },
                {
                  "type": "text",
                  "value": " might have meaning in other languages."
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Here is the help auto-generated from the docstrings of all the available Magics functions that IPython ships with."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "You can create and register your own Magics with IPython. You can find many user defined Magics on "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "PyPI"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://pypi.io"
            },
            {
              "type": "text",
              "value": ". Feel free to publish your own and use the "
            },
            {
              "type": "inlineCode",
              "value": "Framework :: IPython"
            },
            {
              "type": "text",
              "value": " trove classifier."
            }
          ],
          "type": "paragraph"
        },
        {
          "args": "magics-generated.txt",
          "children": [],
          "name": "include",
          "options": {},
          "type": "mystDirective",
          "value": ""
        }
      ],
      "level": 0,
      "target": null,
      "title": "Built-in magic commands",
      "type": "Section"
    }
  ],
  "content": {},
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": null,
  "item_line": null,
  "item_type": null,
  "ordered_sections": [],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}