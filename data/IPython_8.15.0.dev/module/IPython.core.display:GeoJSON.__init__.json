{
  "aliases": [
    "IPython.display.GeoJSON.__init__"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "VegaLite data. Not an already-serialized JSON string. Scalar types (None, number, string) are not allowed, only dict or list containers."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "data",
              "type": "Param",
              "type_": "dict or list"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Leaflet TileLayer URL template: http://leafletjs.com/reference.html#url-template"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "url_template",
              "type": "Param",
              "type_": "string"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Leaflet TileLayer options: http://leafletjs.com/reference.html#tilelayer-options"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "layer_options",
              "type": "Param",
              "type_": "dict"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A URL to download the data from."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "url",
              "type": "Param",
              "type_": "unicode"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Path to a local file to load the data from."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "filename",
              "type": "Param",
              "type_": "unicode"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Specify extra metadata to attach to the json display object."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "metadata",
              "type": "Param",
              "type_": "dict"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Create a GeoJSON display object given raw data."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "The following will display an interactive map of Mars with a point of\ninterest on frontend that do support GeoJSON display."
      },
      {
        "type": "text",
        "value": "    >>> from IPython.display import GeoJSON"
      },
      {
        "type": "text",
        "value": "    >>> GeoJSON(data={\n    ...     \"type\": \"Feature\",\n    ...     \"geometry\": {\n    ...         \"type\": \"Point\",\n    ...         \"coordinates\": [-81.327, 296.038]\n    ...     }\n    ... },\n    ... url_template=\"http://s3-eu-west-1.amazonaws.com/whereonmars.cartodb.net/{basemap_id}/{z}/{x}/{y}.png\",\n    ... layer_options={\n    ...     \"basemap_id\": \"celestia_mars-shaded-16k_global\",\n    ...     \"attribution\" : \"Celestia/praesepe\",\n    ...     \"minZoom\" : 0,\n    ...     \"maxZoom\" : 18,\n    ... })\n    <IPython.core.display.GeoJSON object>"
      },
      {
        "type": "text",
        "value": "In the terminal IPython, you will only see the text representation of\nthe GeoJSON object."
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dev/ipython/IPython/core/display.py",
  "item_line": 656,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self, *args, **kwargs)"
  },
  "type": "DocBlob"
}