{
  "aliases": [
    "IPython.display.Image.__init__"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "When this object is returned by an input cell or passed to the display function, it will result in the image being displayed in the frontend."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The raw image data or a URL or filename to load the data from. This always results in embedded image data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "data",
              "type": "Param",
              "type_": "unicode, str or bytes"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A URL to download the data from. If you specify "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "url="
                    },
                    {
                      "type": "text",
                      "value": ", the image data will not be embedded unless you also specify "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "embed=True"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "url",
              "type": "Param",
              "type_": "unicode"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Path to a local file to load the data from. Images from a file are always embedded."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "filename",
              "type": "Param",
              "type_": "unicode"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The format of the image data (png/jpeg/jpg/gif). If a filename or URL is given for format will be inferred from the filename extension."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "format",
              "type": "Param",
              "type_": "unicode"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Should the image data be embedded using a data URI (True) or be loaded using an <img> tag. Set this to True if you want the image to be viewable later with no internet connection in the notebook."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Default is "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "True"
                    },
                    {
                      "type": "text",
                      "value": ", unless the keyword argument "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "url",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "url"
                    },
                    {
                      "type": "text",
                      "value": " is set, then default value is "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "False"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Note that QtConsole is not able to display images if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "embed",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "embed"
                    },
                    {
                      "type": "text",
                      "value": " is set to "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "False"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "embed",
              "type": "Param",
              "type_": "bool"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Width in pixels to which to constrain the image in html"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "width",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Height in pixels to which to constrain the image in html"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "height",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Automatically set the width and height to half of the measured width and height. This only works for embedded images because it reads the width/height from image data. For non-embedded images, you can just set the desired display width and height directly."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "retina",
              "type": "Param",
              "type_": "bool"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Set unconfined=True to disable max-width confinement of the image."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "unconfined",
              "type": "Param",
              "type_": "bool"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Specify extra metadata to attach to the image."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "metadata",
              "type": "Param",
              "type_": "dict"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Alternative text for the image, for use by screen readers."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "alt",
              "type": "Param",
              "type_": "unicode"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Create a PNG/JPEG/GIF image object given raw data."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "embedded image data, works in qtconsole and notebook\nwhen passed positionally, the first arg can be any of raw image data,\na URL, or a filename from which to load image data.\nThe result is always embedding image data for inline images."
      },
      {
        "type": "code",
        "value": "Image('https://www.google.fr/images/srpr/logo3w.png') # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "Image('/path/to/image.jpg')"
      },
      {
        "type": "code",
        "value": "Image(b'RAW_PNG_DATA...')"
      },
      {
        "type": "text",
        "value": "Specifying Image(url=...) does not embed the image data,\nit only generates ``<img>`` tag with a link to the source.\nThis will not work in the qtconsole or offline."
      },
      {
        "type": "code",
        "value": "Image(url='https://www.google.fr/images/srpr/logo3w.png')"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dev/ipython/IPython/core/display.py",
  "item_line": 822,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self, data=None, url=None, filename=None, format=None, embed=None, width=None, height=None, retina=False, unconfined=False, metadata=None, alt=None)"
  },
  "type": "DocBlob"
}