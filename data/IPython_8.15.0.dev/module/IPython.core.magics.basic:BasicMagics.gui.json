{
  "aliases": [
    "IPython.core.magics.BasicMagics.gui"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "%gui [GUINAME]"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "This magic replaces IPython's threaded shells that were activated using the (pylab/wthread/etc.) command line flags.  GUI toolkits can now be enabled at runtime and keyboard interrupts should work without any problems.  The following toolkits are supported:  wxPython, PyQt4, PyGTK, Tk and Cocoa (OSX)      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "%gui wx      # enable wxPython event loop integration\n%gui qt      # enable PyQt/PySide event loop integration\n             # with the latest version available.\n%gui qt6     # enable PyQt6/PySide6 event loop integration\n%gui qt5     # enable PyQt5/PySide2 event loop integration\n%gui gtk     # enable PyGTK event loop integration\n%gui gtk3    # enable Gtk3 event loop integration\n%gui gtk4    # enable Gtk4 event loop integration\n%gui tk      # enable Tk event loop integration\n%gui osx     # enable Cocoa event loop integration\n             # (requires %matplotlib 1.1)\n%gui         # disable all event loop integration"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "WARNING:  after any of these has been called you can simply create an application object, but DO NOT start the event loop yourself, as we have already handled that."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Enable or disable IPython GUI event loop integration."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dev/ipython/IPython/core/magics/basic.py",
  "item_line": 483,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self, parameter_s='')"
  },
  "type": "DocBlob"
}