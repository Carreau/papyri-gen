{
  "aliases": [
    "IPython.core.magics.ExecutionMagics.prun"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "dd": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "%prun [options] statement"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "dt": {
                "children": [
                  {
                    "type": "text",
                    "value": "Usage, in line mode:"
                  }
                ],
                "type": "paragraph"
              },
              "type": "DefListItem"
            },
            {
              "dd": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "%%prun [options] [statement]   code...   code..."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "dt": {
                "children": [
                  {
                    "type": "text",
                    "value": "Usage, in cell mode:"
                  }
                ],
                "type": "paragraph"
              },
              "type": "DefListItem"
            }
          ],
          "type": "DefList"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "In cell mode, the additional code lines are appended to the (possibly empty) statement in the first line.  Cell mode allows you to easily profile multiline blocks without having to put them in a separate function."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The given statement (which doesn't require quote marks) is run via the python profiler in a manner similar to the profile.run() function. Namespaces are internally managed to work correctly; profile.run cannot be used in IPython because it makes certain assumptions about namespaces which do not hold under IPython."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Options:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "dd": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "you can place restrictions on what or how much of the   profile gets printed. The limit value can be:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "A string: only information for function names containing this string        is printed."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "An integer: only these many lines are printed."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "A float (between 0 and 1): this fraction of the report is printed        (for example, use a limit of 0.4 to see the topmost 40% only)."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        }
                      ],
                      "ordered": false,
                      "spread": false,
                      "start": 1,
                      "type": "list"
                    }
                  ],
                  "type": "blockquote"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "You can combine several limits with repeated use of the option. For   example, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "-l __init__ -l 5"
                    },
                    {
                      "type": "text",
                      "value": " will print only the topmost 5 lines of   information about class constructors."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "dt": {
                "children": [
                  {
                    "type": "text",
                    "value": "-l <limit>"
                  }
                ],
                "type": "paragraph"
              },
              "type": "DefListItem"
            },
            {
              "dd": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "return the pstats.Stats object generated by the profiling. This   object has all the information about the profile in it, and you can   later use it for further analysis or in other functions."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "dt": {
                "children": [
                  {
                    "type": "text",
                    "value": "-r"
                  }
                ],
                "type": "paragraph"
              },
              "type": "DefListItem"
            },
            {
              "dd": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "sort profile by given key. You can provide more than one key   by using the option several times: '-s key1 -s key2 -s key3...'. The   default sorting key is 'time'."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The following is copied verbatim from the profile documentation   referenced below:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "When more than one key is provided, additional keys are used as   secondary criteria when the there is equality in all keys selected   before them."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Abbreviations can be used for any key names, as long as the   abbreviation is unambiguous.  The following are the keys currently   defined:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "============  =====================   Valid Arg     Meaning   ============  =====================   \"calls\"       call count   \"cumulative\"  cumulative time   \"file\"        file name   \"module\"      file name   \"pcalls\"      primitive call count   \"line\"        line number   \"name\"        function name   \"nfl\"         name/file/line   \"stdname\"     standard name   \"time\"        internal time   ============  ====================="
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Note that all sorts on statistics are in descending order (placing   most time consuming items first), where as name, file, and line number   searches are in ascending order (i.e., alphabetical). The subtle   distinction between \"nfl\" and \"stdname\" is that the standard name is a   sort of the name as printed, which means that the embedded line   numbers get compared in an odd way.  For example, lines 3, 20, and 40   would (if the file names were the same) appear in the string order   \"20\" \"3\" and \"40\".  In contrast, \"nfl\" does a numeric compare of the   line numbers.  In fact, sort_stats(\"nfl\") is the same as   sort_stats(\"name\", \"file\", \"line\")."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "dt": {
                "children": [
                  {
                    "type": "text",
                    "value": "-s <key>"
                  }
                ],
                "type": "paragraph"
              },
              "type": "DefListItem"
            },
            {
              "dd": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "save profile results as shown on screen to a text   file. The profile is still shown on screen."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "dt": {
                "children": [
                  {
                    "type": "text",
                    "value": "-T <filename>"
                  }
                ],
                "type": "paragraph"
              },
              "type": "DefListItem"
            },
            {
              "dd": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "save (via dump_stats) profile statistics to given   filename. This data is in a format understood by the pstats module, and   is generated by a call to the dump_stats() method of profile   objects. The profile is still shown on screen."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "dt": {
                "children": [
                  {
                    "type": "text",
                    "value": "-D <filename>"
                  }
                ],
                "type": "paragraph"
              },
              "type": "DefListItem"
            },
            {
              "dd": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "suppress output to the pager.  Best used with -T and/or -D above."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "dt": {
                "children": [
                  {
                    "type": "text",
                    "value": "-q"
                  }
                ],
                "type": "paragraph"
              },
              "type": "DefListItem"
            }
          ],
          "type": "DefList"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "If you want to run complete programs under the profiler's control, use "
            },
            {
              "type": "inlineCode",
              "value": "%run -p [prof_opts] filename.py [args to program]"
            },
            {
              "type": "text",
              "value": " where prof_opts contains profiler specific options as described here."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "You can read the complete documentation for the profile module with    "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "In [1]: import profile; profile.help()"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionchanged 7.3"
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "User variables are no longer expanded, the magic line is always left unmodified."
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Run a statement through the python code profiler."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dev/ipython/IPython/core/magics/execution.py",
  "item_line": 192,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self, parameter_s='', cell=None)"
  },
  "type": "DocBlob"
}