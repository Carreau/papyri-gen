{
  "aliases": [
    "IPython.core.magics.NamespaceMagics.psearch"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "%psearch [options] PATTERN [OBJECT TYPE]"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Note: ? can be used as a synonym for %psearch, at the beginning or at the end: both a*? and ?a* are equivalent to '%psearch a*'.  Still, the rest of the command line must be unchanged (options come first), so for example the following forms are equivalent"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "%psearch -i a* function -i a* function? ?-i a* function"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Arguments:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "PATTERN"
                }
              ],
              "type": "paragraph"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "where PATTERN is a string containing * as a wildcard similar to its   use in a shell.  The pattern is matched in all namespaces on the   search path. By default objects starting with a single _ are not   matched, many IPython generated objects have a single   underscore. The default is case insensitive matching. Matching is   also done on the attributes of objects and not only on the objects   in a module."
                }
              ],
              "type": "paragraph"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "[OBJECT TYPE]"
                }
              ],
              "type": "paragraph"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "Is the name of a python type from the types module. The name is   given in lowercase without the ending type, ex. StringType is   written string. By adding a type here only objects matching the   given type are matched. Using all here makes the pattern match all   types (this is the default)."
                }
              ],
              "type": "paragraph"
            }
          ],
          "type": "blockquote"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Options:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "-a: makes the pattern match even objects whose names start with a   single underscore.  These names are normally omitted from the   search."
                }
              ],
              "type": "paragraph"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "-i/-c: make the pattern case insensitive/sensitive.  If neither of   these options are given, the default is read from your configuration   file, with the option "
                },
                {
                  "type": "inlineCode",
                  "value": "InteractiveShell.wildcards_case_sensitive"
                },
                {
                  "type": "text",
                  "value": ".   If this option is not specified in your configuration file, IPython's   internal default is to do a case sensitive search."
                }
              ],
              "type": "paragraph"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "-e/-s NAMESPACE: exclude/search a given namespace.  The pattern you   specify can be searched in any of the following namespaces:   'builtin', 'user', 'user_global','internal', 'alias', where   'builtin' and 'user' are the search defaults.  Note that you should   not use quotes when specifying namespaces."
                }
              ],
              "type": "paragraph"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "-l: List all available object types for object matching. This function   can be used without arguments."
                }
              ],
              "type": "paragraph"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "'Builtin' contains the python module builtin, 'user' contains all   user data, 'alias' only contain the shell aliases and no python   objects, 'internal' contains objects used by IPython.  The   'user_global' namespace is only used by embedded IPython instances,   and it contains module-level globals.  You can add namespaces to the   search with -s or exclude them with -e (these options can be given   more than once)."
                }
              ],
              "type": "paragraph"
            }
          ],
          "type": "blockquote"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Search for object in namespaces by wildcard."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "::"
      },
      {
        "type": "text",
        "value": "  %psearch a*            -> objects beginning with an a\n  %psearch -e builtin a* -> objects NOT in the builtin space starting in a\n  %psearch a* function   -> all functions beginning with an a\n  %psearch re.e*         -> objects beginning with an e in module re\n  %psearch r*.e*         -> objects that start with e in modules starting in r\n  %psearch r*.* string   -> all strings in modules beginning with r"
      },
      {
        "type": "text",
        "value": "Case sensitive search::"
      },
      {
        "type": "text",
        "value": "  %psearch -c a*         list all object beginning with lower case a"
      },
      {
        "type": "text",
        "value": "Show objects beginning with a single _::"
      },
      {
        "type": "text",
        "value": "  %psearch -a _*         list objects beginning with a single underscore"
      },
      {
        "type": "text",
        "value": "List available objects::"
      },
      {
        "type": "text",
        "value": "  %psearch -l            list all available object types"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dev/ipython/IPython/core/magics/namespace.py",
  "item_line": 124,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self, parameter_s='')"
  },
  "type": "DocBlob"
}