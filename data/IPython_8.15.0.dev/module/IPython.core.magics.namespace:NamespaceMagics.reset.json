{
  "aliases": [
    "IPython.core.magics.NamespaceMagics.reset"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Calling this magic from clients that do not implement standard input, such as the ipython notebook interface, will reset the namespace without confirmation."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "force reset without asking for confirmation."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "-f",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "'Soft' reset: Only clears your namespace, leaving history intact. References to objects may be kept. By default (without this option), we do a 'hard' reset, giving you a new session and removing all references to objects from the current session."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "-s",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Try to aggressively remove modules from sys.modules ; this may allow you to reimport Python modules that have been updated and pick up changes, but can have unintended consequences."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "--aggressive",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "reset input history"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "in",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "reset output history"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "reset directory history"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dhist",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "reset only variables that are NumPy arrays"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "array",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Resets the namespace by removing all names defined by the user, if called without arguments, or by removing some types of objects, such as everything currently in IPython's In[] and Out[] containers (see the parameters for details)."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "::"
      },
      {
        "type": "text",
        "value": "  In [6]: a = 1"
      },
      {
        "type": "text",
        "value": "  In [7]: a\n  Out[7]: 1"
      },
      {
        "type": "text",
        "value": "  In [8]: 'a' in get_ipython().user_ns\n  Out[8]: True"
      },
      {
        "type": "text",
        "value": "  In [9]: %reset -f"
      },
      {
        "type": "text",
        "value": "  In [1]: 'a' in get_ipython().user_ns\n  Out[1]: False"
      },
      {
        "type": "text",
        "value": "  In [2]: %reset -f in\n  Flushing input history"
      },
      {
        "type": "text",
        "value": "  In [3]: %reset -f dhist in\n  Flushing directory history\n  Flushing input history"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dev/ipython/IPython/core/magics/namespace.py",
  "item_line": 476,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "See Also",
    "Examples",
    "Notes"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "invoked as "
            },
            {
              "type": "inlineCode",
              "value": "%reset_selective"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "IPython",
          "path": "IPython.core.magics.namespace:NamespaceMagics.reset_selective",
          "type": "RefInfo",
          "version": "8.15.0.dev"
        },
        "type": "Link",
        "value": "reset_selective"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self, parameter_s='')"
  },
  "type": "DocBlob"
}