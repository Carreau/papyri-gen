{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "When this object is returned by an input cell or passed to the display function, it will result in the image being displayed in the frontend."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The raw image data or a URL or filename to load the data from. This always results in embedded image data."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "data",
                "type_": "unicode, str or bytes"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A URL to download the data from. If you specify "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "url="
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ", the image data will not be embedded unless you also specify "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "embed=True"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "url",
                "type_": "unicode"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Path to a local file to load the data from. Images from a file are always embedded."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "filename",
                "type_": "unicode"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The format of the image data (png/jpeg/jpg/gif). If a filename or URL is given for format will be inferred from the filename extension."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "format",
                "type_": "unicode"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Should the image data be embedded using a data URI (True) or be loaded using an <img> tag. Set this to True if you want the image to be viewable later with no internet connection in the notebook."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Default is "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "True"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ", unless the keyword argument "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "IPython",
                              "path": "IPython.utils.openpy.read_py_url",
                              "version": "8.2.0"
                            },
                            "value": "url"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is set, then default value is "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "False"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Note that QtConsole is not able to display images if "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "embed"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " is set to "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "False"
                          },
                          "type": "Directive"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "embed",
                "type_": "bool"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Width in pixels to which to constrain the image in html"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "width",
                "type_": "int"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Height in pixels to which to constrain the image in html"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "height",
                "type_": "int"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Automatically set the width and height to half of the measured width and height. This only works for embedded images because it reads the width/height from image data. For non-embedded images, you can just set the desired display width and height directly."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "retina",
                "type_": "bool"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Set unconfined=True to disable max-width confinement of the image."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "unconfined",
                "type_": "bool"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Specify extra metadata to attach to the image."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "metadata",
                "type_": "dict"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Alternative text for the image, for use by screen readers."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "alt",
                "type_": "unicode"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Create a PNG/JPEG/GIF image object given raw data."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "IPython.display.Image.__init__"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "embedded image data, works in qtconsole and notebook when passed positionally, the first arg can be any of raw image data, a URL, or a filename from which to load image data. The result is always embedding image data for inline images."
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "IPython",
                    "path": "IPython.core.display.Image",
                    "version": "8.2.0"
                  },
                  "value": "Image"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "https://www.google.fr/images/srpr/logo3w.png",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "# doctest: +SKIP",
                "type": "str"
              },
              "type": "c1"
            }
          ],
          "out": "<IPython.core.display.Image object>"
        },
        "type": "Code2"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "IPython",
                    "path": "IPython.core.display.Image",
                    "version": "8.2.0"
                  },
                  "value": "Image"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "/path/to/image.jpg",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "<IPython.core.display.Image object>"
        },
        "type": "Code2"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "IPython",
                    "path": "IPython.core.display.Image",
                    "version": "8.2.0"
                  },
                  "value": "Image"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "builtins",
                    "path": "builtins.bytes",
                    "version": "*"
                  },
                  "value": "b"
                },
                "type": "Link"
              },
              "type": "sa"
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "RAW_PNG_DATA...",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "<IPython.core.display.Image object>"
        },
        "type": "Code2"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "Specifying Image(url=...) does not embed the image data, it only generates "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "<img>"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " tag with a link to the source. This will not work in the qtconsole or offline."
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "IPython",
                    "path": "IPython.core.display.Image",
                    "version": "8.2.0"
                  },
                  "value": "Image"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "url",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "https://www.google.fr/images/srpr/logo3w.png",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "<IPython.core.display.Image object>"
        },
        "type": "Code2"
      }
    ],
    "title": null
  },
  "item_file": "/IPython/core/display.py",
  "item_line": 809,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "__init__(self, data=None, url=None, filename=None, format=None, embed=None, width=None, height=None, retina=False, unconfined=False, metadata=None, alt=None)"
  }
}