{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "To define the callables that compute the representation of your objects, define a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "_ipython_display_"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " method or use the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "for_type"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "for_type_by_name"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " methods to register functions that handle this. Unlike mime-type displays, this method should not return anything, instead calling any appropriate display methods itself."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "This display formatter has highest priority. If it fires, no other display formatter will be called."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Prior to IPython 6.1, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "IPython",
                    "path": "IPython.core.display.GeoJSON._ipython_display_",
                    "version": "8.3.0.dev"
                  },
                  "value": "_ipython_display_"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " was the only way to display custom mime-types without registering a new Formatter."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "IPython 6.1 introduces "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "_repr_mimebundle_"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " for displaying custom mime-types, so "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "IPython",
                    "path": "IPython.core.display.GeoJSON._ipython_display_",
                    "version": "8.3.0.dev"
                  },
                  "value": "_ipython_display_"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " should only be used for objects that require unusual display patterns, such as multiple display calls."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "An escape-hatch Formatter for objects that know how to display themselves."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "IPython.core.formatters.IPythonDisplayFormatter"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/dev/ipython/IPython/core/formatters.py",
  "item_line": 884,
  "item_type": "<class 'traitlets.traitlets.MetaHasTraits'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": null
  }
}