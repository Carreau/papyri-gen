{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The IPython prefilter is run on all user input before it is run.  The prefilter consumes lines of input and produces transformed lines of input."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The implementation consists of two phases:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "Transformers"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "Checkers and handlers"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "EnumeratedList"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Over time, we plan on deprecating the checkers and handlers and doing everything in the transformers."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The transformers are instances of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "PrefilterTransformer"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and have a single method "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "transform"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " that takes a line and returns a transformed line.  The transformation can be accomplished using any tool, but our current ones use regular expressions for speed."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "After all the transformers have been run, the line is fed to the checkers, which are instances of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "PrefilterChecker"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ".  The line is passed to the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "check"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " method, which either returns "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "None"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " or a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "PrefilterHandler"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " instance.  If "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "None"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is returned, the other checkers are tried.  If an "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "PrefilterHandler"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " instance is returned, the line is passed to the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "handle"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " method of the returned handler and no further checkers are tried."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Both transformers and checkers have a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "api",
                    "module": "priority",
                    "path": "priority",
                    "version": "*"
                  },
                  "value": "priority"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " attribute, that determines the order in which they are called.  Smaller priorities are tried first."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Both transformers and checkers also have "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "enabled"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " attribute, which is a boolean that determines if the instance is used."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Users or developers can change the priority or enabled attribute of transformers or checkers, but they must call the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "sort_checkers"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "sort_transformers"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " method after changing the priority."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Main prefilter component."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "IPython.core.interactiveshell.PrefilterManager"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/dev/ipython/IPython/core/prefilter.py",
  "item_line": 78,
  "item_type": "<class 'traitlets.traitlets.MetaHasTraits'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": null
  }
}