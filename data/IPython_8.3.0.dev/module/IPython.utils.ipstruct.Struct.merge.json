{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "This is similar to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "update"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", but much more flexible. First, a dict is made from data+key=value pairs. When merging this dict with the Struct S, the optional dictionary 'conflict' is used to decide what to do."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "If conflict is not given, the default behavior is to preserve any keys with their current value (the opposite of the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "update"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " method's behavior)."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "__conflict_solve",
                    "version": null
                  },
                  "value": "__conflict_solve"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " dict is a dictionary of binary functions which will be used to solve key conflicts.  Here is an example::      "
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "__conflict_solve = dict(\n    func1=['a','b','c'],\n    func2=['d','e']\n)"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "In this case, the function "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "func1"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " will be used to resolve keys 'a', 'b' and 'c' and the function "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "func2"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " will be used for keys 'd' and 'e'.  This could also be written as::      "
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "__conflict_solve = dict(func1='a b c',func2='d e')"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "These functions will be called for each key they apply to with the form::      "
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "func1(self['a'], other['a'])"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The return value is used as the final merged value."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "As a convenience, merge() provides five (the most commonly needed) pre-defined policies: preserve, update, add, add_flip and add_s. The easiest explanation is their implementation::      "
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "preserve = lambda old,new: old\nupdate   = lambda old,new: new\nadd      = lambda old,new: old + new\nadd_flip = lambda old,new: new + old  # note change of order!\nadd_s    = lambda old,new: old + ' ' + new  # only for str!"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "You can use those four words (as strings) as keys instead of defining them as functions, and the merge method will substitute the appropriate functions for you."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "For more complicated conflict resolution policies, you still need to construct your own functions."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The data to merge into self"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "__loc_data__",
            "type_": "dict, Struct"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The conflict policy dict.  The keys are binary functions used to resolve the conflict and the values are lists of strings naming the keys the conflict resolution function applies to.  Instead of a list of strings a space separated string can be used, like 'a b c'."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "__conflict_solve",
            "type_": "dict"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Additional key, value pairs to merge in"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "**kw",
            "type_": "dict"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Merge two Structs with customizable conflict resolution."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "IPython.core.interactiveshell.Struct.merge"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "This show the default policy:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "s",
              "IPython.utils.ipstruct.Struct",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "Struct",
              "IPython.utils.ipstruct.Struct",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "10",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "b",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "30",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "s2",
              "IPython.utils.ipstruct.Struct",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "Struct",
              "IPython.utils.ipstruct.Struct",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "20",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "c",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "40",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "s",
              "IPython.utils.ipstruct.Struct",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "merge",
              "IPython.utils.ipstruct.Struct.merge",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "s2",
              "IPython.utils.ipstruct.Struct",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "sorted",
              "builtins.sorted",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "s",
              "IPython.utils.ipstruct.Struct",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "items",
              "builtins.dict.items",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "[('a', 10), ('b', 30), ('c', 40)]"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Now, show how to specify a conflict dict:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "s",
              "IPython.utils.ipstruct.Struct",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "Struct",
              "IPython.utils.ipstruct.Struct",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "10",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "b",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "30",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "s2",
              "IPython.utils.ipstruct.Struct",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "Struct",
              "IPython.utils.ipstruct.Struct",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "20",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "b",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "40",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "conflict",
              "builtins.dict",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "{",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "update",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "a",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "add",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "b",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "}",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "s",
              "IPython.utils.ipstruct.Struct",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "merge",
              "IPython.utils.ipstruct.Struct.merge",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "s2",
              "IPython.utils.ipstruct.Struct",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "conflict",
              "builtins.dict",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "sorted",
              "builtins.sorted",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "s",
              "IPython.utils.ipstruct.Struct",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "items",
              "builtins.dict.items",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "[('a', 20), ('b', 70)]"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/dev/ipython/IPython/utils/ipstruct.py",
  "item_line": 263,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Notes",
    "Examples"
  ],
  "references": null,
  "refs": [
    "IPython.utils.ipstruct.Struct",
    "IPython.utils.ipstruct.Struct.merge",
    "builtins.dict",
    "builtins.dict.items",
    "builtins.sorted"
  ],
  "see_also": [],
  "signature": {
    "value": "merge(self, __loc_data__=None, _Struct__conflict_solve=None, **kw)"
  }
}