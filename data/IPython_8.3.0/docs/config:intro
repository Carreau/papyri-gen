{
  "aliases": [],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "placeholder": "target",
            "value": ".. _setting_config:"
          },
          "type": "Unimplemented"
        }
      ],
      "title": "Introduction to IPython configuration"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Many of IPython's classes have configurable attributes (see "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "options/index"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for the list). These can be configured in several ways."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Setting configurable options"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "To create the blank configuration files, run::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "ipython profile create [profilename]"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If you leave out the profile name, the files will be created for the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "default"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " profile (see "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "profiles"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "). These will typically be located in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "~/.ipython/profile_default/"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", and will be named "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ipython_config.py"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", for historical reasons you may also find files named with IPython prefix instead of Jupyter: "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ipython_notebook_config.py"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", etc. The settings in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ipython_config.py"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " apply to all IPython commands."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "By default, configuration files are fully featured Python scripts that can execute arbitrary code, the main usage is to set value on the configuration object "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "c"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " which exist in your configuration file."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "You can then configure class attributes like this::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "c.InteractiveShell.automagic = False"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Be careful with spelling--incorrect names will simply be ignored, with no error."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "To add to a collection which may have already been defined elsewhere or have default values, you can use methods like those found on lists, dicts and sets: append, extend, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "~traitlets.config.LazyConfigValue.prepend"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " (like extend, but at the front), add and update (which works both for dicts and sets)::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "c.InteractiveShellApp.extensions.append('Cython')"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "list, dict and set methods for config values"
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              }
            ],
            "kind": "versionadded",
            "title": "2.0"
          },
          "type": "Admonition"
        }
      ],
      "title": "Python configuration files"
    },
    {
      "children": [
        {
          "data": {
            "value": "# sample ipython_config.py\n\nc.TerminalIPythonApp.display_banner = True\nc.InteractiveShellApp.log_level = 20\nc.InteractiveShellApp.extensions = [\n    'myextension'\n]\nc.InteractiveShellApp.exec_lines = [\n    'import numpy',\n    'import scipy'\n]\nc.InteractiveShellApp.exec_files = [\n    'mycode.py',\n    'fancy.ipy'\n]\nc.InteractiveShell.colors = 'LightBG'\nc.InteractiveShell.xmode = 'Context'\nc.TerminalInteractiveShell.confirm_exit = False\nc.TerminalInteractiveShell.editor = 'nano'\n\nc.PrefilterManager.multi_line_specials = True\n\nc.AliasManager.user_aliases = [\n ('la', 'ls -al')\n]"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": "Example configuration file"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "In case where executability of configuration can be problematic, or configurations need to be modified programmatically, IPython also support a limited set of functionalities via "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    ".json"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " configuration files."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "You can defined most of the configuration options via a json object which hierarchy represent the value you would normally set on the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "c"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " object of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    ".py"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " configuration files. The following "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ipython_config.json"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " file::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "{\n    \"InteractiveShell\": {\n        \"colors\": \"LightBG\",\n    },\n    \"InteractiveShellApp\": {\n        \"extensions\": [\n            \"myextension\"\n        ]\n    },\n    \"TerminalInteractiveShell\": {\n        \"editor\": \"nano\"\n    }\n}"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Is equivalent to the following "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ipython_config.py"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "c.InteractiveShellApp.extensions = [\n    'myextension'\n]\n\nc.InteractiveShell.colors = 'LightBG'\nc.TerminalInteractiveShell.editor = 'nano'"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": "JSON Configuration files"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Every configurable value can be set from the command line, using this syntax::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "ipython --ClassName.attribute=value"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Many frequently used options have short aliases and flags, such as "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "--matplotlib"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " (to integrate with a matplotlib GUI event loop) or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "--pdb"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " (automatic post-mortem debugging of exceptions)."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "To see all of these abbreviated options, run::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "ipython --help\njupyter notebook --help\n# etc."
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Options specified at the command line, in either format, override options set in a configuration file."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Command line arguments"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "You can also modify config from inside IPython, using a magic command::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "%config IPCompleter.greedy = True"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "At present, this only affects the current session - changes you make to config are not saved anywhere. Also, some options are only read when IPython starts, so they can't be changed like this."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _configure_start_ipython:"
          },
          "type": "Unimplemented"
        }
      ],
      "title": "The config magic"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If you are using "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "embedding"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " to start IPython from a normal  python file, you can set configuration options the same way as in a  config file by creating a traitlets config object and passing it to  start_ipython like in the example below."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "../../../examples/Embedding/start_ipython_config.py",
            "content": "",
            "name": "literalinclude",
            "options": [
              [
                "language",
                "python"
              ]
            ]
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _profiles:"
          },
          "type": "Unimplemented"
        }
      ],
      "title": "Running IPython from Python"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "IPython can use multiple profiles, with separate configuration and history. By default, if you don't specify a profile, IPython always runs in the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "default"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " profile. To use a new profile::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "ipython profile create foo   # create the profile foo\nipython --profile=foo        # start IPython using the new profile"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Profiles are typically stored in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ipythondir"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", but you can also keep a profile in the current working directory, for example to distribute it with a project. To find a profile directory on the filesystem::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "ipython locate profile foo"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _ipythondir:"
          },
          "type": "Unimplemented"
        }
      ],
      "title": "Profiles"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "IPython stores its files---config, command history and extensions---in the directory "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "~/.ipython/"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " by default."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "IPYTHONDIR",
            "content": "If set, this environment variable should be the path to a directory,\nwhich IPython will use for user data. IPython will create it if it\ndoes not exist.",
            "name": "envvar",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "argument": "--ipython-dir=<path>",
            "content": "This command line option can also be used to override the default\nIPython directory.",
            "name": "option",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "To see where IPython is looking for the IPython directory, use the command "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ipython locate"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", or the Python function "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "IPython.paths.get_ipython_dir"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "The IPython directory"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "It can be useful to deploy systemwide ipython or ipykernel configuration when managing environment for many users. At startup time IPython and IPykernel will search for configuration file in multiple systemwide locations, mainly:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": [
                                    "/etc/ipython/"
                                  ]
                                },
                                "type": "Verbatim"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": [
                                    "/usr/local/etc/ipython/"
                                  ]
                                },
                                "type": "Verbatim"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ]
          },
          "type": "BlockQuote"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "When the global install is a standalone python distribution it may also search in distribution specific location, for example:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": [
                                    "$ANACONDA_LOCATION/etc/ipython/"
                                  ]
                                },
                                "type": "Verbatim"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ]
          },
          "type": "BlockQuote"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "In those locations, Terminal IPython will look for a file called "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ipython_config.py"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ipython_config.json"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", ipykernel will look for "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ipython_kernel_config.py"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ipython_kernel.json"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Configuration files are loaded in order and merged with configuration on later location taking precedence on earlier locations (that is to say a user can overwrite a systemwide configuration option)."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "You can see all locations in which IPython is looking for configuration files by starting ipython in debug mode::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "$ ipython --debug -c 'exit()'"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Identically with ipykernel though the command is currently blocking until this process is killed with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Ctrl-\\"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "       "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "$ python -m ipykernel --debug"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": "Systemwide configuration"
    }
  ],
  "content": {},
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": null,
  "item_line": null,
  "item_type": null,
  "ordered_sections": [],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}