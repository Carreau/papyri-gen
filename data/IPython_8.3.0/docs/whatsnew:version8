{
  "aliases": [],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "placeholder": "target",
            "value": ".. _version 8.3.0:"
          },
          "type": "Unimplemented"
        }
      ],
      "title": "8.x Series"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13625",
                                  "value": "#13625"
                                },
                                "type": "ExternalLink"
                              },
                              {
                                "data": {
                                  "value": ", using "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "?"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": ", "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "??"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": ", "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "*?"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " will not call    "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "set_next_input"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " as most frontend allow proper multiline editing and it was    causing issues for many users of multi-cell frontends. This has been backported to 7.33"
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13600",
                                  "value": "#13600"
                                },
                                "type": "ExternalLink"
                              },
                              {
                                "data": {
                                  "value": ", "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "pre_run_*"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": "-hooks will now have a "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "cell_id"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " attribute on    the info object when frontend provide it. This has been backported to 7.33"
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13624",
                                  "value": "#13624"
                                },
                                "type": "ExternalLink"
                              },
                              {
                                "data": {
                                  "value": ", fixed "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "End"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " key being broken after accepting an    auto-suggestion."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13657",
                                  "value": "#13657"
                                },
                                "type": "ExternalLink"
                              },
                              {
                                "data": {
                                  "value": " fix issue where history from different sessions would be mixed."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ]
          },
          "type": "BlockQuote"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _version 8.2.0:"
          },
          "type": "Unimplemented"
        }
      ],
      "title": "IPython 8.3.0"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "IPython 8.2 mostly bring bugfixes to IPython."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "Auto-suggestion can now be elected with the "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "end"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " key. "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13566",
                                  "value": "#13566"
                                },
                                "type": "ExternalLink"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "Some traceback issues with "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "assert etb is not None"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " have been fixed. "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13588",
                                  "value": "#13588"
                                },
                                "type": "ExternalLink"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "History is now pulled from the sqitel database and not from in-memory.    In particular when using the "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "%paste"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " magic, the content of the pasted text will    be part of the history and not the verbatim text "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "%paste"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " anymore. "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13592",
                                  "value": "#13592"
                                },
                                "type": "ExternalLink"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "Fix "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "Ctrl-\\\\"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " exit cleanup "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13603",
                                  "value": "#13603"
                                },
                                "type": "ExternalLink"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "Fixes to "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "ultratb"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " ipdb support when used outside of IPython. "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13498",
                                  "value": "#13498"
                                },
                                "type": "ExternalLink"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ]
          },
          "type": "BlockQuote"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "I am still trying to fix and investigate "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/ipython/ipython/issue/13598",
                  "value": "#13598"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ", which seem to be random, and would appreciate help if you find  reproducible minimal case. I've tried to make various changes to the codebase to mitigate it, but a proper fix will be difficult without understanding the cause."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "All the issues on pull-requests for this release can be found in the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/ipython/ipython/milestone/100",
                  "value": "8.2\nmilestone."
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": " . And some documentation only PR can be found as part of the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "7.33 milestone\n<https://github.com/ipython/ipython/milestone/101>"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " (currently not released)."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Thanks to the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://deshaw.com/",
                  "value": "D. E. Shaw group"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": " for sponsoring work on IPython and related libraries."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _version 8.1.1:"
          },
          "type": "Unimplemented"
        }
      ],
      "title": "IPython 8.2.0"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Fix an issue with virtualenv and Python 3.8 introduced in 8.1"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Revert "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/ipython/ipython/pull/13537",
                  "value": "#13537"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": " (fix an issue with symlinks in virtualenv) that raises an error in Python 3.8, and fixed in a different way in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/ipython/ipython/pull/13559",
                  "value": "#13559"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _version 8.1:"
          },
          "type": "Unimplemented"
        }
      ],
      "title": "IPython 8.1.1"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "IPython 8.1 is the first minor release after 8.0 and fixes a number of bugs and Update a few behavior that were problematic with the 8.0 as with many new major release."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Note that beyond the changes listed here, IPython 8.1.0 also contains all the features listed in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "version 7.32"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "Misc and multiple fixes around quotation auto-closing. It is now disabled by    default. Run with "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "TerminalInteractiveShell.auto_match=True"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " to re-enabled"
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "Require pygments>=2.4.0 "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13459",
                                  "value": "#13459"
                                },
                                "type": "ExternalLink"
                              },
                              {
                                "data": {
                                  "value": ", this was implicit in the code, but    is now explicit in "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "setup.cfg"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": "/"
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "setup.py"
                                  ]
                                },
                                "type": "Verbatim"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "Docs improvement of "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "core.magic_arguments"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " examples. "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13433",
                                  "value": "#13433"
                                },
                                "type": "ExternalLink"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "Multi-line edit executes too early with await. "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13424",
                                  "value": "#13424"
                                },
                                "type": "ExternalLink"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": [
                                    "black"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": "  is back as an optional dependency, and autoformatting disabled by    default until some fixes are implemented (black improperly reformat magics).    "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13471",
                                  "value": "#13471"
                                },
                                "type": "ExternalLink"
                              },
                              {
                                "data": {
                                  "value": " Additionally the ability to use "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "yapf"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " as a code    reformatter has been added "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13528",
                                  "value": "#13528"
                                },
                                "type": "ExternalLink"
                              },
                              {
                                "data": {
                                  "value": " . You can use    "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "TerminalInteractiveShell.autoformatter=\"black\""
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": ",    "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "TerminalInteractiveShell.autoformatter=\"yapf\""
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " to re-enable auto formating    with black, or switch to yapf."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "Fix and issue where "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "display"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " was not defined."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "Auto suggestions are now configurable. Currently only    "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "AutoSuggestFromHistory"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " (default) and "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "None"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": ". new provider contribution    welcomed. "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13475",
                                  "value": "#13475"
                                },
                                "type": "ExternalLink"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "multiple packaging/testing improvement to simplify downstream packaging    (xfail with reasons, try to not access network...)."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "Update deprecation. "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "InteractiveShell.magic"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " internal method has been    deprecated for many years but did not emit a warning until now."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "internal "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "appended_to_syspath"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " context manager has been deprecated."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "fix an issue with symlinks in virtualenv "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13537",
                                  "value": "#13537"
                                },
                                "type": "ExternalLink"
                              },
                              {
                                "data": {
                                  "value": " (Reverted in 8.1.1)"
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "Fix an issue with vim mode, where cursor would not be reset on exit "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13472",
                                  "value": "#13472"
                                },
                                "type": "ExternalLink"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "ipython directive now remove only known pseudo-decorators "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13532",
                                  "value": "#13532"
                                },
                                "type": "ExternalLink"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": [
                                    "IPython/lib/security"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " which used to be used for jupyter notebook has been    removed."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "Fix an issue where "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "async with"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " would execute on new lines. "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13436",
                                  "value": "#13436"
                                },
                                "type": "ExternalLink"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ]
          },
          "type": "BlockQuote"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We want to remind users that IPython is part of the Jupyter organisations, and thus governed by a Code of Conduct. Some of the behavior we have seen on GitHub is not acceptable. Abuse and non-respectful comments on discussion will not be tolerated."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Many thanks to all the contributors to this release, many of the above fixed issue and new features where done by first time contributors, showing there is still plenty of easy contribution possible in IPython . You can find all individual contributions to this milestone "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/ipython/ipython/milestone/91",
                  "value": "on github"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Thanks as well to the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://deshaw.com/",
                  "value": "D. E. Shaw group"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": " for sponsoring work on IPython and related libraries. In particular the Lazy autoloading of magics that you will find described in the 7.32 release notes."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _version 8.0.1:"
          },
          "type": "Unimplemented"
        }
      ],
      "title": "IPython 8.1.0"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "IPython 8.0.1, 7.31.1 and 5.11 are security releases that change some default values in order to prevent potential Execution with Unnecessary Privileges."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Almost all version of IPython looks for configuration and profiles in current working directory. Since IPython was developed before pip and environments existed it was used a convenient way to load code/packages in a project dependant way."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "In 2022, it is not necessary anymore, and can lead to confusing behavior where for example cloning a repository and starting IPython or loading a notebook from any Jupyter-Compatible interface that has ipython set as a kernel can lead to code execution."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "I did not find any standard way for packaged to advertise CVEs they fix, I'm thus trying to add a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "__patched_cves__"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " attribute to the IPython module that list the CVEs that should have been fixed. This attribute is informational only as if a executable has a flaw, this value can always be changed by an attacker."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "In [1]: import IPython\n\nIn [2]: IPython.__patched_cves__\nOut[2]: {'CVE-2022-21699'}\n\nIn [3]: 'CVE-2022-21699' in IPython.__patched_cves__\nOut[3]: True"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Thus starting with this version:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "The current working directory is not searched anymore for profiles or    configurations files."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "Added a "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "__patched_cves__"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " attribute (set of strings) to IPython module that contain    the list of fixed CVE. This is informational only."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ]
          },
          "type": "BlockQuote"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Further details can be read on the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/ipython/ipython/security/advisories/GHSA-pq7m-3gw7-gq5x",
                  "value": "GitHub Advisory"
                },
                "type": "ExternalLink"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _version 8.0:"
          },
          "type": "Unimplemented"
        }
      ],
      "title": "IPython 8.0.1 (CVE-2022-21699)"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "IPython 8.0 is bringing a large number of new features and improvements to both the user of the terminal and of the kernel via Jupyter. The removal of compatibility with older version of Python is also the opportunity to do a couple of performance improvements in particular with respect to startup time. The 8.x branch started diverging from its predecessor around IPython 7.12 (January 2020)."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This release contains 250+ pull requests, in addition to many of the features and backports that have made it to the 7.x branch. Please see the  "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/ipython/ipython/milestone/73?closed=1",
                  "value": "8.0 milestone"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": " for the full list of pull requests."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Please feel free to send pull requests to updates those notes after release,  I have likely forgotten a few things reviewing 250+ PRs."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "IPython 8.0"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Most of our building steps have been changed to be (mostly) declarative and follow PEP 517. We are trying to completely remove "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "setup.py"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " ("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/ipython/ipython/pull/13238",
                  "value": "#13238"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ") and are looking for help to do so."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "minimum supported "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "traitlets"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " version is now 5+"
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "we now require "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "stack_data"
                                  ]
                                },
                                "type": "Verbatim"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "minimal Python is now 3.8"
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": [
                                    "nose"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " is not a testing requirement anymore"
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": [
                                    "pytest"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " replaces nose."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": [
                                    "iptest"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": "/"
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "iptest3"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " cli entrypoints do not exists anymore."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "minimum officially support "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "numpy"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " version has been bumped, but this should    not have much effect on packaging."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ]
          },
          "type": "BlockQuote"
        }
      ],
      "title": "Dependencies changes/downstream packaging"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We removed almost all features, arguments, functions, and modules that were marked as deprecated between IPython 1.0 and 5.0. As a reminder, 5.0 was released in 2016, and 1.0 in 2013. Last release of the 5 branch was 5.10.0, in May 2020. The few remaining deprecated features we left have better deprecation warnings or have been turned into explicit errors for better error messages."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "I will use this occasion to add the following requests to anyone emitting a deprecation warning:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "Please add at least "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "stacklevel=2"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " so that the warning is emitted into the    caller context, and not the callee one."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "Please add "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "content": {
                                    "value": "since which version"
                                  }
                                },
                                "type": "Strong"
                              },
                              {
                                "data": {
                                  "value": " something is deprecated."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ]
          },
          "type": "BlockQuote"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "As a side note, it is much easier to conditionally compare version numbers rather than using "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "try/except"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " when functionality changes with a version."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "I won't list all the removed features here, but modules like "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "IPython.kernel"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", which was just a shim module around "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ipykernel"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for the past 8 years, have been removed, and so many other similar things that pre-date the name "
                },
                "type": "Words"
              },
              {
                "data": {
                  "content": {
                    "value": "Jupyter"
                  }
                },
                "type": "Strong"
              },
              {
                "data": {
                  "value": " itself."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We no longer need to add "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "IPython.extensions"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " to the PYTHONPATH because that is being handled by "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "load_extension"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We are also removing "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Cythonmagic"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "sympyprinting"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "rmagic"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " as they are now in other packages and no longer need to be inside IPython."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Deprecation and removal"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The majority of our docstrings have now been reformatted and automatically fixed by the experimental "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://pypi.org/project/velin/",
                  "value": "V\u00e9lin"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": " project to conform to numpydoc."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Documentation"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "While IPython itself is highly dynamic and can't be completely typed, many of the functions now have type annotations, and part of the codebase is now checked by mypy."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Type annotations"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Here is a features list of changes in IPython 8.0. This is of course non-exhaustive.  Please note as well that many features have been added in the 7.x branch as well (and hence why you want to read the 7.x what's new notes), in particular features contributed by QuantStack (with respect to debugger protocol and Xeus Python), as well as many debugger features that I was pleased to implement as part of my work at QuanSight and sponsored by DE Shaw."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Featured changes"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Previously, error tracebacks for errors happening in code cells were showing a hash, the one used for compiling the Python AST::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "In [1]: def foo():\n...:     return 3 / 0\n...:\n\nIn [2]: foo()\n---------------------------------------------------------------------------\nZeroDivisionError                         Traceback (most recent call last)\n<ipython-input-2-c19b6d9633cf> in <module>\n----> 1 foo()\n\n<ipython-input-1-1595a74c32d5> in foo()\n    1 def foo():\n----> 2     return 3 / 0\n    3\n\nZeroDivisionError: division by zero"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The error traceback is now correctly formatted, showing the cell number in which the error happened::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "In [1]: def foo():\n...:     return 3 / 0\n...:\n\nInput In [2]: foo()\n---------------------------------------------------------------------------\nZeroDivisionError                         Traceback (most recent call last)\ninput In [2], in <module>\n----> 1 foo()\n\nInput In [1], in foo()\n    1 def foo():\n----> 2     return 3 / 0\n\nZeroDivisionError: division by zero"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "stack_data"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " package has been integrated, which provides smarter information in the traceback;  in particular it will highlight the AST node where an error occurs which can help to quickly narrow down errors."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "For example in the following snippet::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "def foo(i):\n    x = [[[0]]]\n    return x[0][i][0]\n\n\ndef bar():\n    return foo(0) + foo(\n        1\n    ) + foo(2)"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "calling "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "bar()"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " would raise an "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "IndexError"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " on the return line of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "foo"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", and IPython 8.0 is capable of telling you where the index error occurs::       "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "IndexError\nInput In [2], in <module>\n----> 1 bar()\n        ^^^^^\n\nInput In [1], in bar()\n      6 def bar():\n----> 7     return foo(0) + foo(\n                            ^^^^\n      8         1\n         ^^^^^^^^\n      9     ) + foo(2)\n         ^^^^\n\nInput In [1], in foo(i)\n      1 def foo(i):\n      2     x = [[[0]]]\n----> 3     return x[0][i][0]\n                   ^^^^^^^"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The corresponding locations marked here with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "^"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " will show up highlighted in  the terminal and notebooks."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Finally, a colon "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "::"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and line number is appended after a filename in traceback::       "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "ZeroDivisionError               Traceback (most recent call last)\nFile ~/error.py:4, in <module>\n      1 def f():\n      2     1/0\n----> 4 f()\n\nFile ~/error.py:2, in f()\n      1 def f():\n----> 2     1/0"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Many terminals and editors have integrations enabling you to directly jump to the relevant file/line when this syntax is used, so this small addition may have a high impact on productivity."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Traceback improvements"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Autosuggestion is a very useful feature available in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://fishshell.com/",
                  "value": "fish"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://en.wikipedia.org/wiki/Z_shell",
                  "value": "zsh"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ", and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://python-prompt-toolkit.readthedocs.io/en/master/pages/asking_for_input.html#auto-suggestion",
                  "value": "prompt-toolkit"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "target": "https://github.com/prompt-toolkit/ptpython#ptpython",
                  "value": "Ptpython"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": " allows users to enable this feature in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/prompt-toolkit/ptpython/blob/master/examples/ptpython_config/config.py#L90",
                  "value": "ptpython/config.py"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This feature allows users to accept autosuggestions with ctrl e, ctrl f, or right arrow as described below."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Start ipython"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "EnumeratedList"
        },
        {
          "data": {
            "argument": "../_images/8.0/auto_suggest_1_prompt_no_text.png",
            "content": "",
            "name": "image",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Run "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "print(\"hello\")"
                            ]
                          },
                          "type": "Verbatim"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "EnumeratedList"
        },
        {
          "data": {
            "argument": "../_images/8.0/auto_suggest_2_print_hello_suggest.png",
            "content": "",
            "name": "image",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "start typing "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "print"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " again to see the autosuggestion"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "EnumeratedList"
        },
        {
          "data": {
            "argument": "../_images/8.0/auto_suggest_3_print_hello_suggest.png",
            "content": "",
            "name": "image",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Press "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "ctrl-f"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "ctrl-e"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "right-arrow"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " to accept the suggestion"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "EnumeratedList"
        },
        {
          "data": {
            "argument": "../_images/8.0/auto_suggest_4_print_hello.png",
            "content": "",
            "name": "image",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "You can also complete word by word:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Run "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "def say_hello(): print(\"hello\")"
                            ]
                          },
                          "type": "Verbatim"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "EnumeratedList"
        },
        {
          "data": {
            "argument": "../_images/8.0/auto_suggest_second_prompt.png",
            "content": "",
            "name": "image",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Start typing  the first letter if "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "def"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " to see the autosuggestion"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "EnumeratedList"
        },
        {
          "data": {
            "argument": "../_images/8.0/auto_suggest_d_phantom.png",
            "content": "",
            "name": "image",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Press "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "alt-f"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " (or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "escape"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " followed by "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "f"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "), to accept the first word of the suggestion"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "EnumeratedList"
        },
        {
          "data": {
            "argument": "../_images/8.0/auto_suggest_def_phantom.png",
            "content": "",
            "name": "image",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Importantly, this feature does not interfere with tab completion:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "After running "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "def say_hello(): print(\"hello\")"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", press d"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "EnumeratedList"
        },
        {
          "data": {
            "argument": "../_images/8.0/auto_suggest_d_phantom.png",
            "content": "",
            "name": "image",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Press Tab to start tab completion"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "EnumeratedList"
        },
        {
          "data": {
            "argument": "../_images/8.0/auto_suggest_d_completions.png",
            "content": "",
            "name": "image",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "3A. Press Tab again to select the first option"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "../_images/8.0/auto_suggest_def_completions.png",
            "content": "",
            "name": "image",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "3B. Press "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "alt f"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " ("
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "escape"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "f"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ") to accept to accept the first word of the suggestion"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "../_images/8.0/auto_suggest_def_phantom.png",
            "content": "",
            "name": "image",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "3C. Press "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ctrl-f"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ctrl-e"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " to accept the entire suggestion"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "../_images/8.0/auto_suggest_match_parens.png",
            "content": "",
            "name": "image",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Currently, autosuggestions are only shown in the emacs or vi insert editing modes:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The ctrl e, ctrl f, and alt f shortcuts work by default in emacs mode."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "To use these shortcuts in vi insert mode, you will have to create "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "target": "https://github.com/mskar/setup/commit/2892fcee46f9f80ef7788f0749edc99daccc52f4/",
                            "value": "custom keybindings in your config.py"
                          },
                          "type": "ExternalLink"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        }
      ],
      "title": "Autosuggestions"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "In IPDB, it is now possible to show the information about an object using \"?\" and \"??\", in much the same way that it can be done when using the IPython prompt::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "ipdb> partial?\nInit signature: partial(self, /, *args, **kwargs)\nDocstring:\npartial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.\nFile:           ~/.pyenv/versions/3.8.6/lib/python3.8/functools.py\nType:           type\nSubclasses:"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Previously, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "pinfo"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "pinfo2"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " command had to be used for this purpose."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Show pinfo information in ipdb using \"?\" and \"??\""
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Example: When an IPython session is run with the 'autoreload' extension loaded, you will now have the option '3' to select, which means the following:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "replicate all functionality from option 2"
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "autoload all new funcs/classes/enums/globals from the module when they are added"
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "autoload all newly imported funcs/classes/enums/globals from external modules"
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "EnumeratedList"
              }
            ]
          },
          "type": "BlockQuote"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Try "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "%autoreload 3"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " in an IPython session after running "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "%load_ext autoreload"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "dd": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "For more information please see the following unit test"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "dt": {
                  "children": [
                    {
                      "data": {
                        "value": "Formoreinformationpleaseseethefollowingunittest"
                      },
                      "type": "Words"
                    }
                  ]
                }
              }
            ]
          },
          "type": "DefList"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Or users could specify a glob pattern:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "python",
            "content": "-g <pattern>  # glob ALL history for the specified pattern.",
            "name": "code-block",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "However users could "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "not"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " specify both."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If a user "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "did"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " specify both a range and a glob pattern, then the glob pattern would be used (globbing "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "all"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " history) "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "and the range would be ignored"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "With this enhancement, if a user specifies both a range and a glob pattern, then the glob pattern will be applied to the specified range of history."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Autoreload 3 feature"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "From now on, IPython will not ask for the next line of input when given a single line with more closing than opening brackets. For example, this means that if you (mis)type "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "]]"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " instead of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "[]"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "SyntaxError"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " will show up, instead of the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "...:"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " prompt continuation."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Don't start a multi-line cell with sunken parenthesis"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The ipdb "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "interact"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " starts an IPython shell instead of Python's built-in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "code.interact()"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "IPython shell for ipdb interact"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "When pasting code into IPython, it will strip the leading prompt characters if there are any. For example, you can paste the following code into the console - it will still work, even though each line is prefixed with prompts ("
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "In"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Out"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ")::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "In [1]: 2 * 2 == 4\nOut[1]: True\n\nIn [2]: print(\"This still works as pasted\")"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Previously, this was not the case for the Vi-mode prompts::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "In [1]: [ins] In [13]: 2 * 2 == 4\n   ...: Out[13]: True\n   ...:\n  File \"<ipython-input-1-727bb88eaf33>\", line 1\n    [ins] In [13]: 2 * 2 == 4\n          ^\nSyntaxError: invalid syntax"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This is now fixed, and Vi prompt prefixes - "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "[ins]"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "[nav]"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " -  are skipped just as the normal "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "In"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " would be."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "IPython shell can be started in the Vi mode using "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ipython --TerminalInteractiveShell.editing_mode=vi"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ",  You should be able to change mode dynamically with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "%config TerminalInteractiveShell.editing_mode='vi'"
                  ]
                },
                "type": "Verbatim"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Automatic Vi prompt stripping"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "A number of magics that take history ranges can now be used with an empty range. These magics are:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": [
                                    "%save"
                                  ]
                                },
                                "type": "Verbatim"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": [
                                    "%load"
                                  ]
                                },
                                "type": "Verbatim"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": [
                                    "%pastebin"
                                  ]
                                },
                                "type": "Verbatim"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": [
                                    "%pycat"
                                  ]
                                },
                                "type": "Verbatim"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ]
          },
          "type": "BlockQuote"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Using them this way will make them take the history of the current session up to the point of the magic call (such that the magic itself will not be included)."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Therefore it is now possible to save the whole history to a file using "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "%save <filename>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", load and edit it using "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "%load"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " (makes for a nice usage when followed with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "F2"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "), send it to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "http://dpast.org",
                  "value": "dpaste.org"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": " using "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "%pastebin"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", or view the whole thing syntax-highlighted with a single "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "%pycat"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Empty History Ranges"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Timing on Windows, for example with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "%%time"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ",  was changed from being based on "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "time.perf_counter"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "  (which counted time even when the process was sleeping) to being based on "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "time.process_time"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " instead  (which only counts CPU time). This brings it closer to the behavior on Linux. See "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/ipython/ipython/pull/12984",
                  "value": "#12984"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Windows timing implementation: Switch to process_time"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "Non-text formatters are not disabled in the terminal, which should simplify    writing extensions displaying images or other mimetypes in supporting terminals.    "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/12315",
                                  "value": "#12315"
                                },
                                "type": "ExternalLink"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "It is now possible to automatically insert matching brackets in Terminal IPython using the    "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "TerminalInteractiveShell.auto_match=True"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " option. "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/12586",
                                  "value": "#12586"
                                },
                                "type": "ExternalLink"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "We are thinking of deprecating the current "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "%%javascript"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " magic in favor of a better replacement. See "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13376",
                                  "value": "#13376"
                                },
                                "type": "ExternalLink"
                              },
                              {
                                "data": {
                                  "value": "."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": [
                                    "~"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " is now expanded when part of a path in most magics "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13385",
                                  "value": "#13385"
                                },
                                "type": "ExternalLink"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": [
                                    "%/%%timeit"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " magic now adds a comma every thousands to make reading a long number easier "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13379",
                                  "value": "#13379"
                                },
                                "type": "ExternalLink"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": [
                                    "\"info\""
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " messages can now be customised to hide some fields "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13343",
                                  "value": "#13343"
                                },
                                "type": "ExternalLink"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": [
                                    "collections.UserList"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " now pretty-prints "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13320",
                                  "value": "#13320"
                                },
                                "type": "ExternalLink"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "The debugger now has a persistent history, which should make it less    annoying to retype commands "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/13246",
                                  "value": "#13246"
                                },
                                "type": "ExternalLink"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": [
                                    "!pip"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "!conda"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "!cd"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " or "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "!ls"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " are likely doing the wrong thing. We    now warn users if they use one of those commands. "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/12954",
                                  "value": "#12954"
                                },
                                "type": "ExternalLink"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "Make "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "%precision"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " work for "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "numpy.float64"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " type "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "target": "https://github.com/ipython/ipython/pull/12902",
                                  "value": "#12902"
                                },
                                "type": "ExternalLink"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ]
          },
          "type": "BlockQuote"
        }
      ],
      "title": "Miscellaneous"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "XDG support through the years comes and goes. There is a tension between having an identical location for configuration in all platforms versus having simple instructions.  After initial failures a couple of years ago, IPython was modified to automatically migrate XDG config files back into "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "~/.ipython"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". That migration code has now been removed. IPython now checks the XDG locations, so if you _manually_ move your config files to your preferred location, IPython will not move them back."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Re-added support for XDG config directories"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "To prepare for Python 3.10, we have started working on removing reliance and any dependency that is not compatible with Python 3.10. This includes migrating our test suite to pytest and starting to remove nose. This also means that the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "iptest"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " command is now gone and all testing is via pytest."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This was in large part thanks to the NumFOCUS Small Developer grant, which enabled us to allocate \\$4000 to hire "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/Kojoley",
                  "value": "Nikita Kniazev (@Kojoley)"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ", who did a fantastic job at updating our code base, migrating to pytest, pushing our coverage, and fixing a large number of bugs. I highly recommend contacting them if you need help with C++ and Python projects."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "You can find all relevant issues and PRs with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/ipython/ipython/issues?q=label%3A%22Numfocus+SDG+2021%22+",
                  "value": "the SDG 2021 tag"
                },
                "type": "ExternalLink"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Preparing for Python 3.10"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We are removing support for Python up through 3.7, allowing internal code to use the more efficient "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "pathlib"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and to make better use of type annotations."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "../_images/8.0/pathlib_pathlib_everywhere.jpg",
            "content": "",
            "name": "image",
            "options": [
              [
                "alt",
                "\"Meme image of Toy Story with Woody and Buzz, with the text 'pathlib, pathlib everywhere'\""
              ]
            ]
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We had about 34 PRs only to update some logic to update some functions from managing strings to using Pathlib."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The completer has also seen significant updates and now makes use of newer Jedi APIs, offering faster and more reliable tab completion."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Removing support for older Python versions"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Here are some numbers::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "7.x: 296 files, 12561 blank lines, 20282 comments, 35142 line of code.\n8.0: 252 files, 12053 blank lines, 19232 comments, 34505 line of code.\n\n$ git diff --stat 7.x...master  | tail -1\n340 files changed, 13399 insertions(+), 12421 deletions(-)"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We have commits from 162 authors, who contributed 1916 commits in 23 month, excluding merges (to not bias toward maintainers pushing buttons).::     "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "$ git shortlog  -s --no-merges  7.x...master | sort -nr\n535\tMatthias Bussonnier\n 86\tNikita Kniazev\n 69\tBlazej Michalik\n 49\tSamuel Gaist\n 27\tItamar Turner-Trauring\n 18\tSpas Kalaydzhisyki\n 17\tThomas Kluyver\n 17\tQuentin Peter\n 17\tJames Morris\n 17\tArtur Svistunov\n 15\tBart Skowron\n 14\tAlex Hall\n 13\trushabh-v\n 13\tTerry Davis\n 13\tBenjamin Ragan-Kelley\n  8\tmartinRenou\n  8\tfarisachugthai\n  7\tdswij\n  7\tGal B\n  7\tCorentin Cadiou\n  6\tyuji96\n  6\tMartin Skarzynski\n  6\tJustin Palmer\n  6\tDaniel Goldfarb\n  6\tBen Greiner\n  5\tSammy Al Hashemi\n  5\tPaul Ivanov\n  5\tInception95\n  5\tEyenpi\n  5\tDouglas Blank\n  5\tCoco Mishra\n  5\tBibo Hao\n  5\tAndr\u00e9 A. Gomes\n  5\tAhmed Fasih\n  4\ttakuya fujiwara\n  4\tpalewire\n  4\tThomas A Caswell\n  4\tTalley Lambert\n  4\tScott Sanderson\n  4\tRam Rachum\n  4\tNick Muoh\n  4\tNathan Goldbaum\n  4\tMithil Poojary\n  4\tMichael T\n  4\tJakub Klus\n  4\tIan Castleden\n  4\tEli Rykoff\n  4\tAshwin Vishnu\n  3\t\u8c2d\u4e5d\u9f0e\n  3\tsleeping\n  3\tSylvain Corlay\n  3\tPeter Corke\n  3\tPaul Bissex\n  3\tMatthew Feickert\n  3\tFernando Perez\n  3\tEric Wieser\n  3\tDaniel Mietchen\n  3\tAditya Sathe\n  3\t007vedant\n  2\trchiodo\n  2\tnicolaslazo\n  2\tluttik\n  2\tgorogoroumaru\n  2\tfoobarbyte\n  2\tbar-hen\n  2\tTheo Ouzhinski\n  2\tStrawkage\n  2\tSamreen Zarroug\n  2\tPete Blois\n  2\tMeysam Azad\n  2\tMatthieu Ancellin\n  2\tMark Schmitz\n  2\tMaor Kleinberger\n  2\tMRCWirtz\n  2\tLumir Balhar\n  2\tJulien Rabinow\n  2\tJuan Luis Cano Rodr\u00edguez\n  2\tJoyce Er\n  2\tJakub\n  2\tFaris A Chugthai\n  2\tEthan Madden\n  2\tDimitri Papadopoulos\n  2\tDiego Fernandez\n  2\tDaniel Shimon\n  2\tCoco Bennett\n  2\tCarlos Cordoba\n  2\tBoyuan Liu\n  2\tBaoGiang HoangVu\n  2\tAugusto\n  2\tArthur Svistunov\n  2\tArthur Moreira\n  2\tAli Nabipour\n  2\tAdam Hackbarth\n  1\trichard\n  1\tlinar-jether\n  1\tlbennett\n  1\tjuacrumar\n  1\tgpotter2\n  1\tdigitalvirtuoso\n  1\tdalthviz\n  1\tYonatan Goldschmidt\n  1\tTomasz K\u0142oczko\n  1\tTobias Bengfort\n  1\tTimur Kushukov\n  1\tThomas\n  1\tSnir Broshi\n  1\tShao Yang Hong\n  1\tSanjana-03\n  1\tRomulo Filho\n  1\tRodolfo Carvalho\n  1\tRichard Shadrach\n  1\tReilly Tucker Siemens\n  1\tRakessh Roshan\n  1\tPiers Titus van der Torren\n  1\tPhanatosZou\n  1\tPavel Safronov\n  1\tPaulo S. Costa\n  1\tPaul McCarthy\n  1\tNotWearingPants\n  1\tNaelson Douglas\n  1\tMichael Tiemann\n  1\tMatt Wozniski\n  1\tMarkus Wageringel\n  1\tMarcus Wirtz\n  1\tMarcio Mazza\n  1\tLum\u00edr 'Frenzy' Balhar\n  1\tLightyagami1\n  1\tLeon Anavi\n  1\tLeafyLi\n  1\tL0uisJ0shua\n  1\tKyle Cutler\n  1\tKrzysztof Cybulski\n  1\tKevin Kirsche\n  1\tKIU Shueng Chuan\n  1\tJonathan Slenders\n  1\tJay Qi\n  1\tJake VanderPlas\n  1\tIwan Briquemont\n  1\tHussaina Begum Nandyala\n  1\tGordon Ball\n  1\tGabriel Simonetto\n  1\tFrank Tobia\n  1\tErik\n  1\tElliott Sales de Andrade\n  1\tDaniel Hahler\n  1\tDan Green-Leipciger\n  1\tDan Green\n  1\tDamian Yurzola\n  1\tCoon, Ethan T\n  1\tCarol Willing\n  1\tBrian Lee\n  1\tBrendan Gerrity\n  1\tBlake Griffin\n  1\tBastian Ebeling\n  1\tBartosz Telenczuk\n  1\tAnkitsingh6299\n  1\tAndrew Port\n  1\tAndrew J. Hesford\n  1\tAlbert Zhang\n  1\tAdam Johnson"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This does not, of course, represent non-code contributions, for which we are also grateful."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Misc Statistics"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This is an experimental exhaustive API difference using "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://pypi.org/project/frappuccino/",
                  "value": "Frappuccino"
                },
                "type": "ExternalLink"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The following items are new in IPython 8.0 ::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "+ IPython.core.async_helpers.get_asyncio_loop()\n+ IPython.core.completer.Dict\n+ IPython.core.completer.Pattern\n+ IPython.core.completer.Sequence\n+ IPython.core.completer.__skip_doctest__\n+ IPython.core.debugger.Pdb.precmd(self, line)\n+ IPython.core.debugger.__skip_doctest__\n+ IPython.core.display.__getattr__(name)\n+ IPython.core.display.warn\n+ IPython.core.display_functions\n+ IPython.core.display_functions.DisplayHandle\n+ IPython.core.display_functions.DisplayHandle.display(self, obj, **kwargs)\n+ IPython.core.display_functions.DisplayHandle.update(self, obj, **kwargs)\n+ IPython.core.display_functions.__all__\n+ IPython.core.display_functions.__builtins__\n+ IPython.core.display_functions.__cached__\n+ IPython.core.display_functions.__doc__\n+ IPython.core.display_functions.__file__\n+ IPython.core.display_functions.__loader__\n+ IPython.core.display_functions.__name__\n+ IPython.core.display_functions.__package__\n+ IPython.core.display_functions.__spec__\n+ IPython.core.display_functions.b2a_hex\n+ IPython.core.display_functions.clear_output(wait=False)\n+ IPython.core.display_functions.display(*objs, include='None', exclude='None', metadata='None', transient='None', display_id='None', raw=False, clear=False, **kwargs)\n+ IPython.core.display_functions.publish_display_data(data, metadata='None', source='<deprecated>', *, transient='None', **kwargs)\n+ IPython.core.display_functions.update_display(obj, *, display_id, **kwargs)\n+ IPython.core.extensions.BUILTINS_EXTS\n+ IPython.core.inputtransformer2.has_sunken_brackets(tokens)\n+ IPython.core.interactiveshell.Callable\n+ IPython.core.interactiveshell.__annotations__\n+ IPython.core.ultratb.List\n+ IPython.core.ultratb.Tuple\n+ IPython.lib.pretty.CallExpression\n+ IPython.lib.pretty.CallExpression.factory(name)\n+ IPython.lib.pretty.RawStringLiteral\n+ IPython.lib.pretty.RawText\n+ IPython.terminal.debugger.TerminalPdb.do_interact(self, arg)\n+ IPython.terminal.embed.Set"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The following items have been removed (or moved to superclass)::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "- IPython.core.application.BaseIPythonApplication.initialize_subcommand\n- IPython.core.completer.Sentinel\n- IPython.core.completer.skip_doctest\n- IPython.core.debugger.Tracer\n- IPython.core.display.DisplayHandle\n- IPython.core.display.DisplayHandle.display\n- IPython.core.display.DisplayHandle.update\n- IPython.core.display.b2a_hex\n- IPython.core.display.clear_output\n- IPython.core.display.display\n- IPython.core.display.publish_display_data\n- IPython.core.display.update_display\n- IPython.core.excolors.Deprec\n- IPython.core.excolors.ExceptionColors\n- IPython.core.history.warn\n- IPython.core.hooks.late_startup_hook\n- IPython.core.hooks.pre_run_code_hook\n- IPython.core.hooks.shutdown_hook\n- IPython.core.interactiveshell.InteractiveShell.init_deprecation_warnings\n- IPython.core.interactiveshell.InteractiveShell.init_readline\n- IPython.core.interactiveshell.InteractiveShell.write\n- IPython.core.interactiveshell.InteractiveShell.write_err\n- IPython.core.interactiveshell.get_default_colors\n- IPython.core.interactiveshell.removed_co_newlocals\n- IPython.core.magics.execution.ExecutionMagics.profile_missing_notice\n- IPython.core.magics.script.PIPE\n- IPython.core.prefilter.PrefilterManager.init_transformers\n- IPython.core.release.classifiers\n- IPython.core.release.description\n- IPython.core.release.keywords\n- IPython.core.release.long_description\n- IPython.core.release.name\n- IPython.core.release.platforms\n- IPython.core.release.url\n- IPython.core.ultratb.VerboseTB.format_records\n- IPython.core.ultratb.find_recursion\n- IPython.core.ultratb.findsource\n- IPython.core.ultratb.fix_frame_records_filenames\n- IPython.core.ultratb.inspect_error\n- IPython.core.ultratb.is_recursion_error\n- IPython.core.ultratb.with_patch_inspect\n- IPython.external.__all__\n- IPython.external.__builtins__\n- IPython.external.__cached__\n- IPython.external.__doc__\n- IPython.external.__file__\n- IPython.external.__loader__\n- IPython.external.__name__\n- IPython.external.__package__\n- IPython.external.__path__\n- IPython.external.__spec__\n- IPython.kernel.KernelConnectionInfo\n- IPython.kernel.__builtins__\n- IPython.kernel.__cached__\n- IPython.kernel.__warningregistry__\n- IPython.kernel.pkg\n- IPython.kernel.protocol_version\n- IPython.kernel.protocol_version_info\n- IPython.kernel.src\n- IPython.kernel.version_info\n- IPython.kernel.warn\n- IPython.lib.backgroundjobs\n- IPython.lib.backgroundjobs.BackgroundJobBase\n- IPython.lib.backgroundjobs.BackgroundJobBase.run\n- IPython.lib.backgroundjobs.BackgroundJobBase.traceback\n- IPython.lib.backgroundjobs.BackgroundJobExpr\n- IPython.lib.backgroundjobs.BackgroundJobExpr.call\n- IPython.lib.backgroundjobs.BackgroundJobFunc\n- IPython.lib.backgroundjobs.BackgroundJobFunc.call\n- IPython.lib.backgroundjobs.BackgroundJobManager\n- IPython.lib.backgroundjobs.BackgroundJobManager.flush\n- IPython.lib.backgroundjobs.BackgroundJobManager.new\n- IPython.lib.backgroundjobs.BackgroundJobManager.remove\n- IPython.lib.backgroundjobs.BackgroundJobManager.result\n- IPython.lib.backgroundjobs.BackgroundJobManager.status\n- IPython.lib.backgroundjobs.BackgroundJobManager.traceback\n- IPython.lib.backgroundjobs.__builtins__\n- IPython.lib.backgroundjobs.__cached__\n- IPython.lib.backgroundjobs.__doc__\n- IPython.lib.backgroundjobs.__file__\n- IPython.lib.backgroundjobs.__loader__\n- IPython.lib.backgroundjobs.__name__\n- IPython.lib.backgroundjobs.__package__\n- IPython.lib.backgroundjobs.__spec__\n- IPython.lib.kernel.__builtins__\n- IPython.lib.kernel.__cached__\n- IPython.lib.kernel.__doc__\n- IPython.lib.kernel.__file__\n- IPython.lib.kernel.__loader__\n- IPython.lib.kernel.__name__\n- IPython.lib.kernel.__package__\n- IPython.lib.kernel.__spec__\n- IPython.lib.kernel.__warningregistry__\n- IPython.paths.fs_encoding\n- IPython.terminal.debugger.DEFAULT_BUFFER\n- IPython.terminal.debugger.cursor_in_leading_ws\n- IPython.terminal.debugger.emacs_insert_mode\n- IPython.terminal.debugger.has_selection\n- IPython.terminal.debugger.vi_insert_mode\n- IPython.terminal.interactiveshell.DISPLAY_BANNER_DEPRECATED\n- IPython.terminal.ipapp.TerminalIPythonApp.parse_command_line\n- IPython.testing.test\n- IPython.utils.contexts.NoOpContext\n- IPython.utils.io.IOStream\n- IPython.utils.io.IOStream.close\n- IPython.utils.io.IOStream.write\n- IPython.utils.io.IOStream.writelines\n- IPython.utils.io.__warningregistry__\n- IPython.utils.io.atomic_writing\n- IPython.utils.io.stderr\n- IPython.utils.io.stdin\n- IPython.utils.io.stdout\n- IPython.utils.io.unicode_std_stream\n- IPython.utils.path.get_ipython_cache_dir\n- IPython.utils.path.get_ipython_dir\n- IPython.utils.path.get_ipython_module_path\n- IPython.utils.path.get_ipython_package_dir\n- IPython.utils.path.locate_profile\n- IPython.utils.path.unquote_filename\n- IPython.utils.py3compat.PY2\n- IPython.utils.py3compat.PY3\n- IPython.utils.py3compat.buffer_to_bytes\n- IPython.utils.py3compat.builtin_mod_name\n- IPython.utils.py3compat.cast_bytes\n- IPython.utils.py3compat.getcwd\n- IPython.utils.py3compat.isidentifier\n- IPython.utils.py3compat.u_format"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The following signatures differ between 7.x and 8.0::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "- IPython.core.completer.IPCompleter.unicode_name_matches(self, text)\n+ IPython.core.completer.IPCompleter.unicode_name_matches(text)\n\n- IPython.core.completer.match_dict_keys(keys, prefix, delims)\n+ IPython.core.completer.match_dict_keys(keys, prefix, delims, extra_prefix='None')\n\n- IPython.core.interactiveshell.InteractiveShell.object_inspect_mime(self, oname, detail_level=0)\n+ IPython.core.interactiveshell.InteractiveShell.object_inspect_mime(self, oname, detail_level=0, omit_sections='()')\n\n- IPython.core.interactiveshell.InteractiveShell.set_hook(self, name, hook, priority=50, str_key='None', re_key='None', _warn_deprecated=True)\n+ IPython.core.interactiveshell.InteractiveShell.set_hook(self, name, hook, priority=50, str_key='None', re_key='None')\n\n- IPython.core.oinspect.Inspector.info(self, obj, oname='', formatter='None', info='None', detail_level=0)\n+ IPython.core.oinspect.Inspector.info(self, obj, oname='', info='None', detail_level=0)\n\n- IPython.core.oinspect.Inspector.pinfo(self, obj, oname='', formatter='None', info='None', detail_level=0, enable_html_pager=True)\n+ IPython.core.oinspect.Inspector.pinfo(self, obj, oname='', formatter='None', info='None', detail_level=0, enable_html_pager=True, omit_sections='()')\n\n- IPython.core.profiledir.ProfileDir.copy_config_file(self, config_file, path='None', overwrite=False)\n+ IPython.core.profiledir.ProfileDir.copy_config_file(self, config_file, path, overwrite=False)\n\n- IPython.core.ultratb.VerboseTB.format_record(self, frame, file, lnum, func, lines, index)\n+ IPython.core.ultratb.VerboseTB.format_record(self, frame_info)\n\n- IPython.terminal.embed.InteractiveShellEmbed.mainloop(self, local_ns='None', module='None', stack_depth=0, display_banner='None', global_ns='None', compile_flags='None')\n+ IPython.terminal.embed.InteractiveShellEmbed.mainloop(self, local_ns='None', module='None', stack_depth=0, compile_flags='None')\n\n- IPython.terminal.embed.embed(**kwargs)\n+ IPython.terminal.embed.embed(*, header='', compile_flags='None', **kwargs)\n\n- IPython.terminal.interactiveshell.TerminalInteractiveShell.interact(self, display_banner='<object object at 0xffffff>')\n+ IPython.terminal.interactiveshell.TerminalInteractiveShell.interact(self)\n\n- IPython.terminal.interactiveshell.TerminalInteractiveShell.mainloop(self, display_banner='<object object at 0xffffff>')\n+ IPython.terminal.interactiveshell.TerminalInteractiveShell.mainloop(self)\n\n- IPython.utils.path.get_py_filename(name, force_win32='None')\n+ IPython.utils.path.get_py_filename(name)"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The following are new attributes (that might be inherited)::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "+ IPython.core.completer.IPCompleter.unicode_names\n+ IPython.core.debugger.InterruptiblePdb.precmd\n+ IPython.core.debugger.Pdb.precmd\n+ IPython.core.ultratb.AutoFormattedTB.has_colors\n+ IPython.core.ultratb.ColorTB.has_colors\n+ IPython.core.ultratb.FormattedTB.has_colors\n+ IPython.core.ultratb.ListTB.has_colors\n+ IPython.core.ultratb.SyntaxTB.has_colors\n+ IPython.core.ultratb.TBTools.has_colors\n+ IPython.core.ultratb.VerboseTB.has_colors\n+ IPython.terminal.debugger.TerminalPdb.do_interact\n+ IPython.terminal.debugger.TerminalPdb.precmd"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The following attribute/methods have been removed::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "- IPython.core.application.BaseIPythonApplication.deprecated_subcommands\n- IPython.core.ultratb.AutoFormattedTB.format_records\n- IPython.core.ultratb.ColorTB.format_records\n- IPython.core.ultratb.FormattedTB.format_records\n- IPython.terminal.embed.InteractiveShellEmbed.init_deprecation_warnings\n- IPython.terminal.embed.InteractiveShellEmbed.init_readline\n- IPython.terminal.embed.InteractiveShellEmbed.write\n- IPython.terminal.embed.InteractiveShellEmbed.write_err\n- IPython.terminal.interactiveshell.TerminalInteractiveShell.init_deprecation_warnings\n- IPython.terminal.interactiveshell.TerminalInteractiveShell.init_readline\n- IPython.terminal.interactiveshell.TerminalInteractiveShell.write\n- IPython.terminal.interactiveshell.TerminalInteractiveShell.write_err\n- IPython.terminal.ipapp.LocateIPythonApp.deprecated_subcommands\n- IPython.terminal.ipapp.LocateIPythonApp.initialize_subcommand\n- IPython.terminal.ipapp.TerminalIPythonApp.deprecated_subcommands\n- IPython.terminal.ipapp.TerminalIPythonApp.initialize_subcommand"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": "API Changes using Frappuccino"
    }
  ],
  "content": {},
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": null,
  "item_line": null,
  "item_type": null,
  "ordered_sections": [],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}