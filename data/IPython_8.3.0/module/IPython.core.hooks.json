{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "In Python, it is possible to overwrite any method of any object if you really want to.  But IPython exposes a few 'hooks', methods which are "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "designed"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " to be overwritten by users for customization purposes.  This module defines the default versions of all such hooks, which get used by IPython if not overridden by the user."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Hooks are simple functions, but they should be declared with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "self"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " as their first argument, because when activated they are registered into IPython as instance methods. The self argument will be the IPython running instance itself, so hooks have full access to the entire IPython object."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If you wish to define a new hook and activate it, you can make an "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "extension\n</config/extensions/index>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " or a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "startup script <startup_files>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". For example, you could use a startup file like this::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "import os\n\ndef calljed(self,filename, linenum):\n    \"My editor hook calls the jed editor directly.\"\n    print \"Calling my own editor, jed ...\"\n    if os.system('jed +%d %s' % (linenum,filename)) != 0:\n        raise TryNext()\n\ndef load_ipython_extension(ip):\n    ip.set_hook('editor', calljed)"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Hooks for IPython."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "IPython.core.hooks"
  ],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Hooks for IPython."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "In Python, it is possible to overwrite any method of any object if you really want to.  But IPython exposes a few 'hooks', methods which are "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "designed"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " to be overwritten by users for customization purposes.  This module defines the default versions of all such hooks, which get used by IPython if not overridden by the user."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Hooks are simple functions, but they should be declared with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "self"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " as their first argument, because when activated they are registered into IPython as instance methods. The self argument will be the IPython running instance itself, so hooks have full access to the entire IPython object."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If you wish to define a new hook and activate it, you can make an "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "extension\n</config/extensions/index>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " or a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "startup script <startup_files>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". For example, you could use a startup file like this::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "import os\n\ndef calljed(self,filename, linenum):\n    \"My editor hook calls the jed editor directly.\"\n    print \"Calling my own editor, jed ...\"\n    if os.system('jed +%d %s' % (linenum,filename)) != 0:\n        raise TryNext()\n\ndef load_ipython_extension(ip):\n    ip.set_hook('editor', calljed)"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": null
    }
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/dev/ipython/IPython/core/hooks.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}