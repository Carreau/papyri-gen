{
  "aliases": [
    "IPython.display.GeoJSON.__init__"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "VegaLite data. Not an already-serialized JSON string. Scalar types (None, number, string) are not allowed, only dict or list containers."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "data",
                "type_": "dict or list"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Leaflet TileLayer URL template: http://leafletjs.com/reference.html#url-template"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "url_template",
                "type_": "string"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Leaflet TileLayer options: http://leafletjs.com/reference.html#tilelayer-options"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "layer_options",
                "type_": "dict"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A URL to download the data from."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "url",
                "type_": "unicode"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Path to a local file to load the data from."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "filename",
                "type_": "unicode"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Specify extra metadata to attach to the json display object."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "metadata",
                "type_": "dict"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Create a GeoJSON display object given raw data."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "The following will display an interactive map of Mars with a point of interest on frontend that do support GeoJSON display."
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> from IPython.display import GeoJSON"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> GeoJSON(data={\n...     \"type\": \"Feature\",\n...     \"geometry\": {\n...         \"type\": \"Point\",\n...         \"coordinates\": [-81.327, 296.038]\n...     }\n... },\n... url_template=\"http://s3-eu-west-1.amazonaws.com/whereonmars.cartodb.net/{basemap_id}/{z}/{x}/{y}.png\",\n... layer_options={\n...     \"basemap_id\": \"celestia_mars-shaded-16k_global\",\n...     \"attribution\" : \"Celestia/praesepe\",\n...     \"minZoom\" : 0,\n...     \"maxZoom\" : 18,\n... })\n<IPython.core.display.GeoJSON object>"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "In the terminal IPython, you will only see the text representation of the GeoJSON object."
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      }
    ],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/IPython/core/display.py",
  "item_line": 643,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "__init__(self, *args, **kwargs)"
  }
}