{
  "aliases": [
    "IPython.core.extensions.ExtensionManager"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "An IPython extension is an importable Python module that has a function with the signature:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "def load_ipython_extension(ipython):\n    # Do things with ipython"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This function is called after your extension is imported and the currently active "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "InteractiveShell"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " instance is passed as the only argument.  You can do anything you want with IPython at that point, including defining new magic and aliases, adding new components, etc."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "You can also optionally define an "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "unload_ipython_extension(ipython)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " function, which will be called if the user unloads or reloads the extension. The extension manager will only call "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "load_ipython_extension"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " again if the extension is reloaded."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "You can put your extension modules anywhere you want, as long as they can be imported by Python's standard import mechanism.  However, to make it easy to write extensions, you can also put your extensions in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "os.path.join(self.ipython_dir, 'extensions')"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ".  This directory is added to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "sys.path"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " automatically."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "A class to manage IPython extensions."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/IPython/core/extensions.py",
  "item_line": 25,
  "item_type": "<class 'traitlets.traitlets.MetaHasTraits'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}