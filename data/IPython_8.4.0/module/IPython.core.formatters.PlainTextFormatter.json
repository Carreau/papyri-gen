{
  "aliases": [
    "IPython.core.formatters.PlainTextFormatter"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This uses "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "IPython.lib.pretty"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " to compute the format data of the object. If the object cannot be pretty printed, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "repr"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is used. See the documentation of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "IPython.lib.pretty"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for details on how to write pretty printers.  Here is a simple example:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "def dtype_pprinter(obj, p, cycle):\n    if cycle:\n        return p.text('dtype(...)')\n    if hasattr(obj, 'fields'):\n        if obj.fields is None:\n            p.text(repr(obj))\n        else:\n            p.begin_group(7, 'dtype([')\n            for i, field in enumerate(obj.descr):\n                if i > 0:\n                    p.text(',')\n                    p.breakable()\n                p.pretty(field)\n            p.end_group(7, '])')"
          },
          "type": "BlockVerbatim"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The default pretty-printer."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/IPython/core/formatters.py",
  "item_line": 568,
  "item_type": "<class 'traitlets.traitlets.MetaHasTraits'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}