{
  "aliases": [
    "IPython.core.completer"
  ],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Completion for IPython."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This module started as fork of the rlcompleter module in the Python standard library.  The original enhancements made to rlcompleter have been sent upstream and were accepted as of Python 2.3,"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This module now support a wide variety of completion mechanism both available for normal classic Python code, as well as completer for IPython specific Syntax like magics."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "IPython and compatible frontends not only can complete your code, but can help you to input a wide range of characters. In particular we allow you to insert a unicode character using the tab completion mechanism."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": "Latex and Unicode completion"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Forward completion allows you to easily type a unicode character using its latex name, or unicode long description. To do so type a backslash follow by the relevant name and press tab:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Using latex completion:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "\\alpha<tab>\n\u03b1"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "or using unicode completion:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "\\GREEK SMALL LETTER ALPHA<tab>\n\u03b1"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Only valid Python identifiers will complete. Combining characters (like arrow or dots) are also available, unlike latex they need to be put after the their counterpart that is to say, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "F\\\\vec<tab>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is correct, not "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "\\\\vec<tab>F"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Some browsers are known to display combining characters incorrectly."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Forward latex/unicode completion"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "It is sometime challenging to know how to type a character, if you are using IPython, or any compatible frontend you can prepend backslash to the character and press "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Tab"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " to expand it to its latex form."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "\\\u03b1<tab>\n\\alpha"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Both forward and backward completions can be deactivated by setting the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": "std",
                  "role": "configtrait",
                  "value": "Completer.backslash_combining_completions"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " option to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "False"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Backward latex completion"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Starting with IPython 6.0, this module can make use of the Jedi library to generate completions both using static analysis of the code, and dynamically inspecting multiple namespaces. Jedi is an autocompletion and static analysis for Python. The APIs attached to this new mechanism is unstable and will raise unless use in an "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "provisionalcompleter"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " context manager."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "You will find that the following are experimental:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": [
                                    "provisionalcompleter"
                                  ]
                                },
                                "type": "Verbatim"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": [
                                    "IPCompleter.completions"
                                  ]
                                },
                                "type": "Verbatim"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": [
                                    "Completion"
                                  ]
                                },
                                "type": "Verbatim"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": [
                                    "rectify_completions"
                                  ]
                                },
                                "type": "Verbatim"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ]
          },
          "type": "BlockQuote"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "better name for "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": "any",
                        "value": "rectify_completions"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " ?"
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              }
            ],
            "kind": "note",
            "title": ""
          },
          "type": "Admonition"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We welcome any feedback on these new API, and we also encourage you to try this module in debug mode (start IPython with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "--Completer.debug=True"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ") in order to have extra logging information if "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "jedi"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is crashing, or if current IPython completer pending deprecations are returning results not yet handled by "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "jedi"
                  ]
                },
                "type": "Verbatim"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Using Jedi for tab completion allow snippets like the following to work without having to execute any code:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": ">>> myvar = ['hello', 42]\n... myvar[1].bi<tab>"
                },
                "type": "BlockVerbatim"
              }
            ]
          },
          "type": "BlockQuote"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Tab completion will be able to infer that "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "myvar[1]"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is a real number without executing almost any code unlike the deprecated "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "IPCompleter.greedy"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " option."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Be sure to update "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "jedi"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " to the latest stable version or to try the current development version to get better completions."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": "Experimental"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "All completions routines are implemented using unified "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "Matchers"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " API. The matchers API is provisional and subject to change without notice."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The built-in matchers include:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": [
                              "IPCompleter.dict_key_matcher"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ":  dictionary key completions,"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": [
                              "IPCompleter.magic_matcher"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ": completions for magics,"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": [
                              "IPCompleter.unicode_name_matcher"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ",   "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "IPCompleter.fwd_unicode_matcher"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "   and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "IPCompleter.latex_name_matcher"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ": see "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "Forward latex/unicode completion"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ","
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": [
                              "back_unicode_name_matcher"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "back_latex_name_matcher"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ": see "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "Backward latex completion"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ","
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": [
                              "IPCompleter.file_matcher"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ": paths to files and directories,"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": [
                              "IPCompleter.python_func_kw_matcher"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " - function keywords,"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": [
                              "IPCompleter.python_matches"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " - globals and attributes (v1 API),"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": [
                              "IPCompleter.jedi_matcher"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " - static analysis with Jedi,"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": [
                              "IPCompleter.custom_completer_matcher"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " - pluggable completer with a default   implementation in "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "InteractiveShell"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " which uses IPython hooks system   ("
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "complete_command"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ") with string dispatch (including regular expressions).   Differently to other matchers, "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "custom_completer_matcher"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " will not suppress   Jedi results to match behaviour in earlier IPython versions."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Custom matchers can be added by appending to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "IPCompleter.custom_matchers"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " list."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": "Matchers"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Simplifying some details, the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Matcher"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " interface can described as"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "",
            "content": "MatcherAPIv1 = Callable[[str], list[str]]\nMatcherAPIv2 = Callable[[CompletionContext], SimpleMatcherResult]\n\nMatcher = MatcherAPIv1 | MatcherAPIv2",
            "name": "code-block",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "MatcherAPIv1"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " reflects the matcher API as available prior to IPython 8.6.0 and remains supported as a simplest way for generating completions. This is also currently the only API supported by the IPython hooks system "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "complete_command"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "To distinguish between matcher versions "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "matcher_api_version"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " attribute is used. More precisely, the API allows to omit "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "matcher_api_version"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for v1 Matchers, and requires a literal "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "2"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for v2 Matchers."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Once the API stabilises future versions may relax the requirement for specifying "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "matcher_api_version"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " by switching to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "functools.singledispatch"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", therefore please do not rely on the presence of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "matcher_api_version"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for any purposes."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Matcher API"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "By default results from all matchers are combined, in the order determined by their priority. Matchers can request to suppress results from subsequent matchers by setting "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "suppress"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "True"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " in the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "MatcherResult"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "When multiple matchers simultaneously request surpression, the results from of the matcher with higher priority will be returned."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Sometimes it is desirable to suppress most but not all other matchers; this can be achieved by adding a list of identifiers of matchers which should not be suppressed to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "MatcherResult"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " under "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "do_not_suppress"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " key."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The suppression behaviour can is user-configurable via "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": "std",
                  "role": "configtrait",
                  "value": "IPCompleter.suppress_competing_matchers"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Suppression of competing matchers"
    }
  ],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "To remove in the future \u2013\u2013 IPython.core.completer"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/dev/ipython/IPython/core/completer.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}