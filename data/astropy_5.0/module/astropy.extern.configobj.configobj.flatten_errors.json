{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": [
                    "cfg"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is the ConfigObj instance being checked, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "res"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is the results dictionary returned by "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "validate"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "(This is a recursive function, so you shouldn't use the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "levels"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "results"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " arguments - they are used by the function.)"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Returns a list of keys that failed. Each member of the list is a tuple::      "
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "([list of sections...], key, result)"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "If "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "validate"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " was called with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "preserve_errors=False"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " (the default) then "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "result"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " will always be "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "False"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": {
                    "value": "list of sections"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " is a flattened list of sections that the key was found in."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "If the section was missing (or a section was expected and a scalar provided - or vice-versa) then key will be "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "None"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "If the value (or section) was missing then "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "result"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " will be "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "False"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "If "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "validate"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " was called with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "preserve_errors=True"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and a value was present, but failed the check, then "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "result"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " will be the exception object returned. You can use this as a string that describes the failure."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "For example "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "The value \"3\" is of the wrong type"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "An example function that will turn a nested dictionary of results (as returned by "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ConfigObj.validate"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ") into a flat list."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "astropy.config.configuration.configobj.flatten_errors"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/astropy/extern/configobj/configobj.py",
  "item_line": 2390,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "flatten_errors(cfg, res, levels=None, results=None)"
  }
}