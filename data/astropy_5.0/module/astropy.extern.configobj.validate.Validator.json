{
  "aliases": [
    "astropy.config.configuration.validate.Validator"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This can also involve converting the value from a string into the correct datatype."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "check"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " method takes an input string which configures which check is to be used and applies that check to a supplied value."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "An example input string would be: 'int_range(param1, param2)'"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "You would then provide something like:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ">>> def int_range_check(value, min, max):\n...     # turn min and max from strings to integers\n...     min = int(min)\n...     max = int(max)\n...     # check that value is of the correct type.\n...     # possible valid inputs are integers or strings\n...     # that represent integers\n...     if not isinstance(value, (int, long, string_type)):\n...         raise VdtTypeError(value)\n...     elif isinstance(value, string_type):\n...         # if we are given a string\n...         # attempt to convert to an integer\n...         try:\n...             value = int(value)\n...         except ValueError:\n...             raise VdtValueError(value)\n...     # check the value is between our constraints\n...     if not min <= value:\n...          raise VdtValueTooSmallError(value)\n...     if not value <= max:\n...          raise VdtValueTooBigError(value)\n...     return value"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "value": ">>> fdict = {'int_range': int_range_check}\n>>> vtr1 = Validator(fdict)\n>>> vtr1.check('int_range(20, 40)', '30')\n30\n>>> vtr1.check('int_range(20, 40)', '60')\nTraceback (most recent call last):\nVdtValueTooBigError: the value \"60\" is too big."
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The first program to utilise Validator() was Michael Foord's ConfigObj, an alternative to ConfigParser which supports lists and can validate a config file using a config schema. For more details on using Validator with ConfigObj see: https://configobj.readthedocs.org/en/latest/configobj.html"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Validator is an object that allows you to register a set of 'checks'. These checks take input and test that it conforms to the check."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/astropy/extern/configobj/validate.py",
  "item_line": 472,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}