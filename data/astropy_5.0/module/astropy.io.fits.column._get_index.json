{
  "aliases": [
    "astropy.io.fits.column._get_index"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "key"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " can be an integer or string.  If integer, it is the index in the list.  If string,"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "Field (column) names are case sensitive: you can have two        different columns called 'abc' and 'ABC' respectively."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "When you "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": {
                                    "value": "refer"
                                  }
                                },
                                "type": "Emph"
                              },
                              {
                                "data": {
                                  "value": " to a field (presumably with the field        method), it will try to match the exact name first, so in        the example in (a), field('abc') will get the first field,        and field('ABC') will get the second field."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "EnumeratedList"
              },
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "If there is no exact name matched, it will try to match the     name with case insensitivity.  So, in the last example,     field('Abc') will cause an exception since there is no unique     mapping.  If there is a field named \"XYZ\" and no other field     name is a case variant of \"XYZ\", then field('xyz'),     field('Xyz'), etc. will get this field."
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              }
            ]
          },
          "type": "BlockQuote"
        }
      ],
      "level": 0,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Get the index of the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "key"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " in the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "names"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " list."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "title": null
  },
  "item_file": "/astropy/io/fits/column.py",
  "item_line": 2017,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "_get_index(names, key)"
  }
}