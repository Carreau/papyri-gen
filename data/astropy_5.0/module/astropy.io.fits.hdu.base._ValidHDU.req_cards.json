{
  "aliases": [
    "astropy.io.fits.convenience._ValidHDU.req_cards"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "pos=None"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", the card can be anywhere in the header.  If the card does not exist, the new card will have the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "fix_value"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " as its value when created.  Also check the card's value by using the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "test"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " argument."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The keyword to validate"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "keyword",
                "type_": "str"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If an "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "int"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", this specifies the exact location this card should have in the header.  Remember that Python is zero-indexed, so this means "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "pos=0"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " requires the card to be the first card in the header.  If given a callable, it should take one argument--the actual position of the keyword--and return "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "True"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "False"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ".  This can be used for custom evaluation.  For example if "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "pos=lambda idx: idx > 10"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " this will check that the keyword's index is greater than 10."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "pos",
                "type_": "int, callable"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "This should be a callable (generally a function) that is passed the value of the given keyword and returns "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "True"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "False"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ".  This can be used to validate the value associated with the given keyword."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "test",
                "type_": "callable"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A valid value for a FITS keyword to to use if the given "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "test"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " fails to replace an invalid value.  In other words, this provides a default value to use as a replacement if the keyword's current value is invalid.  If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "None"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ", there is no replacement value and the keyword is unfixable."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "fix_value",
                "type_": "str, int, float, complex, bool, None"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Output verification option.  Must be one of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "\"fix\""
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "\"silentfix\""
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "\"ignore\""
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "\"warn\""
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "\"exception\""
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ".  May also be any combination of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "\"fix\""
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "\"silentfix\""
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " with "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "\"+ignore\""
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "+warn"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "+exception\"\n(e.g. ``\"fix+warn\""
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ").  See "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "astropy:verify"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " for more info."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "option",
                "type_": "str"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A list of validation errors already found in the FITS file; this is used primarily for the validation system to collect errors across multiple HDUs and multiple calls to "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "astropy",
                              "path": "astropy.io.fits.hdu.base._ValidHDU.req_cards",
                              "version": "5.0"
                            },
                            "value": "req_cards"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "errlist",
                "type_": "list"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Check the existence, location, and value of a required "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "astropy",
                    "path": "astropy.io.fits.card.Card",
                    "version": "5.0"
                  },
                  "value": "Card"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/astropy/io/fits/hdu/base.py",
  "item_line": 1093,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Notes"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "req_cards(self, keyword, pos, test, fix_value, option, errlist)"
  }
}