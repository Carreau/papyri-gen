{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "If the keyword does not already exist in the header, a new keyword is created in the specified position, or appended to the end of the header if no position is specified."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "This method is similar to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Header.update"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " prior to Astropy v0.1."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "inline": [
                  {
                    "data": {
                      "value": "It should be noted that ``header.set ( keyword, value)`` and ``header.set ( keyword, value, comment)`` are equivalent to ``header [ keyword] = value`` and ``header [ keyword] = ( value, comment)`` respectively. New keywords can also be inserted relative to existing keywords using, for example : : >>> header.insert ( ' NAXIS1 ' , ( ' NAXIS ' , 2, ' Number of axes ' )) to insert before an existing keyword, or : : >>> header.insert ( ' NAXIS ' , ( ' NAXIS1 ' , 4096), after=True) to insert after an existing keyword. The only advantage of using : meth : `Header.set` is that it easily replaces the old usage of : meth : `Header.update` both conceptually and in terms of function signature. "
                    },
                    "type": "Words"
                  }
                ],
                "inner": []
              }
            ],
            "kind": "note",
            "title": ""
          },
          "type": "Admonition"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "A header keyword"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "keyword",
            "type_": "str"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The value to set for the given keyword; if None the existing value is kept, but '' may be used to set a blank value"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "value",
            "type_": "str, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The comment to set for the given keyword; if None the existing comment is kept, but "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "''"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " may be used to set a blank comment"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "comment",
            "type_": "str, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Name of the keyword, or index of the "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "astropy",
                          "path": "astropy.io.fits.card.Card",
                          "version": "5.0"
                        },
                        "value": "Card"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " before which this card should be located in the header.  The argument "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "before"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " takes precedence over "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "after"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " if both specified."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "before",
            "type_": "str, int, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Name of the keyword, or index of the "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "astropy",
                          "path": "astropy.io.fits.card.Card",
                          "version": "5.0"
                        },
                        "value": "Card"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " after which this card should be located in the header."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "after",
            "type_": "str, int, optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Set the value and/or comment and/or position of a specified keyword."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "astropy.io.fits.Header.set"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/astropy/io/fits/header.py",
  "item_line": 908,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "set(self, keyword, value=None, comment=None, before=None, after=None)"
  }
}