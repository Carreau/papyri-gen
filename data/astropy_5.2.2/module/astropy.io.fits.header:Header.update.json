{
  "aliases": [
    "astropy.io.fits.Header.update"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "astropy",
                "path": "astropy.io.fits.header:Header.update",
                "type": "RefInfo",
                "version": "5.2.2"
              },
              "type": "Link",
              "value": "update"
            },
            {
              "type": "text",
              "value": " accepts either a dict-like object or an iterable.  In the former case the keys must be header keywords and the values may be either scalar values or (value, comment) tuples.  In the case of an iterable the items must be (keyword, value) tuples or (keyword, value, comment) tuples."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Arbitrary arguments are also accepted, in which case the update() is called again with the kwargs dict as its only argument.  That is,"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": ">>> header.update(NAXIS1=100, NAXIS2=100)"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "is equivalent to      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "header.update({'NAXIS1': 100, 'NAXIS2': 100})"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "warning "
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "As this method works similarly to "
                },
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "dict.update"
                },
                {
                  "type": "text",
                  "value": " it is very different from the "
                },
                {
                  "type": "inlineCode",
                  "value": "Header.update()"
                },
                {
                  "type": "text",
                  "value": " method in Astropy v0.1. Use of the old API was "
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "deprecated"
                    }
                  ],
                  "type": "strong"
                },
                {
                  "type": "text",
                  "value": " for a long time and is now removed. Most uses of the old API can be replaced as follows:"
                }
              ],
              "type": "paragraph"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "Replace         "
                        }
                      ],
                      "type": "paragraph"
                    },
                    {
                      "type": "code",
                      "value": "header.update(keyword, value)"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "with         "
                        }
                      ],
                      "type": "paragraph"
                    },
                    {
                      "type": "code",
                      "value": "header[keyword] = value"
                    }
                  ],
                  "spread": false,
                  "type": "listItem"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "Replace         "
                        }
                      ],
                      "type": "paragraph"
                    },
                    {
                      "type": "code",
                      "value": "header.update(keyword, value, comment=comment)"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "with         "
                        }
                      ],
                      "type": "paragraph"
                    },
                    {
                      "type": "code",
                      "value": "header[keyword] = (value, comment)"
                    }
                  ],
                  "spread": false,
                  "type": "listItem"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "Replace         "
                        }
                      ],
                      "type": "paragraph"
                    },
                    {
                      "type": "code",
                      "value": "header.update(keyword, value, before=before_keyword)"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "with         "
                        }
                      ],
                      "type": "paragraph"
                    },
                    {
                      "type": "code",
                      "value": "header.insert(before_keyword, (keyword, value))"
                    }
                  ],
                  "spread": false,
                  "type": "listItem"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "Replace         "
                        }
                      ],
                      "type": "paragraph"
                    },
                    {
                      "type": "code",
                      "value": "header.update(keyword, value, after=after_keyword)"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "with         "
                        }
                      ],
                      "type": "paragraph"
                    },
                    {
                      "type": "code",
                      "value": "header.insert(after_keyword, (keyword, value),\n              after=True)"
                    }
                  ],
                  "spread": false,
                  "type": "listItem"
                }
              ],
              "ordered": false,
              "spread": false,
              "start": 1,
              "type": "list"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "See also "
                },
                {
                  "domain": null,
                  "role": "meth",
                  "type": "Directive",
                  "value": "Header.set"
                },
                {
                  "type": "text",
                  "value": " which is a new method that provides an interface similar to the old "
                },
                {
                  "type": "inlineCode",
                  "value": "Header.update()"
                },
                {
                  "type": "text",
                  "value": " and may help make transition a little easier."
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Update the Header with new keyword values, updating the values of existing keywords and appending new keywords otherwise; similar to "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "dict.update"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/astropy/io/fits/header.py",
  "item_line": 1061,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self, *args, **kwargs)"
  },
  "type": "DocBlob"
}