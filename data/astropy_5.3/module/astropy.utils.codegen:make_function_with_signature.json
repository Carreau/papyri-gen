{
  "aliases": [
    "astropy.utils.make_function_with_signature"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The desired signature must of course be compatible with the arguments actually accepted by the input function."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The "
            },
            {
              "type": "inlineCode",
              "value": "args"
            },
            {
              "type": "text",
              "value": " are strings that should be the names of the positional arguments.  "
            },
            {
              "type": "inlineCode",
              "value": "kwargs"
            },
            {
              "type": "text",
              "value": " can map names of keyword arguments to their default values.  It may be either a "
            },
            {
              "type": "inlineCode",
              "value": "dict"
            },
            {
              "type": "text",
              "value": " or a list of "
            },
            {
              "type": "inlineCode",
              "value": "(keyword,\ndefault)"
            },
            {
              "type": "text",
              "value": " tuples."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "If "
            },
            {
              "type": "inlineCode",
              "value": "varargs"
            },
            {
              "type": "text",
              "value": " is a string it is added to the positional arguments as "
            },
            {
              "type": "inlineCode",
              "value": "*<varargs>"
            },
            {
              "type": "text",
              "value": ".  Likewise "
            },
            {
              "type": "inlineCode",
              "value": "varkwargs"
            },
            {
              "type": "text",
              "value": " can be the name for a variable keyword argument placeholder like "
            },
            {
              "type": "inlineCode",
              "value": "**<varkwargs>"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "If not specified the name of the new function is taken from the original function.  Otherwise, the "
            },
            {
              "type": "inlineCode",
              "value": "name"
            },
            {
              "type": "text",
              "value": " argument can be used to specify a new name."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Note, the names may only be valid Python variable names."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Make a new function from an existing function but with the desired signature."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/astropy/utils/codegen.py",
  "item_line": 25,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(func, args=(), kwargs={}, varargs=None, varkwargs=None, name=None)"
  },
  "type": "DocBlob"
}