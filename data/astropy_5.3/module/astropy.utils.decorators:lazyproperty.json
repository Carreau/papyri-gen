{
  "aliases": [
    "astropy.utils.lazyproperty"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This essentially memorizes the value of the property by storing the result of its computation in the "
            },
            {
              "type": "inlineCode",
              "value": "__dict__"
            },
            {
              "type": "text",
              "value": " of the object instance.  This is useful for computing the value of some property that should otherwise be invariant.  For example      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": ">>> class LazyTest:\n...     @lazyproperty\n...     def complicated_property(self):\n...         print('Computing the value for complicated_property...')\n...         return 42\n...\n>>> lt = LazyTest()\n>>> lt.complicated_property\nComputing the value for complicated_property...\n42\n>>> lt.complicated_property\n42"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "As the example shows, the second time "
            },
            {
              "type": "inlineCode",
              "value": "complicated_property"
            },
            {
              "type": "text",
              "value": " is accessed, the "
            },
            {
              "type": "inlineCode",
              "value": "print"
            },
            {
              "type": "text",
              "value": " statement is not executed.  Only the return value from the first access off "
            },
            {
              "type": "inlineCode",
              "value": "complicated_property"
            },
            {
              "type": "text",
              "value": " is returned."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "By default, a setter and deleter are used which simply overwrite and delete, respectively, the value stored in "
            },
            {
              "type": "inlineCode",
              "value": "__dict__"
            },
            {
              "type": "text",
              "value": ". Any user-specified setter or deleter is executed before executing these default actions. The one exception is that the default setter is not run if the user setter already sets the new value in "
            },
            {
              "type": "inlineCode",
              "value": "__dict__"
            },
            {
              "type": "text",
              "value": " and returns that value and the returned value is not "
            },
            {
              "type": "inlineCode",
              "value": "None"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Works similarly to property(), but computes the value only once."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/astropy/utils/decorators.py",
  "item_line": 788,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}