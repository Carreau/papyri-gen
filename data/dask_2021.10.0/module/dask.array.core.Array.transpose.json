{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Some inconsistencies with the Dask version may exist."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Returns a view of the array with axes transposed."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "For a 1-D array this has no effect, as a transposed vector is simply the same vector. To convert a 1-D array into a 2D column vector, an additional dimension must be added. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "np.atleast2d(a).T"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " achieves this, as does "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "a[:, np.newaxis]"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": ". For a 2-D array, this is a standard matrix transpose. For an n-D array, if axes are given, their order indicates how the axes are permuted (see Examples). If axes are not provided and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "a.shape = (i[0], i[1], ... i[n-2], i[n-1])"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", then "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "a.transpose().shape = (i[n-1], i[n-2], ... i[1], i[0])"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "None or no argument: reverses the order of the axes."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "tuple of ints: "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "domain": null,
                                  "role": null,
                                  "value": "i"
                                },
                                "type": "Directive"
                              },
                              {
                                "data": {
                                  "value": " in the "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "domain": null,
                                  "role": null,
                                  "value": "j"
                                },
                                "type": "Directive"
                              },
                              {
                                "data": {
                                  "value": "-th place in the tuple means "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "domain": null,
                                  "role": null,
                                  "value": "a"
                                },
                                "type": "Directive"
                              },
                              {
                                "data": {
                                  "value": "'s   "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "domain": null,
                                  "role": null,
                                  "value": "i"
                                },
                                "type": "Directive"
                              },
                              {
                                "data": {
                                  "value": "-th axis becomes "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "domain": null,
                                  "role": null,
                                  "value": "a.transpose()"
                                },
                                "type": "Directive"
                              },
                              {
                                "data": {
                                  "value": "'s "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "domain": null,
                                  "role": null,
                                  "value": "j"
                                },
                                "type": "Directive"
                              },
                              {
                                "data": {
                                  "value": "-th axis."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "domain": null,
                                  "role": null,
                                  "value": "n"
                                },
                                "type": "Directive"
                              },
                              {
                                "data": {
                                  "value": " ints: same as an n-tuple of the same ints (this form is   intended simply as a \"convenience\" alternative to the tuple form)"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ],
            "param": "axes",
            "type_": "None, tuple of ints, or `n` ints"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "View of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "a"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": ", with axes suitably permuted."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "out",
            "type_": "ndarray"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "This docstring was copied from numpy.ndarray.transpose."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "dask.array.Array.transpose"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ]
          ],
          "out": "array([[1, 2],\n       [3, 4]])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "transpose",
              "numpy.ndarray.transpose",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ]
          ],
          "out": "array([[1, 3],\n       [2, 4]])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "transpose",
              "numpy.ndarray.transpose",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ]
          ],
          "out": "array([[1, 3],\n       [2, 4]])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "transpose",
              "numpy.ndarray.transpose",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ]
          ],
          "out": "array([[1, 3],\n       [2, 4]])"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/dask/array/core.py",
  "item_line": 1968,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Signature",
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Examples"
  ],
  "references": null,
  "refs": [
    "ndarray.T",
    "ndarray.reshape",
    "numpy",
    "numpy.array",
    "numpy.ndarray",
    "numpy.ndarray.transpose",
    "transpose"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Equivalent function"
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "transpose",
        "ref": "dask.array.core.Array.transpose"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Array property returning the array transposed."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "ndarray.T",
        "ref": null
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Give a new shape to an array without changing its data."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "ndarray.reshape",
        "ref": null
      },
      "type": null
    }
  ],
  "signature": {
    "value": "a.transpose(*axes)"
  }
}