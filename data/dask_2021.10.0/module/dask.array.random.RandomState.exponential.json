{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "This docstring was copied from numpy.random.mtrand.RandomState.exponential."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Some inconsistencies with the Dask version may exist."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Its probability density function is"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "f ( x; \\frac { 1} { \\beta}) = \\frac { 1} { \\beta} \\exp ( - \\frac { x} { \\beta}), "
          },
          "type": "BlockMath"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "for "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "x > 0"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and 0 elsewhere. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "\\beta"
                  ]
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " is the scale parameter, which is the inverse of the rate parameter "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "\\lambda = 1/\\beta"
                  ]
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": ". The rate parameter is an alternative, widely used parameterization of the exponential distribution ."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The exponential distribution is a continuous analogue of the geometric distribution.  It describes many common situations, such as the size of raindrops measured over many rainstorms , or the time between page requests to Wikipedia ."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "inline": [
                  {
                    "data": {
                      "value": "New code should use the ``exponential`` method of a ``default_rng ( )`` instance instead; please see the : ref : `random - quick - start`. "
                    },
                    "type": "Words"
                  }
                ],
                "inner": []
              }
            ],
            "kind": "note",
            "title": ""
          },
          "type": "Admonition"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The scale parameter, "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "\\beta = 1/\\lambda"
                        ]
                      },
                      "type": "Math"
                    },
                    {
                      "data": {
                        "value": ". Must be non-negative."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "scale",
            "type_": "float or array_like of floats"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Output shape.  If the given shape is, e.g., "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "(m, n, k)"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", then "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "m * n * k"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " samples are drawn.  If size is "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "None"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " (default), a single value is returned if "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "scale"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " is a scalar.  Otherwise, "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "np.array(scale).size"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " samples are drawn."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "size",
            "type_": "int or tuple of ints, optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Drawn samples from the parameterized exponential distribution."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "out",
            "type_": "ndarray or scalar"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Draw samples from an exponential distribution."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "dask.array.random.exponential",
    "dask.array.linalg.RandomState.exponential"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/dask/array/random.py",
  "item_line": 281,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "References"
  ],
  "references": null,
  "refs": [
    "Generator.exponential"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "which should be used for new code."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "Generator.exponential",
        "ref": null
      },
      "type": null
    }
  ],
  "signature": {
    "value": "exponential(self, scale=1.0, size=None, chunks='auto', **kwargs)"
  }
}