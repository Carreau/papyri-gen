{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Any number of objects. If it is a dask object, it's computed and the result is returned. By default, python builtin collections are also traversed to look for dask objects (for more information see the "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "traverse"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " keyword). Non-dask arguments are passed through unchanged."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "args",
            "type_": "object"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "By default dask traverses builtin python collections looking for dask objects passed to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "compute"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ". For large collections this can be expensive. If none of the arguments contain any dask objects, set "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "traverse=False"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " to avoid doing this traversal."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "traverse",
            "type_": "bool, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Which scheduler to use like \"threads\", \"synchronous\" or \"processes\". If not provided, the default is to check the global settings first, and then fall back to the collection defaults."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "scheduler",
            "type_": "string, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If True [default], the optimizations for each collection are applied before computation. Otherwise the graph is run as is. This can be useful for debugging."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "optimize_graph",
            "type_": "bool, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Extra keywords to forward to the scheduler function."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "kwargs",
            "type_": ""
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Compute several dask collections at once."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "dask.compute"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "dask",
              "dask",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "as",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "d",
              "dask",
              "nn"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "dask",
              "dask",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "array",
              "dask.array",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "as",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "da",
              "dask.array",
              "nn"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "a",
              "dask.array.core.Array",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "da",
              "dask.array",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "arange",
              "dask.array.creation.arange",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "10",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "chunks",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "sum",
              "dask.array.core.Array.sum",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "b",
              "dask.array.core.Array",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "da",
              "dask.array",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "arange",
              "dask.array.creation.arange",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "10",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "chunks",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "mean",
              "dask.array.core.Array.mean",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "d",
              "dask",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "compute",
              "dask.base.compute",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              "dask.array.core.Array",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "b",
              "dask.array.core.Array",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "(45, 4.5)"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "By default, dask objects inside python collections will also be computed:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "d",
              "dask",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "compute",
              "dask.base.compute",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "{",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "a",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "a",
              "dask.array.core.Array",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "b",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "b",
              "dask.array.core.Array",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "c",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "}",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "({'a': 45, 'b': 4.5, 'c': 1},)"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/dask/base.py",
  "item_line": 511,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Examples"
  ],
  "references": null,
  "refs": [
    "dask",
    "dask.array",
    "dask.array.core.Array",
    "dask.array.core.Array.mean",
    "dask.array.core.Array.sum",
    "dask.array.creation.arange",
    "dask.base.compute"
  ],
  "see_also": [],
  "signature": {
    "value": "compute(*args, **kwargs)"
  }
}