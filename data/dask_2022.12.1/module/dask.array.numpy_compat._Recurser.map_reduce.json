{
  "aliases": [
    "dask.array.core._Recurser.map_reduce"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "For instance, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "map_reduce([[1, 2], 3, 4])"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "f_reduce([\n  f_reduce([\n    f_map(1),\n    f_map(2)\n  ]),\n  f_map(3),\n  f_map(4)\n]])"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "State can be passed down through the calls with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "f_kwargs"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": ", to iterables of mapped items. When kwargs are passed, as in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "map_reduce([[1, 2], 3, 4], **kw)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", this becomes:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "kw1 = f_kwargs(**kw)\nkw2 = f_kwargs(**kw1)\nf_reduce([\n  f_reduce([\n    f_map(1), **kw2)\n    f_map(2,  **kw2)\n  ],      **kw1),\n  f_map(3, **kw1),\n  f_map(4, **kw1)\n]],     **kw)"
          },
          "type": "BlockVerbatim"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Iterate over the nested list, applying: * "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "f_map"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " (T -> U) to items * "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "f_reduce"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " (Iterable[U] -> U) to mapped items"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/dask/array/numpy_compat.py",
  "item_line": 63,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "map_reduce(self, x, f_map=<function _Recurser.<lambda> at 0x0000000>, f_reduce=<function _Recurser.<lambda> at 0x0000000>, f_kwargs=<function _Recurser.<lambda> at 0x0000000>, **kwargs)"
  }
}