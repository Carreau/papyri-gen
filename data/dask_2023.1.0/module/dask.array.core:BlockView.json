{
  "aliases": [
    "dask.array.core.BlockView"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "inlineCode",
              "value": "BlockView"
            },
            {
              "type": "text",
              "value": " provides an array-like interface to the blocks of a dask array.  Numpy-style indexing of a  "
            },
            {
              "type": "inlineCode",
              "value": "BlockView"
            },
            {
              "type": "text",
              "value": " returns a selection of blocks as a new dask array."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "You can index "
            },
            {
              "type": "inlineCode",
              "value": "BlockView"
            },
            {
              "type": "text",
              "value": " like a numpy array of shape equal to the number of blocks in each dimension, (available as array.blocks.size).  The dimensionality of the output array matches the dimension of this array, even if integer indices are passed. Slicing with "
            },
            {
              "type": "inlineCode",
              "value": "np.newaxis"
            },
            {
              "type": "text",
              "value": " or multiple lists is not supported."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "",
              "type": "Param",
              "type_": "An instance of ``da.array.Blockview``"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "An array-like interface to the blocks of an array."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import dask.array as da\nfrom dask.array.core import BlockView\nx = da.arange(8, chunks=2)\nbv = BlockView(x)\nbv.shape # aliases x.numblocks"
      },
      {
        "type": "code",
        "value": "bv.size"
      },
      {
        "type": "code",
        "value": "bv[0].compute()"
      },
      {
        "type": "code",
        "value": "bv[:3].compute()"
      },
      {
        "type": "code",
        "value": "bv[::2].compute()"
      },
      {
        "type": "code",
        "value": "bv[[-1, 0]].compute()"
      },
      {
        "type": "code",
        "value": "bv.ravel()  # doctest: +NORMALIZE_WHITESPACE"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dask/array/core.py",
  "item_line": 5711,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Examples",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}