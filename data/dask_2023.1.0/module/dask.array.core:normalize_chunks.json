{
  "aliases": [
    "dask.array.core.normalize_chunks"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This takes in a variety of input types and information and produces a full tuple-of-tuples result for chunks, suitable to be passed to Array or rechunk or any other operation that creates a Dask array."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The chunks to be normalized.  See examples below for more details"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "chunks: tuple, int, dict, or string",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The shape of the array"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "shape: Tuple[int]",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The maximum block size to target in bytes, if freedom is given to choose"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "limit: int (optional)",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [],
              "param": "dtype: np.dtype",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Chunks from a previous array that we should use for inspiration when rechunking auto dimensions.  If not provided but auto-chunking exists then auto-dimensions will prefer square-like chunk shapes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "previous_chunks: Tuple[Tuple[int]] optional",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Normalize chunks to tuple of tuples"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Specify uniform chunk sizes"
      },
      {
        "type": "code",
        "value": "from dask.array.core import normalize_chunks\nnormalize_chunks((2, 2), shape=(5, 6))"
      },
      {
        "type": "text",
        "value": "Also passes through fully explicit tuple-of-tuples"
      },
      {
        "type": "code",
        "value": "normalize_chunks(((2, 2, 1), (2, 2, 2)), shape=(5, 6))"
      },
      {
        "type": "text",
        "value": "Cleans up lists to tuples"
      },
      {
        "type": "code",
        "value": "normalize_chunks([[2, 2], [3, 3]])"
      },
      {
        "type": "text",
        "value": "Expands integer inputs 10 -> (10, 10)"
      },
      {
        "type": "code",
        "value": "normalize_chunks(10, shape=(30, 5))"
      },
      {
        "type": "text",
        "value": "Expands dict inputs"
      },
      {
        "type": "code",
        "value": "normalize_chunks({0: 2, 1: 3}, shape=(6, 6))"
      },
      {
        "type": "text",
        "value": "The values -1 and None get mapped to full size"
      },
      {
        "type": "code",
        "value": "normalize_chunks((5, -1), shape=(10, 10))"
      },
      {
        "type": "text",
        "value": "Use the value \"auto\" to automatically determine chunk sizes along certain\ndimensions.  This uses the ``limit=`` and ``dtype=`` keywords to\ndetermine how large to make the chunks.  The term \"auto\" can be used\nanywhere an integer can be used.  See array chunking documentation for more\ninformation."
      },
      {
        "type": "code",
        "value": "normalize_chunks((\"auto\",), shape=(20,), limit=5, dtype='uint8')"
      },
      {
        "type": "text",
        "value": "You can also use byte sizes (see :func:`dask.utils.parse_bytes`) in place of\n\"auto\" to ask for a particular size"
      },
      {
        "type": "code",
        "value": "normalize_chunks(\"1kiB\", shape=(2000,), dtype='float32')"
      },
      {
        "type": "text",
        "value": "Respects null dimensions"
      },
      {
        "type": "code",
        "value": "normalize_chunks((), shape=(0, 0))"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dask/array/core.py",
  "item_line": 2950,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(chunks, shape=None, limit=None, dtype=None, previous_chunks=None)"
  },
  "type": "DocBlob"
}