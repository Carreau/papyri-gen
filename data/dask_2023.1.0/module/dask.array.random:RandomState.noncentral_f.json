{
  "aliases": [
    "dask.array.linalg.RandomState.noncentral_f"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This docstring was copied from numpy.random.mtrand.RandomState.noncentral_f."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Some inconsistencies with the Dask version may exist."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Samples are drawn from an F distribution with specified parameters, "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "dfnum",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "dfnum"
            },
            {
              "type": "text",
              "value": " (degrees of freedom in numerator) and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "dfden",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "dfden"
            },
            {
              "type": "text",
              "value": " (degrees of freedom in denominator), where both parameters > 1. "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "nonc",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "nonc"
            },
            {
              "type": "text",
              "value": " is the non-centrality parameter."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "note "
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "New code should use the "
                },
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "~numpy.random.Generator.noncentral_f"
                },
                {
                  "type": "text",
                  "value": " method of a "
                },
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "~numpy.random.Generator"
                },
                {
                  "type": "text",
                  "value": " instance instead; please see the "
                },
                {
                  "domain": null,
                  "role": "ref",
                  "type": "Directive",
                  "value": "random-quick-start"
                },
                {
                  "type": "text",
                  "value": "."
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "When calculating the power of an experiment (power = probability of rejecting the null hypothesis when a specific alternative is true) the non-central F statistic becomes important.  When the null hypothesis is true, the F statistic follows a central F distribution. When the null hypothesis is not true, then it follows a non-central F statistic."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Numerator degrees of freedom, must be > 0."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionchanged 1.14.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "Earlier NumPy versions required dfnum > 1."
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "dfnum",
              "type": "Param",
              "type_": "float or array_like of floats"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Denominator degrees of freedom, must be > 0."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dfden",
              "type": "Param",
              "type_": "float or array_like of floats"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Non-centrality parameter, the sum of the squares of the numerator means, must be >= 0."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "nonc",
              "type": "Param",
              "type_": "float or array_like of floats"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Output shape.  If the given shape is, e.g., "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(m, n, k)"
                    },
                    {
                      "type": "text",
                      "value": ", then "
                    },
                    {
                      "type": "inlineCode",
                      "value": "m * n * k"
                    },
                    {
                      "type": "text",
                      "value": " samples are drawn.  If size is "
                    },
                    {
                      "type": "inlineCode",
                      "value": "None"
                    },
                    {
                      "type": "text",
                      "value": " (default), a single value is returned if "
                    },
                    {
                      "type": "inlineCode",
                      "value": "dfnum"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "inlineCode",
                      "value": "dfden"
                    },
                    {
                      "type": "text",
                      "value": ", and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "nonc"
                    },
                    {
                      "type": "text",
                      "value": " are all scalars.  Otherwise, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "np.broadcast(dfnum, dfden, nonc).size"
                    },
                    {
                      "type": "text",
                      "value": " samples are drawn."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "size",
              "type": "Param",
              "type_": "int or tuple of ints, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Drawn samples from the parameterized noncentral Fisher distribution."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "ndarray or scalar"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Draw samples from the noncentral F distribution."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "In a study, testing for a specific alternative to the null hypothesis\nrequires use of the Noncentral F distribution. We need to calculate the\narea in the tail of the distribution that exceeds the value of the F\ndistribution for the null hypothesis.  We'll plot the two probability\ndistributions for comparison."
      },
      {
        "type": "code",
        "value": "dfnum = 3 # between group deg of freedom  # doctest: +SKIP\ndfden = 20 # within groups degrees of freedom  # doctest: +SKIP\nnonc = 3.0  # doctest: +SKIP\nnc_vals = np.random.noncentral_f(dfnum, dfden, nonc, 1000000)  # doctest: +SKIP\nNF = np.histogram(nc_vals, bins=50, density=True)  # doctest: +SKIP\nc_vals = np.random.f(dfnum, dfden, 1000000)  # doctest: +SKIP\nF = np.histogram(c_vals, bins=50, density=True)  # doctest: +SKIP\nimport matplotlib.pyplot as plt  # doctest: +SKIP\nplt.plot(F[1][1:], F[0])  # doctest: +SKIP\nplt.plot(NF[1][1:], NF[0])  # doctest: +SKIP\nplt.show()  # doctest: +SKIP"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dask/array/random.py",
  "item_line": 336,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "which should be used for new code."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "random.Generator.noncentral_f",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "random.Generator.noncentral_f"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self, dfnum, dfden, nonc, size=None, chunks='auto', **kwargs)"
  },
  "type": "DocBlob"
}