{
  "aliases": [
    "dask.array.linalg.RandomState.standard_t"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This docstring was copied from numpy.random.mtrand.RandomState.standard_t."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Some inconsistencies with the Dask version may exist."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "A special case of the hyperbolic distribution.  As "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "df",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "df"
            },
            {
              "type": "text",
              "value": " gets large, the result resembles that of the standard normal distribution ("
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "dask",
                "path": "dask.array.random:RandomState.standard_normal",
                "type": "RefInfo",
                "version": "2023.1.0"
              },
              "type": "Link",
              "value": "standard_normal"
            },
            {
              "type": "text",
              "value": ")."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "note "
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "New code should use the "
                },
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "~numpy.random.Generator.standard_t"
                },
                {
                  "type": "text",
                  "value": " method of a "
                },
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "~numpy.random.Generator"
                },
                {
                  "type": "text",
                  "value": " instance instead; please see the "
                },
                {
                  "domain": null,
                  "role": "ref",
                  "type": "Directive",
                  "value": "random-quick-start"
                },
                {
                  "type": "text",
                  "value": "."
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The probability density function for the t distribution is"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "P(x, df) = \\frac{\\Gamma(\\frac{df+1}{2})}{\\sqrt{\\pi df}\\Gamma(\\frac{df}{2})}\\Bigl( 1+\\frac{x^2}{df} \\Bigr)^{-(df+1)/2}"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The t test is based on an assumption that the data come from a Normal distribution. The t test provides a way to test whether the sample mean (that is the mean calculated from the data) is a good estimate of the true mean."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The derivation of the t-distribution was first published in 1908 by William Gosset while working for the Guinness Brewery in Dublin. Due to proprietary issues, he had to publish under a pseudonym, and so he used the name Student."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Degrees of freedom, must be > 0."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "df",
              "type": "Param",
              "type_": "float or array_like of floats"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Output shape.  If the given shape is, e.g., "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(m, n, k)"
                    },
                    {
                      "type": "text",
                      "value": ", then "
                    },
                    {
                      "type": "inlineCode",
                      "value": "m * n * k"
                    },
                    {
                      "type": "text",
                      "value": " samples are drawn.  If size is "
                    },
                    {
                      "type": "inlineCode",
                      "value": "None"
                    },
                    {
                      "type": "text",
                      "value": " (default), a single value is returned if "
                    },
                    {
                      "type": "inlineCode",
                      "value": "df"
                    },
                    {
                      "type": "text",
                      "value": " is a scalar.  Otherwise, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "np.array(df).size"
                    },
                    {
                      "type": "text",
                      "value": " samples are drawn."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "size",
              "type": "Param",
              "type_": "int or tuple of ints, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Drawn samples from the parameterized standard Student's t distribution."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "ndarray or scalar"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Draw samples from a standard Student's t distribution with "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "df",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "df"
            },
            {
              "type": "text",
              "value": " degrees of freedom."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "From Dalgaard page 83 [1]_, suppose the daily energy intake for 11\nwomen in kilojoules (kJ) is:"
      },
      {
        "type": "code",
        "value": "intake = np.array([5260., 5470, 5640, 6180, 6390, 6515, 6805, 7515, \\  # doctest: +SKIP\n                   7515, 8230, 8770])"
      },
      {
        "type": "text",
        "value": "Does their energy intake deviate systematically from the recommended\nvalue of 7725 kJ? Our null hypothesis will be the absence of deviation,\nand the alternate hypothesis will be the presence of an effect that could be\neither positive or negative, hence making our test 2-tailed. "
      },
      {
        "type": "text",
        "value": "Because we are estimating the mean and we have N=11 values in our sample,\nwe have N-1=10 degrees of freedom. We set our significance level to 95% and \ncompute the t statistic using the empirical mean and empirical standard \ndeviation of our intake. We use a ddof of 1 to base the computation of our \nempirical standard deviation on an unbiased estimate of the variance (note:\nthe final estimate is not unbiased due to the concave nature of the square \nroot)."
      },
      {
        "type": "code",
        "value": "np.mean(intake)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "intake.std(ddof=1)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "t = (np.mean(intake)-7725)/(intake.std(ddof=1)/np.sqrt(len(intake)))  # doctest: +SKIP\nt  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "We draw 1000000 samples from Student's t distribution with the adequate\ndegrees of freedom."
      },
      {
        "type": "code",
        "value": "import matplotlib.pyplot as plt  # doctest: +SKIP\ns = np.random.standard_t(10, size=1000000)  # doctest: +SKIP\nh = plt.hist(s, bins=100, density=True)  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "Does our t statistic land in one of the two critical regions found at \nboth tails of the distribution?"
      },
      {
        "type": "code",
        "value": "np.sum(np.abs(t) < np.abs(s)) / float(len(s))  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "The probability value for this 2-tailed test is about 1.83%, which is \nlower than the 5% pre-determined significance threshold. "
      },
      {
        "type": "text",
        "value": "Therefore, the probability of observing values as extreme as our intake\nconditionally on the null hypothesis being true is too low, and we reject \nthe null hypothesis of no deviation. "
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dask/array/random.py",
  "item_line": 407,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "which should be used for new code."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "random.Generator.standard_t",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "random.Generator.standard_t"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self, df, size=None, chunks='auto', **kwargs)"
  },
  "type": "DocBlob"
}