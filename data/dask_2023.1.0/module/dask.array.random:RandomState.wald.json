{
  "aliases": [
    "dask.array.linalg.RandomState.wald"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This docstring was copied from numpy.random.mtrand.RandomState.wald."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Some inconsistencies with the Dask version may exist."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "As the scale approaches infinity, the distribution becomes more like a Gaussian. Some references claim that the Wald is an inverse Gaussian with mean equal to 1, but this is by no means universal."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The inverse Gaussian distribution was first studied in relationship to Brownian motion. In 1956 M.C.K. Tweedie used the name inverse Gaussian because there is an inverse relationship between the time to cover a unit distance and distance covered in unit time."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "note "
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "New code should use the "
                },
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "~numpy.random.Generator.wald"
                },
                {
                  "type": "text",
                  "value": " method of a "
                },
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "~numpy.random.Generator"
                },
                {
                  "type": "text",
                  "value": " instance instead; please see the "
                },
                {
                  "domain": null,
                  "role": "ref",
                  "type": "Directive",
                  "value": "random-quick-start"
                },
                {
                  "type": "text",
                  "value": "."
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The probability density function for the Wald distribution is"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "P(x;mean,scale) = \\sqrt{\\frac{scale}{2\\pi x^3}}e^\\frac{-scale(x-mean)^2}{2\\cdotp mean^2x}"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "As noted above the inverse Gaussian distribution first arise from attempts to model Brownian motion. It is also a competitor to the Weibull for use in reliability modeling and modeling stock returns and interest rate processes."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Distribution mean, must be > 0."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "mean",
              "type": "Param",
              "type_": "float or array_like of floats"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Scale parameter, must be > 0."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "scale",
              "type": "Param",
              "type_": "float or array_like of floats"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Output shape.  If the given shape is, e.g., "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(m, n, k)"
                    },
                    {
                      "type": "text",
                      "value": ", then "
                    },
                    {
                      "type": "inlineCode",
                      "value": "m * n * k"
                    },
                    {
                      "type": "text",
                      "value": " samples are drawn.  If size is "
                    },
                    {
                      "type": "inlineCode",
                      "value": "None"
                    },
                    {
                      "type": "text",
                      "value": " (default), a single value is returned if "
                    },
                    {
                      "type": "inlineCode",
                      "value": "mean"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "scale"
                    },
                    {
                      "type": "text",
                      "value": " are both scalars. Otherwise, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "np.broadcast(mean, scale).size"
                    },
                    {
                      "type": "text",
                      "value": " samples are drawn."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "size",
              "type": "Param",
              "type_": "int or tuple of ints, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Drawn samples from the parameterized Wald distribution."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "ndarray or scalar"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Draw samples from a Wald, or inverse Gaussian, distribution."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Draw values from the distribution and plot the histogram:"
      },
      {
        "type": "code",
        "value": "import matplotlib.pyplot as plt  # doctest: +SKIP\nh = plt.hist(np.random.wald(3, 2, 100000), bins=200, density=True)  # doctest: +SKIP\nplt.show()  # doctest: +SKIP"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dask/array/random.py",
  "item_line": 429,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "which should be used for new code."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "random.Generator.wald",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "random.Generator.wald"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self, mean, scale, size=None, chunks='auto', **kwargs)"
  },
  "type": "DocBlob"
}