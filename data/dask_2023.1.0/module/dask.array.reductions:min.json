{
  "aliases": [
    "dask.array.min"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This docstring was copied from numpy.min."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Some inconsistencies with the Dask version may exist."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "NaN values are propagated, that is if at least one item is NaN, the corresponding min value will be NaN as well. To ignore NaN values (MATLAB behavior), please use nanmin."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Don't use "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "amin",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "amin"
            },
            {
              "type": "text",
              "value": " for element-wise comparison of 2 arrays; when "
            },
            {
              "type": "inlineCode",
              "value": "a.shape[0]"
            },
            {
              "type": "text",
              "value": " is 2, "
            },
            {
              "type": "inlineCode",
              "value": "minimum(a[0], a[1])"
            },
            {
              "type": "text",
              "value": " is faster than "
            },
            {
              "type": "inlineCode",
              "value": "amin(a, axis=0)"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Input data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "a",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Axis or axes along which to operate.  By default, flattened input is used."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.7.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If this is a tuple of ints, the minimum is selected over multiple axes, instead of a single axis or all the axes as before."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axis",
              "type": "Param",
              "type_": "None or int or tuple of ints, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Alternative output array in which to place the result.  Must be of the same shape and buffer length as the expected output. See "
                    },
                    {
                      "type": "inlineCode",
                      "value": "ufuncs-output-type"
                    },
                    {
                      "type": "text",
                      "value": " for more details."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "ndarray, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If this is set to True, the axes which are reduced are left in the result as dimensions with size one. With this option, the result will broadcast correctly against the input array."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If the default value is passed, then "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "keepdims",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "keepdims"
                    },
                    {
                      "type": "text",
                      "value": " will not be passed through to the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "amin",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "amin"
                    },
                    {
                      "type": "text",
                      "value": " method of sub-classes of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "dask",
                        "path": "dask.array.backends:_numel_ndarray",
                        "type": "RefInfo",
                        "version": "2023.1.0"
                      },
                      "type": "Link",
                      "value": "ndarray"
                    },
                    {
                      "type": "text",
                      "value": ", however any non-default value will be.  If the sub-class' method does not implement "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "keepdims",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "keepdims"
                    },
                    {
                      "type": "text",
                      "value": " any exceptions will be raised."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "keepdims",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The maximum value of an output element. Must be present to allow computation on empty slice. See "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "~numpy.ufunc.reduce"
                    },
                    {
                      "type": "text",
                      "value": " for details."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.15.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "initial",
              "type": "Param",
              "type_": "scalar, optional  (Not supported in Dask)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Elements to compare for the minimum. See "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "~numpy.ufunc.reduce"
                    },
                    {
                      "type": "text",
                      "value": " for details."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.17.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "where",
              "type": "Param",
              "type_": "array_like of bool, optional  (Not supported in Dask)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Minimum of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": ". If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "axis",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "axis"
                    },
                    {
                      "type": "text",
                      "value": " is None, the result is a scalar value. If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "axis",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "axis"
                    },
                    {
                      "type": "text",
                      "value": " is an int, the result is an array of dimension "
                    },
                    {
                      "type": "inlineCode",
                      "value": "a.ndim - 1"
                    },
                    {
                      "type": "text",
                      "value": ".  If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "axis",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "axis"
                    },
                    {
                      "type": "text",
                      "value": " is a tuple, the result is an array of dimension "
                    },
                    {
                      "type": "inlineCode",
                      "value": "a.ndim - len(axis)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "amin",
              "type": "Param",
              "type_": "ndarray or scalar"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return the minimum of an array or minimum along an axis."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "a = np.arange(4).reshape((2,2))  # doctest: +SKIP\na  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "np.amin(a)           # Minimum of the flattened array  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "np.amin(a, axis=0)   # Minima along the first axis  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "np.amin(a, axis=1)   # Minima along the second axis  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "np.amin(a, where=[False, True], initial=10, axis=0)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "b = np.arange(5, dtype=float)  # doctest: +SKIP\nb[2] = np.NaN  # doctest: +SKIP\nnp.amin(b)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "np.amin(b, where=~np.isnan(b), initial=10)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "np.nanmin(b)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "np.amin([[-50], [10]], axis=-1, initial=0)  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "Notice that the initial value is used as one of the elements for which the\nminimum is determined, unlike for the default argument Python's max\nfunction, which is only used for empty iterables."
      },
      {
        "type": "text",
        "value": "Notice that this isn't the same as Python's ``default`` argument."
      },
      {
        "type": "code",
        "value": "np.amin([6], initial=5)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "min([6], default=5)  # doctest: +SKIP"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dask/array/reductions.py",
  "item_line": 425,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "The maximum value of an array along a given axis, propagating any NaNs."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "amax",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "amax"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "The minimum value of an array along a given axis, ignoring any NaNs."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "nanmin",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "nanmin"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Element-wise minimum of two arrays, propagating any NaNs."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "dask",
          "path": "dask.array.ufunc:minimum",
          "type": "RefInfo",
          "version": "2023.1.0"
        },
        "type": "Link",
        "value": "minimum"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Element-wise minimum of two arrays, ignoring any NaNs."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "dask",
          "path": "dask.array.ufunc:fmin",
          "type": "RefInfo",
          "version": "2023.1.0"
        },
        "type": "Link",
        "value": "fmin"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return the indices of the minimum values."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "dask",
          "path": "dask.array.core:Array.argmin",
          "type": "RefInfo",
          "version": "2023.1.0"
        },
        "type": "Link",
        "value": "argmin"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "nanmax",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "nanmax"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "dask",
          "path": "dask.array.ufunc:maximum",
          "type": "RefInfo",
          "version": "2023.1.0"
        },
        "type": "Link",
        "value": "maximum"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "dask",
          "path": "dask.array.ufunc:fmax",
          "type": "RefInfo",
          "version": "2023.1.0"
        },
        "type": "Link",
        "value": "fmax"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(a, axis=None, keepdims=False, split_every=None, out=None)"
  },
  "type": "DocBlob"
}