{
  "aliases": [
    "dask.array.prod"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This docstring was copied from numpy.prod."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Some inconsistencies with the Dask version may exist."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Arithmetic is modular when using integer types, and no error is raised on overflow.  That means that, on a 32-bit platform:"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": ">>> x = np.array([536870910, 536870910, 536870910, 536870910])  # doctest: +SKIP\n>>> np.prod(x)  # doctest: +SKIP\n16 # may vary"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The product of an empty array is the neutral element 1:"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": ">>> np.prod([])  # doctest: +SKIP\n1.0"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Input data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "a",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Axis or axes along which a product is performed.  The default, axis=None, will calculate the product of all the elements in the input array. If axis is negative it counts from the last to the first axis."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.7.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If axis is a tuple of ints, a product is performed on all of the axes specified in the tuple instead of a single axis or all the axes as before."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axis",
              "type": "Param",
              "type_": "None or int or tuple of ints, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The type of the returned array, as well as of the accumulator in which the elements are multiplied.  The dtype of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": " is used by default unless "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": " has an integer dtype of less precision than the default platform integer.  In that case, if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": " is signed then the platform integer is used while if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": " is unsigned then an unsigned integer of the same precision as the platform integer is used."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dtype",
              "type": "Param",
              "type_": "dtype, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Alternative output array in which to place the result. It must have the same shape as the expected output, but the type of the output values will be cast if necessary."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "ndarray, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If this is set to True, the axes which are reduced are left in the result as dimensions with size one. With this option, the result will broadcast correctly against the input array."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If the default value is passed, then "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "keepdims",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "keepdims"
                    },
                    {
                      "type": "text",
                      "value": " will not be passed through to the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "dask",
                        "path": "dask.array.core:Array.prod",
                        "type": "RefInfo",
                        "version": "2023.1.0"
                      },
                      "type": "Link",
                      "value": "prod"
                    },
                    {
                      "type": "text",
                      "value": " method of sub-classes of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "dask",
                        "path": "dask.array.backends:_numel_ndarray",
                        "type": "RefInfo",
                        "version": "2023.1.0"
                      },
                      "type": "Link",
                      "value": "ndarray"
                    },
                    {
                      "type": "text",
                      "value": ", however any non-default value will be.  If the sub-class' method does not implement "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "keepdims",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "keepdims"
                    },
                    {
                      "type": "text",
                      "value": " any exceptions will be raised."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "keepdims",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The starting value for this product. See "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "~numpy.ufunc.reduce"
                    },
                    {
                      "type": "text",
                      "value": " for details."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.15.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "initial",
              "type": "Param",
              "type_": "scalar, optional  (Not supported in Dask)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Elements to include in the product. See "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "~numpy.ufunc.reduce"
                    },
                    {
                      "type": "text",
                      "value": " for details."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.17.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "where",
              "type": "Param",
              "type_": "array_like of bool, optional  (Not supported in Dask)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An array shaped as "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": " but with the specified axis removed. Returns a reference to "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "out",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "out"
                    },
                    {
                      "type": "text",
                      "value": " if specified."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "product_along_axis",
              "type": "Param",
              "type_": "ndarray, see `dtype` parameter above."
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return the product of array elements over a given axis."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "By default, calculate the product of all elements:"
      },
      {
        "type": "code",
        "value": "np.prod([1.,2.])  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "Even when the input array is two-dimensional:"
      },
      {
        "type": "code",
        "value": "a = np.array([[1., 2.], [3., 4.]])  # doctest: +SKIP\nnp.prod(a)  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "But we can also specify the axis over which to multiply:"
      },
      {
        "type": "code",
        "value": "np.prod(a, axis=1)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "np.prod(a, axis=0)  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "Or select specific elements to include:"
      },
      {
        "type": "code",
        "value": "np.prod([1., np.nan, 3.], where=[True, False, True])  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "If the type of `x` is unsigned, then the output type is\nthe unsigned platform integer:"
      },
      {
        "type": "code",
        "value": "x = np.array([1, 2, 3], dtype=np.uint8)  # doctest: +SKIP\nnp.prod(x).dtype == np.uint  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "If `x` is of a signed integer type, then the output type\nis the default platform integer:"
      },
      {
        "type": "code",
        "value": "x = np.array([1, 2, 3], dtype=np.int8)  # doctest: +SKIP\nnp.prod(x).dtype == int  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "You can also start the product with a value other than one:"
      },
      {
        "type": "code",
        "value": "np.prod([1, 2], initial=5)  # doctest: +SKIP"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dask/array/reductions.py",
  "item_line": 407,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "equivalent method"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "ndarray.prod",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "ndarray.prod"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "ref"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "ufuncs-output-type",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "ufuncs-output-type"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(a, axis=None, dtype=None, keepdims=False, split_every=None, out=None)"
  },
  "type": "DocBlob"
}