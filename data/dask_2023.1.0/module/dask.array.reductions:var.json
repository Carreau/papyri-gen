{
  "aliases": [
    "dask.array.var"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This docstring was copied from numpy.var."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Some inconsistencies with the Dask version may exist."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Returns the variance of the array elements, a measure of the spread of a distribution.  The variance is computed for the flattened array by default, otherwise over the specified axis."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The variance is the average of the squared deviations from the mean, i.e.,  "
            },
            {
              "type": "inlineCode",
              "value": "var = mean(x)"
            },
            {
              "type": "text",
              "value": ", where "
            },
            {
              "type": "inlineCode",
              "value": "x = abs(a - a.mean())**2"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The mean is typically calculated as "
            },
            {
              "type": "inlineCode",
              "value": "x.sum() / N"
            },
            {
              "type": "text",
              "value": ", where "
            },
            {
              "type": "inlineCode",
              "value": "N = len(x)"
            },
            {
              "type": "text",
              "value": ". If, however, "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "ddof",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "ddof"
            },
            {
              "type": "text",
              "value": " is specified, the divisor "
            },
            {
              "type": "inlineCode",
              "value": "N - ddof"
            },
            {
              "type": "text",
              "value": " is used instead.  In standard statistical practice, "
            },
            {
              "type": "inlineCode",
              "value": "ddof=1"
            },
            {
              "type": "text",
              "value": " provides an unbiased estimator of the variance of a hypothetical infinite population. "
            },
            {
              "type": "inlineCode",
              "value": "ddof=0"
            },
            {
              "type": "text",
              "value": " provides a maximum likelihood estimate of the variance for normally distributed variables."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Note that for complex numbers, the absolute value is taken before squaring, so that the result is always real and nonnegative."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For floating-point input, the variance is computed using the same precision the input has.  Depending on the input data, this can cause the results to be inaccurate, especially for "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "float32"
            },
            {
              "type": "text",
              "value": " (see example below).  Specifying a higher-accuracy accumulator using the "
            },
            {
              "type": "inlineCode",
              "value": "dtype"
            },
            {
              "type": "text",
              "value": " keyword can alleviate this issue."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Array containing numbers whose variance is desired.  If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": " is not an array, a conversion is attempted."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "a",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Axis or axes along which the variance is computed.  The default is to compute the variance of the flattened array."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.7.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If this is a tuple of ints, a variance is performed over multiple axes, instead of a single axis or all the axes as before."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axis",
              "type": "Param",
              "type_": "None or int or tuple of ints, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Type to use in computing the variance.  For arrays of integer type the default is "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "float64"
                    },
                    {
                      "type": "text",
                      "value": "; for arrays of float types it is the same as the array type."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dtype",
              "type": "Param",
              "type_": "data-type, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Alternate output array in which to place the result.  It must have the same shape as the expected output, but the type is cast if necessary."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "ndarray, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "\"Delta Degrees of Freedom\": the divisor used in the calculation is "
                    },
                    {
                      "type": "inlineCode",
                      "value": "N - ddof"
                    },
                    {
                      "type": "text",
                      "value": ", where "
                    },
                    {
                      "type": "inlineCode",
                      "value": "N"
                    },
                    {
                      "type": "text",
                      "value": " represents the number of elements. By default "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "ddof",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "ddof"
                    },
                    {
                      "type": "text",
                      "value": " is zero."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "ddof",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If this is set to True, the axes which are reduced are left in the result as dimensions with size one. With this option, the result will broadcast correctly against the input array."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If the default value is passed, then "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "keepdims",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "keepdims"
                    },
                    {
                      "type": "text",
                      "value": " will not be passed through to the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "dask",
                        "path": "dask.array.core:Array.var",
                        "type": "RefInfo",
                        "version": "2023.1.0"
                      },
                      "type": "Link",
                      "value": "var"
                    },
                    {
                      "type": "text",
                      "value": " method of sub-classes of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "dask",
                        "path": "dask.array.backends:_numel_ndarray",
                        "type": "RefInfo",
                        "version": "2023.1.0"
                      },
                      "type": "Link",
                      "value": "ndarray"
                    },
                    {
                      "type": "text",
                      "value": ", however any non-default value will be.  If the sub-class' method does not implement "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "keepdims",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "keepdims"
                    },
                    {
                      "type": "text",
                      "value": " any exceptions will be raised."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "keepdims",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Elements to include in the variance. See "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "~numpy.ufunc.reduce"
                    },
                    {
                      "type": "text",
                      "value": " for details."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.20.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "where",
              "type": "Param",
              "type_": "array_like of bool, optional  (Not supported in Dask)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "out=None"
                    },
                    {
                      "type": "text",
                      "value": ", returns a new array containing the variance; otherwise, a reference to the output array is returned."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "variance",
              "type": "Param",
              "type_": "ndarray, see dtype parameter above"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Compute the variance along the specified axis."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "a = np.array([[1, 2], [3, 4]])  # doctest: +SKIP\nnp.var(a)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "np.var(a, axis=0)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "np.var(a, axis=1)  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "In single precision, var() can be inaccurate:"
      },
      {
        "type": "code",
        "value": "a = np.zeros((2, 512*512), dtype=np.float32)  # doctest: +SKIP\na[0, :] = 1.0  # doctest: +SKIP\na[1, :] = 0.1  # doctest: +SKIP\nnp.var(a)  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "Computing the variance in float64 is more accurate:"
      },
      {
        "type": "code",
        "value": "np.var(a, dtype=np.float64)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "((1-0.55)**2 + (0.1-0.55)**2)/2  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "Specifying a where argument:"
      },
      {
        "type": "code",
        "value": "a = np.array([[14, 8, 11, 10], [7, 9, 10, 11], [10, 15, 5, 10]])  # doctest: +SKIP\nnp.var(a)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "np.var(a, where=[[True], [True], [False]])  # doctest: +SKIP"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dask/array/reductions.py",
  "item_line": 925,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "dask",
          "path": "dask.array.core:Array.std",
          "type": "RefInfo",
          "version": "2023.1.0"
        },
        "type": "Link",
        "value": "std"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "dask",
          "path": "dask.array.core:Array.mean",
          "type": "RefInfo",
          "version": "2023.1.0"
        },
        "type": "Link",
        "value": "mean"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "dask",
          "path": "dask.array.reductions:nanmean",
          "type": "RefInfo",
          "version": "2023.1.0"
        },
        "type": "Link",
        "value": "nanmean"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "dask",
          "path": "dask.array.reductions:nanstd",
          "type": "RefInfo",
          "version": "2023.1.0"
        },
        "type": "Link",
        "value": "nanstd"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "dask",
          "path": "dask.array.reductions:nanvar",
          "type": "RefInfo",
          "version": "2023.1.0"
        },
        "type": "Link",
        "value": "nanvar"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "ref"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "ufuncs-output-type",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "ufuncs-output-type"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(a, axis=None, dtype=None, keepdims=False, ddof=0, split_every=None, out=None)"
  },
  "type": "DocBlob"
}