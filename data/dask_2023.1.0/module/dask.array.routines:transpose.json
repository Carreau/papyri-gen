{
  "aliases": [
    "dask.array.transpose"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This docstring was copied from numpy.transpose."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Some inconsistencies with the Dask version may exist."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For a 1-D array, this returns an unchanged view of the original array, as a transposed vector is simply the same vector. To convert a 1-D array into a 2-D column vector, an additional dimension must be added, e.g., "
            },
            {
              "type": "inlineCode",
              "value": "np.atleast2d(a).T"
            },
            {
              "type": "text",
              "value": " achieves this, as does "
            },
            {
              "type": "inlineCode",
              "value": "a[:, np.newaxis]"
            },
            {
              "type": "text",
              "value": ". For a 2-D array, this is the standard matrix transpose. For an n-D array, if axes are given, their order indicates how the axes are permuted (see Examples). If axes are not provided, then "
            },
            {
              "type": "inlineCode",
              "value": "transpose(a).shape == a.shape[::-1]"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Use "
            },
            {
              "type": "inlineCode",
              "value": "transpose(a, argsort(axes))"
            },
            {
              "type": "text",
              "value": " to invert the transposition of tensors when using the "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "axes",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "axes"
            },
            {
              "type": "text",
              "value": " keyword argument."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Input array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "a",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If specified, it must be a tuple or list which contains a permutation of [0,1,...,N-1] where N is the number of axes of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": ". The "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "i"
                    },
                    {
                      "type": "text",
                      "value": "'th axis of the returned array will correspond to the axis numbered "
                    },
                    {
                      "type": "inlineCode",
                      "value": "axes[i]"
                    },
                    {
                      "type": "text",
                      "value": " of the input. If not specified, defaults to "
                    },
                    {
                      "type": "inlineCode",
                      "value": "range(a.ndim)[::-1]"
                    },
                    {
                      "type": "text",
                      "value": ", which reverses the order of the axes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axes",
              "type": "Param",
              "type_": "tuple or list of ints, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": " with its axes permuted. A view is returned whenever possible."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "p",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns an array with axes transposed."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "a = np.array([[1, 2], [3, 4]])  # doctest: +SKIP\na  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "np.transpose(a)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "a = np.array([1, 2, 3, 4])  # doctest: +SKIP\na  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "np.transpose(a)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "a = np.ones((1, 2, 3))  # doctest: +SKIP\nnp.transpose(a, (1, 0, 2)).shape  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "a = np.ones((2, 3, 4, 5))  # doctest: +SKIP\nnp.transpose(a).shape  # doctest: +SKIP"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dask/array/routines.py",
  "item_line": 179,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Equivalent method."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "ndarray.transpose",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "ndarray.transpose"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Move axes of an array to new positions."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "dask",
          "path": "dask.array.numpy_compat:moveaxis",
          "type": "RefInfo",
          "version": "2023.1.0"
        },
        "type": "Link",
        "value": "moveaxis"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return the indices that would sort an array."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "argsort",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "argsort"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(a, axes=None)"
  },
  "type": "DocBlob"
}