{
  "aliases": [
    "dask.array.where"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Some inconsistencies with the Dask version may exist."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Return elements chosen from "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "x",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "x"
            },
            {
              "type": "text",
              "value": " or "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "y",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "y"
            },
            {
              "type": "text",
              "value": " depending on "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "condition",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "condition"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "note "
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "When only "
                },
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "condition"
                },
                {
                  "type": "text",
                  "value": " is provided, this function is a shorthand for "
                },
                {
                  "type": "inlineCode",
                  "value": "np.asarray(condition).nonzero()"
                },
                {
                  "type": "text",
                  "value": ". Using "
                },
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "nonzero"
                },
                {
                  "type": "text",
                  "value": " directly should be preferred, as it behaves correctly for subclasses. The rest of this documentation covers only the case where all three arguments are provided."
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "If all the arrays are 1-D, "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "where"
            },
            {
              "type": "text",
              "value": " is equivalent to      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "[xv if c else yv\n for c, xv, yv in zip(condition, x, y)]"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Where True, yield "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": ", otherwise yield "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "y",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "y"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "condition",
              "type": "Param",
              "type_": "array_like, bool"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Values from which to choose. "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "y",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "y"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "condition",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "condition"
                    },
                    {
                      "type": "text",
                      "value": " need to be broadcastable to some shape."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x, y",
              "type": "Param",
              "type_": "array_like"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An array with elements from "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": " where "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "condition",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "condition"
                    },
                    {
                      "type": "text",
                      "value": " is True, and elements from "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "y",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "y"
                    },
                    {
                      "type": "text",
                      "value": " elsewhere."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This docstring was copied from numpy.where."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "a = np.arange(10)  # doctest: +SKIP\na  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "np.where(a < 5, a, 10*a)  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "This can be used on multidimensional arrays too:"
      },
      {
        "type": "code",
        "value": "np.where([[True, False], [True, True]],  # doctest: +SKIP\n         [[1, 2], [3, 4]],\n         [[9, 8], [7, 6]])"
      },
      {
        "type": "text",
        "value": "The shapes of x, y, and the condition are broadcast together:"
      },
      {
        "type": "code",
        "value": "x, y = np.ogrid[:3, :4]  # doctest: +SKIP\nnp.where(x < y, x, 10 + y)  # both x and 10+y are broadcast  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "a = np.array([[0, 1, 2],  # doctest: +SKIP\n              [0, 2, 4],\n              [0, 3, 6]])\nnp.where(a < 4, a, -1)  # -1 is broadcast  # doctest: +SKIP"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dask/array/routines.py",
  "item_line": 2094,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Signature",
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "dask",
          "path": "dask.array.core:Array.choose",
          "type": "RefInfo",
          "version": "2023.1.0"
        },
        "type": "Link",
        "value": "choose"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "The function that is called when x and y are omitted"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "dask",
          "path": "dask.array.core:Array.nonzero",
          "type": "RefInfo",
          "version": "2023.1.0"
        },
        "type": "Link",
        "value": "nonzero"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "where(condition, [x, y], /)"
  },
  "type": "DocBlob"
}