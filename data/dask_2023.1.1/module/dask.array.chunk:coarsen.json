{
  "aliases": [
    "dask.array.coarsen",
    "dask.array.chunk.coarsen",
    "dask.array.routines.coarsen"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Function like np.sum, np.mean, etc..."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "reduction: function",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Array to be coarsened"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x: np.ndarray",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Mapping of axis to coarsening factor"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axes: dict",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Coarsen array by applying reduction to fixed size neighborhoods"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "x = np.array([1, 2, 3, 4, 5, 6])\ncoarsen(np.sum, x, {0: 2})"
      },
      {
        "type": "code",
        "value": "coarsen(np.max, x, {0: 3})"
      },
      {
        "type": "text",
        "value": "Provide dictionary of scale per dimension"
      },
      {
        "type": "code",
        "value": "x = np.arange(24).reshape((4, 6))\nx"
      },
      {
        "type": "code",
        "value": "coarsen(np.min, x, {0: 2, 1: 3})"
      },
      {
        "type": "text",
        "value": "You must avoid excess elements explicitly"
      },
      {
        "type": "code",
        "value": "x = np.array([1, 2, 3, 4, 5, 6, 7, 8])\ncoarsen(np.min, x, {0: 3}, trim_excess=True)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dask/array/chunk.py",
  "item_line": 82,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(reduction, x, axes, trim_excess=False, **kwargs)"
  },
  "type": "DocBlob"
}