{
  "aliases": [
    "dask.array.broadcast_arrays"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This docstring was copied from numpy.broadcast_arrays."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Some inconsistencies with the Dask version may exist."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The arrays to broadcast."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "`*args`",
              "type": "Param",
              "type_": "array_likes"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, then sub-classes will be passed-through, otherwise the returned arrays will be forced to be a base-class array (default)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "subok",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "These arrays are views on the original arrays.  They are typically not contiguous.  Furthermore, more than one element of a broadcasted array may refer to a single memory location. If you need to write to the arrays, make copies first. While you can set the "
                    },
                    {
                      "type": "inlineCode",
                      "value": "writable"
                    },
                    {
                      "type": "text",
                      "value": " flag True, writing to a single output value may end up changing more than one location in the output array."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "deprecated 1.17"
                        }
                      ],
                      "type": "admonitionTitle"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "The output is currently marked so that if written to, a deprecation warning will be emitted. A future version will set the "
                        },
                        {
                          "type": "inlineCode",
                          "value": "writable"
                        },
                        {
                          "type": "text",
                          "value": " flag False so writing to it will raise an error."
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "broadcasted",
              "type": "Param",
              "type_": "list of arrays"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Broadcast any number of arrays against each other."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "x = np.array([[1,2,3]])  # doctest: +SKIP\ny = np.array([[4],[5]])  # doctest: +SKIP\nnp.broadcast_arrays(x, y)  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "Here is a useful idiom for getting contiguous copies instead of\nnon-contiguous views."
      },
      {
        "type": "code",
        "value": "[np.array(a) for a in np.broadcast_arrays(x, y)]  # doctest: +SKIP"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dask/array/core.py",
  "item_line": 5012,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "broadcast",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "broadcast"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "dask",
          "path": "dask.array.core:broadcast_to",
          "type": "RefInfo",
          "version": "2023.1.1"
        },
        "type": "Link",
        "value": "broadcast_to"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "dask",
          "path": "dask.array.core:broadcast_shapes",
          "type": "RefInfo",
          "version": "2023.1.1"
        },
        "type": "Link",
        "value": "broadcast_shapes"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(*args, subok=False)"
  },
  "type": "DocBlob"
}