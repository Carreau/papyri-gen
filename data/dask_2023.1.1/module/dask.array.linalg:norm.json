{
  "aliases": [
    "dask.array.linalg.norm"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This docstring was copied from numpy.linalg.norm."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Some inconsistencies with the Dask version may exist."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "This function is able to return one of eight different matrix norms, or one of an infinite number of vector norms (described below), depending on the value of the "
            },
            {
              "type": "inlineCode",
              "value": "ord"
            },
            {
              "type": "text",
              "value": " parameter."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "For values of "
            },
            {
              "type": "inlineCode",
              "value": "ord < 1"
            },
            {
              "type": "text",
              "value": ", the result is, strictly speaking, not a mathematical 'norm', but it may still be useful for various numerical purposes."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The following norms can be calculated:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "=====  ============================  ========================== ord    norm for matrices             norm for vectors =====  ============================  ========================== None   Frobenius norm                2-norm 'fro'  Frobenius norm                -- 'nuc'  nuclear norm                  -- inf    max(sum(abs(x), axis=1))      max(abs(x)) -inf   min(sum(abs(x), axis=1))      min(abs(x)) 0      --                            sum(x != 0) 1      max(sum(abs(x), axis=0))      as below -1     min(sum(abs(x), axis=0))      as below 2      2-norm (largest sing. value)  as below -2     smallest singular value       as below other  --                            sum(abs(x)**ord)**(1./ord) =====  ============================  =========================="
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The Frobenius norm is given by :"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "inlineMath",
                  "value": "||A||_F = [\\sum_{i,j} abs(a_{i,j})^2]^{1/2}"
                }
              ],
              "type": "paragraph"
            }
          ],
          "type": "blockquote"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The nuclear norm is the sum of the singular values."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Both the Frobenius and nuclear norm orders are only defined for matrices and raise a ValueError when "
            },
            {
              "type": "inlineCode",
              "value": "x.ndim != 2"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Input array.  If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "axis",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "axis"
                    },
                    {
                      "type": "text",
                      "value": " is None, "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": " must be 1-D or 2-D, unless "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "ord",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "ord"
                    },
                    {
                      "type": "text",
                      "value": " is None. If both "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "axis",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "axis"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "ord",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "ord"
                    },
                    {
                      "type": "text",
                      "value": " are None, the 2-norm of "
                    },
                    {
                      "type": "inlineCode",
                      "value": "x.ravel"
                    },
                    {
                      "type": "text",
                      "value": " will be returned."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Order of the norm (see table under "
                    },
                    {
                      "type": "inlineCode",
                      "value": "Notes"
                    },
                    {
                      "type": "text",
                      "value": "). inf means numpy's "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "inf"
                    },
                    {
                      "type": "text",
                      "value": " object. The default is None."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "ord",
              "type": "Param",
              "type_": "{non-zero int, inf, -inf, 'fro', 'nuc'}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "axis",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "axis"
                    },
                    {
                      "type": "text",
                      "value": " is an integer, it specifies the axis of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": " along which to compute the vector norms.  If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "axis",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "axis"
                    },
                    {
                      "type": "text",
                      "value": " is a 2-tuple, it specifies the axes that hold 2-D matrices, and the matrix norms of these matrices are computed.  If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "axis",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "axis"
                    },
                    {
                      "type": "text",
                      "value": " is None then either a vector norm (when "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": " is 1-D) or a matrix norm (when "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": " is 2-D) is returned. The default is None."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.8.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "axis",
              "type": "Param",
              "type_": "{None, int, 2-tuple of ints}, optional."
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If this is set to True, the axes which are normed over are left in the result as dimensions with size one.  With this option the result will broadcast correctly against the original "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.10.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "keepdims",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Norm of the matrix or vector(s)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "n",
              "type": "Param",
              "type_": "float or ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Matrix or vector norm."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from numpy import linalg as LA  # doctest: +SKIP\na = np.arange(9) - 4  # doctest: +SKIP\na  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "b = a.reshape((3, 3))  # doctest: +SKIP\nb  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "LA.norm(a)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "LA.norm(b)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "LA.norm(b, 'fro')  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "LA.norm(a, np.inf)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "LA.norm(b, np.inf)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "LA.norm(a, -np.inf)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "LA.norm(b, -np.inf)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "LA.norm(a, 1)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "LA.norm(b, 1)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "LA.norm(a, -1)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "LA.norm(b, -1)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "LA.norm(a, 2)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "LA.norm(b, 2)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "LA.norm(a, -2)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "LA.norm(b, -2)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "LA.norm(a, 3)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "LA.norm(a, -3)  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "Using the `axis` argument to compute vector norms:"
      },
      {
        "type": "code",
        "value": "c = np.array([[ 1, 2, 3],  # doctest: +SKIP\n              [-1, 1, 4]])\nLA.norm(c, axis=0)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "LA.norm(c, axis=1)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "LA.norm(c, ord=1, axis=1)  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "Using the `axis` argument to compute matrix norms:"
      },
      {
        "type": "code",
        "value": "m = np.arange(8).reshape(2,2,2)  # doctest: +SKIP\nLA.norm(m, axis=(1,2))  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "LA.norm(m[0, :, :]), LA.norm(m[1, :, :])  # doctest: +SKIP"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dask/array/linalg.py",
  "item_line": 1466,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Similar function in SciPy."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "scipy.linalg.norm",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "scipy.linalg.norm"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(x, ord=None, axis=None, keepdims=False)"
  },
  "type": "DocBlob"
}