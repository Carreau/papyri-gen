{
  "aliases": [
    "dask.array.linalg.RandomState.laplace"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This docstring was copied from numpy.random.mtrand.RandomState.laplace."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Some inconsistencies with the Dask version may exist."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The Laplace distribution is similar to the Gaussian/normal distribution, but is sharper at the peak and has fatter tails. It represents the difference between two independent, identically distributed exponential random variables."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "note "
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "New code should use the "
                },
                {
                  "type": "inlineCode",
                  "value": "laplace"
                },
                {
                  "type": "text",
                  "value": " method of a "
                },
                {
                  "type": "inlineCode",
                  "value": "default_rng()"
                },
                {
                  "type": "text",
                  "value": " instance instead; please see the "
                },
                {
                  "domain": null,
                  "role": "ref",
                  "type": "Directive",
                  "value": "random-quick-start"
                },
                {
                  "type": "text",
                  "value": "."
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "It has the probability density function"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "f(x; \\mu, \\lambda) = \\frac{1}{2\\lambda}\\exp\\left(-\\frac{|x - \\mu|}{\\lambda}\\right)."
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The first law of Laplace, from 1774, states that the frequency of an error can be expressed as an exponential function of the absolute magnitude of the error, which leads to the Laplace distribution. For many problems in economics and health sciences, this distribution seems to model the data better than the standard Gaussian distribution."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The position, "
                    },
                    {
                      "type": "inlineMath",
                      "value": "\\mu"
                    },
                    {
                      "type": "text",
                      "value": ", of the distribution peak. Default is 0."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "loc",
              "type": "Param",
              "type_": "float or array_like of floats, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "inlineMath",
                      "value": "\\lambda"
                    },
                    {
                      "type": "text",
                      "value": ", the exponential decay. Default is 1. Must be non- negative."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "scale",
              "type": "Param",
              "type_": "float or array_like of floats, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Output shape.  If the given shape is, e.g., "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(m, n, k)"
                    },
                    {
                      "type": "text",
                      "value": ", then "
                    },
                    {
                      "type": "inlineCode",
                      "value": "m * n * k"
                    },
                    {
                      "type": "text",
                      "value": " samples are drawn.  If size is "
                    },
                    {
                      "type": "inlineCode",
                      "value": "None"
                    },
                    {
                      "type": "text",
                      "value": " (default), a single value is returned if "
                    },
                    {
                      "type": "inlineCode",
                      "value": "loc"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "scale"
                    },
                    {
                      "type": "text",
                      "value": " are both scalars. Otherwise, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "np.broadcast(loc, scale).size"
                    },
                    {
                      "type": "text",
                      "value": " samples are drawn."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "size",
              "type": "Param",
              "type_": "int or tuple of ints, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Drawn samples from the parameterized Laplace distribution."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "ndarray or scalar"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Draw samples from the Laplace or double exponential distribution with specified location (or mean) and scale (decay)."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Draw samples from the distribution"
      },
      {
        "type": "code",
        "value": "loc, scale = 0., 1.  # doctest: +SKIP\ns = np.random.laplace(loc, scale, 1000)  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "Display the histogram of the samples, along with\nthe probability density function:"
      },
      {
        "type": "code",
        "value": "import matplotlib.pyplot as plt  # doctest: +SKIP\ncount, bins, ignored = plt.hist(s, 30, density=True)  # doctest: +SKIP\nx = np.arange(-8., 8., .01)  # doctest: +SKIP\npdf = np.exp(-abs(x-loc)/scale)/(2.*scale)  # doctest: +SKIP\nplt.plot(x, pdf)  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "Plot Gaussian for comparison:"
      },
      {
        "type": "code",
        "value": "g = (1/(scale * np.sqrt(2 * np.pi)) *  # doctest: +SKIP\n     np.exp(-(x - loc)**2 / (2 * scale**2)))\nplt.plot(x,g)  # doctest: +SKIP"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dask/array/random.py",
  "item_line": 299,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "which should be used for new code."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "random.Generator.laplace",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "random.Generator.laplace"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self, loc=0.0, scale=1.0, size=None, chunks='auto', **kwargs)"
  },
  "type": "DocBlob"
}