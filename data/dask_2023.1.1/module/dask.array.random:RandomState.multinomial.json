{
  "aliases": [
    "dask.array.linalg.RandomState.multinomial"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This docstring was copied from numpy.random.mtrand.RandomState.multinomial."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Some inconsistencies with the Dask version may exist."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The multinomial distribution is a multivariate generalization of the binomial distribution.  Take an experiment with one of "
            },
            {
              "type": "inlineCode",
              "value": "p"
            },
            {
              "type": "text",
              "value": " possible outcomes.  An example of such an experiment is throwing a dice, where the outcome can be 1 through 6.  Each sample drawn from the distribution represents "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "n",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "n"
            },
            {
              "type": "text",
              "value": " such experiments.  Its values, "
            },
            {
              "type": "inlineCode",
              "value": "X_i = [X_0, X_1, ..., X_p]"
            },
            {
              "type": "text",
              "value": ", represent the number of times the outcome was "
            },
            {
              "type": "inlineCode",
              "value": "i"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "note "
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "New code should use the "
                },
                {
                  "type": "inlineCode",
                  "value": "multinomial"
                },
                {
                  "type": "text",
                  "value": " method of a "
                },
                {
                  "type": "inlineCode",
                  "value": "default_rng()"
                },
                {
                  "type": "text",
                  "value": " instance instead; please see the "
                },
                {
                  "domain": null,
                  "role": "ref",
                  "type": "Directive",
                  "value": "random-quick-start"
                },
                {
                  "type": "text",
                  "value": "."
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of experiments."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "n",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Probabilities of each of the "
                    },
                    {
                      "type": "inlineCode",
                      "value": "p"
                    },
                    {
                      "type": "text",
                      "value": " different outcomes.  These must sum to 1 (however, the last element is always assumed to account for the remaining probability, as long as "
                    },
                    {
                      "type": "inlineCode",
                      "value": "sum(pvals[:-1]) <= 1)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "pvals",
              "type": "Param",
              "type_": "sequence of floats, length p"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Output shape.  If the given shape is, e.g., "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(m, n, k)"
                    },
                    {
                      "type": "text",
                      "value": ", then "
                    },
                    {
                      "type": "inlineCode",
                      "value": "m * n * k"
                    },
                    {
                      "type": "text",
                      "value": " samples are drawn.  Default is None, in which case a single value is returned."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "size",
              "type": "Param",
              "type_": "int or tuple of ints, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The drawn samples, of shape "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "size"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", if that was provided.  If not, the shape is "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(N,)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "In other words, each entry "
                    },
                    {
                      "type": "inlineCode",
                      "value": "out[i,j,...,:]"
                    },
                    {
                      "type": "text",
                      "value": " is an N-dimensional value drawn from the distribution."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Draw samples from a multinomial distribution."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Throw a dice 20 times:"
      },
      {
        "type": "code",
        "value": "np.random.multinomial(20, [1/6.]*6, size=1)  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "It landed 4 times on 1, once on 2, etc."
      },
      {
        "type": "text",
        "value": "Now, throw the dice 20 times, and 20 times again:"
      },
      {
        "type": "code",
        "value": "np.random.multinomial(20, [1/6.]*6, size=2)  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "For the first run, we threw 3 times 1, 4 times 2, etc.  For the second,\nwe threw 2 times 1, 4 times 2, etc."
      },
      {
        "type": "text",
        "value": "A loaded die is more likely to land on number 6:"
      },
      {
        "type": "code",
        "value": "np.random.multinomial(100, [1/7.]*5 + [2/7.])  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "The probability inputs should be normalized. As an implementation\ndetail, the value of the last entry is ignored and assumed to take\nup any leftover probability mass, but this should not be relied on.\nA biased coin which has twice as much weight on one side as on the\nother should be sampled like so:"
      },
      {
        "type": "code",
        "value": "np.random.multinomial(100, [1.0 / 3, 2.0 / 3])  # RIGHT  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "not like:"
      },
      {
        "type": "code",
        "value": "np.random.multinomial(100, [1.0, 2.0])  # WRONG  # doctest: +SKIP"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dask/array/random.py",
  "item_line": 315,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "which should be used for new code."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "random.Generator.multinomial",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "random.Generator.multinomial"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self, n, pvals, size=None, chunks='auto', **kwargs)"
  },
  "type": "DocBlob"
}