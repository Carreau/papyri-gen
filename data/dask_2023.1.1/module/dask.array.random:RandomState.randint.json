{
  "aliases": [
    "dask.array.linalg.RandomState.randint"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This docstring was copied from numpy.random.mtrand.RandomState.randint."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Some inconsistencies with the Dask version may exist."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Return random integers from the \"discrete uniform\" distribution of the specified dtype in the \"half-open\" interval [`low`, "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "high",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "high"
            },
            {
              "type": "text",
              "value": "). If "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "high",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "high"
            },
            {
              "type": "text",
              "value": " is None (the default), then results are from [0, "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "low",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "low"
            },
            {
              "type": "text",
              "value": ")."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "note "
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "New code should use the "
                },
                {
                  "type": "inlineCode",
                  "value": "integers"
                },
                {
                  "type": "text",
                  "value": " method of a "
                },
                {
                  "type": "inlineCode",
                  "value": "default_rng()"
                },
                {
                  "type": "text",
                  "value": " instance instead; please see the "
                },
                {
                  "domain": null,
                  "role": "ref",
                  "type": "Directive",
                  "value": "random-quick-start"
                },
                {
                  "type": "text",
                  "value": "."
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Lowest (signed) integers to be drawn from the distribution (unless "
                    },
                    {
                      "type": "inlineCode",
                      "value": "high=None"
                    },
                    {
                      "type": "text",
                      "value": ", in which case this parameter is one above the "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "highest"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " such integer)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "low",
              "type": "Param",
              "type_": "int or array-like of ints"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If provided, one above the largest (signed) integer to be drawn from the distribution (see above for behavior if "
                    },
                    {
                      "type": "inlineCode",
                      "value": "high=None"
                    },
                    {
                      "type": "text",
                      "value": "). If array-like, must contain integer values"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "high",
              "type": "Param",
              "type_": "int or array-like of ints, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Output shape.  If the given shape is, e.g., "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(m, n, k)"
                    },
                    {
                      "type": "text",
                      "value": ", then "
                    },
                    {
                      "type": "inlineCode",
                      "value": "m * n * k"
                    },
                    {
                      "type": "text",
                      "value": " samples are drawn.  Default is None, in which case a single value is returned."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "size",
              "type": "Param",
              "type_": "int or tuple of ints, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Desired dtype of the result. Byteorder must be native. The default value is int."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.11.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "dtype",
              "type": "Param",
              "type_": "dtype, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "size",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "size"
                    },
                    {
                      "type": "text",
                      "value": "-shaped array of random integers from the appropriate distribution, or a single such random int if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "size",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "size"
                    },
                    {
                      "type": "text",
                      "value": " not provided."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "int or ndarray of ints"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return random integers from "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "low",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "low"
            },
            {
              "type": "text",
              "value": " (inclusive) to "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "high",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "high"
            },
            {
              "type": "text",
              "value": " (exclusive)."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "np.random.randint(2, size=10)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "np.random.randint(1, size=10)  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "Generate a 2 x 4 array of ints between 0 and 4, inclusive:"
      },
      {
        "type": "code",
        "value": "np.random.randint(5, size=(2, 4))  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "Generate a 1 x 3 array with 3 different upper bounds"
      },
      {
        "type": "code",
        "value": "np.random.randint(1, [3, 5, 10])  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "Generate a 1 by 3 array with 3 different lower bounds"
      },
      {
        "type": "code",
        "value": "np.random.randint([1, 5, 7], 10)  # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "Generate a 2 by 4 array using broadcasting with dtype of uint8"
      },
      {
        "type": "code",
        "value": "np.random.randint([1, 3, 5, 7], [[10], [20]], dtype=np.uint8)  # doctest: +SKIP"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dask/array/random.py",
  "item_line": 369,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "similar to "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "randint"
            },
            {
              "type": "text",
              "value": ", only for the closed interval [`low`, "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "high"
            },
            {
              "type": "text",
              "value": "], and 1 is the lowest value if "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "high"
            },
            {
              "type": "text",
              "value": " is omitted."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "dask",
          "path": "dask.array.random:RandomState.random_integers",
          "type": "RefInfo",
          "version": "2023.1.1"
        },
        "type": "Link",
        "value": "random_integers"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "which should be used for new code."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "random.Generator.integers",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "random.Generator.integers"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self, low, high=None, size=None, chunks='auto', dtype='l', **kwargs)"
  },
  "type": "DocBlob"
}