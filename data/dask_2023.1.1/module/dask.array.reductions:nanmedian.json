{
  "aliases": [
    "dask.array.nanmedian"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This docstring was copied from numpy.nanmedian."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Some inconsistencies with the Dask version may exist."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "This works by automatically chunking the reduced axes to a single chunk and then calling "
            },
            {
              "type": "inlineCode",
              "value": "numpy.nanmedian"
            },
            {
              "type": "text",
              "value": " function across the remaining dimensions"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Returns the median of the array elements."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionadded 1.9.0"
                }
              ],
              "type": "admonitionTitle"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Given a vector "
            },
            {
              "type": "inlineCode",
              "value": "V"
            },
            {
              "type": "text",
              "value": " of length "
            },
            {
              "type": "inlineCode",
              "value": "N"
            },
            {
              "type": "text",
              "value": ", the median of "
            },
            {
              "type": "inlineCode",
              "value": "V"
            },
            {
              "type": "text",
              "value": " is the middle value of a sorted copy of "
            },
            {
              "type": "inlineCode",
              "value": "V"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "V_sorted"
            },
            {
              "type": "text",
              "value": " - i.e., "
            },
            {
              "type": "inlineCode",
              "value": "V_sorted[(N-1)/2]"
            },
            {
              "type": "text",
              "value": ", when "
            },
            {
              "type": "inlineCode",
              "value": "N"
            },
            {
              "type": "text",
              "value": " is odd and the average of the two middle values of "
            },
            {
              "type": "inlineCode",
              "value": "V_sorted"
            },
            {
              "type": "text",
              "value": " when "
            },
            {
              "type": "inlineCode",
              "value": "N"
            },
            {
              "type": "text",
              "value": " is even."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Input array or object that can be converted to an array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "a",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Axis or axes along which the medians are computed. The default is to compute the median along a flattened version of the array. A sequence of axes is supported since version 1.9.0."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axis",
              "type": "Param",
              "type_": "{int, sequence of int, None}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Alternative output array in which to place the result. It must have the same shape and buffer length as the expected output, but the type (of the output) will be cast if necessary."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "ndarray, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, then allow use of memory of input array "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": " for calculations. The input array will be modified by the call to "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "median",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "median"
                    },
                    {
                      "type": "text",
                      "value": ". This will save memory when you do not need to preserve the contents of the input array. Treat the input as undefined, but it will probably be fully or partially sorted. Default is False. If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "overwrite_input",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "overwrite_input"
                    },
                    {
                      "type": "text",
                      "value": " is "
                    },
                    {
                      "type": "inlineCode",
                      "value": "True"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": " is not already an "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "dask",
                        "path": "dask.array.backends:_numel_ndarray",
                        "type": "RefInfo",
                        "version": "2023.1.1"
                      },
                      "type": "Link",
                      "value": "ndarray"
                    },
                    {
                      "type": "text",
                      "value": ", an error will be raised."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "overwrite_input",
              "type": "Param",
              "type_": "bool, optional  (Not supported in Dask)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If this is set to True, the axes which are reduced are left in the result as dimensions with size one. With this option, the result will broadcast correctly against the original "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If this is anything but the default value it will be passed through (in the special case of an empty array) to the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "dask",
                        "path": "dask.array.core:Array.mean",
                        "type": "RefInfo",
                        "version": "2023.1.1"
                      },
                      "type": "Link",
                      "value": "mean"
                    },
                    {
                      "type": "text",
                      "value": " function of the underlying array.  If the array is a sub-class and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "dask",
                        "path": "dask.array.core:Array.mean",
                        "type": "RefInfo",
                        "version": "2023.1.1"
                      },
                      "type": "Link",
                      "value": "mean"
                    },
                    {
                      "type": "text",
                      "value": " does not have the kwarg "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "keepdims",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "keepdims"
                    },
                    {
                      "type": "text",
                      "value": " this will raise a RuntimeError."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "keepdims",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A new array holding the result. If the input contains integers or floats smaller than "
                    },
                    {
                      "type": "inlineCode",
                      "value": "float64"
                    },
                    {
                      "type": "text",
                      "value": ", then the output data-type is "
                    },
                    {
                      "type": "inlineCode",
                      "value": "np.float64"
                    },
                    {
                      "type": "text",
                      "value": ".  Otherwise, the data-type of the output is the same as that of the input. If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "out",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "out"
                    },
                    {
                      "type": "text",
                      "value": " is specified, that array is returned instead."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "median",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Compute the median along the specified axis, while ignoring NaNs."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "a = np.array([[10.0, 7, 4], [3, 2, 1]])  # doctest: +SKIP\na[0, 1] = np.nan  # doctest: +SKIP\na  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "np.median(a)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "np.nanmedian(a)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "np.nanmedian(a, axis=0)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "np.median(a, axis=1)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "b = a.copy()  # doctest: +SKIP\nnp.nanmedian(b, axis=1, overwrite_input=True)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "assert not np.all(a==b)  # doctest: +SKIP\nb = a.copy()  # doctest: +SKIP\nnp.nanmedian(b, axis=None, overwrite_input=True)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "assert not np.all(a==b)  # doctest: +SKIP"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dask/array/reductions.py",
  "item_line": 1776,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "dask",
          "path": "dask.array.core:Array.mean",
          "type": "RefInfo",
          "version": "2023.1.1"
        },
        "type": "Link",
        "value": "mean"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "median",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "median"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "percentile",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "percentile"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(a, axis=None, keepdims=False, out=None)"
  },
  "type": "DocBlob"
}