{
  "aliases": [
    "dask.array.flipud"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This docstring was copied from numpy.flipud."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Some inconsistencies with the Dask version may exist."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For a 2-D array, this flips the entries in each column in the up/down direction. Rows are preserved, but appear in a different order than before."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Equivalent to "
            },
            {
              "type": "inlineCode",
              "value": "m[::-1, ...]"
            },
            {
              "type": "text",
              "value": " or "
            },
            {
              "type": "inlineCode",
              "value": "np.flip(m, axis=0)"
            },
            {
              "type": "text",
              "value": ". Requires the array to be at least 1-D."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Input array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "m",
              "type": "Param",
              "type_": "array_like"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A view of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "m",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "m"
                    },
                    {
                      "type": "text",
                      "value": " with the rows reversed.  Since a view is returned, this operation is "
                    },
                    {
                      "type": "inlineMath",
                      "value": "\\mathcal O(1)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "array_like"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Reverse the order of elements along axis 0 (up/down)."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "A = np.diag([1.0, 2, 3])  # doctest: +SKIP\nA  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "np.flipud(A)  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "A = np.random.randn(2,3,5)  # doctest: +SKIP\nnp.all(np.flipud(A) == A[::-1,...])  # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "np.flipud([1,2])  # doctest: +SKIP"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dask/array/routines.py",
  "item_line": 228,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Flip array in the left/right direction."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "dask",
          "path": "dask.array.routines:fliplr",
          "type": "RefInfo",
          "version": "2023.1.1"
        },
        "type": "Link",
        "value": "fliplr"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Flip array in one or more dimensions."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "flip",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "flip"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Rotate array counterclockwise."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "rot90",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "rot90"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(m)"
  },
  "type": "DocBlob"
}