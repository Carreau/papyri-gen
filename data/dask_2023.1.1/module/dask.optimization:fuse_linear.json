{
  "aliases": [
    "dask.optimization.fuse_linear"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "If specified, the keys in "
            },
            {
              "type": "inlineCode",
              "value": "keys"
            },
            {
              "type": "text",
              "value": " keyword argument are "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "not"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " fused. Supply "
            },
            {
              "type": "inlineCode",
              "value": "dependencies"
            },
            {
              "type": "text",
              "value": " from output of "
            },
            {
              "type": "inlineCode",
              "value": "cull"
            },
            {
              "type": "text",
              "value": " if available to avoid recomputing dependencies."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "This function is mostly superseded by ``fuse``"
                }
              ],
              "type": "strong"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "dsk: dict",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [],
              "param": "keys: list",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "{key: [list-of-keys]}.  Must be a list to provide count of each key This optional input often comes from "
                    },
                    {
                      "type": "inlineCode",
                      "value": "cull"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dependencies: dict, optional",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether to rename fused keys with "
                    },
                    {
                      "type": "inlineCode",
                      "value": "default_fused_linear_keys_renamer"
                    },
                    {
                      "type": "text",
                      "value": " or not.  Renaming fused keys can keep the graph more understandable and comprehensive, but it comes at the cost of additional processing. If False, then the top-most key will be used.  For advanced usage, a func is also accepted, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "new_key = rename_keys(fused_key_list)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "rename_keys: bool or func, optional",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "",
              "type": "Param",
              "type_": "dsk: output graph with keys fused"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "to accelerate other downstream optimizations."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "dependencies: dict mapping dependencies after fusion.  Useful side effect"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return new dask graph with linear sequence of tasks fused together."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "def inc(x):\n    return x + 1"
      },
      {
        "type": "code",
        "value": "def add(x, y):\n    return x + y"
      },
      {
        "type": "code",
        "value": "d = {'a': 1, 'b': (inc, 'a'), 'c': (inc, 'b')}\ndsk, dependencies = fuse(d)\ndsk # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "dsk, dependencies = fuse(d, rename_keys=False)\ndsk # doctest: +ELLIPSIS"
      },
      {
        "type": "code",
        "value": "dsk, dependencies = fuse(d, keys=['b'], rename_keys=False)\ndsk  # doctest: +ELLIPSIS"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/dask/optimization.py",
  "item_line": 84,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Examples",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(dsk, keys=None, dependencies=None, rename_keys=True)"
  },
  "type": "DocBlob"
}