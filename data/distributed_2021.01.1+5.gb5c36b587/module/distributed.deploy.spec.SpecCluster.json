{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Cluster that requires a full specification of workers"
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The SpecCluster class expects a full specification of the Scheduler and Workers to use.  It removes any handling of user inputs (like threads vs processes, number of cores, and so on) and any handling of cluster resource managers (like pods, jobs, and so on).  Instead, it expects this information to be passed in scheduler and worker specifications.  This class does handle all of the logic around asynchronously cleanly setting up and tearing things down at the right times.  Hopefully it can form a base for other more user-centric classes."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "workers: dict",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A dictionary mapping names to worker classes and their specifications See example below"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "scheduler: dict, optional",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A similar mapping for a scheduler"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "worker: dict",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A specification of a single worker. This is used for any new workers that are created."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "asynchronous: bool",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If this is intended to be used directly within an event loop with async/await"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "silence_logs: bool",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Whether or not we should silence logging when setting up the cluster."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "name: str, optional",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A name to use when printing out the cluster, defaults to type name"
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    "builtins.dict",
    "dask",
    "dask.distributed",
    "distributed.deploy.spec.SpecCluster",
    "distributed.deploy.spec.SpecCluster.scale",
    "distributed.nanny.Nanny",
    "distributed.scheduler.Scheduler",
    "distributed.worker.Worker"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/dev/distributed/distributed/deploy/spec.py",
  "item_line": 128,
  "item_type": "<class 'type'>",
  "aliases": [
    "distributed.SpecCluster"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "To create a SpecCluster you specify how to set up a Scheduler and Workers"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "dask",
              "dask",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "distributed",
              "dask.distributed",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "Scheduler",
              "distributed.scheduler.Scheduler",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "Worker",
              "distributed.worker.Worker",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "Nanny",
              "distributed.nanny.Nanny",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "scheduler",
              "builtins.dict",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "{",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "cls",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "Scheduler",
              "distributed.scheduler.Scheduler",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "options",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "{",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "dashboard_address",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ":8787",
              "",
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "}",
              "",
              ""
            ],
            [
              "}",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "workers",
              "builtins.dict",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "{",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "my-worker",
              "",
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "{",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "cls",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "Worker",
              "distributed.worker.Worker",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "options",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "{",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "nthreads",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "}",
              "",
              ""
            ],
            [
              "}",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "my-nanny",
              "",
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "{",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "cls",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "Nanny",
              "distributed.nanny.Nanny",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "options",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "{",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "nthreads",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              "}",
              "",
              ""
            ],
            [
              "}",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "}",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "cluster",
              "distributed.deploy.spec.SpecCluster",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "SpecCluster",
              "distributed.deploy.spec.SpecCluster",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "scheduler",
              "builtins.dict",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "scheduler",
              "builtins.dict",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "workers",
              "builtins.dict",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "workers",
              "builtins.dict",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "The worker spec is stored as the "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  ".worker",
                  "_",
                  "spec"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " attribute"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "cluster",
              "distributed.deploy.spec.SpecCluster",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "worker_spec",
              "builtins.dict",
              ""
            ]
          ],
          "out": "{\n   'my-worker': {\"cls\": Worker, \"options\": {\"nthreads\": 1}},\n   'my-nanny': {\"cls\": Nanny, \"options\": {\"nthreads\": 2}},\n}",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "While the instantiation of this spec is stored in the "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  ".workers"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " attribute"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "cluster",
              "distributed.deploy.spec.SpecCluster",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "workers",
              "builtins.dict",
              ""
            ]
          ],
          "out": "{\n    'my-worker': <Worker ...>\n    'my-nanny': <Nanny ...>\n}",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Should the spec change, we can await the cluster or call the "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  ".",
                  "_",
                  "correct",
                  "_",
                  "state"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " method to align the actual state to the specified state."
              }
            }
          ]
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "We can also "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  ".scale(...)"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " the cluster, which adds new workers of a given form."
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "worker",
              "builtins.dict",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "{",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "cls",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "Worker",
              "distributed.worker.Worker",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "options",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "{",
              "",
              ""
            ],
            [
              "}",
              "",
              ""
            ],
            [
              "}",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "cluster",
              "distributed.deploy.spec.SpecCluster",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "SpecCluster",
              "distributed.deploy.spec.SpecCluster",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "scheduler",
              "builtins.dict",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "scheduler",
              "builtins.dict",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "worker",
              "builtins.dict",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "worker",
              "builtins.dict",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "cluster",
              "distributed.deploy.spec.SpecCluster",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "worker_spec",
              "builtins.dict",
              ""
            ]
          ],
          "out": "{}",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "cluster",
              "distributed.deploy.spec.SpecCluster",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "scale",
              "distributed.deploy.spec.SpecCluster.scale",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "cluster",
              "distributed.deploy.spec.SpecCluster",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "worker_spec",
              "builtins.dict",
              ""
            ]
          ],
          "out": "{\n    0: {'cls': Worker, 'options': {}},\n    1: {'cls': Worker, 'options': {}},\n    2: {'cls': Worker, 'options': {}},\n}",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Note that above we are using the standard "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "Worker"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " and "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "Nanny"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " classes, however in practice other classes could be used that handle resource management like "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "KubernetesPod"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " or "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "SLURMJob"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ".  The spec does not need to conform to the expectations of the standard Dask Worker class.  It just needs to be called with the provided options, support "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "_",
                  "_",
                  "await",
                  "_",
                  "_"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " and "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "close"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " methods and the "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "worker",
                  "_",
                  "address"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " property.."
              }
            }
          ]
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Also note that uniformity of the specification is not required.  Other API could be added externally (in subclasses) that adds workers of different specifications into the same dictionary."
              }
            }
          ]
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "If a single entry in the spec will generate multiple dask workers then please provide a "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "\"group\""
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " element to the spec, that includes the suffixes that will be added to each name (this should be handled by your worker class)."
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "cluster",
              "distributed.deploy.spec.SpecCluster",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "worker_spec",
              "builtins.dict",
              ""
            ]
          ],
          "out": "{\n    0: {\"cls\": MultiWorker, \"options\": {\"processes\": 3}, \"group\": [\"-0\", \"-1\", -2\"]}\n    1: {\"cls\": MultiWorker, \"options\": {\"processes\": 2}, \"group\": [\"-0\", \"-1\"]}\n}",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "These suffixes should correspond to the names used by the workers when they deploy."
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "[",
              "",
              ""
            ],
            [
              "ws",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "name",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "for",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "ws",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "in",
              null,
              "ow"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "cluster",
              "distributed.deploy.spec.SpecCluster",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "scheduler",
              "distributed.scheduler.Scheduler",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "workers",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "values",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ]
          ],
          "out": "[\"0-0\", \"0-1\", \"0-2\", \"1-0\", \"1-1\"]",
          "ce_status": "compiled"
        }
      }
    ]
  },
  "see_also": [],
  "references": null,
  "signature": "SpecCluster(workers=None, scheduler=None, worker=None, asynchronous=False, loop=None, security=None, silence_logs=False, name=None, shutdown_on_close=True)"
}