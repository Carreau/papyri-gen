{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Interface to extend the Scheduler"
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The scheduler operates by triggering and responding to events like "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "task",
                    "_",
                    "finished"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "update",
                    "_",
                    "graph"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "task",
                    "_",
                    "erred"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", etc.."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "A plugin enables custom code to run at each of those same events.  The scheduler will run the analogous methods on this class when each event is triggered.  This runs user code within the scheduler thread that can perform arbitrary operations in synchrony with the scheduler itself."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Plugins are often used for diagnostics and measurement, but have full access to the scheduler and could in principle affect core scheduling."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "To implement a plugin implement some of the methods of this class and add the plugin to the scheduler with "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "Scheduler.add",
                    "_",
                    "plugin(myplugin)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": []
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    "__main__.Counter",
    "__main__.Counter.__init__",
    "builtins.int",
    "distributed.diagnostics.plugin.SchedulerPlugin"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/dev/distributed/distributed/diagnostics/plugin.py",
  "item_line": 10,
  "item_type": "<class 'type'>",
  "aliases": [
    "distributed.SchedulerPlugin"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "class",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "Counter",
              "__main__.Counter",
              "nc"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "SchedulerPlugin",
              "distributed.diagnostics.plugin.SchedulerPlugin",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "def",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "__init__",
              "__main__.Counter.__init__",
              "fm"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "self",
              "__main__.Counter",
              "bp"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "        ",
              "",
              ""
            ],
            [
              "self",
              "__main__.Counter",
              "bp"
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "counter",
              "builtins.int",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ]
          ],
          "out": "...\n...     def transition(self, key, start, finish, *args, **kwargs):\n...         if start == 'processing' and finish == 'memory':\n...             self.counter += 1\n...\n...     def restart(self, scheduler):\n...         self.counter = 0",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "plugin",
              "__main__.Counter",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "Counter",
              "__main__.Counter",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "scheduler",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "add_plugin",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "plugin",
              "__main__.Counter",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ]
          ],
          "out": "",
          "ce_status": "compiled"
        }
      }
    ]
  },
  "see_also": [],
  "references": null,
  "signature": "SchedulerPlugin()"
}