{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Find workers that we can close with low cost"
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "This returns a list of workers that are good candidates to retire. These workers are not running anything and are storing relatively little data relative to their peers.  If all workers are idle then we still maintain enough workers to have enough RAM to store our data, with a comfortable buffer."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "This is for use with systems like "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "distributed.deploy.adaptive"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "memory_factor: Number",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Amount of extra space we want to have for our stored data. Defaults two 2, or that we want to have twice as much memory as we currently have data."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "n: int",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Number of workers to close"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "minimum: int",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Minimum number of workers to keep around"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "key: Callable(WorkerState)",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "An optional callable mapping a WorkerState object to a group affiliation.  Groups will be closed together.  This is useful when closing workers must be done collectively, such as by hostname."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "target: int",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Target number of workers to have after we close"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "attribute",
            "type_": "str",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The attribute of the WorkerState object to return, like \"address\" or \"name\".  Defaults to \"address\"."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "to_close: list of worker addresses that are OK to close",
            "desc": []
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    "Scheduler.retire_workers"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Examples",
    "Returns",
    "See Also"
  ],
  "item_file": "/Users/bussonniermatthias/dev/distributed/distributed/scheduler.py",
  "item_line": 5233,
  "item_type": "<class 'function'>",
  "aliases": [
    "distributed.Scheduler.workers_to_close"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "scheduler",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "workers_to_close",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "['tcp://192.168.0.1:1234', 'tcp://192.168.0.2:1234']",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Group workers by hostname prior to closing"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "scheduler",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "workers_to_close",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "key",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "lambda",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "ws",
              null,
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "ws",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "host",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "['tcp://192.168.0.1:1234', 'tcp://192.168.0.1:4567']",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Remove two workers"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "scheduler",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "workers_to_close",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "n",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Keep enough workers to have twice as much memory as we we need."
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "scheduler",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "workers_to_close",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "memory_ratio",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "",
          "ce_status": "compiled"
        }
      }
    ]
  },
  "see_also": [
    {
      "name": {
        "name": "Scheduler.retire_workers",
        "ref": null,
        "exists": null
      },
      "descriptions": [],
      "type": null
    }
  ],
  "references": null,
  "signature": "workers_to_close(self, comm=None, memory_ratio=None, n=None, key=None, minimum=None, target=None, attribute='address')"
}