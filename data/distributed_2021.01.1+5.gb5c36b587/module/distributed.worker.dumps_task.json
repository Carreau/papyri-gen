{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Serialize a dask task"
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Returns a dict of bytestrings that can each be loaded with `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "loads"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": []
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    "distributed.worker.dumps_task",
    "operator",
    "_operator.add"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/dev/distributed/distributed/worker.py",
  "item_line": 3406,
  "item_type": "<class 'function'>",
  "aliases": [
    "distributed.worker.dumps_task"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Either returns a task as a function, args, kwargs dict"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "operator",
              "operator",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "add",
              "operator.add",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "dumps_task",
              "distributed.worker.dumps_task",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "add",
              "operator.add",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ]
          ],
          "out": "{'function': b'\u0080\u0004\u0095\u0000\u008c\t_operator\u0094\u008c\u0003add\u0094\u0093\u0094.'\n 'args': b'\u0080\u0004\u0095\u0007\u0000\u0000\u0000K\u0001K\u0002\u0086\u0094.'}",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Or as a single task blob if it can't easily decompose the result.  This happens either if the task is highly nested, or if it isn't a task at all"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "dumps_task",
              "distributed.worker.dumps_task",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ]
          ],
          "out": "{'task': b'\u0080\u0004\u0095\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000K\u0001.'}",
          "ce_status": "compiled"
        }
      }
    ]
  },
  "see_also": [],
  "references": null,
  "signature": "dumps_task(task)"
}