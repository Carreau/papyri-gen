{
  "aliases": [
    "distributed.Client.map"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Arguments can be normal objects or Futures"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Callable to be scheduled for execution. If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "func"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " returns a coroutine, it will be run on the main event loop of a worker. Otherwise "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "func"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " will be run in a worker's task executor pool (see "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "Worker.executors"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " for more information.)"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "func",
                "type_": "callable"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "List-like objects to map over.  They should have the same length."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "iterables",
                "type_": "Iterables"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Prefix for task names if string.  Explicit names if list."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "key",
                "type_": "str, list"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Whether or not the function is pure.  Set "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "pure=False"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " for impure functions like "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "np.random.random"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". See "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "pure functions"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " for more details."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "pure",
                "type_": "bool (defaults to True)"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A set of worker hostnames on which computations may be performed. Leave empty to default to all workers (common case)"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "workers",
                "type_": "string or iterable of strings"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Used with "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "workers"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ". Indicates whether or not the computations may be performed on workers that are not in the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "workers"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " set(s)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "allow_other_workers",
                "type_": "bool (defaults to False)"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Number of allowed automatic retries if a task fails"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "retries",
                "type_": "int (default to 0)"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Optional prioritization of task.  Zero is default. Higher priorities take precedence"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "priority",
                "type_": "Number"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Allowed amount of time between calls to consider the same priority"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "fifo_timeout",
                "type_": "str timedelta (default '100ms')"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Defines the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "resources"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " each instance of this mapped task requires on the worker; e.g. "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "{'GPU': 2}"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". See "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "worker resources <resources>"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " for details on defining resources."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "resources",
                "type_": "dict (defaults to {})"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Whether these tasks should exist on the worker as stateful actors. See "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "actors"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " for additional details."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "actor",
                "type_": "bool (default False)"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Alias for "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "distributed",
                              "path": "distributed.actor",
                              "version": "2021.10.0"
                            },
                            "value": "actor"
                          },
                          "type": "Link"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "actors",
                "type_": "bool (default False)"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Submit tasks to the scheduler in batches of (at most) "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "batch_size"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". Larger batch sizes can be useful for very large "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "iterables"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", as the cluster can start processing tasks while later ones are submitted asynchronously."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "batch_size",
                "type_": "int, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Extra keywords to send to the function. Large values will be included explicitly in the task graph."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "**kwargs",
                "type_": "dict"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [],
                "param": "",
                "type_": "List, iterator, or Queue of futures, depending on the type of the"
              },
              {
                "desc": [],
                "param": "",
                "type_": "inputs."
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Map a function on a sequence of arguments"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "title": null
    }
  },
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            {
              "link": {
                "data": "L",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "client",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "map",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "func",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "sequence",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "  ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "# doctest: +SKIP",
                "type": "str"
              },
              "type": "c1"
            }
          ],
          "out": ""
        },
        "type": "Code2"
      }
    ],
    "level": 0,
    "title": null
  },
  "item_file": "/distributed/client.py",
  "item_line": 1593,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Examples",
    "Returns",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "Submit a single function"
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "distributed",
          "path": "distributed.client.Client.submit",
          "version": "2021.10.0"
        },
        "value": "Client.submit"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "map(self, func, *iterables, key=None, workers=None, retries=None, resources=None, priority=0, allow_other_workers=False, fifo_timeout='100 ms', actor=False, actors=False, pure=None, batch_size=None, **kwargs)"
  }
}