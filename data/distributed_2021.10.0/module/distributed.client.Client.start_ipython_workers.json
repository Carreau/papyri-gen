{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "A list of worker addresses, defaults to all"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "workers",
            "type_": "list (optional)"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If defined, register IPython magics with these names for executing code on the workers.  If string has asterix then expand asterix into 0, 1, ..., n for n workers"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "magic_names",
            "type_": "str or list(str) (optional)"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If True, launch a Jupyter QtConsole connected to the worker(s)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "qtconsole",
            "type_": "bool (optional)"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Additional arguments to pass to the qtconsole on startup."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "qtconsole_args",
            "type_": "list(str) (optional)"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "List of connection_info dicts containing info necessary to connect Jupyter clients to the workers."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "iter_connection_info: list"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Start IPython kernels on workers"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "distributed.Client.start_ipython_workers"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "syntax_error",
          "entries": [
            [
              "info",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "c",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "start_ipython_workers",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "%",
              "",
              "o"
            ],
            [
              "remote",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "info",
              null,
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "192.168.1.101:5752",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "worker",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "data",
              null,
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ]
          ],
          "out": "{'x': 1, 'y': 100}"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "syntax_error",
          "entries": [
            [
              "c",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "start_ipython_workers",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "192.168.1.101:5752",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "magic_names",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "w",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "%",
              "",
              "o"
            ],
            [
              "w",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "worker",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "data",
              null,
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ]
          ],
          "out": "{'x': 1, 'y': 100}"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "c",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "start_ipython_workers",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "192.168.1.101:5752",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "qtconsole",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "True",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ]
          ],
          "out": ""
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Add asterix * in magic names to add one magic per worker"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "syntax_error",
          "entries": [
            [
              "c",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "start_ipython_workers",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "magic_names",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "w_*",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "%",
              "",
              "o"
            ],
            [
              "w_0",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "worker",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "data",
              null,
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ]
          ],
          "out": "{'x': 1, 'y': 100}"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "syntax_error",
          "entries": [
            [
              "%",
              "",
              "o"
            ],
            [
              "w_1",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "worker",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "data",
              null,
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ]
          ],
          "out": "{'z': 5}"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/distributed/client.py",
  "item_line": 3786,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Examples",
    "Returns",
    "See Also"
  ],
  "references": null,
  "refs": [
    "Client.start_ipython_scheduler"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "start ipython on the scheduler"
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "Client.start_ipython_scheduler",
        "ref": "distributed.client.Client.start_ipython_scheduler"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "start_ipython_workers(self, workers=None, magic_names=False, qtconsole=False, qtconsole_args=None)"
  }
}