{
  "aliases": [
    "distributed.core.Server"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Superclass for endpoints in a distributed cluster, such as Worker and Scheduler objects."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "content": {
                    "value": "Handlers"
                  }
                },
                "type": "Strong"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Servers define operations with a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "handlers"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " dict mapping operation names to functions.  The first argument of a handler function will be a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Comm"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for the communication established with the client.  Other arguments will receive inputs from the keys of the incoming message which will always be a dictionary."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ">>> def pingpong(comm):\n...     return b'pong'"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "value": ">>> def add(comm, x, y):\n...     return x + y"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "value": ">>> handlers = {'ping': pingpong, 'add': add}\n>>> server = Server(handlers)  # doctest: +SKIP\n>>> server.listen('tcp://0.0.0.0:8000')  # doctest: +SKIP"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "content": {
                    "value": "Message Format"
                  }
                },
                "type": "Strong"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The server expects messages to be dictionaries with a special key, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "'op'"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " that corresponds to the name of the operation, and other key-value pairs as required by the function."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "So in the example above the following would be good messages."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": [
                              "{'op': 'ping'}"
                            ]
                          },
                          "type": "Verbatim"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": [
                              "{'op': 'add', 'x': 10, 'y': 20}"
                            ]
                          },
                          "type": "Verbatim"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        }
      ],
      "level": 0,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Dask Distributed Server"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "title": null
  },
  "item_file": "/distributed/core.py",
  "item_line": 93,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}