{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Contains logic to dynamically resize a Dask cluster based on current use. This class needs to be paired with a system that can create and destroy Dask workers using a cluster resource manager.  Typically it is built into already existing solutions, rather than used directly by users. It is most commonly used from the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    ".adapt(...)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " method of various Dask cluster classes."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Subclasses can override "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Adaptive.target"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Adaptive.workers_to_close"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " to control when the cluster should be resized. The default implementation checks if there are too many tasks per worker or too little memory available (see "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Scheduler.adaptive_target"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "). The values for interval, min, max, wait_count and target_duration can be specified in the dask config under the distributed.adaptive key."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Must have scale and scale_down methods/coroutines"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "cluster: object",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Milliseconds between checks"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "interval",
            "type_": "timedelta or str, default \"1000 ms\""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Number of consecutive times that a worker should be suggested for removal before we remove it."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "wait_count: int, default 3",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Amount of time we want a computation to take. This affects how aggressively we scale up."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "target_duration: timedelta or str, default \"5s\"",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Function to group workers together when scaling down See Scheduler.workers_to_close for more information"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "worker_key: Callable[WorkerState]",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Minimum number of workers to keep around"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "minimum: int",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Maximum number of workers to keep around"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "maximum: int",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Extra parameters to pass to Scheduler.workers_to_close"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "**kwargs:",
            "type_": ""
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Adaptively allocate workers based on scheduler load.  A superclass."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "distributed.Adaptive"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "This is commonly used from existing Dask classes, like KubeCluster"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "dask_kubernetes",
              null,
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "KubeCluster",
              null,
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "cluster",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "KubeCluster",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "cluster",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "adapt",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "minimum",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "10",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "maximum",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "100",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": ""
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Alternatively you can use it from your own Cluster class by subclassing from Dask's Cluster superclass"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "distributed",
              "distributed",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "deploy",
              "distributed.deploy",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "Cluster",
              "distributed.deploy.cluster.Cluster",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "class",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "MyCluster",
              "__main__.MyCluster",
              "nc"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "Cluster",
              "distributed.deploy.cluster.Cluster",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "def",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scale_up",
              "__main__.MyCluster.scale_up",
              "nf"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "self",
              "__main__.MyCluster",
              "bp"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "n",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "        ",
              "",
              ""
            ],
            [
              "\"\"\" Bring worker count up to n \"\"\"",
              "",
              "sd"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "def",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scale_down",
              "__main__.MyCluster.scale_down",
              "nf"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "self",
              "__main__.MyCluster",
              "bp"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "workers",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "       ",
              "",
              ""
            ],
            [
              "\"\"\" Remove worker addresses from cluster \"\"\"",
              "",
              "sd"
            ]
          ],
          "out": ""
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "cluster",
              "__main__.MyCluster",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "MyCluster",
              "__main__.MyCluster",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "cluster",
              "__main__.MyCluster",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "adapt",
              "distributed.deploy.cluster.Cluster.adapt",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "minimum",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "10",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "maximum",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "100",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": ""
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/distributed/deploy/adaptive.py",
  "item_line": 16,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Examples",
    "Notes"
  ],
  "references": null,
  "refs": [
    "__main__.MyCluster",
    "__main__.MyCluster.scale_down",
    "__main__.MyCluster.scale_up",
    "distributed",
    "distributed.deploy",
    "distributed.deploy.cluster.Cluster",
    "distributed.deploy.cluster.Cluster.adapt"
  ],
  "see_also": [],
  "signature": {
    "value": null
  }
}