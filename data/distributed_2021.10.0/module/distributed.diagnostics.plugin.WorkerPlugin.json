{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "A worker plugin enables custom code to run at different stages of the Workers' lifecycle: at setup, during task state transitions, when a task or dependency is released, and at teardown."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "A plugin enables custom code to run at each of step of a Workers's life. Whenever such an event happens, the corresponding method on this class will be called. Note that the user code always runs within the Worker's main thread."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "To implement a plugin implement some of the methods of this class and register the plugin to your client in order to have it attached to every existing and future workers with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Client.register_worker_plugin"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Interface to extend the Worker"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "distributed.WorkerPlugin"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "class",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "ErrorLogger",
              "__main__.ErrorLogger",
              "nc"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "WorkerPlugin",
              "distributed.diagnostics.plugin.WorkerPlugin",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "def",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "__init__",
              "__main__.ErrorLogger.__init__",
              "fm"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "self",
              "__main__.ErrorLogger",
              "bp"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "logger",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "        ",
              "",
              ""
            ],
            [
              "self",
              "__main__.ErrorLogger",
              "bp"
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "logger",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "logger",
              null,
              ""
            ]
          ],
          "out": "...\n...     def setup(self, worker):\n...         self.worker = worker\n...\n...     def transition(self, key, start, finish, *args, **kwargs):\n...         if finish == 'error':\n...             ts = self.worker.tasks[key]\n...             exc_info = (type(ts.exception), ts.exception, ts.traceback)\n...             self.logger.error(\n...                 \"Error during computation of '%s'.\", key,\n...                 exc_info=exc_info\n...             )"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "plugin",
              "__main__.ErrorLogger",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "ErrorLogger",
              "__main__.ErrorLogger",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "client",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "register_worker_plugin",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "plugin",
              "__main__.ErrorLogger",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ]
          ],
          "out": ""
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/distributed/diagnostics/plugin.py",
  "item_line": 97,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Examples"
  ],
  "references": null,
  "refs": [
    "__main__.ErrorLogger",
    "__main__.ErrorLogger.__init__",
    "distributed.diagnostics.plugin.WorkerPlugin"
  ],
  "see_also": [],
  "signature": {
    "value": null
  }
}