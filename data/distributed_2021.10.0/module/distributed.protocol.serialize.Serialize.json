{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "This takes in an arbitrary Python object and returns a msgpack serializable header and a list of bytes or memoryview objects."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The serialization protocols to use are configurable: a list of names define the set of serializers to use, in order. These names are keys in the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "serializer_registry"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " dict (e.g., 'pickle', 'msgpack'), which maps to the de/serialize functions. The name 'dask' is special, and will use the per-class serialization methods. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "None"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " gives the default list "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "['dask', 'pickle']"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Notes on the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "iterate_collection"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " argument (only relevant when "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "x"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is a collection): - "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "iterate_collection=True"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ": Serialize collection elements separately. - "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "iterate_collection=False"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ": Serialize collection elements together. - "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "iterate_collection=None"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " (default): Infer the best setting."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [],
            "param": "",
            "type_": "header: dictionary containing any msgpack-serializable metadata"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "",
            "type_": "frames: list of bytes or memoryviews, commonly of length one"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Convert object to a header and list of bytestrings"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "distributed.protocol.serialize"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "serialize",
              "distributed.protocol.serialize.serialize",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "({}, [b'\\x80\\x04\\x95\\x03\\x00\\x00\\x00\\x00\\x00\\x00\\x00K\\x01.'])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "serialize",
              "distributed.protocol.serialize.serialize",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "b",
              "builtins.bytes",
              "sa"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "123",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# some special types get custom treatment",
              "",
              "c1"
            ]
          ],
          "out": "({'type': 'builtins.bytes'}, [b'123'])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "deserialize",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "serialize",
              "distributed.protocol.serialize.serialize",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "1"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/distributed/protocol/serialize.py",
  "item_line": 201,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Examples",
    "Returns",
    "See Also"
  ],
  "references": null,
  "refs": [
    "builtins.bytes",
    "deserialize",
    "distributed.protocol.serialize.serialize",
    "register_serialization",
    "to_serialize"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Convert header and frames back to object"
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "deserialize",
        "ref": "distributed.protocol.serialize.deserialize"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Mark that data in a message should be serialized"
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "to_serialize",
        "ref": null
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Register custom serialization functions"
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "register_serialization",
        "ref": "distributed.protocol.serialize.register_serialization"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "serialize(x, serializers=None, on_error='message', context=None, iterate_collection=None)"
  }
}