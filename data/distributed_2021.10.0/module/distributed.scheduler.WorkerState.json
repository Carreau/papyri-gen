{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "argument": "address: str",
            "content": "This worker's unique key.  This can be its connected address\n(such as ``'tcp://127.0.0.1:8891'``) or an alias (such as ``'alice'``).",
            "name": "attribute",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "argument": "processing: {TaskState: cost}",
            "content": "A dictionary of tasks that have been submitted to this worker.\nEach task state is associated with the expected cost in seconds\nof running that task, summing both the task's expected computation\ntime and the expected communication time of its result.\n\nIf a task is already executing on the worker and the excecution time is\ntwice the learned average TaskGroup duration, this will be set to twice\nthe current executing time. If the task is unknown, the default task\nduration is used instead of the TaskGroup average.\n\nMultiple tasks may be submitted to a worker in advance and the worker\nwill run them eventually, depending on its execution resources\n(but see :doc:`work-stealing`).\n\nAll the tasks here are in the \"processing\" state.\n\nThis attribute is kept in sync with :attr:`TaskState.processing_on`.",
            "name": "attribute",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "argument": "executing: {TaskState: duration}",
            "content": "A dictionary of tasks that are currently being run on this worker.\nEach task state is asssociated with the duration in seconds which\nthe task has been running.",
            "name": "attribute",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "argument": "has_what: {TaskState}",
            "content": "An insertion-sorted set-like of tasks which currently reside on this worker.\nAll the tasks here are in the \"memory\" state.\n\nThis is the reverse mapping of :class:`TaskState.who_has`.",
            "name": "attribute",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "argument": "nbytes: int",
            "content": "The total memory size, in bytes, used by the tasks this worker\nholds in memory (i.e. the tasks in this worker's :attr:`has_what`).",
            "name": "attribute",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "argument": "nthreads: int",
            "content": "The number of CPU threads made available on this worker.",
            "name": "attribute",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "argument": "resources: {str: Number}",
            "content": "The available resources on this worker like ``{'gpu': 2}``.\nThese are abstract quantities that constrain certain tasks from\nrunning at the same time on this worker.",
            "name": "attribute",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "argument": "used_resources: {str: Number}",
            "content": "The sum of each resource used by all tasks allocated to this worker.\nThe numbers in this dictionary can only be less or equal than\nthose in this worker's :attr:`resources`.",
            "name": "attribute",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "argument": "occupancy: double",
            "content": "The total expected runtime, in seconds, of all tasks currently\nprocessing on this worker.  This is the sum of all the costs in\nthis worker's :attr:`processing` dictionary.",
            "name": "attribute",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "argument": "status: Status",
            "content": "Read-only worker status, synced one way from the remote Worker object",
            "name": "attribute",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "argument": "nanny: str",
            "content": "Address of the associated Nanny, if present",
            "name": "attribute",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "argument": "last_seen: Py_ssize_t",
            "content": "The last time we received a heartbeat from this worker, in local\nscheduler time.",
            "name": "attribute",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "argument": "actors: {TaskState}",
            "content": "A set of all TaskStates on this worker that are actors.  This only\nincludes those actors whose state actually lives on this worker, not\nactors to which this worker has a reference.",
            "name": "attribute",
            "options": []
          },
          "type": "BlockDirective"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "A simple object holding information about a worker."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "distributed.scheduler.WorkerState"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/distributed/scheduler.py",
  "item_line": 388,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": null
  }
}