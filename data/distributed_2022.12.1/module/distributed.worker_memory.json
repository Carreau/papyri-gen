{
  "aliases": [
    "distributed.worker_memory"
  ],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Encapsulated manager for in-memory tasks on a worker."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This module covers: - spill/unspill data depending on the 'distributed.worker.memory.target' threshold - spill/unspill data depending on the 'distributed.worker.memory.spill' threshold - pause/unpause the worker depending on the 'distributed.worker.memory.pause' threshold - kill the worker depending on the 'distributed.worker.memory.terminate' threshold"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This module does "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "not"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " cover: - Changes in behaviour in Worker, Scheduler, task stealing, Active Memory Manager, etc.   caused by the Worker being in paused status - Worker restart after it's been killed - Scheduler-side heuristics regarding memory usage, e.g. the Active Memory Manager"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "See also: - "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "distributed.spill"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", which implements the spill-to-disk mechanism and is wrapped   by this module. Unlike this module, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "distributed.spill"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is agnostic to the   Worker. - "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "distributed.active_memory_manager"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", which runs on the scheduler side"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    }
  ],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This module covers: - spill/unspill data depending on the 'distributed.worker.memory.target' threshold - spill/unspill data depending on the 'distributed.worker.memory.spill' threshold - pause/unpause the worker depending on the 'distributed.worker.memory.pause' threshold - kill the worker depending on the 'distributed.worker.memory.terminate' threshold"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This module does "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "not"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " cover: - Changes in behaviour in Worker, Scheduler, task stealing, Active Memory Manager, etc.   caused by the Worker being in paused status - Worker restart after it's been killed - Scheduler-side heuristics regarding memory usage, e.g. the Active Memory Manager"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "See also: - "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "distributed.spill"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", which implements the spill-to-disk mechanism and is wrapped   by this module. Unlike this module, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "distributed.spill"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is agnostic to the   Worker. - "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "distributed.active_memory_manager"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", which runs on the scheduler side"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Encapsulated manager for in-memory tasks on a worker."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/distributed/worker_memory.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}