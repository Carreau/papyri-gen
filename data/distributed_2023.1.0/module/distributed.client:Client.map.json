{
  "aliases": [
    "distributed.Client.map"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Arguments can be normal objects or Futures"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Callable to be scheduled for execution. If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "func"
                    },
                    {
                      "type": "text",
                      "value": " returns a coroutine, it will be run on the main event loop of a worker. Otherwise "
                    },
                    {
                      "type": "inlineCode",
                      "value": "func"
                    },
                    {
                      "type": "text",
                      "value": " will be run in a worker's task executor pool (see "
                    },
                    {
                      "type": "inlineCode",
                      "value": "Worker.executors"
                    },
                    {
                      "type": "text",
                      "value": " for more information.)"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "func",
              "type": "Param",
              "type_": "callable"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "List-like objects to map over.  They should have the same length."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "iterables",
              "type": "Param",
              "type_": "Iterables"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Prefix for task names if string.  Explicit names if list."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "key",
              "type": "Param",
              "type_": "str, list"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A set of worker hostnames on which computations may be performed. Leave empty to default to all workers (common case)"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "workers",
              "type": "Param",
              "type_": "string or iterable of strings"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of allowed automatic retries if a task fails"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "retries",
              "type": "Param",
              "type_": "int (default to 0)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Defines the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "resources",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "resources"
                    },
                    {
                      "type": "text",
                      "value": " each instance of this mapped task requires on the worker; e.g. "
                    },
                    {
                      "type": "inlineCode",
                      "value": "{'GPU': 2}"
                    },
                    {
                      "type": "text",
                      "value": ". See "
                    },
                    {
                      "type": "inlineCode",
                      "value": "worker resources <resources>"
                    },
                    {
                      "type": "text",
                      "value": " for details on defining resources."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "resources",
              "type": "Param",
              "type_": "dict (defaults to {})"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Optional prioritization of task.  Zero is default. Higher priorities take precedence"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "priority",
              "type": "Param",
              "type_": "Number"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Used with "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "workers",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "workers"
                    },
                    {
                      "type": "text",
                      "value": ". Indicates whether or not the computations may be performed on workers that are not in the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "workers",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "workers"
                    },
                    {
                      "type": "text",
                      "value": " set(s)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "allow_other_workers",
              "type": "Param",
              "type_": "bool (defaults to False)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Allowed amount of time between calls to consider the same priority"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "fifo_timeout",
              "type": "Param",
              "type_": "str timedelta (default '100ms')"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether these tasks should exist on the worker as stateful actors. See "
                    },
                    {
                      "type": "inlineCode",
                      "value": "actors"
                    },
                    {
                      "type": "text",
                      "value": " for additional details."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "actor",
              "type": "Param",
              "type_": "bool (default False)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Alias for "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "actor",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "actor"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "actors",
              "type": "Param",
              "type_": "bool (default False)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether or not the function is pure.  Set "
                    },
                    {
                      "type": "inlineCode",
                      "value": "pure=False"
                    },
                    {
                      "type": "text",
                      "value": " for impure functions like "
                    },
                    {
                      "type": "inlineCode",
                      "value": "np.random.random"
                    },
                    {
                      "type": "text",
                      "value": ". See "
                    },
                    {
                      "type": "inlineCode",
                      "value": "pure functions"
                    },
                    {
                      "type": "text",
                      "value": " for more details."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "pure",
              "type": "Param",
              "type_": "bool (defaults to True)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Submit tasks to the scheduler in batches of (at most) "
                    },
                    {
                      "type": "inlineCode",
                      "value": "batch_size"
                    },
                    {
                      "type": "text",
                      "value": ". Larger batch sizes can be useful for very large "
                    },
                    {
                      "type": "inlineCode",
                      "value": "iterables"
                    },
                    {
                      "type": "text",
                      "value": ", as the cluster can start processing tasks while later ones are submitted asynchronously."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "batch_size",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Extra keyword arguments to send to the function. Large values will be included explicitly in the task graph."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "**kwargs",
              "type": "Param",
              "type_": "dict"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "",
              "type": "Param",
              "type_": "List, iterator, or Queue of futures, depending on the type of the"
            },
            {
              "desc": [],
              "param": "",
              "type": "Param",
              "type_": "inputs."
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Map a function on a sequence of arguments"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "L = client.map(func, sequence)  # doctest: +SKIP"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/distributed/client.py",
  "item_line": 1922,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Examples",
    "Returns",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Submit a single function"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "distributed",
          "path": "distributed.client:Client.submit",
          "type": "RefInfo",
          "version": "2023.1.0"
        },
        "type": "Link",
        "value": "Client.submit"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self, func, *iterables, key=None, workers=None, retries=None, resources=None, priority=0, allow_other_workers=False, fifo_timeout='100 ms', actor=False, actors=False, pure=None, batch_size=None, **kwargs)"
  },
  "type": "DocBlob"
}