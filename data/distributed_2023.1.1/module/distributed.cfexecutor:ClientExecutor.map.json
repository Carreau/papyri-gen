{
  "aliases": [
    "distributed.cfexecutor.ClientExecutor.map"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "passed iterables."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "fn",
              "type": "Param",
              "type_": "A callable that will take as many arguments as there are"
            },
            {
              "desc": [],
              "param": "iterables",
              "type": "Param",
              "type_": "One iterable for each parameter to *fn*."
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "is no limit on the wait time."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "timeout",
              "type": "Param",
              "type_": "The maximum number of seconds to wait. If None, then there"
            },
            {
              "desc": [],
              "param": "chunksize",
              "type": "Param",
              "type_": "ignored."
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If the entire result iterator could not be generated before the given timeout."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "concurrent.futures.TimeoutError:"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "fn(*args)"
                    },
                    {
                      "type": "text",
                      "value": " raises for any values."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "Exception:"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "",
              "type": "Param",
              "type_": "An iterator equivalent to: ``map(fn, *iterables)`` but the calls may"
            },
            {
              "desc": [],
              "param": "",
              "type": "Param",
              "type_": "be evaluated out-of-order."
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns an iterator equivalent to "
            },
            {
              "type": "inlineCode",
              "value": "map(fn, *iterables)"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/distributed/cfexecutor.py",
  "item_line": 99,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Raises"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self, fn, *iterables, **kwargs)"
  },
  "type": "DocBlob"
}