{
  "aliases": [
    "distributed.Client.subscribe_topic"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The topic name"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "topic: str",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A handler called for every received event. The handler must accept a single argument "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "distributed",
                        "path": "distributed.event",
                        "type": "RefInfo",
                        "version": "2023.1.1"
                      },
                      "type": "Link",
                      "value": "event"
                    },
                    {
                      "type": "text",
                      "value": " which is a tuple "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "(timestamp, msg)"
                    },
                    {
                      "type": "text",
                      "value": " where timestamp refers to the clock on the scheduler."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "handler: callable or coroutine function",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Subscribe to a topic and execute a handler for every received event"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import logging\nlogger = logging.getLogger(\"myLogger\")  # Log config not shown\nclient.subscribe_topic(\"topic-name\", lambda: logger.info)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/distributed/client.py",
  "item_line": 4308,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Examples",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "dask.distributed.Client.unsubscribe_topic",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "dask.distributed.Client.unsubscribe_topic"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "dask.distributed.Client.get_events",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "dask.distributed.Client.get_events"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "dask.distributed.Client.log_event",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "dask.distributed.Client.log_event"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self, topic, handler)"
  },
  "type": "DocBlob"
}