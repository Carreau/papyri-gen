{
  "aliases": [
    "distributed.recreate_tasks.ReplayTaskClient.recreate_error_locally"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This operation should be performed after a future (result of "
            },
            {
              "type": "inlineCode",
              "value": "gather"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "compute"
            },
            {
              "type": "text",
              "value": ", etc) comes back with a status of \"error\", if the stack- trace is not informative enough to diagnose the problem. The specific task (part of the graph pointing to the future) responsible for the error will be fetched from the scheduler, together with the values of its inputs. The function will then be executed, so that "
            },
            {
              "type": "inlineCode",
              "value": "pdb"
            },
            {
              "type": "text",
              "value": " can be used for debugging."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The same thing as was given to "
                    },
                    {
                      "type": "inlineCode",
                      "value": "gather"
                    },
                    {
                      "type": "text",
                      "value": ", but came back with an exception/stack-trace. Can also be a (persisted) dask collection containing any errored futures."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "future",
              "type": "Param",
              "type_": "future or collection that failed"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "",
              "type": "Param",
              "type_": "Nothing; the function runs and should raise an exception, allowing"
            },
            {
              "desc": [],
              "param": "",
              "type": "Param",
              "type_": "the debugger to run."
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "For a failed calculation, perform the blamed task locally for debugging."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "future = c.submit(div, 1, 0)         # doctest: +SKIP\nfuture.status                        # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "c.recreate_error_locally(future)     # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "If you're in IPython you might take this opportunity to use pdb"
      },
      {
        "type": "code",
        "value": "%pdb                                 # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "c.recreate_error_locally(future)     # doctest: +SKIP"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/distributed/recreate_tasks.py",
  "item_line": 160,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Examples",
    "Parameters",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self, future)"
  },
  "type": "DocBlob"
}