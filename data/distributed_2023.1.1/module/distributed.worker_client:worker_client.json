{
  "aliases": [
    "distributed.worker_client"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This context manager is intended to be called within functions that we run on workers.  When run as a context manager it delivers a client "
            },
            {
              "type": "inlineCode",
              "value": "Client"
            },
            {
              "type": "text",
              "value": " object that can submit other tasks directly from that worker."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Timeout after which to error out. Defaults to the "
                    },
                    {
                      "type": "inlineCode",
                      "value": "distributed.comm.timeouts.connect"
                    },
                    {
                      "type": "text",
                      "value": " configuration value."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "timeout",
              "type": "Param",
              "type_": "Number or String"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether to run this function outside of the normal thread pool defaults to True"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "separate_thread",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Get client for this thread"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "def func(x):\n    with worker_client() as c:  # connect from worker back to scheduler\n        a = c.submit(inc, x)     # this task can submit more tasks\n        b = c.submit(dec, x)\n        result = c.gather([a, b])  # and gather results\n    return result"
      },
      {
        "type": "code",
        "value": "future = client.submit(func, 1)  # submit func(1) on cluster"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/distributed/worker_client.py",
  "item_line": 14,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Examples",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "get_worker",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "get_worker"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "distributed",
          "path": "distributed.deploy.cluster:Cluster.get_client",
          "type": "RefInfo",
          "version": "2023.1.1"
        },
        "type": "Link",
        "value": "get_client"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "secede",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "secede"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(timeout=None, separate_thread=True)"
  },
  "type": "DocBlob"
}