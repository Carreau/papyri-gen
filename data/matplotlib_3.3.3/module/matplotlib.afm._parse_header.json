{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Read the font metrics header (up to the char metrics) and returns a dictionary mapping *key* to *val*.  *val* will be converted to the appropriate python type as necessary; e.g.:"
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                      "_number": 0,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    * 'False'->False",
                      "_number": 0,
                      "_offset": 0
                    },
                    {
                      "_line": "    * '0'->0",
                      "_number": 1,
                      "_offset": 0
                    },
                    {
                      "_line": "    * '-168 -218 1000 898'-> [-168, -218, 1000, 898]",
                      "_number": 2,
                      "_offset": 0
                    },
                    {
                      "_line": "",
                      "_number": 3,
                      "_offset": 0
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "* 'False'->False * '0'->0 * '-168 -218 1000 898'-> [-168, -218, 1000, 898] "
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Dictionary keys are"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "  StartFontMetrics, FontName, FullName, FamilyName, Weight,   ItalicAngle, IsFixedPitch, FontBBox, UnderlinePosition,   UnderlineThickness, Version, Notice, EncodingScheme, CapHeight,   XHeight, Ascender, Descender, StartCharMetrics"
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": []
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/afm.py",
  "item_line": 88,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.afm._parse_header"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "_parse_header(fh)"
}