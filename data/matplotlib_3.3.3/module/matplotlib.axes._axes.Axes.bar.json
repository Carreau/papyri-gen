{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Make a bar plot."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The bars are positioned at *x* with the given *align*\\ment. Their dimensions are given by *height* and *width*. The vertical baseline is *bottom* (default 0)."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Many parameters can take either a single value applying to all bars or a sequence of values, one for each bar."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "x",
            "type_": "float or array-like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The x coordinates of the bars. See also *align* for the alignment of the bars to the coordinates."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "height",
            "type_": "float or array-like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The height(s) of the bars."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "width",
            "type_": "float or array-like, default: 0.8",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The width(s) of the bars."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "bottom",
            "type_": "float or array-like, default: 0",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The y coordinate(s) of the bars bases."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "align",
            "type_": "{'center', 'edge'}, default: 'center'",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Alignment of the bars to the *x* coordinates:"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- 'center': Center the base on the *x* positions. - 'edge': Align the left edges of the bars with the *x* positions."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "To align the bars on the right edge pass a negative *width* and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "align='edge'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "`.BarContainer`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Container with all the bars and optionally errorbars."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "color",
            "type_": "color or list of color, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The colors of the bar faces."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "edgecolor",
            "type_": "color or list of color, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The colors of the bar edges."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "linewidth",
            "type_": "float or array-like, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Width of the bar edge(s). If 0, don't draw edges."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "tick_label",
            "type_": "str or list of str, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The tick labels of the bars. Default: None (Use default numeric labels.)"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "xerr, yerr",
            "type_": "float or array-like of shape(N,) or shape(2, N), optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If not *None*, add horizontal / vertical errorbars to the bar tips. The values are +/- sizes relative to the data:"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- scalar: symmetric +/- values for all bars - shape(N,): symmetric +/- values for each bar - shape(2, N): Separate - and + values for each bar. First row"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "  contains the lower errors, the second row contains the upper   errors."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- *None*: No errorbar. (Default)"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "See "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "/gallery/statistics/errorbar",
                          "_",
                          "features"
                        ],
                        "domain": null,
                        "role": "doc"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " for an example on the usage of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "xerr"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "yerr"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "ecolor",
            "type_": "color or list of color, default: 'black'",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The line color of the errorbars."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "capsize",
            "type_": "float, default: :rc:`errorbar.capsize`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The length of the error bar caps in points."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "error_kw",
            "type_": "dict, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Dictionary of kwargs to be passed to the "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~.Axes.errorbar"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " method. Values of *ecolor* or *capsize* defined here take precedence over the independent kwargs."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "log",
            "type_": "bool, default: False",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If *True*, set the y-axis to be log scale."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "**kwargs",
            "type_": "`.Rectangle` properties",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "Properties:",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array alpha: float or None animated: bool antialiased or aa: unknown capstyle: {'butt', 'round', 'projecting'} clip_box: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Bbox"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " clip_on: bool clip_path: Patch or (Path, Transform) or None color: color contains: unknown edgecolor or ec: color or None or 'auto' facecolor or fc: color or None figure: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Figure"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " fill: bool gid: str hatch: {'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'} in_layout: bool joinstyle: {'miter', 'round', 'bevel'} label: object linestyle or ls: {'-', '--', '-.', ':', '', (offset, on-off-seq), ...} linewidth or lw: float or None path_effects: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".AbstractPathEffect"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " picker: None or bool or callable rasterized: bool or None sketch_params: (scale: float, length: float, randomness: float) snap: bool or None transform: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Transform"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " url: str visible: bool zorder: float"
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Stacked bars can be achieved by passing individual *bottom* values per bar. See "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "/gallery/lines",
                    "_",
                    "bars",
                    "_",
                    "and",
                    "_",
                    "markers/bar",
                    "_",
                    "stacked"
                  ],
                  "domain": null,
                  "role": "doc"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. note::",
                  "_number": 3,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": [
                {
                  "_line": "    In addition to the above described arguments, this function can take",
                  "_number": 4,
                  "_offset": 0
                },
                {
                  "_line": "    a *data* keyword argument. If such a *data* argument is given,",
                  "_number": 5,
                  "_offset": 0
                },
                {
                  "_line": "    every other argument can also be string ``s``, which is",
                  "_number": 6,
                  "_offset": 0
                },
                {
                  "_line": "    interpreted as ``data[s]`` (unless this raises an exception).",
                  "_number": 7,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 8,
                  "_offset": 0
                },
                {
                  "_line": "    Objects passed as **data** must support item access (``data[s]``) and",
                  "_number": 9,
                  "_offset": 0
                },
                {
                  "_line": "    membership test (``s in data``).",
                  "_number": 10,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "note",
            "args0": [
              ""
            ],
            "inner": {
              "children": [
                {
                  "type": "Words",
                  "data": {
                    "value": "In addition to the above described arguments, this function can take a *data* keyword argument. If such a *data* argument is given, every other argument can also be string "
                  }
                },
                {
                  "type": "Verbatim",
                  "data": {
                    "value": [
                      "s"
                    ]
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", which is interpreted as "
                  }
                },
                {
                  "type": "Verbatim",
                  "data": {
                    "value": [
                      "data[s]"
                    ]
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": " (unless this raises an exception).  Objects passed as **data** must support item access ("
                  }
                },
                {
                  "type": "Verbatim",
                  "data": {
                    "value": [
                      "data[s]"
                    ]
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ") and membership test ("
                  }
                },
                {
                  "type": "Verbatim",
                  "data": {
                    "value": [
                      "s",
                      " ",
                      "in",
                      " ",
                      "data"
                    ]
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ")."
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    "barh"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Other Parameters",
    "See Also",
    "Notes"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/__init__.py",
  "item_line": 2264,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.pyplot.Axes.bar"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [
    {
      "name": {
        "name": "barh",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Plot a horizontal bar plot."
              }
            }
          ]
        }
      ],
      "type": null
    }
  ],
  "references": null,
  "signature": "bar(self, x, height, width=0.8, bottom=None, *, align='center', data=None, **kwargs)"
}