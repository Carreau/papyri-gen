{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Add a child inset axes to this existing axes."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": []
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "bounds",
            "type_": "[x0, y0, width, height]",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Lower-left corner of inset axes, and its width and height."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "transform",
            "type_": "`.Transform`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Defaults to "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "ax.transAxes"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", i.e. the units of *rect* are in axes-relative coordinates."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "zorder",
            "type_": "number",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Defaults to 5 (same as "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Axes.legend"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ").  Adjust higher or lower to change whether it is above or below data plotted on the parent axes."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "**kwargs",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Other keyword arguments are passed on to the child "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Axes"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "ax",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The created "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~.axes.Axes"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " instance."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "This method is experimental as of 3.0, and the API may change."
                }
              }
            ]
          }
        }
      ]
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Warnings",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/axes/_axes.py",
  "item_line": 424,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.pyplot.Axes.inset_axes"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "This example makes two inset axes, the first is in axes-relative coordinates, and the second in data-coordinates::"
              }
            }
          ]
        }
      },
      {
        "type": "DefList",
        "data": {
          "children": [
            {
              "lines": {
                "_lines": [
                  {
                    "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                    "_number": 0,
                    "_offset": 0
                  }
                ]
              },
              "wh": {
                "_lines": []
              },
              "ind": {
                "_lines": [
                  {
                    "_line": "    fig, ax = plt.subplots()",
                    "_number": 0,
                    "_offset": 0
                  },
                  {
                    "_line": "    ax.plot(range(10))",
                    "_number": 1,
                    "_offset": 0
                  },
                  {
                    "_line": "    axin1 = ax.inset_axes([0.8, 0.1, 0.15, 0.15])",
                    "_number": 2,
                    "_offset": 0
                  },
                  {
                    "_line": "    axin2 = ax.inset_axes(",
                    "_number": 3,
                    "_offset": 0
                  },
                  {
                    "_line": "            [5, 7, 2.3, 2.3], transform=ax.transData)",
                    "_number": 4,
                    "_offset": 0
                  }
                ]
              },
              "dt": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                    }
                  }
                ]
              },
              "dd": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "fig, ax = plt.subplots() ax.plot(range(10)) axin1 = ax.inset_axes([0.8, 0.1, 0.15, 0.15]) axin2 = ax.inset_axes(         [5, 7, 2.3, 2.3], transform=ax.transData)"
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    ]
  },
  "see_also": [],
  "references": null,
  "signature": "inset_axes(self, bounds, *, transform=None, zorder=5, **kwargs)"
}