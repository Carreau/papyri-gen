{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Plot y versus x as lines and/or markers."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Call signatures::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "    plot([x], y, [fmt], *, data=None, **kwargs)",
                  "_number": 2,
                  "_offset": 4
                },
                {
                  "_line": "    plot([x], y, [fmt], [x2], y2, [fmt2], ..., **kwargs)",
                  "_number": 3,
                  "_offset": 4
                },
                {
                  "_line": "",
                  "_number": 4,
                  "_offset": 4
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The coordinates of the points or line nodes are given by *x*, *y*."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The optional parameter *fmt* is a convenient way for defining basic formatting like color, marker and linestyle. It's a shortcut string notation described in the *Notes* section below."
                }
              }
            ]
          }
        },
        {
          "type": "Example",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ">>> plot(x, y)        # plot x and y using default line style and color",
                  "_number": 11,
                  "_offset": 0
                },
                {
                  "_line": ">>> plot(x, y, 'bo')  # plot x and y using blue circle markers",
                  "_number": 12,
                  "_offset": 0
                },
                {
                  "_line": ">>> plot(y)           # plot y using x as index array 0..N-1",
                  "_number": 13,
                  "_offset": 0
                },
                {
                  "_line": ">>> plot(y, 'r+')     # ditto, but with red plusses",
                  "_number": 14,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 15,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": []
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "You can use "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    ".Line2D"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " properties as keyword arguments for more control on the appearance. Line properties and *fmt* can be mixed. The following two calls yield identical results:"
                }
              }
            ]
          }
        },
        {
          "type": "Example",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ">>> plot(x, y, 'go--', linewidth=2, markersize=12)",
                  "_number": 20,
                  "_offset": 0
                },
                {
                  "_line": ">>> plot(x, y, color='green', marker='o', linestyle='dashed',",
                  "_number": 21,
                  "_offset": 0
                },
                {
                  "_line": "...      linewidth=2, markersize=12)",
                  "_number": 22,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 23,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": []
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "When conflicting with *fmt*, keyword arguments take precedence."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "**Plotting labelled data**"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "There's a convenient way for plotting objects with labelled data (i.e. data that can be accessed by index "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "obj['y']"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "). Instead of giving the data in *x* and *y*, you can provide the object in the *data* parameter and just give the labels for *x* and *y*::"
                }
              }
            ]
          }
        },
        {
          "type": "Example",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ">>> plot('xlabel', 'ylabel', data=obj)",
                  "_number": 33,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 34,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": []
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "All indexable objects are supported. This could e.g. be a "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "dict"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", a "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "pandas.DataFrame"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " or a structured numpy array."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "**Plotting multiple sets of data**"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "There are various ways to plot multiple sets of data."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "- The most straight forward way is just to call "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "plot"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " multiple times."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "  Example:"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "  >>> plot(x1, y1, 'bo')   >>> plot(x2, y2, 'go')"
                }
              }
            ]
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "- Alternatively, if your data is already a 2d array, you can pass it",
                      "_number": 48,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "  directly to *x*, *y*. A separate data set will be drawn for every",
                      "_number": 49,
                      "_offset": 0
                    },
                    {
                      "_line": "  column.",
                      "_number": 50,
                      "_offset": 0
                    },
                    {
                      "_line": "",
                      "_number": 51,
                      "_offset": 0
                    },
                    {
                      "_line": "  Example: an array ``a`` where the first column represents the *x*",
                      "_number": 52,
                      "_offset": 0
                    },
                    {
                      "_line": "  values and the other columns are the *y* columns::",
                      "_number": 53,
                      "_offset": 0
                    },
                    {
                      "_line": "",
                      "_number": 54,
                      "_offset": 0
                    },
                    {
                      "_line": "  >>> plot(a[0], a[1:])",
                      "_number": 55,
                      "_offset": 0
                    },
                    {
                      "_line": "",
                      "_number": 56,
                      "_offset": 0
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- Alternatively, if your data is already a 2d array, you can pass it"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "directly to *x*, *y*. A separate data set will be drawn for every column.  Example: an array "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "a"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " where the first column represents the *x* values and the other columns are the *y* columns::  >>> plot(a[0], a[1:]) "
                      }
                    }
                  ]
                }
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "- The third way is to specify multiple sets of *[x]*, *y*, *[fmt]*",
                      "_number": 57,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "  groups::",
                      "_number": 58,
                      "_offset": 0
                    },
                    {
                      "_line": "",
                      "_number": 59,
                      "_offset": 0
                    },
                    {
                      "_line": "  >>> plot(x1, y1, 'g^', x2, y2, 'g-')",
                      "_number": 60,
                      "_offset": 0
                    },
                    {
                      "_line": "",
                      "_number": 61,
                      "_offset": 0
                    },
                    {
                      "_line": "  In this case, any additional keyword argument applies to all",
                      "_number": 62,
                      "_offset": 0
                    },
                    {
                      "_line": "  datasets. Also this syntax cannot be combined with the *data*",
                      "_number": 63,
                      "_offset": 0
                    },
                    {
                      "_line": "  parameter.",
                      "_number": 64,
                      "_offset": 0
                    },
                    {
                      "_line": "",
                      "_number": 65,
                      "_offset": 0
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- The third way is to specify multiple sets of *[x]*, *y*, *[fmt]*"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "groups::  >>> plot(x1, y1, 'g^', x2, y2, 'g-')  In this case, any additional keyword argument applies to all datasets. Also this syntax cannot be combined with the *data* parameter. "
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "By default, each line is assigned a different style specified by a 'style cycle'. The *fmt* and line property parameters are only necessary if you want explicit deviations from these defaults. Alternatively, you can also change the style cycle using "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "axes.prop",
                    "_",
                    "cycle"
                  ],
                  "domain": null,
                  "role": "rc"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "x, y",
            "type_": "array-like or scalar",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The horizontal / vertical coordinates of the data points. *x* values are optional and default to "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "range(len(y))"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Commonly, these parameters are 1D arrays."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "They can also be scalars, or two-dimensional (in that case, the columns represent separate data sets)."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "These arguments cannot be passed as keywords."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "fmt",
            "type_": "str, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A format string, e.g. 'ro' for red circles. See the *Notes* section for a full description of the format strings."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Format strings are just an abbreviation for quickly setting basic line properties. All of these and more can also be controlled by keyword arguments."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "This argument cannot be passed as keyword."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "data",
            "type_": "indexable object, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "An object with labelled data. If given, provide the label names to plot in *x* and *y*."
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockDirective",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ".. note::",
                        "_number": 3,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": []
                  },
                  "ind": {
                    "_lines": [
                      {
                        "_line": "    Technically there's a slight ambiguity in calls where the",
                        "_number": 4,
                        "_offset": 0
                      },
                      {
                        "_line": "    second label is a valid *fmt*. ``plot('n', 'o', data=obj)``",
                        "_number": 5,
                        "_offset": 0
                      },
                      {
                        "_line": "    could be ``plt(x, y)`` or ``plt(y, fmt)``. In such cases,",
                        "_number": 6,
                        "_offset": 0
                      },
                      {
                        "_line": "    the former interpretation is chosen, but a warning is issued.",
                        "_number": 7,
                        "_offset": 0
                      },
                      {
                        "_line": "    You may suppress the warning by adding an empty format string",
                        "_number": 8,
                        "_offset": 0
                      },
                      {
                        "_line": "    ``plot('n', 'o', '', data=obj)``.",
                        "_number": 9,
                        "_offset": 0
                      }
                    ]
                  },
                  "directive_name": "note",
                  "args0": [
                    ""
                  ],
                  "inner": {
                    "children": [
                      {
                        "type": "Words",
                        "data": {
                          "value": "Technically there's a slight ambiguity in calls where the second label is a valid *fmt*. "
                        }
                      },
                      {
                        "type": "Verbatim",
                        "data": {
                          "value": [
                            "plot('n',",
                            " ",
                            "'o',",
                            " ",
                            "data=obj)"
                          ]
                        }
                      },
                      {
                        "type": "Words",
                        "data": {
                          "value": " could be "
                        }
                      },
                      {
                        "type": "Verbatim",
                        "data": {
                          "value": [
                            "plt(x,",
                            " ",
                            "y)"
                          ]
                        }
                      },
                      {
                        "type": "Words",
                        "data": {
                          "value": " or "
                        }
                      },
                      {
                        "type": "Verbatim",
                        "data": {
                          "value": [
                            "plt(y,",
                            " ",
                            "fmt)"
                          ]
                        }
                      },
                      {
                        "type": "Words",
                        "data": {
                          "value": ". In such cases, the former interpretation is chosen, but a warning is issued. You may suppress the warning by adding an empty format string "
                        }
                      },
                      {
                        "type": "Verbatim",
                        "data": {
                          "value": [
                            "plot('n',",
                            " ",
                            "'o',",
                            " ",
                            "'',",
                            " ",
                            "data=obj)"
                          ]
                        }
                      },
                      {
                        "type": "Words",
                        "data": {
                          "value": "."
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "list of `.Line2D`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A list of lines representing the plotted data."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "scalex, scaley",
            "type_": "bool, default: True",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "These parameters determine if the view limits are adapted to the data limits. The values are passed on to "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "autoscale",
                          "_",
                          "view"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "**kwargs",
            "type_": "`.Line2D` properties, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "*kwargs* are used to specify properties like a line label (for auto legends), linewidth, antialiasing, marker face color. Example::"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Example",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ">>> plot([1, 2, 3], [1, 2, 3], 'go-', label='line 1', linewidth=2)",
                        "_number": 4,
                        "_offset": 0
                      },
                      {
                        "_line": ">>> plot([1, 2, 3], [1, 4, 9], 'rs', label='line 2')",
                        "_number": 5,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": [
                      {
                        "_line": "",
                        "_number": 6,
                        "_offset": 0
                      }
                    ]
                  },
                  "ind": {
                    "_lines": []
                  }
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If you make multiple lines with one plot call, the kwargs apply to all those lines."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Here is a list of available "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Line2D"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " properties:"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Properties: agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array alpha: float or None animated: bool antialiased or aa: bool clip_box: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Bbox"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " clip_on: bool clip_path: Patch or (Path, Transform) or None color or c: color contains: unknown dash_capstyle: {'butt', 'round', 'projecting'} dash_joinstyle: {'miter', 'round', 'bevel'} dashes: sequence of floats (on/off ink in points) or (None, None) data: (2, N) array or two 1D arrays drawstyle or ds: {'default', 'steps', 'steps-pre', 'steps-mid', 'steps-post'}, default: 'default' figure: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Figure"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " fillstyle: {'full', 'left', 'right', 'bottom', 'top', 'none'} gid: str in_layout: bool label: object linestyle or ls: {'-', '--', '-.', ':', '', (offset, on-off-seq), ...} linewidth or lw: float marker: marker style string, "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~.path.Path"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~.markers.MarkerStyle"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " markeredgecolor or mec: color markeredgewidth or mew: float markerfacecolor or mfc: color markerfacecoloralt or mfcalt: color markersize or ms: float markevery: None or int or (int, int) or slice or List[int] or float or (float, float) or List[bool] path_effects: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".AbstractPathEffect"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " picker: unknown pickradius: float rasterized: bool or None sketch_params: (scale: float, length: float, randomness: float) snap: bool or None solid_capstyle: {'butt', 'round', 'projecting'} solid_joinstyle: {'miter', 'round', 'bevel'} transform: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "matplotlib.transforms.Transform"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " url: str visible: bool xdata: 1D array ydata: 1D array zorder: float"
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "**Format Strings**"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "A format string consists of a part for color, marker and line::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "    fmt = '[marker][line][color]'",
                  "_number": 4,
                  "_offset": 4
                },
                {
                  "_line": "",
                  "_number": 5,
                  "_offset": 4
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Each of them is optional. If not provided, the value from the style cycle is used. Exception: If "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "line"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is given, but no "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "marker"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", the data will be a line without markers."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Other combinations such as "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "[color][marker][line]"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " are also supported, but note that their parsing may be ambiguous."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "**Markers**"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "=============    =============================== character        description =============    =============================== "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'.'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          point marker "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "','"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          pixel marker "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'o'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          circle marker "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'v'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          triangle_down marker "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'^'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          triangle_up marker "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'<'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          triangle_left marker "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'>'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          triangle_right marker "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'1'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          tri_down marker "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'2'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          tri_up marker "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'3'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          tri_left marker "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'4'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          tri_right marker "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'s'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          square marker "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'p'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          pentagon marker "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'",
                    "*",
                    "'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          star marker "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'h'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          hexagon1 marker "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'H'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          hexagon2 marker "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'+'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          plus marker "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'x'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          x marker "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'D'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          diamond marker "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'d'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          thin_diamond marker "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'|'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          vline marker "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'",
                    "_",
                    "'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          hline marker =============    ==============================="
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "**Line Styles**"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "=============    =============================== character        description =============    =============================== "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'-'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          solid line style "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'--'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "         dashed line style "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'-.'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "         dash-dot line style "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'",
                    ":",
                    "'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          dotted line style =============    ==============================="
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Example format strings::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "    'b'    # blue markers with default shape",
                  "_number": 55,
                  "_offset": 4
                },
                {
                  "_line": "    'or'   # red circles",
                  "_number": 56,
                  "_offset": 4
                },
                {
                  "_line": "    '-g'   # green solid line",
                  "_number": 57,
                  "_offset": 4
                },
                {
                  "_line": "    '--'   # dashed line with default color",
                  "_number": 58,
                  "_offset": 4
                },
                {
                  "_line": "    '^k:'  # black triangle_up markers connected by a dotted line",
                  "_number": 59,
                  "_offset": 4
                },
                {
                  "_line": "",
                  "_number": 60,
                  "_offset": 4
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "**Colors**"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The supported color abbreviations are the single letter codes"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "=============    =============================== character        color =============    =============================== "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'b'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          blue "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'g'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          green "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'r'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          red "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'c'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          cyan "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'m'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          magenta "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'y'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          yellow "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'k'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          black "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'w'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          white =============    ==============================="
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "and the "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'CN'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " colors that index into the default property cycle."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "If the color is the only part of the format string, you can additionally use any  "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "matplotlib.colors"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " spec, e.g. full names ("
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'green'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ") or hex strings ("
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'#008000'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ")."
                }
              }
            ]
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    "scatter"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Other Parameters",
    "See Also",
    "Notes"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/axes/_axes.py",
  "item_line": 1510,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.pyplot.Axes.plot"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [
    {
      "name": {
        "name": "scatter",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "XY scatter plot with markers of varying size and/or color ( sometimes also called bubble chart)."
              }
            }
          ]
        }
      ],
      "type": null
    }
  ],
  "references": null,
  "signature": "plot(self, *args, scalex=True, scaley=True, data=None, **kwargs)"
}