{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "A scatter plot of *y* vs. *x* with varying marker size and/or color."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": []
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "x, y",
            "type_": "float or array-like, shape (n, )",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The data positions."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "s",
            "type_": "float or array-like, shape (n, ), optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The marker size in points**2. Default is "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "rcParams['lines.markersize']",
                          " ",
                          "*",
                          "*",
                          " ",
                          "2"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "c",
            "type_": "array-like or list of colors or color, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The marker colors. Possible values:"
                      }
                    }
                  ]
                }
              },
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "- A scalar or sequence of n numbers to be mapped to colors using",
                            "_number": 2,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "  *cmap* and *norm*.",
                            "_number": 3,
                            "_offset": 0
                          }
                        ]
                      },
                      "dt": {
                        "children": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "- A scalar or sequence of n numbers to be mapped to colors using"
                            }
                          }
                        ]
                      },
                      "dd": {
                        "children": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "*cmap* and *norm*."
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- A 2-D array in which the rows are RGB or RGBA. - A sequence of colors of length n. - A single color format string."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Note that *c* should not be a single numeric RGB or RGBA sequence because that is indistinguishable from an array of values to be colormapped. If you want to specify the same RGB or RGBA value for all points, use a 2-D array with a single row.  Otherwise, value- matching will have precedence in case of a size matching with *x* and *y*."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If you wish to specify a single color for all points prefer the *color* keyword argument."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Defaults to "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "None"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". In that case the marker color is determined by the value of *color*, *facecolor* or *facecolors*. In case those are not specified or "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "None"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", the marker color is determined by the next color of the "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "Axes"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "' current \"shape and fill\" color cycle. This cycle defaults to "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "axes.prop",
                          "_",
                          "cycle"
                        ],
                        "domain": null,
                        "role": "rc"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "marker",
            "type_": "`~.markers.MarkerStyle`, default: :rc:`scatter.marker`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The marker style. *marker* can be either an instance of the class or the text shorthand for a particular marker. See "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "matplotlib.markers"
                        ],
                        "domain": null,
                        "role": "mod"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " for more information about marker styles."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "cmap",
            "type_": "str or `~matplotlib.colors.Colormap`, default: :rc:`image.cmap`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Colormap"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " instance or registered colormap name. *cmap* is only used if *c* is an array of floats."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "norm",
            "type_": "`~matplotlib.colors.Normalize`, default: None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If *c* is an array of floats, *norm* is used to scale the color data, *c*, in the range 0 to 1, in order to map into the colormap *cmap*. If *None*, use the default "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".colors.Normalize"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "vmin, vmax",
            "type_": "float, default: None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "*vmin* and *vmax* are used in conjunction with the default norm to map the color array *c* to the colormap *cmap*. If None, the respective min and max of the color array is used. It is deprecated to use *vmin*/*vmax* when *norm* is given."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "alpha",
            "type_": "float, default: None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The alpha blending value, between 0 (transparent) and 1 (opaque)."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "linewidths",
            "type_": "float or array-like, default: :rc:`lines.linewidth`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The linewidth of the marker edges. Note: The default *edgecolors* is 'face'. You may want to change this as well."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "edgecolors",
            "type_": "{'face', 'none', *None*} or color or sequence of color, default: :rc:`scatter.edgecolors`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The edge color of the marker. Possible values:"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- 'face': The edge color will always be the same as the face color. - 'none': No patch boundary will be drawn. - A color or sequence of colors."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "For non-filled markers, the *edgecolors* kwarg is ignored and forced to 'face' internally."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "plotnonfinite",
            "type_": "bool, default: False",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Set to plot points with nonfinite *c*, in conjunction with "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~matplotlib.colors.Colormap.set",
                          "_",
                          "bad"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "`~matplotlib.collections.PathCollection`",
            "desc": []
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "**kwargs",
            "type_": "`~matplotlib.collections.Collection` properties",
            "desc": []
          }
        }
      ]
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "* The "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    ".plot"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " function will be faster for scatterplots where markers"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "  don't vary in size or color."
                }
              }
            ]
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. note::",
                  "_number": 12,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": [
                {
                  "_line": "    In addition to the above described arguments, this function can take",
                  "_number": 13,
                  "_offset": 0
                },
                {
                  "_line": "    a *data* keyword argument. If such a *data* argument is given,",
                  "_number": 14,
                  "_offset": 0
                },
                {
                  "_line": "    the following arguments can also be string ``s``, which is",
                  "_number": 15,
                  "_offset": 0
                },
                {
                  "_line": "    interpreted as ``data[s]`` (unless this raises an exception):",
                  "_number": 16,
                  "_offset": 0
                },
                {
                  "_line": "    *x*, *y*, *s*, *linewidths*, *edgecolors*, *c*, *facecolor*, *facecolors*, *color*.",
                  "_number": 17,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 18,
                  "_offset": 0
                },
                {
                  "_line": "    Objects passed as **data** must support item access (``data[s]``) and",
                  "_number": 19,
                  "_offset": 0
                },
                {
                  "_line": "    membership test (``s in data``).",
                  "_number": 20,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "note",
            "args0": [
              ""
            ],
            "inner": {
              "children": [
                {
                  "type": "Words",
                  "data": {
                    "value": "In addition to the above described arguments, this function can take a *data* keyword argument. If such a *data* argument is given, the following arguments can also be string "
                  }
                },
                {
                  "type": "Verbatim",
                  "data": {
                    "value": [
                      "s"
                    ]
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", which is interpreted as "
                  }
                },
                {
                  "type": "Verbatim",
                  "data": {
                    "value": [
                      "data[s]"
                    ]
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": " (unless this raises an exception): *x*, *y*, *s*, *linewidths*, *edgecolors*, *c*, *facecolor*, *facecolors*, *color*.  Objects passed as **data** must support item access ("
                  }
                },
                {
                  "type": "Verbatim",
                  "data": {
                    "value": [
                      "data[s]"
                    ]
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ") and membership test ("
                  }
                },
                {
                  "type": "Verbatim",
                  "data": {
                    "value": [
                      "s",
                      " ",
                      "in",
                      " ",
                      "data"
                    ]
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ")."
                  }
                }
              ]
            }
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "* Any or all of *x*, *y*, *s*, and *c* may be masked arrays, in which",
                      "_number": 3,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "  case all masks will be combined and only unmasked points will be",
                      "_number": 4,
                      "_offset": 0
                    },
                    {
                      "_line": "  plotted.",
                      "_number": 5,
                      "_offset": 0
                    },
                    {
                      "_line": "",
                      "_number": 6,
                      "_offset": 0
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "* Any or all of *x*, *y*, *s*, and *c* may be masked arrays, in which"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "case all masks will be combined and only unmasked points will be plotted. "
                      }
                    }
                  ]
                }
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "* Fundamentally, scatter works with 1-D arrays; *x*, *y*, *s*, and *c*",
                      "_number": 7,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "  may be input as N-D arrays, but within scatter they will be",
                      "_number": 8,
                      "_offset": 0
                    },
                    {
                      "_line": "  flattened. The exception is *c*, which will be flattened only if its",
                      "_number": 9,
                      "_offset": 0
                    },
                    {
                      "_line": "  size matches the size of *x* and *y*.",
                      "_number": 10,
                      "_offset": 0
                    },
                    {
                      "_line": "",
                      "_number": 11,
                      "_offset": 0
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "* Fundamentally, scatter works with 1-D arrays; *x*, *y*, *s*, and *c*"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "may be input as N-D arrays, but within scatter they will be flattened. The exception is *c*, which will be flattened only if its size matches the size of *x* and *y*. "
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    "plot"
  ],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Other Parameters",
    "See Also",
    "Notes"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/__init__.py",
  "item_line": 4312,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.pyplot.Axes.scatter"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [
    {
      "name": {
        "name": "plot",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "To plot scatter plots when markers are identical in size and color."
              }
            }
          ]
        }
      ],
      "type": null
    }
  ],
  "references": null,
  "signature": "scatter(self, x, y, s=None, c=None, marker=None, cmap=None, norm=None, vmin=None, vmax=None, alpha=None, linewidths=None, verts=<deprecated parameter>, edgecolors=None, *, plotnonfinite=False, data=None, **kwargs)"
}