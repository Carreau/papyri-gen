{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Helper method (along with "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "_",
                    "iter",
                    "_",
                    "collection",
                    "_",
                    "raw",
                    "_",
                    "paths"
                  ],
                  "domain": null,
                  "role": "meth"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ") to implement "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "draw",
                    "_",
                    "path",
                    "_",
                    "collection"
                  ],
                  "domain": null,
                  "role": "meth"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " in a space-efficient manner."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This method yields all of the path, offset and graphics context combinations to draw the path collection.  The caller should already have looped over the results of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "_",
                    "iter",
                    "_",
                    "collection",
                    "_",
                    "raw",
                    "_",
                    "paths"
                  ],
                  "domain": null,
                  "role": "meth"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " to draw this collection."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The arguments should be the same as that passed into "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "draw",
                    "_",
                    "path",
                    "_",
                    "collection"
                  ],
                  "domain": null,
                  "role": "meth"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", with the exception of *path_ids*, which is a list of arbitrary objects that the backend will use to reference one of the paths created in the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "_",
                    "iter",
                    "_",
                    "collection",
                    "_",
                    "raw",
                    "_",
                    "paths"
                  ],
                  "domain": null,
                  "role": "meth"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " stage."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Each yielded result is of the form::"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "   xo, yo, path_id, gc, rgbFace",
                  "_number": 13,
                  "_offset": 3
                },
                {
                  "_line": "",
                  "_number": 14,
                  "_offset": 3
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "where *xo*, *yo* is an offset; *path_id* is one of the elements of *path_ids*; *gc* is a graphics context and *rgbFace* is a color to use for filling the path."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/backend_bases.py",
  "item_line": 352,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.backend_bases.RendererBase._iter_collection"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "signature": "_iter_collection(self, gc, master_transform, all_transforms, path_ids, offsets, offsetTrans, facecolors, edgecolors, linewidths, linestyles, antialiaseds, urls, offset_position)",
  "references": null,
  "arbitrary": []
}