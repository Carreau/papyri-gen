{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Draw an RGBA image."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": []
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "gc",
            "type_": "`.GraphicsContextBase`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A graphics context with clipping information."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "x",
            "type_": "scalar",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The distance in physical units (i.e., dots or pixels) from the left hand side of the canvas."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "y",
            "type_": "scalar",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The distance in physical units (i.e., dots or pixels) from the bottom side of the canvas."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "im",
            "type_": "array-like, shape=(N, M, 4), dtype=np.uint8",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "An array of RGBA pixels."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "transform",
            "type_": "`matplotlib.transforms.Affine2DBase`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If and only if the concrete backend is written such that "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "option",
                          "_",
                          "scale",
                          "_",
                          "image"
                        ],
                        "domain": null,
                        "role": "meth"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " returns "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "True"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", an affine transformation (i.e., an "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Affine2DBase"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ") *may* be passed to "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "draw",
                          "_",
                          "image"
                        ],
                        "domain": null,
                        "role": "meth"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ".  The translation vector of the transformation is given in physical units (i.e., dots or pixels). Note that the transformation does not override *x* and *y*, and has to be applied *before* translating the result by *x* and *y* (this can be accomplished by adding *x* and *y* to the translation vector defined by *transform*)."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/backend_bases.py",
  "item_line": 460,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.backend_bases.RendererBase.draw_image"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "draw_image(self, gc, x, y, im, transform=None)"
}