{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Save the plot in the current canvas as a image and apply the *post_processing* function."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                      "_number": 0,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "   def post_processing(image, dpi):",
                      "_number": 0,
                      "_offset": 3
                    },
                    {
                      "_line": "     # ny, nx, depth = image.shape",
                      "_number": 1,
                      "_offset": 3
                    },
                    {
                      "_line": "     # image (numpy array) has RGBA channels and has a depth of 4.",
                      "_number": 2,
                      "_offset": 3
                    },
                    {
                      "_line": "     ...",
                      "_number": 3,
                      "_offset": 3
                    },
                    {
                      "_line": "     # create a new_image (numpy array of 4 channels, size can be",
                      "_number": 4,
                      "_offset": 3
                    },
                    {
                      "_line": "     # different). The resulting image may have offsets from",
                      "_number": 5,
                      "_offset": 3
                    },
                    {
                      "_line": "     # lower-left corner of the original image",
                      "_number": 6,
                      "_offset": 3
                    },
                    {
                      "_line": "     return new_image, offset_x, offset_y",
                      "_number": 7,
                      "_offset": 3
                    },
                    {
                      "_line": "",
                      "_number": 8,
                      "_offset": 3
                    }
                  ]
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "def post_processing(image, dpi):   # ny, nx, depth = image.shape   # image (numpy array) has RGBA channels and has a depth of 4.   ...   # create a new_image (numpy array of 4 channels, size can be   # different). The resulting image may have offsets from   # lower-left corner of the original image   return new_image, offset_x, offset_y "
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The saved renderer is restored and the returned image from post_processing is plotted (using draw_image) on it."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/backends/backend_agg.py",
  "item_line": 353,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.backends.backend_agg.RendererAgg.stop_filter"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "signature": "stop_filter(self, post_processing)",
  "references": null,
  "arbitrary": []
}