{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Add a colormap to the set recognized by "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "get",
                    "_",
                    "cmap"
                  ],
                  "domain": null,
                  "role": "func"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "It can be used in two ways::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "    register_cmap(name='swirly', cmap=swirly_cmap)",
                  "_number": 2,
                  "_offset": 4
                },
                {
                  "_line": "",
                  "_number": 3,
                  "_offset": 4
                },
                {
                  "_line": "    register_cmap(name='choppy', data=choppydata, lut=128)",
                  "_number": 4,
                  "_offset": 4
                },
                {
                  "_line": "",
                  "_number": 5,
                  "_offset": 4
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "In the first case, *cmap* must be a "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "matplotlib.colors.Colormap"
                  ],
                  "domain": null,
                  "role": "class"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " instance.  The *name* is optional; if absent, the name will be the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~matplotlib.colors.Colormap.name"
                  ],
                  "domain": null,
                  "role": "attr"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " attribute of the *cmap*."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The second case is deprecated. Here, the three arguments are passed to the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~matplotlib.colors.LinearSegmentedColormap"
                  ],
                  "domain": null,
                  "role": "class"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " initializer, and the resulting colormap is registered. Instead of this implicit colormap creation, create a "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    ".LinearSegmentedColormap"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and use the first case: "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "register",
                    "_",
                    "cmap(cmap=LinearSegmentedColormap(name,",
                    " ",
                    "data,",
                    " ",
                    "lut))"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": []
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Registering a colormap stores a reference to the colormap object which can currently be modified and inadvertantly change the global colormap state. This behavior is deprecated and in Matplotlib 3.5 the registered colormap will be immutable."
                }
              }
            ]
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Notes"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/cm.py",
  "item_line": 124,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.pyplot.register_cmap"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "register_cmap(name=None, cmap=None, data=None, lut=None)"
}