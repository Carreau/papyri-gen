{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Draw a colorbar in an existing axes."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "There are only some rare cases in which you would work directly with a "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    ".ColorbarBase"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " as an end-user. Typically, colorbars are used with "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    ".ScalarMappable"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "\\s such as an "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    ".AxesImage"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " generated via "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~.axes.Axes.imshow"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". For these cases you will use "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    ".Colorbar"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and likely create it via "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    ".pyplot.colorbar"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " or "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    ".Figure.colorbar"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The main application of using a "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    ".ColorbarBase"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " explicitly is drawing colorbars that are not associated with other elements in the figure, e.g. when showing a colormap by itself."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "If the *cmap* kwarg is given but *boundaries* and *values* are left as None, then the colormap will be displayed on a 0-1 scale. To show the under- and over-value colors, specify the *norm* as::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "    norm=colors.Normalize(clip=False)",
                  "_number": 14,
                  "_offset": 4
                },
                {
                  "_line": "",
                  "_number": 15,
                  "_offset": 4
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "To show the colors versus index instead of on the 0-1 scale, use::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "    norm=colors.NoNorm()",
                  "_number": 19,
                  "_offset": 4
                },
                {
                  "_line": "",
                  "_number": 20,
                  "_offset": 4
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Useful public methods are "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "set",
                    "_",
                    "label"
                  ],
                  "domain": null,
                  "role": "meth"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "add",
                    "_",
                    "lines"
                  ],
                  "domain": null,
                  "role": "meth"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "ax",
            "type_": "`~matplotlib.axes.Axes`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~.axes.Axes"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " instance in which the colorbar is drawn."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "cmap",
            "type_": "`~matplotlib.colors.Colormap`, default: :rc:`image.cmap`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The colormap to use."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "norm",
            "type_": "`~matplotlib.colors.Normalize`",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "alpha",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The colorbar transparency between 0 (transparent) and 1 (opaque)."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "values",
            "type_": "",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "boundaries",
            "type_": "",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "orientation",
            "type_": "{'vertical', 'horizontal'}",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "ticklocation",
            "type_": "{'auto', 'left', 'right', 'top', 'bottom'}",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "extend",
            "type_": "{'neither', 'both', 'min', 'max'}",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "spacing",
            "type_": "{'uniform', 'proportional'}",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "ticks",
            "type_": "`~matplotlib.ticker.Locator` or array-like of float",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "format",
            "type_": "str or `~matplotlib.ticker.Formatter`",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "drawedges",
            "type_": "bool",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "filled",
            "type_": "bool",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "extendfrac",
            "type_": "",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "extendrec",
            "type_": "",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "label",
            "type_": "str",
            "desc": []
          }
        }
      ]
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "ax",
            "type_": "`~matplotlib.axes.Axes`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~.axes.Axes"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " instance in which the colorbar is drawn."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "lines",
            "type_": "list",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A list of "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".LineCollection"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " if lines were drawn, otherwise an empty list."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "dividers",
            "type_": "`.LineCollection`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A LineCollection if *drawedges* is "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "True"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", otherwise "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "None"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Attributes",
    "Parameters"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/colorbar.py",
  "item_line": 321,
  "item_type": "<class 'type'>",
  "aliases": [
    "matplotlib.colorbar.ColorbarBase"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "ColorbarBase(ax, *, cmap=None, norm=None, alpha=None, values=None, boundaries=None, orientation='vertical', ticklocation='auto', extend=None, spacing='uniform', ticks=None, format=None, drawedges=False, filled=True, extendfrac=None, extendrect=False, label='')"
}