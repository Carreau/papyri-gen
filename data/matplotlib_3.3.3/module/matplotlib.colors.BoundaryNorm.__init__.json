{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": []
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "boundaries",
            "type_": "array-like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Monotonically increasing sequence of boundaries"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "ncolors",
            "type_": "int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Number of colors in the colormap to be used"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "clip",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If clip is "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "True"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", out of range values are mapped to 0 if they are below "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "boundaries[0]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or mapped to "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "ncolors",
                          " ",
                          "-",
                          " ",
                          "1"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " if they are above "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "boundaries[-1]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If clip is "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "False"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", out of range values are mapped to -1 if they are below "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "boundaries[0]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or mapped to *ncolors* if they are above "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "boundaries[-1]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". These are then converted to valid indices by "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "Colormap.",
                          "_",
                          "_",
                          "call",
                          "_",
                          "_"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "extend",
            "type_": "{'neither', 'both', 'min', 'max'}, default: 'neither'",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Extend the number of bins to include one or both of the regions beyond the boundaries.  For example, if "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "extend"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is 'min', then the color to which the region between the first pair of boundaries is mapped will be distinct from the first color in the colormap, and by default a "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~matplotlib.colorbar.Colorbar"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " will be drawn with the triangle extension on the left or lower end."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "int16 scalar or array",
            "desc": []
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "*boundaries* defines the edges of bins, and data falling within a bin is mapped to the color with the same index."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "If the number of bins, including any extensions, is less than *ncolors*, the color index is chosen by linear interpolation, mapping the "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "[0,",
                    " ",
                    "nbins",
                    " ",
                    "-",
                    " ",
                    "1]"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " range onto the "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "[0,",
                    " ",
                    "ncolors",
                    " ",
                    "-",
                    " ",
                    "1]"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " range."
                }
              }
            ]
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Parameters",
    "Returns",
    "Notes"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/colors.py",
  "item_line": 1429,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.colors.BoundaryNorm.__init__"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "__init__(self, boundaries, ncolors, clip=False, *, extend='neither')"
}