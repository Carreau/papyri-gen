{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "A module for converting numbers or color arguments to *RGB* or *RGBA*."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "*RGB* and *RGBA* are sequences of, respectively, 3 or 4 floats in the range 0-1."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This module includes functions and classes for color specification conversions, and for mapping numbers to colors in a 1-D array of colors called a colormap."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Mapping data onto colors using a colormap typically involves two steps: a data array is first mapped onto the range 0-1 using a subclass of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Normalize"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", then this number is mapped to a color using a subclass of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Colormap"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ".  Two sublasses of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Colormap"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " provided here:  "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "LinearSegmentedColormap"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", which uses piecewise-linear interpolation to define colormaps, and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "ListedColormap"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", which makes a colormap from a list of colors."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. seealso::",
                  "_number": 13,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 14,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": [
                {
                  "_line": "  :doc:`/tutorials/colors/colormap-manipulation` for examples of how to",
                  "_number": 15,
                  "_offset": 0
                },
                {
                  "_line": "  make colormaps and",
                  "_number": 16,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 17,
                  "_offset": 0
                },
                {
                  "_line": "  :doc:`/tutorials/colors/colormaps` for a list of built-in colormaps.",
                  "_number": 18,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 19,
                  "_offset": 0
                },
                {
                  "_line": "  :doc:`/tutorials/colors/colormapnorms` for more details about data",
                  "_number": 20,
                  "_offset": 0
                },
                {
                  "_line": "  normalization",
                  "_number": 21,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 22,
                  "_offset": 0
                },
                {
                  "_line": "  More colormaps are available at palettable_.",
                  "_number": 23,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 24,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "seealso",
            "args0": [
              ""
            ],
            "inner": {
              "inline": [
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "/tutorials/colors/colormap-manipulation"
                    ],
                    "domain": null,
                    "role": "doc"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": " for examples of how to make colormaps and  "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "/tutorials/colors/colormaps"
                    ],
                    "domain": null,
                    "role": "doc"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": " for a list of built-in colormaps.  "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "/tutorials/colors/colormapnorms"
                    ],
                    "domain": null,
                    "role": "doc"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": " for more details about data normalization  More colormaps are available at palettable_. "
                  }
                }
              ],
              "inner": []
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The module also provides functions for checking whether an object can be interpreted as a color ("
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "is",
                    "_",
                    "color",
                    "_",
                    "like"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "), for converting such an object to an RGBA tuple ("
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "to",
                    "_",
                    "rgba"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ") or to an HTML-like hex string in the \"#rrggbb\" format ("
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "to",
                    "_",
                    "hex"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "), and a sequence of colors to an (n, 4) RGBA array ("
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "to",
                    "_",
                    "rgba",
                    "_",
                    "array"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ").  Caching is used for efficiency."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Matplotlib recognizes the following formats to specify a color:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "* an RGB or RGBA (red, green, blue, alpha) tuple of float values in closed",
                      "_number": 33,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "  interval ``[0, 1]`` (e.g., ``(0.1, 0.2, 0.5)`` or ``(0.1, 0.2, 0.5, 0.3)``);",
                      "_number": 34,
                      "_offset": 2
                    }
                  ]
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "* an RGB or RGBA (red, green, blue, alpha) tuple of float values in closed"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "interval "
                          }
                        },
                        {
                          "type": "Verbatim",
                          "data": {
                            "value": [
                              "[0,",
                              " ",
                              "1]"
                            ]
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": " (e.g., "
                          }
                        },
                        {
                          "type": "Verbatim",
                          "data": {
                            "value": [
                              "(0.1,",
                              " ",
                              "0.2,",
                              " ",
                              "0.5)"
                            ]
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": " or "
                          }
                        },
                        {
                          "type": "Verbatim",
                          "data": {
                            "value": [
                              "(0.1,",
                              " ",
                              "0.2,",
                              " ",
                              "0.5,",
                              " ",
                              "0.3)"
                            ]
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": ");"
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "* a hex RGB or RGBA string (e.g., "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'#0f0f0f'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " or "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'#0f0f0f80'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ";"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "  case-insensitive);"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "* a shorthand hex RGB or RGBA string, equivalent to the hex RGB or RGBA",
                      "_number": 37,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "  string obtained by duplicating each character, (e.g., ``'#abc'``, equivalent",
                      "_number": 38,
                      "_offset": 2
                    },
                    {
                      "_line": "  to ``'#aabbcc'``, or ``'#abcd'``, equivalent to ``'#aabbccdd'``;",
                      "_number": 39,
                      "_offset": 2
                    },
                    {
                      "_line": "  case-insensitive);",
                      "_number": 40,
                      "_offset": 2
                    }
                  ]
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "* a shorthand hex RGB or RGBA string, equivalent to the hex RGB or RGBA"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "string obtained by duplicating each character, (e.g., "
                          }
                        },
                        {
                          "type": "Verbatim",
                          "data": {
                            "value": [
                              "'#abc'"
                            ]
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": ", equivalent to "
                          }
                        },
                        {
                          "type": "Verbatim",
                          "data": {
                            "value": [
                              "'#aabbcc'"
                            ]
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": ", or "
                          }
                        },
                        {
                          "type": "Verbatim",
                          "data": {
                            "value": [
                              "'#abcd'"
                            ]
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": ", equivalent to "
                          }
                        },
                        {
                          "type": "Verbatim",
                          "data": {
                            "value": [
                              "'#aabbccdd'"
                            ]
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": "; case-insensitive);"
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "* a string representation of a float value in "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "[0,",
                    " ",
                    "1]"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " inclusive for gray"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "  level (e.g., "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'0.5'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ");"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "* one of the characters "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "{'b',",
                    " ",
                    "'g',",
                    " ",
                    "'r',",
                    " ",
                    "'c',",
                    " ",
                    "'m',",
                    " ",
                    "'y',",
                    " ",
                    "'k',",
                    " ",
                    "'w'}"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", which"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "  are short-hand notations for shades of blue, green, red, cyan, magenta,   yellow, black, and white. Note that the colors "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'g',",
                    " ",
                    "'c',",
                    " ",
                    "'m',",
                    " ",
                    "'y'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " do not   coincide with the X11/CSS4 colors. Their particular shades were chosen for   better visibility of colored lines against typical backgrounds."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "* a X11/CSS4 color name (case-insensitive); * a name from the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "xkcd",
                    " ",
                    "color",
                    " ",
                    "survey"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "_, prefixed with "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'xkcd",
                    ":",
                    "'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (e.g.,"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "  "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'xkcd",
                    ":",
                    "sky",
                    " ",
                    "blue'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "; case insensitive);"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "* one of the Tableau Colors from the 'T10' categorical palette (the default",
                      "_number": 51,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "  color cycle): ``{'tab:blue', 'tab:orange', 'tab:green', 'tab:red',",
                      "_number": 52,
                      "_offset": 2
                    },
                    {
                      "_line": "  'tab:purple', 'tab:brown', 'tab:pink', 'tab:gray', 'tab:olive', 'tab:cyan'}``",
                      "_number": 53,
                      "_offset": 2
                    },
                    {
                      "_line": "  (case-insensitive);",
                      "_number": 54,
                      "_offset": 2
                    }
                  ]
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "* one of the Tableau Colors from the 'T10' categorical palette (the default"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "color cycle): "
                          }
                        },
                        {
                          "type": "Verbatim",
                          "data": {
                            "value": [
                              "{'tab",
                              ":",
                              "blue',",
                              " ",
                              "'tab",
                              ":",
                              "orange',",
                              " ",
                              "'tab",
                              ":",
                              "green',",
                              " ",
                              "'tab",
                              ":",
                              "red',",
                              " ",
                              "'tab",
                              ":",
                              "purple',",
                              " ",
                              "'tab",
                              ":",
                              "brown',",
                              " ",
                              "'tab",
                              ":",
                              "pink',",
                              " ",
                              "'tab",
                              ":",
                              "gray',",
                              " ",
                              "'tab",
                              ":",
                              "olive',",
                              " ",
                              "'tab",
                              ":",
                              "cyan'}"
                            ]
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": " (case-insensitive);"
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "* a \"CN\" color spec, i.e. 'C' followed by a number, which is an index into the",
                      "_number": 55,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "  default property cycle (:rc:`axes.prop_cycle`); the indexing is intended to",
                      "_number": 56,
                      "_offset": 2
                    },
                    {
                      "_line": "  occur at rendering time, and defaults to black if the cycle does not include",
                      "_number": 57,
                      "_offset": 2
                    },
                    {
                      "_line": "  color.",
                      "_number": 58,
                      "_offset": 2
                    },
                    {
                      "_line": "",
                      "_number": 59,
                      "_offset": 2
                    }
                  ]
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "* a \"CN\" color spec, i.e. 'C' followed by a number, which is an index into the"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "default property cycle ("
                          }
                        },
                        {
                          "type": "Directive",
                          "data": {
                            "value": [
                              "axes.prop",
                              "_",
                              "cycle"
                            ],
                            "domain": null,
                            "role": "rc"
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": "); the indexing is intended to occur at rendering time, and defaults to black if the cycle does not include color. "
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": ".. _palettable: https://jiffyclub.github.io/palettable/ .. _xkcd color survey: https://xkcd.com/color/rgb/"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/colors.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "aliases": [
    "matplotlib.colors"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "signature": null,
  "references": null,
  "arbitrary": [
    {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "A module for converting numbers or color arguments to or . "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "and are sequences of, respectively, 3 or 4 floats in the range 0 - 1. "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This module includes functions and classes for color specification conversions, and for mapping numbers to colors in a 1 - D array of colors called a colormap. "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Mapping data onto colors using a colormap typically involves two steps : a data array is first mapped onto the range 0 - 1 using a subclass of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Normalize"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " , then this number is mapped to a color using a subclass of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Colormap"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " . Two sublasses of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Colormap"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " provided here : "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "LinearSegmentedColormap"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " , which uses piecewise - linear interpolation to define colormaps, and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "ListedColormap"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " , which makes a colormap from a list of colors. "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The module also provides functions for checking whether an object can be interpreted as a color (`is_color_like`), for converting such an object to an RGBA tuple (`to_rgba`) or to an HTML - like hex string in the \"#rrggbb\" format (`to_hex`), and a sequence of colors to an (n, 4) RGBA array (`to_rgba_array`). Caching is used for efficiency. "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Matplotlib recognizes the following formats to specify a color : "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BulletList",
          "data": {
            "value": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "an RGB or RGBA (red, green, blue, alpha) tuple of float values in closed interval "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "[0, 1]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (e.g., "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "(0.1, 0.2, 0.5)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "(0.1, 0.2, 0.5, 0.3)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " ); "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "a hex RGB or RGBA string (e.g., "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'#0f0f0f'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'#0f0f0f80'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " ; case - insensitive); "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "a shorthand hex RGB or RGBA string, equivalent to the hex RGB or RGBA string obtained by duplicating each character, (e.g., "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'#abc'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " , equivalent to "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'#aabbcc'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " , or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'#abcd'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " , equivalent to "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'#aabbccdd'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " ; case - insensitive); "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "a string representation of a float value in "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "[0, 1]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " inclusive for gray level (e.g., "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'0.5'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " ); "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "one of the characters "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "{'b', 'g', 'r', 'c', 'm', 'y', 'k', 'w'}"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " , which are short - hand notations for shades of blue, green, red, cyan, magenta, yellow, black, and white. Note that the colors "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'g', 'c', 'm', 'y'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " do not coincide with the X11/ CSS4 colors. Their particular shades were chosen for better visibility of colored lines against typical backgrounds. "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "a X11/ CSS4 color name (case - insensitive); "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "a name from the "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "`xkcd color survey`"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " , prefixed with "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'xkcd:'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (e.g., "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'xkcd:sky blue'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " ; case insensitive); "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "one of the Tableau Colors from the 'T10' categorical palette (the default color cycle) : "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "{'tab:blue', 'tab:orange', 'tab:green', 'tab:red',\n  'tab:purple', 'tab:brown', 'tab:pink', 'tab:gray', 'tab:olive', 'tab:cyan'}"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (case - insensitive); "
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "a \"CN\" color spec, i.e. 'C' followed by a number, which is an index into the default property cycle ( "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "rc:`axes.prop_cycle"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " ); the indexing is intended to occur at rendering time, and defaults to black if the cycle does not include color. "
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    }
  ]
}