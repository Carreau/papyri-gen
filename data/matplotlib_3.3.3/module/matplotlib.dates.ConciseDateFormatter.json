{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "A "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    ".Formatter"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " which attempts to figure out the best format to use for the date, and to make it as compact as possible, but still be complete. This is most useful when used with the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "AutoDateLocator"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "::"
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Example",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ">>> locator = AutoDateLocator()",
                  "_number": 0,
                  "_offset": 0
                },
                {
                  "_line": ">>> formatter = ConciseDateFormatter(locator)",
                  "_number": 1,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": []
            }
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "locator",
            "type_": "`.ticker.Locator`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Locator that this axis is using."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "tz",
            "type_": "str, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Passed to "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".dates.date2num"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "formats",
            "type_": "list of 6 strings, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Format strings for 6 levels of tick labelling: mostly years, months, days, hours, minutes, and seconds.  Strings use the same format codes as "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~datetime.datetime.strftime"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ".  Default is `"
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "['%Y',",
                          " ",
                          "'%b',",
                          " ",
                          "'%d',",
                          " ",
                          "'%H",
                          ":",
                          "%M',",
                          " ",
                          "'%H",
                          ":",
                          "%M',",
                          " ",
                          "'%S.%f']"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "`"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "zero_formats",
            "type_": "list of 6 strings, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Format strings for tick labels that are \"zeros\" for a given tick level.  For instance, if most ticks are months, ticks around 1 Jan 2005 will be labeled \"Dec\", \"2005\", \"Feb\".  The default is `"
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "['',",
                          " ",
                          "'%Y',",
                          " ",
                          "'%b',",
                          " ",
                          "'%b-%d',",
                          " ",
                          "'%H",
                          ":",
                          "%M',",
                          " ",
                          "'%H",
                          ":",
                          "%M']"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "`"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "offset_formats",
            "type_": "list of 6 strings, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Format strings for the 6 levels that is applied to the \"offset\" string found on the right side of an x-axis, or top of a y-axis. Combined with the tick labels this should completely specify the date.  The default is::"
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": "    ['', '%Y', '%Y-%b', '%Y-%b-%d', '%Y-%b-%d', '%Y-%b-%d %H:%M']",
                        "_number": 5,
                        "_offset": 4
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "show_offset",
            "type_": "bool, default: True",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Whether to show the offset or not."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/dates.py",
  "item_line": 638,
  "item_type": "<class 'type'>",
  "aliases": [
    "matplotlib.dates.ConciseDateFormatter"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "See "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "/gallery/ticks",
                  "_",
                  "and",
                  "_",
                  "spines/date",
                  "_",
                  "concise",
                  "_",
                  "formatter"
                ],
                "domain": null,
                "role": "doc"
              }
            }
          ]
        }
      },
      {
        "type": "BlockDirective",
        "data": {
          "lines": {
            "_lines": [
              {
                "_line": ".. plot::",
                "_number": 0,
                "_offset": 0
              }
            ]
          },
          "wh": {
            "_lines": []
          },
          "ind": {
            "_lines": []
          },
          "directive_name": "plot",
          "args0": [
            ""
          ],
          "inner": null
        }
      },
      {
        "type": "DefList",
        "data": {
          "children": [
            {
              "lines": {
                "_lines": [
                  {
                    "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                    "_number": 0,
                    "_offset": 0
                  }
                ]
              },
              "wh": {
                "_lines": []
              },
              "ind": {
                "_lines": [
                  {
                    "_line": "    import datetime",
                    "_number": 0,
                    "_offset": 0
                  },
                  {
                    "_line": "    import matplotlib.dates as mdates",
                    "_number": 1,
                    "_offset": 0
                  }
                ]
              },
              "dt": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                    }
                  }
                ]
              },
              "dd": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "import datetime import matplotlib.dates as mdates"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "type": "DefList",
        "data": {
          "children": [
            {
              "lines": {
                "_lines": [
                  {
                    "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                    "_number": 0,
                    "_offset": 0
                  }
                ]
              },
              "wh": {
                "_lines": []
              },
              "ind": {
                "_lines": [
                  {
                    "_line": "    base = datetime.datetime(2005, 2, 1)",
                    "_number": 0,
                    "_offset": 0
                  },
                  {
                    "_line": "    dates = np.array([base + datetime.timedelta(hours=(2 * i))",
                    "_number": 1,
                    "_offset": 0
                  },
                  {
                    "_line": "                      for i in range(732)])",
                    "_number": 2,
                    "_offset": 0
                  },
                  {
                    "_line": "    N = len(dates)",
                    "_number": 3,
                    "_offset": 0
                  },
                  {
                    "_line": "    np.random.seed(19680801)",
                    "_number": 4,
                    "_offset": 0
                  },
                  {
                    "_line": "    y = np.cumsum(np.random.randn(N))",
                    "_number": 5,
                    "_offset": 0
                  }
                ]
              },
              "dt": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                    }
                  }
                ]
              },
              "dd": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "base = datetime.datetime(2005, 2, 1) dates = np.array([base + datetime.timedelta(hours=(2 * i))                   for i in range(732)]) N = len(dates) np.random.seed(19680801) y = np.cumsum(np.random.randn(N))"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "type": "DefList",
        "data": {
          "children": [
            {
              "lines": {
                "_lines": [
                  {
                    "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                    "_number": 0,
                    "_offset": 0
                  }
                ]
              },
              "wh": {
                "_lines": []
              },
              "ind": {
                "_lines": [
                  {
                    "_line": "    fig, ax = plt.subplots(constrained_layout=True)",
                    "_number": 0,
                    "_offset": 0
                  },
                  {
                    "_line": "    locator = mdates.AutoDateLocator()",
                    "_number": 1,
                    "_offset": 0
                  },
                  {
                    "_line": "    formatter = mdates.ConciseDateFormatter(locator)",
                    "_number": 2,
                    "_offset": 0
                  },
                  {
                    "_line": "    ax.xaxis.set_major_locator(locator)",
                    "_number": 3,
                    "_offset": 0
                  },
                  {
                    "_line": "    ax.xaxis.set_major_formatter(formatter)",
                    "_number": 4,
                    "_offset": 0
                  }
                ]
              },
              "dt": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                    }
                  }
                ]
              },
              "dd": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "fig, ax = plt.subplots(constrained_layout=True) locator = mdates.AutoDateLocator() formatter = mdates.ConciseDateFormatter(locator) ax.xaxis.set_major_locator(locator) ax.xaxis.set_major_formatter(formatter)"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "type": "DefList",
        "data": {
          "children": [
            {
              "lines": {
                "_lines": [
                  {
                    "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                    "_number": 0,
                    "_offset": 0
                  }
                ]
              },
              "wh": {
                "_lines": []
              },
              "ind": {
                "_lines": [
                  {
                    "_line": "    ax.plot(dates, y)",
                    "_number": 0,
                    "_offset": 0
                  },
                  {
                    "_line": "    ax.set_title('Concise Date Formatter')",
                    "_number": 1,
                    "_offset": 0
                  }
                ]
              },
              "dt": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                    }
                  }
                ]
              },
              "dd": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "ax.plot(dates, y) ax.set_title('Concise Date Formatter')"
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    ]
  },
  "see_also": [],
  "references": null,
  "signature": "ConciseDateFormatter(locator, tz=None, formats=None, offset_formats=None, zero_formats=None, show_offset=True)"
}