{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Decorator for dispatch by opcode. Sets the values in *table* from *min* to *max* to this method, adds a check that the Dvi state matches *state* if not None, reads arguments from the file according to *args*."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "*table*",
                      "_number": 0,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    the dispatch table to be filled in",
                      "_number": 1,
                      "_offset": 0
                    },
                    {
                      "_line": "",
                      "_number": 2,
                      "_offset": 0
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "*table*"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "the dispatch table to be filled in "
                      }
                    }
                  ]
                }
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "*min*",
                      "_number": 3,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    minimum opcode for calling this function",
                      "_number": 4,
                      "_offset": 0
                    },
                    {
                      "_line": "",
                      "_number": 5,
                      "_offset": 0
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "*min*"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "minimum opcode for calling this function "
                      }
                    }
                  ]
                }
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "*max*",
                      "_number": 6,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    maximum opcode for calling this function, None if only *min* is allowed",
                      "_number": 7,
                      "_offset": 0
                    },
                    {
                      "_line": "",
                      "_number": 8,
                      "_offset": 0
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "*max*"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "maximum opcode for calling this function, None if only *min* is allowed "
                      }
                    }
                  ]
                }
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "*state*",
                      "_number": 9,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    state of the Dvi object in which these opcodes are allowed",
                      "_number": 10,
                      "_offset": 0
                    },
                    {
                      "_line": "",
                      "_number": 11,
                      "_offset": 0
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "*state*"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "state of the Dvi object in which these opcodes are allowed "
                      }
                    }
                  ]
                }
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "*args*",
                      "_number": 12,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    sequence of argument specifications:",
                      "_number": 13,
                      "_offset": 0
                    },
                    {
                      "_line": "",
                      "_number": 14,
                      "_offset": 0
                    },
                    {
                      "_line": "    ``'raw'``: opcode minus minimum",
                      "_number": 15,
                      "_offset": 0
                    },
                    {
                      "_line": "    ``'u1'``: read one unsigned byte",
                      "_number": 16,
                      "_offset": 0
                    },
                    {
                      "_line": "    ``'u4'``: read four bytes, treat as an unsigned number",
                      "_number": 17,
                      "_offset": 0
                    },
                    {
                      "_line": "    ``'s4'``: read four bytes, treat as a signed number",
                      "_number": 18,
                      "_offset": 0
                    },
                    {
                      "_line": "    ``'slen'``: read (opcode - minimum) bytes, treat as signed",
                      "_number": 19,
                      "_offset": 0
                    },
                    {
                      "_line": "    ``'slen1'``: read (opcode - minimum + 1) bytes, treat as signed",
                      "_number": 20,
                      "_offset": 0
                    },
                    {
                      "_line": "    ``'ulen1'``: read (opcode - minimum + 1) bytes, treat as unsigned",
                      "_number": 21,
                      "_offset": 0
                    },
                    {
                      "_line": "    ``'olen1'``: read (opcode - minimum + 1) bytes, treat as unsigned",
                      "_number": 22,
                      "_offset": 0
                    },
                    {
                      "_line": "                 if under four bytes, signed if four bytes",
                      "_number": 23,
                      "_offset": 0
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "*args*"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "sequence of argument specifications:  "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'raw'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ": opcode minus minimum "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'u1'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ": read one unsigned byte "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'u4'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ": read four bytes, treat as an unsigned number "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'s4'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ": read four bytes, treat as a signed number "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'slen'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ": read (opcode - minimum) bytes, treat as signed "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'slen1'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ": read (opcode - minimum + 1) bytes, treat as signed "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'ulen1'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ": read (opcode - minimum + 1) bytes, treat as unsigned "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'olen1'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ": read (opcode - minimum + 1) bytes, treat as unsigned              if under four bytes, signed if four bytes"
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": []
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/dviread.py",
  "item_line": 135,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.dviread._dispatch"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "_dispatch(table, min, max=None, state=None, args=('raw',))"
}