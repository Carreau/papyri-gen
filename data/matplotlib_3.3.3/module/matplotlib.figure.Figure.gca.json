{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Get the current axes, creating one if necessary."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The following kwargs are supported for ensuring the returned axes adheres to the given projection etc., and for axes creation if the active axes does not exist:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "Properties:",
                      "_number": 4,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    adjustable: {'box', 'datalim'}",
                      "_number": 5,
                      "_offset": 4
                    },
                    {
                      "_line": "    agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array",
                      "_number": 6,
                      "_offset": 4
                    },
                    {
                      "_line": "    alpha: float or None",
                      "_number": 7,
                      "_offset": 4
                    },
                    {
                      "_line": "    anchor: 2-tuple of floats or {'C', 'SW', 'S', 'SE', ...}",
                      "_number": 8,
                      "_offset": 4
                    },
                    {
                      "_line": "    animated: bool",
                      "_number": 9,
                      "_offset": 4
                    },
                    {
                      "_line": "    aspect: {'auto'} or num",
                      "_number": 10,
                      "_offset": 4
                    },
                    {
                      "_line": "    autoscale_on: bool",
                      "_number": 11,
                      "_offset": 4
                    },
                    {
                      "_line": "    autoscalex_on: bool",
                      "_number": 12,
                      "_offset": 4
                    },
                    {
                      "_line": "    autoscaley_on: bool",
                      "_number": 13,
                      "_offset": 4
                    },
                    {
                      "_line": "    axes_locator: Callable[[Axes, Renderer], Bbox]",
                      "_number": 14,
                      "_offset": 4
                    },
                    {
                      "_line": "    axisbelow: bool or 'line'",
                      "_number": 15,
                      "_offset": 4
                    },
                    {
                      "_line": "    box_aspect: None, or a number",
                      "_number": 16,
                      "_offset": 4
                    },
                    {
                      "_line": "    clip_box: `.Bbox`",
                      "_number": 17,
                      "_offset": 4
                    },
                    {
                      "_line": "    clip_on: bool",
                      "_number": 18,
                      "_offset": 4
                    },
                    {
                      "_line": "    clip_path: Patch or (Path, Transform) or None",
                      "_number": 19,
                      "_offset": 4
                    },
                    {
                      "_line": "    contains: unknown",
                      "_number": 20,
                      "_offset": 4
                    },
                    {
                      "_line": "    facecolor or fc: color",
                      "_number": 21,
                      "_offset": 4
                    },
                    {
                      "_line": "    figure: `.Figure`",
                      "_number": 22,
                      "_offset": 4
                    },
                    {
                      "_line": "    frame_on: bool",
                      "_number": 23,
                      "_offset": 4
                    },
                    {
                      "_line": "    gid: str",
                      "_number": 24,
                      "_offset": 4
                    },
                    {
                      "_line": "    in_layout: bool",
                      "_number": 25,
                      "_offset": 4
                    },
                    {
                      "_line": "    label: object",
                      "_number": 26,
                      "_offset": 4
                    },
                    {
                      "_line": "    navigate: bool",
                      "_number": 27,
                      "_offset": 4
                    },
                    {
                      "_line": "    navigate_mode: unknown",
                      "_number": 28,
                      "_offset": 4
                    },
                    {
                      "_line": "    path_effects: `.AbstractPathEffect`",
                      "_number": 29,
                      "_offset": 4
                    },
                    {
                      "_line": "    picker: None or bool or callable",
                      "_number": 30,
                      "_offset": 4
                    },
                    {
                      "_line": "    position: [left, bottom, width, height] or `~matplotlib.transforms.Bbox`",
                      "_number": 31,
                      "_offset": 4
                    },
                    {
                      "_line": "    prop_cycle: unknown",
                      "_number": 32,
                      "_offset": 4
                    },
                    {
                      "_line": "    rasterization_zorder: float or None",
                      "_number": 33,
                      "_offset": 4
                    },
                    {
                      "_line": "    rasterized: bool or None",
                      "_number": 34,
                      "_offset": 4
                    },
                    {
                      "_line": "    sketch_params: (scale: float, length: float, randomness: float)",
                      "_number": 35,
                      "_offset": 4
                    },
                    {
                      "_line": "    snap: bool or None",
                      "_number": 36,
                      "_offset": 4
                    },
                    {
                      "_line": "    title: str",
                      "_number": 37,
                      "_offset": 4
                    },
                    {
                      "_line": "    transform: `.Transform`",
                      "_number": 38,
                      "_offset": 4
                    },
                    {
                      "_line": "    url: str",
                      "_number": 39,
                      "_offset": 4
                    },
                    {
                      "_line": "    visible: bool",
                      "_number": 40,
                      "_offset": 4
                    },
                    {
                      "_line": "    xbound: unknown",
                      "_number": 41,
                      "_offset": 4
                    },
                    {
                      "_line": "    xlabel: str",
                      "_number": 42,
                      "_offset": 4
                    },
                    {
                      "_line": "    xlim: (bottom: float, top: float)",
                      "_number": 43,
                      "_offset": 4
                    },
                    {
                      "_line": "    xmargin: float greater than -0.5",
                      "_number": 44,
                      "_offset": 4
                    },
                    {
                      "_line": "    xscale: {\"linear\", \"log\", \"symlog\", \"logit\", ...}",
                      "_number": 45,
                      "_offset": 4
                    },
                    {
                      "_line": "    xticklabels: unknown",
                      "_number": 46,
                      "_offset": 4
                    },
                    {
                      "_line": "    xticks: unknown",
                      "_number": 47,
                      "_offset": 4
                    },
                    {
                      "_line": "    ybound: unknown",
                      "_number": 48,
                      "_offset": 4
                    },
                    {
                      "_line": "    ylabel: str",
                      "_number": 49,
                      "_offset": 4
                    },
                    {
                      "_line": "    ylim: (bottom: float, top: float)",
                      "_number": 50,
                      "_offset": 4
                    },
                    {
                      "_line": "    ymargin: float greater than -0.5",
                      "_number": 51,
                      "_offset": 4
                    },
                    {
                      "_line": "    yscale: {\"linear\", \"log\", \"symlog\", \"logit\", ...}",
                      "_number": 52,
                      "_offset": 4
                    },
                    {
                      "_line": "    yticklabels: unknown",
                      "_number": 53,
                      "_offset": 4
                    },
                    {
                      "_line": "    yticks: unknown",
                      "_number": 54,
                      "_offset": 4
                    },
                    {
                      "_line": "    zorder: float",
                      "_number": 55,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Properties:"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "adjustable: {'box', 'datalim'} agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array alpha: float or None anchor: 2-tuple of floats or {'C', 'SW', 'S', 'SE', ...} animated: bool aspect: {'auto'} or num autoscale_on: bool autoscalex_on: bool autoscaley_on: bool axes_locator: Callable[[Axes, Renderer], Bbox] axisbelow: bool or 'line' box_aspect: None, or a number clip_box: "
                          }
                        },
                        {
                          "type": "Directive",
                          "data": {
                            "value": [
                              ".Bbox"
                            ],
                            "domain": null,
                            "role": null
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": " clip_on: bool clip_path: Patch or (Path, Transform) or None contains: unknown facecolor or fc: color figure: "
                          }
                        },
                        {
                          "type": "Directive",
                          "data": {
                            "value": [
                              ".Figure"
                            ],
                            "domain": null,
                            "role": null
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": " frame_on: bool gid: str in_layout: bool label: object navigate: bool navigate_mode: unknown path_effects: "
                          }
                        },
                        {
                          "type": "Directive",
                          "data": {
                            "value": [
                              ".AbstractPathEffect"
                            ],
                            "domain": null,
                            "role": null
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": " picker: None or bool or callable position: [left, bottom, width, height] or "
                          }
                        },
                        {
                          "type": "Directive",
                          "data": {
                            "value": [
                              "~matplotlib.transforms.Bbox"
                            ],
                            "domain": null,
                            "role": null
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": " prop_cycle: unknown rasterization_zorder: float or None rasterized: bool or None sketch_params: (scale: float, length: float, randomness: float) snap: bool or None title: str transform: "
                          }
                        },
                        {
                          "type": "Directive",
                          "data": {
                            "value": [
                              ".Transform"
                            ],
                            "domain": null,
                            "role": null
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": " url: str visible: bool xbound: unknown xlabel: str xlim: (bottom: float, top: float) xmargin: float greater than -0.5 xscale: {\"linear\", \"log\", \"symlog\", \"logit\", ...} xticklabels: unknown xticks: unknown ybound: unknown ylabel: str ylim: (bottom: float, top: float) ymargin: float greater than -0.5 yscale: {\"linear\", \"log\", \"symlog\", \"logit\", ...} yticklabels: unknown yticks: unknown zorder: float"
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/figure.py",
  "item_line": 2021,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.pyplot.Figure.gca"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "signature": "gca(self, **kwargs)",
  "references": null,
  "arbitrary": []
}