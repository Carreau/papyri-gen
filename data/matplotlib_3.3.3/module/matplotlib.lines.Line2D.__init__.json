{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Create a "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    ".Line2D"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " instance with *x* and *y* data in sequences of *xdata*, *ydata*."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Additional keyword arguments are "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    ".Line2D"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " properties:"
                }
              }
            ]
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "Properties:",
                      "_number": 2,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array",
                      "_number": 3,
                      "_offset": 0
                    },
                    {
                      "_line": "    alpha: float or None",
                      "_number": 4,
                      "_offset": 0
                    },
                    {
                      "_line": "    animated: bool",
                      "_number": 5,
                      "_offset": 0
                    },
                    {
                      "_line": "    antialiased or aa: bool",
                      "_number": 6,
                      "_offset": 0
                    },
                    {
                      "_line": "    clip_box: `.Bbox`",
                      "_number": 7,
                      "_offset": 0
                    },
                    {
                      "_line": "    clip_on: bool",
                      "_number": 8,
                      "_offset": 0
                    },
                    {
                      "_line": "    clip_path: Patch or (Path, Transform) or None",
                      "_number": 9,
                      "_offset": 0
                    },
                    {
                      "_line": "    color or c: color",
                      "_number": 10,
                      "_offset": 0
                    },
                    {
                      "_line": "    contains: unknown",
                      "_number": 11,
                      "_offset": 0
                    },
                    {
                      "_line": "    dash_capstyle: {'butt', 'round', 'projecting'}",
                      "_number": 12,
                      "_offset": 0
                    },
                    {
                      "_line": "    dash_joinstyle: {'miter', 'round', 'bevel'}",
                      "_number": 13,
                      "_offset": 0
                    },
                    {
                      "_line": "    dashes: sequence of floats (on/off ink in points) or (None, None)",
                      "_number": 14,
                      "_offset": 0
                    },
                    {
                      "_line": "    data: (2, N) array or two 1D arrays",
                      "_number": 15,
                      "_offset": 0
                    },
                    {
                      "_line": "    drawstyle or ds: {'default', 'steps', 'steps-pre', 'steps-mid', 'steps-post'}, default: 'default'",
                      "_number": 16,
                      "_offset": 0
                    },
                    {
                      "_line": "    figure: `.Figure`",
                      "_number": 17,
                      "_offset": 0
                    },
                    {
                      "_line": "    fillstyle: {'full', 'left', 'right', 'bottom', 'top', 'none'}",
                      "_number": 18,
                      "_offset": 0
                    },
                    {
                      "_line": "    gid: str",
                      "_number": 19,
                      "_offset": 0
                    },
                    {
                      "_line": "    in_layout: bool",
                      "_number": 20,
                      "_offset": 0
                    },
                    {
                      "_line": "    label: object",
                      "_number": 21,
                      "_offset": 0
                    },
                    {
                      "_line": "    linestyle or ls: {'-', '--', '-.', ':', '', (offset, on-off-seq), ...}",
                      "_number": 22,
                      "_offset": 0
                    },
                    {
                      "_line": "    linewidth or lw: float",
                      "_number": 23,
                      "_offset": 0
                    },
                    {
                      "_line": "    marker: marker style string, `~.path.Path` or `~.markers.MarkerStyle`",
                      "_number": 24,
                      "_offset": 0
                    },
                    {
                      "_line": "    markeredgecolor or mec: color",
                      "_number": 25,
                      "_offset": 0
                    },
                    {
                      "_line": "    markeredgewidth or mew: float",
                      "_number": 26,
                      "_offset": 0
                    },
                    {
                      "_line": "    markerfacecolor or mfc: color",
                      "_number": 27,
                      "_offset": 0
                    },
                    {
                      "_line": "    markerfacecoloralt or mfcalt: color",
                      "_number": 28,
                      "_offset": 0
                    },
                    {
                      "_line": "    markersize or ms: float",
                      "_number": 29,
                      "_offset": 0
                    },
                    {
                      "_line": "    markevery: None or int or (int, int) or slice or List[int] or float or (float, float) or List[bool]",
                      "_number": 30,
                      "_offset": 0
                    },
                    {
                      "_line": "    path_effects: `.AbstractPathEffect`",
                      "_number": 31,
                      "_offset": 0
                    },
                    {
                      "_line": "    picker: unknown",
                      "_number": 32,
                      "_offset": 0
                    },
                    {
                      "_line": "    pickradius: float",
                      "_number": 33,
                      "_offset": 0
                    },
                    {
                      "_line": "    rasterized: bool or None",
                      "_number": 34,
                      "_offset": 0
                    },
                    {
                      "_line": "    sketch_params: (scale: float, length: float, randomness: float)",
                      "_number": 35,
                      "_offset": 0
                    },
                    {
                      "_line": "    snap: bool or None",
                      "_number": 36,
                      "_offset": 0
                    },
                    {
                      "_line": "    solid_capstyle: {'butt', 'round', 'projecting'}",
                      "_number": 37,
                      "_offset": 0
                    },
                    {
                      "_line": "    solid_joinstyle: {'miter', 'round', 'bevel'}",
                      "_number": 38,
                      "_offset": 0
                    },
                    {
                      "_line": "    transform: `matplotlib.transforms.Transform`",
                      "_number": 39,
                      "_offset": 0
                    },
                    {
                      "_line": "    url: str",
                      "_number": 40,
                      "_offset": 0
                    },
                    {
                      "_line": "    visible: bool",
                      "_number": 41,
                      "_offset": 0
                    },
                    {
                      "_line": "    xdata: 1D array",
                      "_number": 42,
                      "_offset": 0
                    },
                    {
                      "_line": "    ydata: 1D array",
                      "_number": 43,
                      "_offset": 0
                    },
                    {
                      "_line": "    zorder: float",
                      "_number": 44,
                      "_offset": 0
                    },
                    {
                      "_line": "",
                      "_number": 45,
                      "_offset": 0
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Properties:"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array alpha: float or None animated: bool antialiased or aa: bool clip_box: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Bbox"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " clip_on: bool clip_path: Patch or (Path, Transform) or None color or c: color contains: unknown dash_capstyle: {'butt', 'round', 'projecting'} dash_joinstyle: {'miter', 'round', 'bevel'} dashes: sequence of floats (on/off ink in points) or (None, None) data: (2, N) array or two 1D arrays drawstyle or ds: {'default', 'steps', 'steps-pre', 'steps-mid', 'steps-post'}, default: 'default' figure: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Figure"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " fillstyle: {'full', 'left', 'right', 'bottom', 'top', 'none'} gid: str in_layout: bool label: object linestyle or ls: {'-', '--', '-.', ':', '', (offset, on-off-seq), ...} linewidth or lw: float marker: marker style string, "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~.path.Path"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~.markers.MarkerStyle"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " markeredgecolor or mec: color markeredgewidth or mew: float markerfacecolor or mfc: color markerfacecoloralt or mfcalt: color markersize or ms: float markevery: None or int or (int, int) or slice or List[int] or float or (float, float) or List[bool] path_effects: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".AbstractPathEffect"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " picker: unknown pickradius: float rasterized: bool or None sketch_params: (scale: float, length: float, randomness: float) snap: bool or None solid_capstyle: {'butt', 'round', 'projecting'} solid_joinstyle: {'miter', 'round', 'bevel'} transform: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "matplotlib.transforms.Transform"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " url: str visible: bool xdata: 1D array ydata: 1D array zorder: float "
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "See "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "set",
                    "_",
                    "linestyle"
                  ],
                  "domain": null,
                  "role": "meth"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " for a description of the line styles, "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "set",
                    "_",
                    "marker"
                  ],
                  "domain": null,
                  "role": "meth"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " for a description of the markers, and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "set",
                    "_",
                    "drawstyle"
                  ],
                  "domain": null,
                  "role": "meth"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " for a description of the draw styles."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": []
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/lines.py",
  "item_line": 269,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.pyplot.Line2D.__init__"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "__init__(self, xdata, ydata, linewidth=None, linestyle=None, color=None, marker=None, markersize=None, markeredgewidth=None, markeredgecolor=None, markerfacecolor=None, markerfacecoloralt='none', fillstyle=None, antialiased=None, dash_capstyle=None, solid_capstyle=None, dash_joinstyle=None, solid_joinstyle=None, pickradius=5, drawstyle=None, markevery=None, **kwargs)"
}