{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Abstract base class for styling of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    ".FancyBboxPatch"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "This class is not an artist itself.  The "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "_",
                    "_",
                    "call",
                    "_",
                    "_"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " method returns the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~matplotlib.path.Path"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " for outlining the fancy box. The actual drawing is handled in "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    ".FancyBboxPatch"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Subclasses may only use parameters with default values in their "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "_",
                    "_",
                    "init",
                    "_",
                    "_"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " method because they must be able to be initialized without arguments."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Subclasses must implement the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "transmute"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " method. It receives the enclosing rectangle *x0, y0, width, height* as well as the *mutation_size*, which scales the outline properties such as padding. It returns the outline of the fancy box as "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    ".path.Path"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": []
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/patches.py",
  "item_line": 1945,
  "item_type": "<class 'type'>",
  "aliases": [
    "matplotlib.patches.BoxStyle._Base"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "_Base()"
}