{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Create a true circle at center *xy* = (*x*, *y*) with given *radius*."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Unlike "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "CirclePolygon"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " which is a polygonal approximation, this uses Bezier splines and is much closer to a scale-free circle."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Valid keyword arguments are:"
                }
              }
            ]
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "Properties:",
                      "_number": 5,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array",
                      "_number": 6,
                      "_offset": 0
                    },
                    {
                      "_line": "    alpha: float or None",
                      "_number": 7,
                      "_offset": 0
                    },
                    {
                      "_line": "    animated: bool",
                      "_number": 8,
                      "_offset": 0
                    },
                    {
                      "_line": "    antialiased or aa: unknown",
                      "_number": 9,
                      "_offset": 0
                    },
                    {
                      "_line": "    capstyle: {'butt', 'round', 'projecting'}",
                      "_number": 10,
                      "_offset": 0
                    },
                    {
                      "_line": "    clip_box: `.Bbox`",
                      "_number": 11,
                      "_offset": 0
                    },
                    {
                      "_line": "    clip_on: bool",
                      "_number": 12,
                      "_offset": 0
                    },
                    {
                      "_line": "    clip_path: Patch or (Path, Transform) or None",
                      "_number": 13,
                      "_offset": 0
                    },
                    {
                      "_line": "    color: color",
                      "_number": 14,
                      "_offset": 0
                    },
                    {
                      "_line": "    contains: unknown",
                      "_number": 15,
                      "_offset": 0
                    },
                    {
                      "_line": "    edgecolor or ec: color or None or 'auto'",
                      "_number": 16,
                      "_offset": 0
                    },
                    {
                      "_line": "    facecolor or fc: color or None",
                      "_number": 17,
                      "_offset": 0
                    },
                    {
                      "_line": "    figure: `.Figure`",
                      "_number": 18,
                      "_offset": 0
                    },
                    {
                      "_line": "    fill: bool",
                      "_number": 19,
                      "_offset": 0
                    },
                    {
                      "_line": "    gid: str",
                      "_number": 20,
                      "_offset": 0
                    },
                    {
                      "_line": "    hatch: {'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'}",
                      "_number": 21,
                      "_offset": 0
                    },
                    {
                      "_line": "    in_layout: bool",
                      "_number": 22,
                      "_offset": 0
                    },
                    {
                      "_line": "    joinstyle: {'miter', 'round', 'bevel'}",
                      "_number": 23,
                      "_offset": 0
                    },
                    {
                      "_line": "    label: object",
                      "_number": 24,
                      "_offset": 0
                    },
                    {
                      "_line": "    linestyle or ls: {'-', '--', '-.', ':', '', (offset, on-off-seq), ...}",
                      "_number": 25,
                      "_offset": 0
                    },
                    {
                      "_line": "    linewidth or lw: float or None",
                      "_number": 26,
                      "_offset": 0
                    },
                    {
                      "_line": "    path_effects: `.AbstractPathEffect`",
                      "_number": 27,
                      "_offset": 0
                    },
                    {
                      "_line": "    picker: None or bool or callable",
                      "_number": 28,
                      "_offset": 0
                    },
                    {
                      "_line": "    rasterized: bool or None",
                      "_number": 29,
                      "_offset": 0
                    },
                    {
                      "_line": "    sketch_params: (scale: float, length: float, randomness: float)",
                      "_number": 30,
                      "_offset": 0
                    },
                    {
                      "_line": "    snap: bool or None",
                      "_number": 31,
                      "_offset": 0
                    },
                    {
                      "_line": "    transform: `.Transform`",
                      "_number": 32,
                      "_offset": 0
                    },
                    {
                      "_line": "    url: str",
                      "_number": 33,
                      "_offset": 0
                    },
                    {
                      "_line": "    visible: bool",
                      "_number": 34,
                      "_offset": 0
                    },
                    {
                      "_line": "    zorder: float",
                      "_number": 35,
                      "_offset": 0
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Properties:"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array alpha: float or None animated: bool antialiased or aa: unknown capstyle: {'butt', 'round', 'projecting'} clip_box: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Bbox"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " clip_on: bool clip_path: Patch or (Path, Transform) or None color: color contains: unknown edgecolor or ec: color or None or 'auto' facecolor or fc: color or None figure: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Figure"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " fill: bool gid: str hatch: {'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'} in_layout: bool joinstyle: {'miter', 'round', 'bevel'} label: object linestyle or ls: {'-', '--', '-.', ':', '', (offset, on-off-seq), ...} linewidth or lw: float or None path_effects: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".AbstractPathEffect"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " picker: None or bool or callable rasterized: bool or None sketch_params: (scale: float, length: float, randomness: float) snap: bool or None transform: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Transform"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " url: str visible: bool zorder: float"
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": []
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/patches.py",
  "item_line": 1518,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.pyplot.Circle.__init__"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "__init__(self, xy, radius=5, **kwargs)"
}