{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Connect point *xyA* in *coordsA* with point *xyB* in *coordsB*."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Valid keys are"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "===============  ====================================================== Key              Description ===============  ====================================================== arrowstyle       the arrow style connectionstyle  the connection style relpos           default is (0.5, 0.5) patchA           default is bounding box of the text patchB           default is None shrinkA          default is 2 points shrinkB          default is 2 points mutation_scale   default is text size (in points) mutation_aspect  default is 1. ?                any key for "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "matplotlib.patches.PathPatch"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " ===============  ======================================================"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "*coordsA* and *coordsB* are strings that indicate the coordinates of *xyA* and *xyB*."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "=================  =================================================== Property           Description =================  =================================================== 'figure points'    points from the lower left corner of the figure 'figure pixels'    pixels from the lower left corner of the figure 'figure fraction'  0, 0 is lower left of figure and 1, 1 is upper right 'axes points'      points from lower left corner of axes 'axes pixels'      pixels from lower left corner of axes 'axes fraction'    0, 0 is lower left of axes and 1, 1 is upper right 'data'             use the coordinate system of the object being"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "                   annotated (default)"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "'offset points'    offset (in points) from the *xy* value 'polar'            you can specify *theta*, *r* for the annotation,"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "                   even in cartesian plots.  Note that if you are using                    a polar axes, you do not need to specify polar for                    the coordinate system since that is the native                    \"data\" coordinate system."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "=================  ==================================================="
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Alternatively they can be set to any valid "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~matplotlib.transforms.Transform"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. note::",
                  "_number": 42,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 43,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": [
                {
                  "_line": "   Using `ConnectionPatch` across two `~.axes.Axes` instances",
                  "_number": 44,
                  "_offset": 0
                },
                {
                  "_line": "   is not directly compatible with :doc:`constrained layout",
                  "_number": 45,
                  "_offset": 0
                },
                {
                  "_line": "   </tutorials/intermediate/constrainedlayout_guide>`. Add the artist",
                  "_number": 46,
                  "_offset": 0
                },
                {
                  "_line": "   directly to the `.Figure` instead of adding it to a specific Axes.",
                  "_number": 47,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 48,
                  "_offset": 0
                },
                {
                  "_line": "   .. code-block:: default",
                  "_number": 49,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 50,
                  "_offset": 0
                },
                {
                  "_line": "      fig, ax = plt.subplots(1, 2, constrained_layout=True)",
                  "_number": 51,
                  "_offset": 0
                },
                {
                  "_line": "      con = ConnectionPatch(..., axesA=ax[0], axesB=ax[1])",
                  "_number": 52,
                  "_offset": 0
                },
                {
                  "_line": "      fig.add_artist(con)",
                  "_number": 53,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "note",
            "args0": [
              ""
            ],
            "inner": {
              "inline": [
                {
                  "type": "Words",
                  "data": {
                    "value": "Using "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "ConnectionPatch"
                    ],
                    "domain": null,
                    "role": null
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": " across two "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "~.axes.Axes"
                    ],
                    "domain": null,
                    "role": null
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": " instances is not directly compatible with "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "constrained",
                      " ",
                      "layout",
                      " ",
                      "</tutorials/intermediate/constrainedlayout",
                      "_",
                      "guide>"
                    ],
                    "domain": null,
                    "role": "doc"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ". Add the artist directly to the "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      ".Figure"
                    ],
                    "domain": null,
                    "role": null
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": " instead of adding it to a specific Axes.  .. code-block:: default     fig, ax = plt.subplots(1, 2, constrained_layout=True)    con = ConnectionPatch(..., axesA=ax[0], axesB=ax[1])    fig.add_artist(con)"
                  }
                }
              ],
              "inner": []
            }
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/patches.py",
  "item_line": 4191,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.patches.ConnectionPatch.__init__"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "signature": "__init__(self, xyA, xyB, coordsA, coordsB=None, axesA=None, axesB=None, arrowstyle='-', connectionstyle='arc3', patchA=None, patchB=None, shrinkA=0.0, shrinkB=0.0, mutation_scale=10.0, mutation_aspect=None, clip_on=False, dpi_cor=1.0, **kwargs)",
  "references": null,
  "arbitrary": []
}