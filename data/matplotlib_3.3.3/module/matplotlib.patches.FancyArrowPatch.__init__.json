{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "There are two ways for defining an arrow:"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "- If *posA* and *posB* are given, a path connecting two points is",
                      "_number": 0,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "  created according to *connectionstyle*. The path will be",
                      "_number": 1,
                      "_offset": 2
                    },
                    {
                      "_line": "  clipped with *patchA* and *patchB* and further shrunken by",
                      "_number": 2,
                      "_offset": 2
                    },
                    {
                      "_line": "  *shrinkA* and *shrinkB*. An arrow is drawn along this",
                      "_number": 3,
                      "_offset": 2
                    },
                    {
                      "_line": "  resulting path using the *arrowstyle* parameter.",
                      "_number": 4,
                      "_offset": 2
                    },
                    {
                      "_line": "",
                      "_number": 5,
                      "_offset": 2
                    }
                  ]
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- If *posA* and *posB* are given, a path connecting two points is"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "created according to *connectionstyle*. The path will be clipped with *patchA* and *patchB* and further shrunken by *shrinkA* and *shrinkB*. An arrow is drawn along this resulting path using the *arrowstyle* parameter. "
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "- Alternatively if *path* is provided, an arrow is drawn along this",
                      "_number": 6,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "  path and *patchA*, *patchB*, *shrinkA*, and *shrinkB* are ignored.",
                      "_number": 7,
                      "_offset": 2
                    }
                  ]
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- Alternatively if *path* is provided, an arrow is drawn along this"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "path and *patchA*, *patchB*, *shrinkA*, and *shrinkB* are ignored."
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "posA, posB",
            "type_": "(float, float), default: None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "(x, y) coordinates of arrow tail and arrow head respectively."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "path",
            "type_": "`~matplotlib.path.Path`, default: None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If provided, an arrow is drawn along this path and *patchA*, *patchB*, *shrinkA*, and *shrinkB* are ignored."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "arrowstyle",
            "type_": "str or `.ArrowStyle`, default: 'simple'",
            "desc": [
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                            "_number": 0,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "  The `.ArrowStyle` with which the fancy arrow is drawn.  If a",
                            "_number": 0,
                            "_offset": 2
                          },
                          {
                            "_line": "  string, it should be one of the available arrowstyle names, with",
                            "_number": 1,
                            "_offset": 2
                          },
                          {
                            "_line": "  optional comma-separated attributes.  The optional attributes are",
                            "_number": 2,
                            "_offset": 2
                          },
                          {
                            "_line": "  meant to be scaled with the *mutation_scale*.  The following arrow",
                            "_number": 3,
                            "_offset": 2
                          },
                          {
                            "_line": "  styles are available:",
                            "_number": 4,
                            "_offset": 2
                          },
                          {
                            "_line": "",
                            "_number": 5,
                            "_offset": 2
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "The "
                                }
                              },
                              {
                                "type": "Directive",
                                "data": {
                                  "value": [
                                    ".ArrowStyle"
                                  ],
                                  "domain": null,
                                  "role": null
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " with which the fancy arrow is drawn.  If a string, it should be one of the available arrowstyle names, with optional comma-separated attributes.  The optional attributes are meant to be scaled with the *mutation_scale*.  The following arrow styles are available: "
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "=============  ==========  ========================================================================== Class          Name        Attrs =============  ==========  ========================================================================== Curve          "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "-"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "       None CurveB         "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "->"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "      head_length=0.4, head_width=0.2 BracketB       "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "-["
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "      widthB=1.0, lengthB=0.2, angleB=None CurveFilledB   "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "-|>"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "     head_length=0.4, head_width=0.2 CurveA         "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "<-"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "      head_length=0.4, head_width=0.2 CurveAB        "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "<->"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "     head_length=0.4, head_width=0.2 CurveFilledA   "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "<|-"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "     head_length=0.4, head_width=0.2 CurveFilledAB  "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "<|-|>"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "   head_length=0.4, head_width=0.2 BracketA       "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "]-"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "      widthA=1.0, lengthA=0.2, angleA=None BracketAB      "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "]-["
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "     widthA=1.0, lengthA=0.2, angleA=None, widthB=1.0, lengthB=0.2, angleB=None Fancy          "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "fancy"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "   head_length=0.4, head_width=0.4, tail_width=0.4 Simple         "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "simple"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "  head_length=0.5, head_width=0.5, tail_width=0.2 Wedge          "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "wedge"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "   tail_width=0.3, shrink_factor=0.5 BarAB          "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "|-|"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "     widthA=1.0, angleA=None, widthB=1.0, angleB=None =============  ==========  =========================================================================="
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "connectionstyle",
            "type_": "str or `.ConnectionStyle` or None, optional, default: 'arc3'",
            "desc": [
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                            "_number": 0,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "  The `.ConnectionStyle` with which *posA* and *posB* are connected.",
                            "_number": 0,
                            "_offset": 2
                          },
                          {
                            "_line": "  If a string, it should be one of the available connectionstyle",
                            "_number": 1,
                            "_offset": 2
                          },
                          {
                            "_line": "  names, with optional comma-separated attributes.  The following",
                            "_number": 2,
                            "_offset": 2
                          },
                          {
                            "_line": "  connection styles are available:",
                            "_number": 3,
                            "_offset": 2
                          },
                          {
                            "_line": "",
                            "_number": 4,
                            "_offset": 2
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "The "
                                }
                              },
                              {
                                "type": "Directive",
                                "data": {
                                  "value": [
                                    ".ConnectionStyle"
                                  ],
                                  "domain": null,
                                  "role": null
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " with which *posA* and *posB* are connected. If a string, it should be one of the available connectionstyle names, with optional comma-separated attributes.  The following connection styles are available: "
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "======  ==========  ================================================= Class   Name        Attrs ======  ==========  ================================================= Angle   "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "angle"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "   angleA=90, angleB=0, rad=0.0 Angle3  "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "angle3"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "  angleA=90, angleB=0 Arc     "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "arc"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "     angleA=0, angleB=0, armA=None, armB=None, rad=0.0 Arc3    "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "arc3"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "    rad=0.0 Bar     "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "bar"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "     armA=0.0, armB=0.0, fraction=0.3, angle=None ======  ==========  ================================================="
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "patchA, patchB",
            "type_": "`.Patch`, default: None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Head and tail patches, respectively."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "shrinkA, shrinkB",
            "type_": "float, default: 2",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Shrinking factor of the tail and head of the arrow respectively."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "mutation_scale",
            "type_": "float, default: 1",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Value with which attributes of *arrowstyle* (e.g., *head_length*) will be scaled."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "mutation_aspect",
            "type_": "None or float, default: None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The height of the rectangle will be squeezed by this value before the mutation and the mutated box will be stretched by the inverse of it."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "dpi_cor",
            "type_": "float, default: 1",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "dpi_cor is currently used for linewidth-related things and shrink factor. Mutation scale is affected by this."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "**kwargs",
            "type_": "`.Patch` properties, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Here is a list of available "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Patch"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " properties:"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "Properties:",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array alpha: float or None animated: bool antialiased or aa: unknown capstyle: {'butt', 'round', 'projecting'} clip_box: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Bbox"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " clip_on: bool clip_path: Patch or (Path, Transform) or None color: color contains: unknown edgecolor or ec: color or None or 'auto' facecolor or fc: color or None figure: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Figure"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " fill: bool gid: str hatch: {'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'} in_layout: bool joinstyle: {'miter', 'round', 'bevel'} label: object linestyle or ls: {'-', '--', '-.', ':', '', (offset, on-off-seq), ...} linewidth or lw: float or None path_effects: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".AbstractPathEffect"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " picker: None or bool or callable rasterized: bool or None sketch_params: (scale: float, length: float, randomness: float) snap: bool or None transform: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Transform"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " url: str visible: bool zorder: float"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "In contrast to other patches, the default "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "capstyle"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "joinstyle"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " for "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "FancyArrowPatch"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are set to "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "\"round\""
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Other Parameters"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/patches.py",
  "item_line": 3845,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.offsetbox.FancyArrowPatch.__init__"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "signature": "__init__(self, posA=None, posB=None, path=None, arrowstyle='simple', connectionstyle='arc3', patchA=None, patchB=None, shrinkA=2, shrinkB=2, mutation_scale=1, mutation_aspect=None, dpi_cor=1, **kwargs)",
  "references": null,
  "arbitrary": []
}