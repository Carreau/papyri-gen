{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "xy",
            "type_": "float, float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The lower left corner of the box."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "width",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The width of the box."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "height",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The height of the box."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "boxstyle",
            "type_": "str or `matplotlib.patches.BoxStyle`",
            "desc": [
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                            "_number": 0,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "  The style of the fancy box. This can either be a `.BoxStyle`",
                            "_number": 0,
                            "_offset": 2
                          },
                          {
                            "_line": "  instance or a string of the style name and optionally comma",
                            "_number": 1,
                            "_offset": 2
                          },
                          {
                            "_line": "  seprarated attributes (e.g. \"Round, pad=0.2\"). This string is",
                            "_number": 2,
                            "_offset": 2
                          },
                          {
                            "_line": "  passed to `.BoxStyle` to construct a `.BoxStyle` object. See",
                            "_number": 3,
                            "_offset": 2
                          },
                          {
                            "_line": "  there for a full documentation.",
                            "_number": 4,
                            "_offset": 2
                          },
                          {
                            "_line": "",
                            "_number": 5,
                            "_offset": 2
                          },
                          {
                            "_line": "  The following box styles are available:",
                            "_number": 6,
                            "_offset": 2
                          },
                          {
                            "_line": "",
                            "_number": 7,
                            "_offset": 2
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "The style of the fancy box. This can either be a "
                                }
                              },
                              {
                                "type": "Directive",
                                "data": {
                                  "value": [
                                    ".BoxStyle"
                                  ],
                                  "domain": null,
                                  "role": null
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " instance or a string of the style name and optionally comma seprarated attributes (e.g. \"Round, pad=0.2\"). This string is passed to "
                                }
                              },
                              {
                                "type": "Directive",
                                "data": {
                                  "value": [
                                    ".BoxStyle"
                                  ],
                                  "domain": null,
                                  "role": null
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " to construct a "
                                }
                              },
                              {
                                "type": "Directive",
                                "data": {
                                  "value": [
                                    ".BoxStyle"
                                  ],
                                  "domain": null,
                                  "role": null
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " object. See there for a full documentation.  The following box styles are available: "
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "==========  ==============  =========================== Class       Name            Attrs ==========  ==============  =========================== Circle      "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "circle"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "      pad=0.3 DArrow      "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "darrow"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "      pad=0.3 LArrow      "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "larrow"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "      pad=0.3 RArrow      "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "rarrow"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "      pad=0.3 Round       "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "round"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "       pad=0.3, rounding_size=None Round4      "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "round4"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "      pad=0.3, rounding_size=None Roundtooth  "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "roundtooth"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "  pad=0.3, tooth_size=None Sawtooth    "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "sawtooth"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "    pad=0.3, tooth_size=None Square      "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "square"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "      pad=0.3 ==========  ==============  ==========================="
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "mutation_scale",
            "type_": "float, default: 1",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Scaling factor applied to the attributes of the box style (e.g. pad or rounding_size)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "mutation_aspect",
            "type_": "float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The height of the rectangle will be squeezed by this value before the mutation and the mutated box will be stretched by the inverse of it. For example, this allows different horizontal and vertical padding."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "**kwargs",
            "type_": "`.Patch` properties",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "Properties:",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array alpha: float or None animated: bool antialiased or aa: unknown capstyle: {'butt', 'round', 'projecting'} clip_box: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Bbox"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " clip_on: bool clip_path: Patch or (Path, Transform) or None color: color contains: unknown edgecolor or ec: color or None or 'auto' facecolor or fc: color or None figure: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Figure"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " fill: bool gid: str hatch: {'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'} in_layout: bool joinstyle: {'miter', 'round', 'bevel'} label: object linestyle or ls: {'-', '--', '-.', ':', '', (offset, on-off-seq), ...} linewidth or lw: float or None path_effects: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".AbstractPathEffect"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " picker: None or bool or callable rasterized: bool or None sketch_params: (scale: float, length: float, randomness: float) snap: bool or None transform: "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Transform"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " url: str visible: bool zorder: float"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Parameters",
    "Other Parameters"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/patches.py",
  "item_line": 3580,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.legend.FancyBboxPatch.__init__"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "signature": "__init__(self, xy, width, height, boxstyle='round', bbox_transmuter=None, mutation_scale=1.0, mutation_aspect=None, **kwargs)",
  "references": null,
  "arbitrary": []
}