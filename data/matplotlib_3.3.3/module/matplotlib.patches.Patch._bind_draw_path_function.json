{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "draw()"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " helper factored out for sharing with "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "FancyArrowPatch"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Yields a callable "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "dp"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " such that calling "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "dp(",
                    "*",
                    "args,",
                    " ",
                    "*",
                    "*",
                    "kwargs)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is equivalent to calling "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "renderer1.draw",
                    "_",
                    "path(gc,",
                    " ",
                    "*",
                    "args,",
                    " ",
                    "*",
                    "*",
                    "kwargs)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " where "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "renderer1"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "gc"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " have been suitably set from "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "renderer"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and the artist's properties."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": []
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/contextlib.py",
  "item_line": 523,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.legend.Patch._bind_draw_path_function"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "_bind_draw_path_function(self, renderer)"
}