{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Add a colorbar to a plot."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Function signatures for the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~matplotlib.pyplot"
                  ],
                  "domain": null,
                  "role": "mod"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " interface; all but the first are also method signatures for the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~.Figure.colorbar"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " method::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "  colorbar(**kwargs)",
                  "_number": 3,
                  "_offset": 2
                },
                {
                  "_line": "  colorbar(mappable, **kwargs)",
                  "_number": 4,
                  "_offset": 2
                },
                {
                  "_line": "  colorbar(mappable, cax=cax, **kwargs)",
                  "_number": 5,
                  "_offset": 2
                },
                {
                  "_line": "  colorbar(mappable, ax=ax, **kwargs)",
                  "_number": 6,
                  "_offset": 2
                }
              ]
            }
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "mappable",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "matplotlib.cm.ScalarMappable"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (i.e., "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~matplotlib.image.AxesImage"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~matplotlib.contour.ContourSet"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", etc.) described by this colorbar. This argument is mandatory for the "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Figure.colorbar"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " method but optional for the "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".pyplot.colorbar"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " function, which sets the default to the current image."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Note that one can create a "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".ScalarMappable"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " \"on-the-fly\" to generate colorbars not attached to a previously drawn artist, e.g. ::"
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": "    fig.colorbar(cm.ScalarMappable(norm=norm, cmap=cmap), ax=ax)",
                        "_number": 9,
                        "_offset": 4
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "cax",
            "type_": "`~matplotlib.axes.Axes`, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Axes into which the colorbar will be drawn."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "ax",
            "type_": "`~matplotlib.axes.Axes`, list of Axes, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Parent axes from which space for a new colorbar axes will be stolen. If a list of axes is given they will all be resized to make room for the colorbar axes."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "use_gridspec",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If *cax* is "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "None"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", a new *cax* is created as an instance of Axes.  If *ax* is an instance of Subplot and *use_gridspec* is "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "True"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", *cax* is created as an instance of Subplot using the "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~.gridspec"
                        ],
                        "domain": null,
                        "role": "mod"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " module."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "colorbar",
            "type_": "`~matplotlib.colorbar.Colorbar`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "See also its base class, "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~matplotlib.colorbar.ColorbarBase"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Additional keyword arguments are of two kinds:"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "  axes properties:"
                }
              }
            ]
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "    fraction : float, default: 0.15",
                      "_number": 4,
                      "_offset": 4
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "        Fraction of original axes to use for colorbar.",
                      "_number": 5,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "fraction : float, default: 0.15"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Fraction of original axes to use for colorbar."
                      }
                    }
                  ]
                }
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "    shrink : float, default: 1.0",
                      "_number": 6,
                      "_offset": 4
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "        Fraction by which to multiply the size of the colorbar.",
                      "_number": 7,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "shrink : float, default: 1.0"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Fraction by which to multiply the size of the colorbar."
                      }
                    }
                  ]
                }
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "    aspect : float, default: 20",
                      "_number": 8,
                      "_offset": 4
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "        Ratio of long to short dimensions.",
                      "_number": 9,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 10,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "aspect : float, default: 20"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Ratio of long to short dimensions. "
                      }
                    }
                  ]
                }
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "    pad : float, default: 0.05 if vertical, 0.15 if horizontal",
                      "_number": 11,
                      "_offset": 4
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "        Fraction of original axes between colorbar and new image axes.",
                      "_number": 12,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "pad : float, default: 0.05 if vertical, 0.15 if horizontal"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Fraction of original axes between colorbar and new image axes."
                      }
                    }
                  ]
                }
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "    anchor : (float, float), optional",
                      "_number": 13,
                      "_offset": 4
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "        The anchor point of the colorbar axes.",
                      "_number": 14,
                      "_offset": 4
                    },
                    {
                      "_line": "        Defaults to (0.0, 0.5) if vertical; (0.5, 1.0) if horizontal.",
                      "_number": 15,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "anchor : (float, float), optional"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The anchor point of the colorbar axes. Defaults to (0.0, 0.5) if vertical; (0.5, 1.0) if horizontal."
                      }
                    }
                  ]
                }
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "    panchor : (float, float), or *False*, optional",
                      "_number": 16,
                      "_offset": 4
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "        The anchor point of the colorbar parent axes. If *False*, the parent",
                      "_number": 17,
                      "_offset": 4
                    },
                    {
                      "_line": "        axes' anchor will be unchanged.",
                      "_number": 18,
                      "_offset": 4
                    },
                    {
                      "_line": "        Defaults to (1.0, 0.5) if vertical; (0.5, 0.0) if horizontal.",
                      "_number": 19,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 20,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "panchor : (float, float), or *False*, optional"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The anchor point of the colorbar parent axes. If *False*, the parent axes' anchor will be unchanged. Defaults to (1.0, 0.5) if vertical; (0.5, 0.0) if horizontal. "
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "  colorbar properties:"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "    ============  ====================================================     Property      Description     ============  ====================================================     *extend*      {'neither', 'both', 'min', 'max'}"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "                  If not 'neither', make pointed end(s) for out-of-                   range values.  These are set for a given colormap                   using the colormap set_under and set_over methods."
                }
              }
            ]
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "    *extendfrac*  {*None*, 'auto', length, lengths}",
                      "_number": 30,
                      "_offset": 4
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "                  If set to *None*, both the minimum and maximum",
                      "_number": 31,
                      "_offset": 4
                    },
                    {
                      "_line": "                  triangular colorbar extensions with have a length of",
                      "_number": 32,
                      "_offset": 4
                    },
                    {
                      "_line": "                  5% of the interior colorbar length (this is the",
                      "_number": 33,
                      "_offset": 4
                    },
                    {
                      "_line": "                  default setting). If set to 'auto', makes the",
                      "_number": 34,
                      "_offset": 4
                    },
                    {
                      "_line": "                  triangular colorbar extensions the same lengths as",
                      "_number": 35,
                      "_offset": 4
                    },
                    {
                      "_line": "                  the interior boxes (when *spacing* is set to",
                      "_number": 36,
                      "_offset": 4
                    },
                    {
                      "_line": "                  'uniform') or the same lengths as the respective",
                      "_number": 37,
                      "_offset": 4
                    },
                    {
                      "_line": "                  adjacent interior boxes (when *spacing* is set to",
                      "_number": 38,
                      "_offset": 4
                    },
                    {
                      "_line": "                  'proportional'). If a scalar, indicates the length",
                      "_number": 39,
                      "_offset": 4
                    },
                    {
                      "_line": "                  of both the minimum and maximum triangular colorbar",
                      "_number": 40,
                      "_offset": 4
                    },
                    {
                      "_line": "                  extensions as a fraction of the interior colorbar",
                      "_number": 41,
                      "_offset": 4
                    },
                    {
                      "_line": "                  length. A two-element sequence of fractions may also",
                      "_number": 42,
                      "_offset": 4
                    },
                    {
                      "_line": "                  be given, indicating the lengths of the minimum and",
                      "_number": 43,
                      "_offset": 4
                    },
                    {
                      "_line": "                  maximum colorbar extensions respectively as a",
                      "_number": 44,
                      "_offset": 4
                    },
                    {
                      "_line": "                  fraction of the interior colorbar length.",
                      "_number": 45,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "*extendfrac*  {*None*, 'auto', length, lengths}"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If set to *None*, both the minimum and maximum triangular colorbar extensions with have a length of 5% of the interior colorbar length (this is the default setting). If set to 'auto', makes the triangular colorbar extensions the same lengths as the interior boxes (when *spacing* is set to 'uniform') or the same lengths as the respective adjacent interior boxes (when *spacing* is set to 'proportional'). If a scalar, indicates the length of both the minimum and maximum triangular colorbar extensions as a fraction of the interior colorbar length. A two-element sequence of fractions may also be given, indicating the lengths of the minimum and maximum colorbar extensions respectively as a fraction of the interior colorbar length."
                      }
                    }
                  ]
                }
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "    *extendrect*  bool",
                      "_number": 46,
                      "_offset": 4
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "                  If *False* the minimum and maximum colorbar extensions",
                      "_number": 47,
                      "_offset": 4
                    },
                    {
                      "_line": "                  will be triangular (the default). If *True* the",
                      "_number": 48,
                      "_offset": 4
                    },
                    {
                      "_line": "                  extensions will be rectangular.",
                      "_number": 49,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "*extendrect*  bool"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If *False* the minimum and maximum colorbar extensions will be triangular (the default). If *True* the extensions will be rectangular."
                      }
                    }
                  ]
                }
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "    *spacing*     {'uniform', 'proportional'}",
                      "_number": 50,
                      "_offset": 4
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "                  Uniform spacing gives each discrete color the same",
                      "_number": 51,
                      "_offset": 4
                    },
                    {
                      "_line": "                  space; proportional makes the space proportional to",
                      "_number": 52,
                      "_offset": 4
                    },
                    {
                      "_line": "                  the data interval.",
                      "_number": 53,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "*spacing*     {'uniform', 'proportional'}"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Uniform spacing gives each discrete color the same space; proportional makes the space proportional to the data interval."
                      }
                    }
                  ]
                }
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "    *ticks*       *None* or list of ticks or Locator",
                      "_number": 54,
                      "_offset": 4
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "                  If None, ticks are determined automatically from the",
                      "_number": 55,
                      "_offset": 4
                    },
                    {
                      "_line": "                  input.",
                      "_number": 56,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "*ticks*       *None* or list of ticks or Locator"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If None, ticks are determined automatically from the input."
                      }
                    }
                  ]
                }
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "    *format*      None or str or Formatter",
                      "_number": 57,
                      "_offset": 4
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "                  If None, `~.ticker.ScalarFormatter` is used.",
                      "_number": 58,
                      "_offset": 4
                    },
                    {
                      "_line": "                  If a format string is given, e.g., '%.3f', that is used.",
                      "_number": 59,
                      "_offset": 4
                    },
                    {
                      "_line": "                  An alternative `~.ticker.Formatter` may be given instead.",
                      "_number": 60,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "*format*      None or str or Formatter"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If None, "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~.ticker.ScalarFormatter"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is used. If a format string is given, e.g., '%.3f', that is used. An alternative "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~.ticker.Formatter"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " may be given instead."
                      }
                    }
                  ]
                }
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "    *drawedges*   bool",
                      "_number": 61,
                      "_offset": 4
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "                  Whether to draw lines at color boundaries.",
                      "_number": 62,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "*drawedges*   bool"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Whether to draw lines at color boundaries."
                      }
                    }
                  ]
                }
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "    *label*       str",
                      "_number": 63,
                      "_offset": 4
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "                  The label on the colorbar's long axis.",
                      "_number": 64,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "*label*       str"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The label on the colorbar's long axis."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "    ============  ===================================================="
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "    The following will probably be useful only in the context of     indexed colors (that is, when the mappable has norm=NoNorm()),     or other unusual circumstances."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "    ============   ===================================================     Property       Description     ============   ===================================================     *boundaries*   None or a sequence     *values*       None or a sequence which must be of length 1 less"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "                   than the sequence of *boundaries*. For each region                    delimited by adjacent entries in *boundaries*, the                    color mapped to the corresponding value in values                    will be used."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "    ============   ==================================================="
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "If *mappable* is a "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~.contour.ContourSet"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", its *extend* kwarg is included automatically."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The *shrink* kwarg provides a simple way to scale the colorbar with respect to the axes. Note that if *cax* is specified, it determines the size of the colorbar and *shrink* and *aspect* kwargs are ignored."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "For more precise control, you can manually specify the positions of the axes objects in which the mappable and the colorbar are drawn.  In this case, do not use any of the axes properties kwargs."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "It is known that some vector graphics viewers (svg and pdf) renders white gaps between segments of the colorbar.  This is due to bugs in the viewers, not Matplotlib.  As a workaround, the colorbar can be rendered with overlapping segments::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "    cbar = colorbar()",
                  "_number": 98,
                  "_offset": 4
                },
                {
                  "_line": "    cbar.solids.set_edgecolor(\"face\")",
                  "_number": 99,
                  "_offset": 4
                },
                {
                  "_line": "    draw()",
                  "_number": 100,
                  "_offset": 4
                },
                {
                  "_line": "",
                  "_number": 101,
                  "_offset": 4
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "However this has negative consequences in other circumstances, e.g. with semi-transparent images (alpha < 1) and colorbar extensions; therefore, this workaround is not used by default (see issue #1188)."
                }
              }
            ]
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/pyplot.py",
  "item_line": 2184,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.pyplot.colorbar"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "colorbar(mappable=None, cax=None, ax=None, **kw)"
}