{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Make a 2D histogram plot."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": []
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "x, y",
            "type_": "array-like, shape (n, )",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Input values"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "bins",
            "type_": "None or int or [int, int] or array-like or [array, array]",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The bin specification:"
                      }
                    }
                  ]
                }
              },
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "- If int, the number of bins for the two dimensions",
                            "_number": 2,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "  (nx=ny=bins).",
                            "_number": 3,
                            "_offset": 0
                          }
                        ]
                      },
                      "dt": {
                        "children": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "- If int, the number of bins for the two dimensions"
                            }
                          }
                        ]
                      },
                      "dd": {
                        "children": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "(nx=ny=bins)."
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- If "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "[int,",
                          " ",
                          "int]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", the number of bins in each dimension"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "  (nx, ny = bins)."
                      }
                    }
                  ]
                }
              },
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "- If array-like, the bin edges for the two dimensions",
                            "_number": 6,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "  (x_edges=y_edges=bins).",
                            "_number": 7,
                            "_offset": 0
                          }
                        ]
                      },
                      "dt": {
                        "children": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "- If array-like, the bin edges for the two dimensions"
                            }
                          }
                        ]
                      },
                      "dd": {
                        "children": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "(x_edges=y_edges=bins)."
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- If "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "[array,",
                          " ",
                          "array]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", the bin edges in each dimension"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "  (x_edges, y_edges = bins)."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The default value is 10."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "range",
            "type_": "array-like shape(2, 2), optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The leftmost and rightmost edges of the bins along each dimension (if not specified explicitly in the bins parameters): "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "[[xmin,",
                          " ",
                          "xmax],",
                          " ",
                          "[ymin,",
                          " ",
                          "ymax]]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". All values outside of this range will be considered outliers and not tallied in the histogram."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "density",
            "type_": "bool, default: False",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Normalize histogram.  See the documentation for the *density* parameter of "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~.Axes.hist"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " for more details."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "weights",
            "type_": "array-like, shape (n, ), optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "An array of values w_i weighing each sample (x_i, y_i)."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "cmin, cmax",
            "type_": "float, default: None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "All bins that has count less than *cmin* or more than *cmax* will not be displayed (set to NaN before passing to imshow) and these count values in the return value count histogram will also be set to nan upon return."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "h",
            "type_": "2D array",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The bi-dimensional histogram of samples x and y. Values in x are histogrammed along the first dimension and values in y are histogrammed along the second dimension."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "xedges",
            "type_": "1D array",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The bin edges along the x axis."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "yedges",
            "type_": "1D array",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The bin edges along the y axis."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "image",
            "type_": "`~.matplotlib.collections.QuadMesh`",
            "desc": []
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "cmap",
            "type_": "Colormap or str, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".colors.Colormap"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " instance.  If not set, use rc settings."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "norm",
            "type_": "Normalize, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".colors.Normalize"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " instance is used to scale luminance data to "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "[0,",
                          " ",
                          "1]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". If not set, defaults to "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".colors.Normalize()"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "vmin/vmax",
            "type_": "None or scalar, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Arguments passed to the "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~.colors.Normalize"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " instance."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "alpha",
            "type_": "``0 <= scalar <= 1`` or ``None``, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The alpha blending value."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "**kwargs",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Additional parameters are passed along to the "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~.Axes.pcolormesh"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " method and "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~matplotlib.collections.QuadMesh"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " constructor."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "- Currently "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "hist2d"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " calculates its own axis limits, and any limits"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "  previously set are ignored."
                }
              }
            ]
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. note::",
                  "_number": 8,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": [
                {
                  "_line": "    In addition to the above described arguments, this function can take",
                  "_number": 9,
                  "_offset": 0
                },
                {
                  "_line": "    a *data* keyword argument. If such a *data* argument is given,",
                  "_number": 10,
                  "_offset": 0
                },
                {
                  "_line": "    the following arguments can also be string ``s``, which is",
                  "_number": 11,
                  "_offset": 0
                },
                {
                  "_line": "    interpreted as ``data[s]`` (unless this raises an exception):",
                  "_number": 12,
                  "_offset": 0
                },
                {
                  "_line": "    *x*, *y*, *weights*.",
                  "_number": 13,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 14,
                  "_offset": 0
                },
                {
                  "_line": "    Objects passed as **data** must support item access (``data[s]``) and",
                  "_number": 15,
                  "_offset": 0
                },
                {
                  "_line": "    membership test (``s in data``).",
                  "_number": 16,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "note",
            "args0": [
              ""
            ],
            "inner": {
              "children": [
                {
                  "type": "Words",
                  "data": {
                    "value": "In addition to the above described arguments, this function can take a *data* keyword argument. If such a *data* argument is given, the following arguments can also be string "
                  }
                },
                {
                  "type": "Verbatim",
                  "data": {
                    "value": [
                      "s"
                    ]
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", which is interpreted as "
                  }
                },
                {
                  "type": "Verbatim",
                  "data": {
                    "value": [
                      "data[s]"
                    ]
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": " (unless this raises an exception): *x*, *y*, *weights*.  Objects passed as **data** must support item access ("
                  }
                },
                {
                  "type": "Verbatim",
                  "data": {
                    "value": [
                      "data[s]"
                    ]
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ") and membership test ("
                  }
                },
                {
                  "type": "Verbatim",
                  "data": {
                    "value": [
                      "s",
                      " ",
                      "in",
                      " ",
                      "data"
                    ]
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ")."
                  }
                }
              ]
            }
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "- Rendering the histogram with a logarithmic color scale is",
                      "_number": 2,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "  accomplished by passing a `.colors.LogNorm` instance to the *norm*",
                      "_number": 3,
                      "_offset": 0
                    },
                    {
                      "_line": "  keyword argument. Likewise, power-law normalization (similar",
                      "_number": 4,
                      "_offset": 0
                    },
                    {
                      "_line": "  in effect to gamma correction) can be accomplished with",
                      "_number": 5,
                      "_offset": 0
                    },
                    {
                      "_line": "  `.colors.PowerNorm`.",
                      "_number": 6,
                      "_offset": 0
                    },
                    {
                      "_line": "",
                      "_number": 7,
                      "_offset": 0
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- Rendering the histogram with a logarithmic color scale is"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "accomplished by passing a "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".colors.LogNorm"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " instance to the *norm* keyword argument. Likewise, power-law normalization (similar in effect to gamma correction) can be accomplished with "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".colors.PowerNorm"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". "
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    "hist"
  ],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Other Parameters",
    "See Also",
    "Notes"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/pyplot.py",
  "item_line": 2694,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.pyplot.hist2d"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [
    {
      "name": {
        "name": "hist",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "1D histogram plotting"
              }
            }
          ]
        }
      ],
      "type": null
    }
  ],
  "references": null,
  "signature": "hist2d(x, y, bins=10, range=None, density=False, weights=None, cmin=None, cmax=None, *, data=None, **kwargs)"
}