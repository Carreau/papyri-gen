{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Build a layout of Axes based on ASCII art or nested lists."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "This is a helper function to build complex GridSpec layouts visually."
                }
              }
            ]
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. note ::",
                  "_number": 2,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 3,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": [
                {
                  "_line": "   This API is provisional and may be revised in the future based on",
                  "_number": 4,
                  "_offset": 0
                },
                {
                  "_line": "   early user feedback.",
                  "_number": 5,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "note ",
            "args0": [
              ""
            ],
            "inner": {
              "children": [
                {
                  "type": "Words",
                  "data": {
                    "value": "This API is provisional and may be revised in the future based on early user feedback."
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "layout",
            "type_": "list of list of {hashable or nested} or str",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A visual layout of how you want your Axes to be arranged labeled as strings.  For example ::"
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": "   x = [['A panel', 'A panel', 'edge'],",
                        "_number": 3,
                        "_offset": 3
                      },
                      {
                        "_line": "        ['C panel', '.',       'edge']]",
                        "_number": 4,
                        "_offset": 3
                      },
                      {
                        "_line": "",
                        "_number": 5,
                        "_offset": 3
                      }
                    ]
                  }
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Produces 4 axes:"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- 'A panel' which is 1 row high and spans the first two columns - 'edge' which is 2 rows high and is on the right edge - 'C panel' which in 1 row and 1 column wide in the bottom left - a blank space 1 row and 1 column wide in the bottom center"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Any of the entries in the layout can be a list of lists of the same form to create nested layouts."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If input is a str, then it must be of the form ::"
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": "  '''",
                        "_number": 18,
                        "_offset": 2
                      },
                      {
                        "_line": "  AAE",
                        "_number": 19,
                        "_offset": 2
                      },
                      {
                        "_line": "  C.E",
                        "_number": 20,
                        "_offset": 2
                      },
                      {
                        "_line": "  '''",
                        "_number": 21,
                        "_offset": 2
                      },
                      {
                        "_line": "",
                        "_number": 22,
                        "_offset": 2
                      }
                    ]
                  }
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "where each character is a column and each line is a row. This only allows only single character Axes labels and does not allow nesting but is very terse."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "subplot_kw",
            "type_": "dict, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Dictionary with keywords passed to the "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".Figure.add",
                          "_",
                          "subplot"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " call used to create each subplot."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "gridspec_kw",
            "type_": "dict, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Dictionary with keywords passed to the "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".GridSpec"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " constructor used to create the grid the subplots are placed on."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "empty_sentinel",
            "type_": "object, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Entry in the layout to mean \"leave this space empty\".  Defaults to "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'.'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". Note, if *layout* is a string, it is processed via "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "inspect.cleandoc"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " to remove leading white space, which may interfere with using white-space as the empty sentinel."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "**fig_kw",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "All additional keyword arguments are passed to the "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".pyplot.figure"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " call."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "fig",
            "type_": "`~.figure.Figure`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The new figure"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "dict[label, Axes]",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A dictionary mapping the labels to the Axes objects."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/pyplot.py",
  "item_line": 1294,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.pyplot.subplot_mosaic"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "subplot_mosaic(layout, *, subplot_kw=None, gridspec_kw=None, empty_sentinel='.', **fig_kw)"
}