{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Create a figure and a set of subplots."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "This utility wrapper makes it convenient to create common layouts of subplots, including the enclosing figure object, in a single call."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "nrows, ncols",
            "type_": "int, default: 1",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Number of rows/columns of the subplot grid."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "sharex, sharey",
            "type_": "bool or {'none', 'all', 'row', 'col'}, default: False",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Controls sharing of properties among x (*sharex*) or y (*sharey*) axes:"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- True or 'all': x- or y-axis will be shared among all subplots. - False or 'none': each subplot x- or y-axis will be independent. - 'row': each subplot row will share an x- or y-axis. - 'col': each subplot column will share an x- or y-axis."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "When subplots have a shared x-axis along a column, only the x tick labels of the bottom subplot are created. Similarly, when subplots have a shared y-axis along a row, only the y tick labels of the first column subplot are created. To later turn other subplots' ticklabels on, use "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~matplotlib.axes.Axes.tick",
                          "_",
                          "params"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "squeeze",
            "type_": "bool, default: True",
            "desc": [
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "- If True, extra dimensions are squeezed out from the returned",
                            "_number": 0,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "  array of `~matplotlib.axes.Axes`:",
                            "_number": 1,
                            "_offset": 0
                          },
                          {
                            "_line": "",
                            "_number": 2,
                            "_offset": 0
                          },
                          {
                            "_line": "  - if only one subplot is constructed (nrows=ncols=1), the",
                            "_number": 3,
                            "_offset": 0
                          },
                          {
                            "_line": "    resulting single Axes object is returned as a scalar.",
                            "_number": 4,
                            "_offset": 0
                          },
                          {
                            "_line": "  - for Nx1 or 1xM subplots, the returned object is a 1D numpy",
                            "_number": 5,
                            "_offset": 0
                          },
                          {
                            "_line": "    object array of Axes objects.",
                            "_number": 6,
                            "_offset": 0
                          },
                          {
                            "_line": "  - for NxM, subplots with N>1 and M>1 are returned as a 2D array.",
                            "_number": 7,
                            "_offset": 0
                          },
                          {
                            "_line": "",
                            "_number": 8,
                            "_offset": 0
                          }
                        ]
                      },
                      "dt": {
                        "children": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "- If True, extra dimensions are squeezed out from the returned"
                            }
                          }
                        ]
                      },
                      "dd": {
                        "children": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "array of "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": [
                                "~matplotlib.axes.Axes"
                              ],
                              "domain": null,
                              "role": null
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ":  - if only one subplot is constructed (nrows=ncols=1), the   resulting single Axes object is returned as a scalar. - for Nx1 or 1xM subplots, the returned object is a 1D numpy   object array of Axes objects. - for NxM, subplots with N>1 and M>1 are returned as a 2D array. "
                            }
                          }
                        ]
                      }
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "- If False, no squeezing at all is done: the returned Axes object is",
                            "_number": 9,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "  always a 2D array containing Axes instances, even if it ends up",
                            "_number": 10,
                            "_offset": 0
                          },
                          {
                            "_line": "  being 1x1.",
                            "_number": 11,
                            "_offset": 0
                          }
                        ]
                      },
                      "dt": {
                        "children": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "- If False, no squeezing at all is done: the returned Axes object is"
                            }
                          }
                        ]
                      },
                      "dd": {
                        "children": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "always a 2D array containing Axes instances, even if it ends up being 1x1."
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "subplot_kw",
            "type_": "dict, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Dict with keywords passed to the "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~matplotlib.figure.Figure.add",
                          "_",
                          "subplot"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " call used to create each subplot."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "gridspec_kw",
            "type_": "dict, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Dict with keywords passed to the "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~matplotlib.gridspec.GridSpec"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " constructor used to create the grid the subplots are placed on."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "**fig_kw",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "All additional keyword arguments are passed to the "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          ".pyplot.figure"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " call."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "fig",
            "type_": "`~.figure.Figure`",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "ax",
            "type_": "`.axes.Axes` or array of Axes",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "*ax* can be either a single "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~matplotlib.axes.Axes"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " object or an array of Axes objects if more than one subplot was created.  The dimensions of the resulting array can be controlled with the squeeze keyword, see above."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Typical idioms for handling the return value are::"
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": "    # using the variable ax for single a Axes",
                        "_number": 7,
                        "_offset": 4
                      },
                      {
                        "_line": "    fig, ax = plt.subplots()",
                        "_number": 8,
                        "_offset": 4
                      },
                      {
                        "_line": "",
                        "_number": 9,
                        "_offset": 4
                      },
                      {
                        "_line": "    # using the variable axs for multiple Axes",
                        "_number": 10,
                        "_offset": 4
                      },
                      {
                        "_line": "    fig, axs = plt.subplots(2, 2)",
                        "_number": 11,
                        "_offset": 4
                      },
                      {
                        "_line": "",
                        "_number": 12,
                        "_offset": 4
                      },
                      {
                        "_line": "    # using tuple unpacking for multiple Axes",
                        "_number": 13,
                        "_offset": 4
                      },
                      {
                        "_line": "    fig, (ax1, ax2) = plt.subplot(1, 2)",
                        "_number": 14,
                        "_offset": 4
                      },
                      {
                        "_line": "    fig, ((ax1, ax2), (ax3, ax4)) = plt.subplot(2, 2)",
                        "_number": 15,
                        "_offset": 4
                      },
                      {
                        "_line": "",
                        "_number": 16,
                        "_offset": 4
                      }
                    ]
                  }
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The names "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "ax"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and pluralized "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "axs"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are preferred over "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "axes"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " because for the latter it's not clear if it refers to a single "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~.axes.Axes"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " instance or a collection of these."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    ".Figure.add_subplot",
    ".Figure.subplots",
    ".pyplot.axes",
    ".pyplot.figure",
    ".pyplot.subplot"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/cbook/deprecation.py",
  "item_line": 1156,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.pyplot.subplots"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "::"
              }
            }
          ]
        }
      },
      {
        "type": "DefList",
        "data": {
          "children": [
            {
              "lines": {
                "_lines": [
                  {
                    "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                    "_number": 0,
                    "_offset": 0
                  }
                ]
              },
              "wh": {
                "_lines": []
              },
              "ind": {
                "_lines": [
                  {
                    "_line": "    # First create some toy data:",
                    "_number": 0,
                    "_offset": 0
                  },
                  {
                    "_line": "    x = np.linspace(0, 2*np.pi, 400)",
                    "_number": 1,
                    "_offset": 0
                  },
                  {
                    "_line": "    y = np.sin(x**2)",
                    "_number": 2,
                    "_offset": 0
                  }
                ]
              },
              "dt": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                    }
                  }
                ]
              },
              "dd": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "# First create some toy data: x = np.linspace(0, 2*np.pi, 400) y = np.sin(x**2)"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "type": "DefList",
        "data": {
          "children": [
            {
              "lines": {
                "_lines": [
                  {
                    "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                    "_number": 0,
                    "_offset": 0
                  }
                ]
              },
              "wh": {
                "_lines": []
              },
              "ind": {
                "_lines": [
                  {
                    "_line": "    # Create just a figure and only one subplot",
                    "_number": 0,
                    "_offset": 0
                  },
                  {
                    "_line": "    fig, ax = plt.subplots()",
                    "_number": 1,
                    "_offset": 0
                  },
                  {
                    "_line": "    ax.plot(x, y)",
                    "_number": 2,
                    "_offset": 0
                  },
                  {
                    "_line": "    ax.set_title('Simple plot')",
                    "_number": 3,
                    "_offset": 0
                  }
                ]
              },
              "dt": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                    }
                  }
                ]
              },
              "dd": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "# Create just a figure and only one subplot fig, ax = plt.subplots() ax.plot(x, y) ax.set_title('Simple plot')"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "type": "DefList",
        "data": {
          "children": [
            {
              "lines": {
                "_lines": [
                  {
                    "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                    "_number": 0,
                    "_offset": 0
                  }
                ]
              },
              "wh": {
                "_lines": []
              },
              "ind": {
                "_lines": [
                  {
                    "_line": "    # Create two subplots and unpack the output array immediately",
                    "_number": 0,
                    "_offset": 0
                  },
                  {
                    "_line": "    f, (ax1, ax2) = plt.subplots(1, 2, sharey=True)",
                    "_number": 1,
                    "_offset": 0
                  },
                  {
                    "_line": "    ax1.plot(x, y)",
                    "_number": 2,
                    "_offset": 0
                  },
                  {
                    "_line": "    ax1.set_title('Sharing Y axis')",
                    "_number": 3,
                    "_offset": 0
                  },
                  {
                    "_line": "    ax2.scatter(x, y)",
                    "_number": 4,
                    "_offset": 0
                  }
                ]
              },
              "dt": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                    }
                  }
                ]
              },
              "dd": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "# Create two subplots and unpack the output array immediately f, (ax1, ax2) = plt.subplots(1, 2, sharey=True) ax1.plot(x, y) ax1.set_title('Sharing Y axis') ax2.scatter(x, y)"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "type": "DefList",
        "data": {
          "children": [
            {
              "lines": {
                "_lines": [
                  {
                    "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                    "_number": 0,
                    "_offset": 0
                  }
                ]
              },
              "wh": {
                "_lines": []
              },
              "ind": {
                "_lines": [
                  {
                    "_line": "    # Create four polar axes and access them through the returned array",
                    "_number": 0,
                    "_offset": 0
                  },
                  {
                    "_line": "    fig, axs = plt.subplots(2, 2, subplot_kw=dict(polar=True))",
                    "_number": 1,
                    "_offset": 0
                  },
                  {
                    "_line": "    axs[0, 0].plot(x, y)",
                    "_number": 2,
                    "_offset": 0
                  },
                  {
                    "_line": "    axs[1, 1].scatter(x, y)",
                    "_number": 3,
                    "_offset": 0
                  }
                ]
              },
              "dt": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                    }
                  }
                ]
              },
              "dd": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "# Create four polar axes and access them through the returned array fig, axs = plt.subplots(2, 2, subplot_kw=dict(polar=True)) axs[0, 0].plot(x, y) axs[1, 1].scatter(x, y)"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "type": "DefList",
        "data": {
          "children": [
            {
              "lines": {
                "_lines": [
                  {
                    "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                    "_number": 0,
                    "_offset": 0
                  }
                ]
              },
              "wh": {
                "_lines": []
              },
              "ind": {
                "_lines": [
                  {
                    "_line": "    # Share a X axis with each column of subplots",
                    "_number": 0,
                    "_offset": 0
                  },
                  {
                    "_line": "    plt.subplots(2, 2, sharex='col')",
                    "_number": 1,
                    "_offset": 0
                  }
                ]
              },
              "dt": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                    }
                  }
                ]
              },
              "dd": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "# Share a X axis with each column of subplots plt.subplots(2, 2, sharex='col')"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "type": "DefList",
        "data": {
          "children": [
            {
              "lines": {
                "_lines": [
                  {
                    "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                    "_number": 0,
                    "_offset": 0
                  }
                ]
              },
              "wh": {
                "_lines": []
              },
              "ind": {
                "_lines": [
                  {
                    "_line": "    # Share a Y axis with each row of subplots",
                    "_number": 0,
                    "_offset": 0
                  },
                  {
                    "_line": "    plt.subplots(2, 2, sharey='row')",
                    "_number": 1,
                    "_offset": 0
                  }
                ]
              },
              "dt": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                    }
                  }
                ]
              },
              "dd": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "# Share a Y axis with each row of subplots plt.subplots(2, 2, sharey='row')"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "type": "DefList",
        "data": {
          "children": [
            {
              "lines": {
                "_lines": [
                  {
                    "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                    "_number": 0,
                    "_offset": 0
                  }
                ]
              },
              "wh": {
                "_lines": []
              },
              "ind": {
                "_lines": [
                  {
                    "_line": "    # Share both X and Y axes with all subplots",
                    "_number": 0,
                    "_offset": 0
                  },
                  {
                    "_line": "    plt.subplots(2, 2, sharex='all', sharey='all')",
                    "_number": 1,
                    "_offset": 0
                  }
                ]
              },
              "dt": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                    }
                  }
                ]
              },
              "dd": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "# Share both X and Y axes with all subplots plt.subplots(2, 2, sharex='all', sharey='all')"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "type": "DefList",
        "data": {
          "children": [
            {
              "lines": {
                "_lines": [
                  {
                    "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                    "_number": 0,
                    "_offset": 0
                  }
                ]
              },
              "wh": {
                "_lines": []
              },
              "ind": {
                "_lines": [
                  {
                    "_line": "    # Note that this is the same as",
                    "_number": 0,
                    "_offset": 0
                  },
                  {
                    "_line": "    plt.subplots(2, 2, sharex=True, sharey=True)",
                    "_number": 1,
                    "_offset": 0
                  }
                ]
              },
              "dt": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                    }
                  }
                ]
              },
              "dd": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "# Note that this is the same as plt.subplots(2, 2, sharex=True, sharey=True)"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "type": "DefList",
        "data": {
          "children": [
            {
              "lines": {
                "_lines": [
                  {
                    "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                    "_number": 0,
                    "_offset": 0
                  }
                ]
              },
              "wh": {
                "_lines": []
              },
              "ind": {
                "_lines": [
                  {
                    "_line": "    # Create figure number 10 with a single subplot",
                    "_number": 0,
                    "_offset": 0
                  },
                  {
                    "_line": "    # and clears it if it already exists.",
                    "_number": 1,
                    "_offset": 0
                  },
                  {
                    "_line": "    fig, ax = plt.subplots(num=10, clear=True)",
                    "_number": 2,
                    "_offset": 0
                  }
                ]
              },
              "dt": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                    }
                  }
                ]
              },
              "dd": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "# Create figure number 10 with a single subplot # and clears it if it already exists. fig, ax = plt.subplots(num=10, clear=True)"
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    ]
  },
  "see_also": [
    {
      "name": {
        "name": ".pyplot.figure",
        "ref": null,
        "exists": null
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": ".pyplot.subplot",
        "ref": null,
        "exists": null
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": ".pyplot.axes",
        "ref": null,
        "exists": null
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": ".Figure.subplots",
        "ref": null,
        "exists": null
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": ".Figure.add_subplot",
        "ref": null,
        "exists": null
      },
      "descriptions": [],
      "type": null
    }
  ],
  "references": null,
  "signature": "subplots(nrows=1, ncols=1, *, sharex=False, sharey=False, squeeze=True, subplot_kw=None, gridspec_kw=None, **fig_kw)"
}