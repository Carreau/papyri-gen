{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Update the text properties."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Valid keyword arguments are:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "Properties:",
                      "_number": 2,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array",
                      "_number": 3,
                      "_offset": 4
                    },
                    {
                      "_line": "    alpha: float or None",
                      "_number": 4,
                      "_offset": 4
                    },
                    {
                      "_line": "    animated: bool",
                      "_number": 5,
                      "_offset": 4
                    },
                    {
                      "_line": "    backgroundcolor: color",
                      "_number": 6,
                      "_offset": 4
                    },
                    {
                      "_line": "    bbox: dict with properties for `.patches.FancyBboxPatch`",
                      "_number": 7,
                      "_offset": 4
                    },
                    {
                      "_line": "    clip_box: `.Bbox`",
                      "_number": 8,
                      "_offset": 4
                    },
                    {
                      "_line": "    clip_on: bool",
                      "_number": 9,
                      "_offset": 4
                    },
                    {
                      "_line": "    clip_path: Patch or (Path, Transform) or None",
                      "_number": 10,
                      "_offset": 4
                    },
                    {
                      "_line": "    color or c: color",
                      "_number": 11,
                      "_offset": 4
                    },
                    {
                      "_line": "    contains: unknown",
                      "_number": 12,
                      "_offset": 4
                    },
                    {
                      "_line": "    figure: `.Figure`",
                      "_number": 13,
                      "_offset": 4
                    },
                    {
                      "_line": "    fontfamily or family: {FONTNAME, 'serif', 'sans-serif', 'cursive', 'fantasy', 'monospace'}",
                      "_number": 14,
                      "_offset": 4
                    },
                    {
                      "_line": "    fontproperties or font or font_properties: `.font_manager.FontProperties` or `str` or `pathlib.Path`",
                      "_number": 15,
                      "_offset": 4
                    },
                    {
                      "_line": "    fontsize or size: float or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}",
                      "_number": 16,
                      "_offset": 4
                    },
                    {
                      "_line": "    fontstretch or stretch: {a numeric value in range 0-1000, 'ultra-condensed', 'extra-condensed', 'condensed', 'semi-condensed', 'normal', 'semi-expanded', 'expanded', 'extra-expanded', 'ultra-expanded'}",
                      "_number": 17,
                      "_offset": 4
                    },
                    {
                      "_line": "    fontstyle or style: {'normal', 'italic', 'oblique'}",
                      "_number": 18,
                      "_offset": 4
                    },
                    {
                      "_line": "    fontvariant or variant: {'normal', 'small-caps'}",
                      "_number": 19,
                      "_offset": 4
                    },
                    {
                      "_line": "    fontweight or weight: {a numeric value in range 0-1000, 'ultralight', 'light', 'normal', 'regular', 'book', 'medium', 'roman', 'semibold', 'demibold', 'demi', 'bold', 'heavy', 'extra bold', 'black'}",
                      "_number": 20,
                      "_offset": 4
                    },
                    {
                      "_line": "    gid: str",
                      "_number": 21,
                      "_offset": 4
                    },
                    {
                      "_line": "    horizontalalignment or ha: {'center', 'right', 'left'}",
                      "_number": 22,
                      "_offset": 4
                    },
                    {
                      "_line": "    in_layout: bool",
                      "_number": 23,
                      "_offset": 4
                    },
                    {
                      "_line": "    label: object",
                      "_number": 24,
                      "_offset": 4
                    },
                    {
                      "_line": "    linespacing: float (multiple of font size)",
                      "_number": 25,
                      "_offset": 4
                    },
                    {
                      "_line": "    multialignment or ma: {'left', 'right', 'center'}",
                      "_number": 26,
                      "_offset": 4
                    },
                    {
                      "_line": "    path_effects: `.AbstractPathEffect`",
                      "_number": 27,
                      "_offset": 4
                    },
                    {
                      "_line": "    picker: None or bool or callable",
                      "_number": 28,
                      "_offset": 4
                    },
                    {
                      "_line": "    position: (float, float)",
                      "_number": 29,
                      "_offset": 4
                    },
                    {
                      "_line": "    rasterized: bool or None",
                      "_number": 30,
                      "_offset": 4
                    },
                    {
                      "_line": "    rotation: float or {'vertical', 'horizontal'}",
                      "_number": 31,
                      "_offset": 4
                    },
                    {
                      "_line": "    rotation_mode: {None, 'default', 'anchor'}",
                      "_number": 32,
                      "_offset": 4
                    },
                    {
                      "_line": "    sketch_params: (scale: float, length: float, randomness: float)",
                      "_number": 33,
                      "_offset": 4
                    },
                    {
                      "_line": "    snap: bool or None",
                      "_number": 34,
                      "_offset": 4
                    },
                    {
                      "_line": "    text: object",
                      "_number": 35,
                      "_offset": 4
                    },
                    {
                      "_line": "    transform: `.Transform`",
                      "_number": 36,
                      "_offset": 4
                    },
                    {
                      "_line": "    url: str",
                      "_number": 37,
                      "_offset": 4
                    },
                    {
                      "_line": "    usetex: bool or None",
                      "_number": 38,
                      "_offset": 4
                    },
                    {
                      "_line": "    verticalalignment or va: {'center', 'top', 'bottom', 'baseline', 'center_baseline'}",
                      "_number": 39,
                      "_offset": 4
                    },
                    {
                      "_line": "    visible: bool",
                      "_number": 40,
                      "_offset": 4
                    },
                    {
                      "_line": "    wrap: bool",
                      "_number": 41,
                      "_offset": 4
                    },
                    {
                      "_line": "    x: float",
                      "_number": 42,
                      "_offset": 4
                    },
                    {
                      "_line": "    y: float",
                      "_number": 43,
                      "_offset": 4
                    },
                    {
                      "_line": "    zorder: float",
                      "_number": 44,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Properties:"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array alpha: float or None animated: bool backgroundcolor: color bbox: dict with properties for "
                          }
                        },
                        {
                          "type": "Directive",
                          "data": {
                            "value": [
                              ".patches.FancyBboxPatch"
                            ],
                            "domain": null,
                            "role": null
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": " clip_box: "
                          }
                        },
                        {
                          "type": "Directive",
                          "data": {
                            "value": [
                              ".Bbox"
                            ],
                            "domain": null,
                            "role": null
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": " clip_on: bool clip_path: Patch or (Path, Transform) or None color or c: color contains: unknown figure: "
                          }
                        },
                        {
                          "type": "Directive",
                          "data": {
                            "value": [
                              ".Figure"
                            ],
                            "domain": null,
                            "role": null
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": " fontfamily or family: {FONTNAME, 'serif', 'sans-serif', 'cursive', 'fantasy', 'monospace'} fontproperties or font or font_properties: "
                          }
                        },
                        {
                          "type": "Directive",
                          "data": {
                            "value": [
                              ".font",
                              "_",
                              "manager.FontProperties"
                            ],
                            "domain": null,
                            "role": null
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": " or "
                          }
                        },
                        {
                          "type": "Directive",
                          "data": {
                            "value": [
                              "str"
                            ],
                            "domain": null,
                            "role": null
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": " or "
                          }
                        },
                        {
                          "type": "Directive",
                          "data": {
                            "value": [
                              "pathlib.Path"
                            ],
                            "domain": null,
                            "role": null
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": " fontsize or size: float or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'} fontstretch or stretch: {a numeric value in range 0-1000, 'ultra-condensed', 'extra-condensed', 'condensed', 'semi-condensed', 'normal', 'semi-expanded', 'expanded', 'extra-expanded', 'ultra-expanded'} fontstyle or style: {'normal', 'italic', 'oblique'} fontvariant or variant: {'normal', 'small-caps'} fontweight or weight: {a numeric value in range 0-1000, 'ultralight', 'light', 'normal', 'regular', 'book', 'medium', 'roman', 'semibold', 'demibold', 'demi', 'bold', 'heavy', 'extra bold', 'black'} gid: str horizontalalignment or ha: {'center', 'right', 'left'} in_layout: bool label: object linespacing: float (multiple of font size) multialignment or ma: {'left', 'right', 'center'} path_effects: "
                          }
                        },
                        {
                          "type": "Directive",
                          "data": {
                            "value": [
                              ".AbstractPathEffect"
                            ],
                            "domain": null,
                            "role": null
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": " picker: None or bool or callable position: (float, float) rasterized: bool or None rotation: float or {'vertical', 'horizontal'} rotation_mode: {None, 'default', 'anchor'} sketch_params: (scale: float, length: float, randomness: float) snap: bool or None text: object transform: "
                          }
                        },
                        {
                          "type": "Directive",
                          "data": {
                            "value": [
                              ".Transform"
                            ],
                            "domain": null,
                            "role": null
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": " url: str usetex: bool or None verticalalignment or va: {'center', 'top', 'bottom', 'baseline', 'center_baseline'} visible: bool wrap: bool x: float y: float zorder: float"
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/table.py",
  "item_line": 173,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.table.Cell.set_text_props"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "signature": "set_text_props(self, **kwargs)",
  "references": null,
  "arbitrary": []
}