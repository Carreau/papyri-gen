{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Create a path from the text. Note that it simply is a path, not an artist. You need to use the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~.PathPatch"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (or other artists) to draw this path onto the canvas."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": []
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "xy",
            "type_": "tuple or array of two float values",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Position of the text. For no offset, use "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "xy=(0,",
                          " ",
                          "0)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "s",
            "type_": "str",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The text to convert to a path."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "size",
            "type_": "float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Font size in points. Defaults to the size specified via the font properties *prop*."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "prop",
            "type_": "`matplotlib.font_manager.FontProperties`, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Font property. If not provided, will use a default "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "FontProperties"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " with parameters from the "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "rcParams",
                          " ",
                          "<matplotlib-rcparams>"
                        ],
                        "domain": null,
                        "role": "ref"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "_interpolation_steps",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "(Currently ignored)"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "usetex",
            "type_": "bool, default: False",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Whether to use tex rendering."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/textpath.py",
  "item_line": 341,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.text.TextPath.__init__"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "The following creates a path from the string \"ABC\" with Helvetica font face; and another path from the latex fraction 1/2::"
              }
            }
          ]
        }
      },
      {
        "type": "DefList",
        "data": {
          "children": [
            {
              "lines": {
                "_lines": [
                  {
                    "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                    "_number": 0,
                    "_offset": 0
                  }
                ]
              },
              "wh": {
                "_lines": []
              },
              "ind": {
                "_lines": [
                  {
                    "_line": "    from matplotlib.textpath import TextPath",
                    "_number": 0,
                    "_offset": 0
                  },
                  {
                    "_line": "    from matplotlib.font_manager import FontProperties",
                    "_number": 1,
                    "_offset": 0
                  }
                ]
              },
              "dt": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                    }
                  }
                ]
              },
              "dd": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "from matplotlib.textpath import TextPath from matplotlib.font_manager import FontProperties"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "type": "DefList",
        "data": {
          "children": [
            {
              "lines": {
                "_lines": [
                  {
                    "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                    "_number": 0,
                    "_offset": 0
                  }
                ]
              },
              "wh": {
                "_lines": []
              },
              "ind": {
                "_lines": [
                  {
                    "_line": "    fp = FontProperties(family=\"Helvetica\", style=\"italic\")",
                    "_number": 0,
                    "_offset": 0
                  },
                  {
                    "_line": "    path1 = TextPath((12, 12), \"ABC\", size=12, prop=fp)",
                    "_number": 1,
                    "_offset": 0
                  },
                  {
                    "_line": "    path2 = TextPath((0, 0), r\"$\\frac{1}{2}$\", size=12, usetex=True)",
                    "_number": 2,
                    "_offset": 0
                  }
                ]
              },
              "dt": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                    }
                  }
                ]
              },
              "dd": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "fp = FontProperties(family=\"Helvetica\", style=\"italic\") path1 = TextPath((12, 12), \"ABC\", size=12, prop=fp) path2 = TextPath((0, 0), r\"$\\frac{1}{2}$\", size=12, usetex=True)"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Also see "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "/gallery/text",
                  "_",
                  "labels",
                  "_",
                  "and",
                  "_",
                  "annotations/demo",
                  "_",
                  "text",
                  "_",
                  "path"
                ],
                "domain": null,
                "role": "doc"
              }
            },
            {
              "type": "Words",
              "data": {
                "value": "."
              }
            }
          ]
        }
      }
    ]
  },
  "see_also": [],
  "references": null,
  "signature": "__init__(self, xy, s, size=None, prop=None, _interpolation_steps=1, usetex=False)"
}