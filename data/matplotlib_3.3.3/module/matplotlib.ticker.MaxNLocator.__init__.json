{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "nbins",
            "type_": "int or 'auto', default: 10",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Maximum number of intervals; one less than max number of ticks.  If the string 'auto', the number of bins will be automatically determined based on the length of the axis."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "steps",
            "type_": "array-like, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Sequence of nice numbers starting with 1 and ending with 10; e.g., [1, 2, 4, 5, 10], where the values are acceptable tick multiples.  i.e. for the example, 20, 40, 60 would be an acceptable set of ticks, as would 0.4, 0.6, 0.8, because they are multiples of 2.  However, 30, 60, 90 would not be allowed because 3 does not appear in the list of steps."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "integer",
            "type_": "bool, default: False",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If True, ticks will take only integer values, provided at least *min_n_ticks* integers are found within the view limits."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "symmetric",
            "type_": "bool, default: False",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If True, autoscaling will result in a range symmetric about zero."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "prune",
            "type_": "{'lower', 'upper', 'both', None}, default: None",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Remove edge ticks -- useful for stacked or ganged plots where the upper tick of one axes overlaps with the lower tick of the axes above it, primarily when "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "axes.autolimit",
                          "_",
                          "mode"
                        ],
                        "domain": null,
                        "role": "rc"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'round",
                          "_",
                          "numbers'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ".  If "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "prune=='lower'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", the smallest tick will be removed.  If "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "prune",
                          " ",
                          "==",
                          " ",
                          "'upper'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", the largest tick will be removed.  If "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "prune",
                          " ",
                          "==",
                          " ",
                          "'both'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", the largest and smallest ticks will be removed.  If *prune* is *None*, no ticks will be removed."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "min_n_ticks",
            "type_": "int, default: 2",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Relax *nbins* and *integer* constraints if necessary to obtain this minimum number of ticks."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Parameters"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/ticker.py",
  "item_line": 2096,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.pyplot.MaxNLocator.__init__"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "signature": "__init__(self, *args, **kwargs)",
  "references": null,
  "arbitrary": []
}