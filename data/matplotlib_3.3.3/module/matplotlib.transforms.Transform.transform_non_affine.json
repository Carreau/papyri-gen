{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Apply only the non-affine part of this transformation."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "transform(values)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is always equivalent to "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "transform",
                    "_",
                    "affine(transform",
                    "_",
                    "non",
                    "_",
                    "affine(values))"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "In non-affine transformations, this is generally equivalent to "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "transform(values)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ".  In affine transformations, this is always a no-op."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "values",
            "type_": "array",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The input values as NumPy array of length "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "input",
                          "_",
                          "dims"
                        ],
                        "domain": null,
                        "role": "attr"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or shape (N x "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "input",
                          "_",
                          "dims"
                        ],
                        "domain": null,
                        "role": "attr"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ")."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "array",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The output values as NumPy array of length "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "input",
                          "_",
                          "dims"
                        ],
                        "domain": null,
                        "role": "attr"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or shape (N x "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "output",
                          "_",
                          "dims"
                        ],
                        "domain": null,
                        "role": "attr"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "), depending on the input."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/transforms.py",
  "item_line": 1462,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.artist.Transform.transform_non_affine"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "transform_non_affine(self, values)"
}