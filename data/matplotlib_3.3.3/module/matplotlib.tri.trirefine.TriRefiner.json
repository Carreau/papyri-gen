{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Abstract base class for classes implementing mesh refinement."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "A TriRefiner encapsulates a Triangulation object and provides tools for mesh refinement and interpolation."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Derived classes must implement:"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "- "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "refine",
                    "_",
                    "triangulation(return",
                    "_",
                    "tri",
                    "_",
                    "index=False,",
                    " ",
                    "*",
                    "*",
                    "kwargs)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " , where"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "  the optional keyword arguments *kwargs* are defined in each   TriRefiner concrete implementation, and which returns:"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "  - a refined triangulation,   - optionally (depending on *return_tri_index*), for each"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "    point of the refined triangulation: the index of     the initial triangulation triangle to which it belongs."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "- "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "refine",
                    "_",
                    "field(z,",
                    " ",
                    "triinterpolator=None,",
                    " ",
                    "*",
                    "*",
                    "kwargs)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", where:"
                }
              }
            ]
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "  - *z* array of field values (to refine) defined at the base",
                      "_number": 16,
                      "_offset": 2
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    triangulation nodes,",
                      "_number": 17,
                      "_offset": 2
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- *z* array of field values (to refine) defined at the base"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "triangulation nodes,"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "  - *triinterpolator* is an optional "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~matplotlib.tri.TriInterpolator"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ",   - the other optional keyword arguments *kwargs* are defined in"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "    each TriRefiner concrete implementation;"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "  and which returns (as a tuple) a refined triangular mesh and the   interpolated values of the field at the refined triangulation nodes."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": []
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/tri/trirefine.py",
  "item_line": 12,
  "item_type": "<class 'type'>",
  "aliases": [
    "matplotlib.tri.TriRefiner"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "TriRefiner(triangulation)"
}