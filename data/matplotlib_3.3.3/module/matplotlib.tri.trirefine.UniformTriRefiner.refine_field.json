{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Refine a field defined on the encapsulated triangulation."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": []
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "z",
            "type_": "1d-array-like of length ``n_points``",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Values of the field to refine, defined at the nodes of the encapsulated triangulation. ("
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "n",
                          "_",
                          "points"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is the number of points in the initial triangulation)"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "triinterpolator",
            "type_": "`~matplotlib.tri.TriInterpolator`, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Interpolator used for field interpolation. If not specified, a "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~matplotlib.tri.CubicTriInterpolator"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " will be used."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "subdiv",
            "type_": "int, default: 3",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Recursion level for the subdivision. Each triangle is divided into "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "4",
                          "*",
                          "*",
                          "subdiv"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " child triangles."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "refi_tri",
            "type_": "`~matplotlib.tri.Triangulation`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The returned refined triangulation."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "refi_z",
            "type_": "1d array of length: *refi_tri* node count.",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The returned interpolated field (at *refi_tri* nodes)."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/matplotlib/tri/trirefine.py",
  "item_line": 133,
  "item_type": "<class 'function'>",
  "aliases": [
    "matplotlib.tri.UniformTriRefiner.refine_field"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "references": null,
  "signature": "refine_field(self, z, triinterpolator=None, subdiv=3)"
}