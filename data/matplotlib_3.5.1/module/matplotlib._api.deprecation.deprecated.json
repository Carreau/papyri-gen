{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "When deprecating a classmethod, a staticmethod, or a property, the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "@deprecated"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " decorator should go "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "under"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "@classmethod"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "@staticmethod"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " (i.e., "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib._api.deprecation.deprecated",
                    "version": "3.5.1"
                  },
                  "value": "deprecated"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " should directly decorate the underlying callable), but "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "over"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "@property"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "When deprecating a class "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "C"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " intended to be used as a base class in a multiple inheritance hierarchy, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "C"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "must"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " define an "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "__init__"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " method (if "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "C"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " instead inherited its "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "__init__"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " from its own base class, then "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "@deprecated"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " would mess up "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "__init__"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " inheritance when installing its own (deprecation-emitting) "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "C.__init__"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ")."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Parameters are the same as for "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib._api.deprecation.warn_deprecated",
                    "version": "3.5.1"
                  },
                  "value": "warn_deprecated"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ", except that "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "obj_type"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " defaults to 'class' if decorating a class, 'attribute' if decorating a property, and 'function' otherwise."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Decorator to mark a function, a class, or a property as deprecated."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "matplotlib._api.deprecated"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "value": [
            "@deprecated('1.4.0')",
            "def the_function_to_deprecate():",
            "    pass"
          ]
        },
        "type": "BlockQuote"
      }
    ],
    "title": null
  },
  "item_file": "/matplotlib/_api/deprecation.py",
  "item_line": 104,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Examples"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "deprecated(since, *, message='', name='', alternative='', pending=False, obj_type=None, addendum='', removal='')"
  }
}