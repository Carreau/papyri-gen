{
  "aliases": [
    "matplotlib._preprocess_data"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "When applied:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "@_preprocess_data()\ndef func(ax, *args, **kwargs): ..."
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "the signature is modified to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "decorated(ax, *args, data=None, **kwargs)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " with the following behavior:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "if called with "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "data=None"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", forward the other arguments to "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "func"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ";"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "otherwise, "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "data"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " must be a mapping; for any argument passed in as a   string "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "name"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", replace the argument by "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "data[name]"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " (if this does not   throw an exception), then forward the arguments to "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "func"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "In either case, any argument that is a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "MappingView"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " is also converted to a list."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The list of parameter names for which lookup into "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "data"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " should be attempted. If None, replacement is attempted for all arguments."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "replace_names",
                "type_": "list of str or None, default: None"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If set e.g. to \"namer\" (which must be a kwarg in the function's signature -- not as "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "**kwargs"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "), if the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "namer"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " argument passed in is a (string) key of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "data"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " and no "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "label"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " kwarg is passed, then use the (string) value of the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "namer"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " as "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "label"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ". :      "
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "value": "@_preprocess_data(label_namer=\"foo\")\ndef func(foo, label=None): ...\n\nfunc(\"key\", data={\"key\": value})\n# is equivalent to\nfunc.__wrapped__(value, label=\"key\")"
                    },
                    "type": "BlockVerbatim"
                  }
                ],
                "param": "label_namer",
                "type_": "str, default: None"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "A decorator to add a 'data' kwarg to a function."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/matplotlib/__init__.py",
  "item_line": 1338,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "_preprocess_data(func=None, *, replace_names=None, label_namer=None)"
  }
}