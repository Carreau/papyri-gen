{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": {
                    "value": "fps"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "codec"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "bitrate"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "extra_args"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "metadata"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " are used to construct a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.animation.MovieWriter",
                    "version": "3.5.1"
                  },
                  "value": ".MovieWriter"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " instance and can only be passed if "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "writer"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " is a string.  If they are passed as non-"
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "None"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "writer"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " is a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.animation.MovieWriter",
                    "version": "3.5.1"
                  },
                  "value": ".MovieWriter"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ", a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "RuntimeError"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " will be raised."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The output filename, e.g., "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "mymovie.mp4"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "filename",
            "type_": "str"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "A "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.animation.MovieWriter",
                          "version": "3.5.1"
                        },
                        "value": "MovieWriter"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " instance to use or a key that identifies a class to use, such as 'ffmpeg'."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "writer",
            "type_": "`MovieWriter` or str, default: :rc:`animation.writer`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Movie frame rate (per second).  If not set, the frame rate from the animation's frame interval."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "fps",
            "type_": "int, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Controls the dots per inch for the movie frames.  Together with the figure's size in inches, this controls the size of the movie."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "dpi",
            "type_": "float, default: :rc:`savefig.dpi`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The video codec to use.  Not all codecs are supported by a given "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.animation.MovieWriter",
                          "version": "3.5.1"
                        },
                        "value": "MovieWriter"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "codec",
            "type_": "str, default: :rc:`animation.codec`."
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The bitrate of the movie, in kilobits per second.  Higher values means higher quality movies, but increase the file size.  A value of -1 lets the underlying movie encoder select the bitrate."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "bitrate",
            "type_": "int, default: :rc:`animation.bitrate`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Extra command-line arguments passed to the underlying movie encoder.  The default, None, means to use "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "animation.[name-of-encoder]_args"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " for the builtin writers."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "extra_args",
            "type_": "list of str or None, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Dictionary of keys and values for metadata to include in the output file. Some keys that may be of use include: title, artist, genre, subject, copyright, srcform, comment."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "metadata",
            "type_": "dict[str, str], default: {}"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Additional "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.animation.Animation",
                          "version": "3.5.1"
                        },
                        "value": "Animation"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " objects that should be included in the saved movie file. These need to be from the same "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.figure.Figure",
                          "version": "3.5.1"
                        },
                        "value": "matplotlib.figure.Figure"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " instance. Also, animation frames will just be simply combined, so there should be a 1:1 correspondence between the frames from the different animations."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "extra_anim",
            "type_": "list, default: []"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Keyword arguments passed to each "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.figure.Figure.savefig",
                          "version": "3.5.1"
                        },
                        "value": "~.Figure.savefig"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " call used to save the individual frames."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "savefig_kwargs",
            "type_": "dict, default: {}"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "A callback function that will be called for every frame to notify the saving progress. It must have the signature ::      "
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "value": "def func(current_frame: int, total_frames: int) -> Any"
                },
                "type": "BlockVerbatim"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "where "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "current_frame"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is the current frame number and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "total_frames"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is the total number of frames to be saved. "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "total_frames"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is set to None, if the total number of frames can not be determined. Return values may exist but are ignored."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Example code to write the progress to stdout::      "
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "value": "progress_callback =                    lambda i, n: print(f'Saving frame {i} of {n}')"
                },
                "type": "BlockVerbatim"
              }
            ],
            "param": "progress_callback",
            "type_": "function, optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Save the animation as a movie file by drawing every frame."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "matplotlib.animation.Animation.save"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/matplotlib/animation.py",
  "item_line": 924,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Notes"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "save(self, filename, writer=None, fps=None, dpi=None, codec=None, bitrate=None, extra_args=None, metadata=None, extra_anim=None, savefig_kwargs=None, *, progress_callback=None)"
  }
}