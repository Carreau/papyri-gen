{
  "aliases": [
    "matplotlib.pyplot.Axes.annotate"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "In the simplest form, the text is placed at "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "xy"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Optionally, the text can be displayed in another position "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "xytext"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ". An arrow pointing from the text to the annotated point "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "xy"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " can then be added by defining "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "arrowprops"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The text of the annotation."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "text",
                "type_": "str"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The point "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "(x, y)"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " to annotate. The coordinate system is determined by "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "xycoords"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "xy",
                "type_": "(float, float)"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The position "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "(x, y)"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " to place the text at. The coordinate system is determined by "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "textcoords"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "xytext",
                "type_": "(float, float), default: *xy*"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The coordinate system that "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "xy"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is given in. The following types of values are supported:"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "One of the following strings:"
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            },
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "==================== ============================================   Value                Description   ==================== ============================================   'figure points'      Points from the lower left of the figure   'figure pixels'      Pixels from the lower left of the figure   'figure fraction'    Fraction of figure from lower left   'subfigure points'   Points from the lower left of the subfigure   'subfigure pixels'   Pixels from the lower left of the subfigure   'subfigure fraction' Fraction of subfigure from lower left   'axes points'        Points from lower left corner of axes   'axes pixels'        Pixels from lower left corner of axes   'axes fraction'      Fraction of axes from lower left   'data'               Use the coordinate system of the object                        being annotated (default)   'polar'              "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "(theta, r)"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": " if not native 'data'                        coordinates   ==================== ============================================"
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            },
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "Note that 'subfigure pixels' and 'figure pixels' are the same   for the parent figure, so users who want code that is usable in   a subfigure can use 'subfigure pixels'."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "An "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "anchor": null,
                                      "exists": true,
                                      "kind": "module",
                                      "reference": {
                                        "kind": "module",
                                        "module": "matplotlib",
                                        "path": "matplotlib.artist.Artist",
                                        "version": "3.5.1"
                                      },
                                      "value": ".Artist"
                                    },
                                    "type": "Link"
                                  },
                                  {
                                    "data": {
                                      "value": ": "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "xy"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": " is interpreted as a fraction of the artist's   "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "anchor": null,
                                      "exists": true,
                                      "kind": "module",
                                      "reference": {
                                        "kind": "module",
                                        "module": "matplotlib",
                                        "path": "matplotlib.transforms.Bbox",
                                        "version": "3.5.1"
                                      },
                                      "value": "~matplotlib.transforms.Bbox"
                                    },
                                    "type": "Link"
                                  },
                                  {
                                    "data": {
                                      "value": ". E.g. "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "(0, 0)"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": " would be the lower   left corner of the bounding box and "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "(0.5, 1)"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": " would be the   center top of the bounding box."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "A "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "anchor": null,
                                      "exists": true,
                                      "kind": "module",
                                      "reference": {
                                        "kind": "module",
                                        "module": "matplotlib",
                                        "path": "matplotlib.transforms.Transform",
                                        "version": "3.5.1"
                                      },
                                      "value": ".Transform"
                                    },
                                    "type": "Link"
                                  },
                                  {
                                    "data": {
                                      "value": " to transform "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "xy"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": " to screen coordinates."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "A function with one of the following signatures:      "
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            },
                            {
                              "data": {
                                "value": "def transform(renderer) -> Bbox\ndef transform(renderer) -> Transform"
                              },
                              "type": "BlockVerbatim"
                            },
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "where "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "renderer"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": " is a "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "anchor": null,
                                      "exists": true,
                                      "kind": "module",
                                      "reference": {
                                        "kind": "module",
                                        "module": "matplotlib",
                                        "path": "matplotlib.backend_bases.RendererBase",
                                        "version": "3.5.1"
                                      },
                                      "value": ".RendererBase"
                                    },
                                    "type": "Link"
                                  },
                                  {
                                    "data": {
                                      "value": " subclass."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            },
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "The result of the function is interpreted like the "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "anchor": null,
                                      "exists": true,
                                      "kind": "module",
                                      "reference": {
                                        "kind": "module",
                                        "module": "matplotlib",
                                        "path": "matplotlib.artist.Artist",
                                        "version": "3.5.1"
                                      },
                                      "value": ".Artist"
                                    },
                                    "type": "Link"
                                  },
                                  {
                                    "data": {
                                      "value": " and   "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "anchor": null,
                                      "exists": true,
                                      "kind": "module",
                                      "reference": {
                                        "kind": "module",
                                        "module": "matplotlib",
                                        "path": "matplotlib.transforms.Transform",
                                        "version": "3.5.1"
                                      },
                                      "value": ".Transform"
                                    },
                                    "type": "Link"
                                  },
                                  {
                                    "data": {
                                      "value": " cases above."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "A tuple "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "(xcoords, ycoords)"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": " specifying separate coordinate   systems for "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "x"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": " and "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "y"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": ". "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "xcoords"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": " and "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "ycoords"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": " must each be   of one of the above described types."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "BulletList"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "See "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "plotting-guide-annotation"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " for more details."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "xycoords",
                "type_": "str or `.Artist` or `.Transform` or callable or (float, float), default: 'data'"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The coordinate system that "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "xytext"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is given in."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "All "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "xycoords"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " values are valid as well as the following strings:"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "=================   ========================================= Value               Description =================   ========================================= 'offset points'     Offset (in points) from the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "xy"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " value 'offset pixels'     Offset (in pixels) from the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "xy"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " value =================   ========================================="
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "textcoords",
                "type_": "str or `.Artist` or `.Transform` or callable or (float, float), default: value of *xycoords*"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The properties used to draw a "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.patches.FancyArrowPatch",
                              "version": "3.5.1"
                            },
                            "value": ".FancyArrowPatch"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " arrow between the positions "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "xy"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "xytext"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ".  Defaults to None, i.e. no arrow is drawn."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "For historical reasons there are two different ways to specify arrows, \"simple\" and \"fancy\":"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "content": {
                              "value": "Simple arrow:"
                            }
                          },
                          "type": "Strong"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "arrowprops"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " does not contain the key 'arrowstyle' the allowed keys are:"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "==========   ====================================================== Key          Description ==========   ====================================================== width        The width of the arrow in points headwidth    The width of the base of the arrow head in points headlength   The length of the arrow head in points shrink       Fraction of total length to shrink from both ends ?            Any key to "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "matplotlib.patches.FancyArrowPatch"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " ==========   ======================================================"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The arrow is attached to the edge of the text box, the exact position (corners or centers) depending on where it's pointing to."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "content": {
                              "value": "Fancy arrow:"
                            }
                          },
                          "type": "Strong"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "This is used if 'arrowstyle' is provided in the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "arrowprops"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Valid keys are the following "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.patches.FancyArrowPatch",
                              "version": "3.5.1"
                            },
                            "value": "~matplotlib.patches.FancyArrowPatch"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " parameters:"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "===============  ================================================== Key              Description ===============  ================================================== arrowstyle       the arrow style connectionstyle  the connection style relpos           see below; default is (0.5, 0.5) patchA           default is bounding box of the text patchB           default is None shrinkA          default is 2 points shrinkB          default is 2 points mutation_scale   default is text size (in points) mutation_aspect  default is 1. ?                any key for "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "matplotlib.patches.PathPatch"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " ===============  =================================================="
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The exact starting point position of the arrow is defined by "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "relpos"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ". It's a tuple of relative coordinates of the text box, where (0, 0) is the lower left corner and (1, 1) is the upper right corner. Values <0 and >1 are supported and specify points outside the text box. By default (0.5, 0.5) the starting point is centered in the text box."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "arrowprops",
                "type_": "dict, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Whether to draw the annotation when the annotation point "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "xy"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is outside the axes area."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "If "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "True"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": ", the annotation will only be drawn when "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "xy"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": " is   within the axes."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "If "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "False"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": ", the annotation will always be drawn."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "If "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "None"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": ", the annotation will only be drawn when "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "xy"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": " is   within the axes and "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "xycoords"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": " is 'data'."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "BulletList"
                  }
                ],
                "param": "annotation_clip",
                "type_": "bool or None, default: None"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Additional kwargs are passed to "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.text.Text",
                              "version": "3.5.1"
                            },
                            "value": "~matplotlib.text.Text"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "**kwargs",
                "type_": ""
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [],
                "param": "",
                "type_": "`.Annotation`"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Annotate the point "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "xy"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " with text "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "text"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/matplotlib/axes/_axes.py",
  "item_line": 664,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "ref"
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "plotting-guide-annotation",
          "version": "current-version"
        },
        "value": "plotting-guide-annotation"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "annotate(self, text, xy, *args, **kwargs)"
  }
}