{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Compute and draw the histogram of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "x"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ".  The return value is a tuple ("
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "n"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "bins"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "patches"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ") or ([*n0*, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "n1"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", ...], "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "bins"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", [*patches0*, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "patches1"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", ...]) if the input contains multiple data.  See the documentation of the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "weights"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " parameter to draw a histogram of already-binned data."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Multiple data can be provided via "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "x"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " as a list of datasets of potentially different length ([*x0*, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "x1"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", ...]), or as a 2D ndarray in which each column is a dataset.  Note that the ndarray form is transposed relative to the list form."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Masked arrays are not supported."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "bins"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "range"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "weights"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "density"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " parameters behave as in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "api",
                    "module": "numpy",
                    "path": "numpy.histogram",
                    "version": "*"
                  },
                  "value": "numpy.histogram"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "For large numbers of bins (>1000), 'step' and 'stepfilled' can be significantly faster than 'bar' and 'barstacked'."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If given, the following parameters also accept a string "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "s"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", which is interpreted as "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "data[s]"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " (unless this raises an exception):"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": {
                          "value": "x"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": ", "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "weights"
                        }
                      },
                      "type": "Emph"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "data",
            "type_": "indexable object, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.patches.Patch",
                          "version": "3.5.1"
                        },
                        "value": "~matplotlib.patches.Patch"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " properties"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "**kwargs",
            "type_": ""
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Input values, this takes either a single array or a sequence of arrays which are not required to be of the same length."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "x",
            "type_": "(n,) array or sequence of (n,) arrays"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "bins"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is an integer, it defines the number of equal-width bins in the range."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "bins"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is a sequence, it defines the bin edges, including the left edge of the first bin and the right edge of the last bin; in this case, bins may be unequally spaced.  All but the last (righthand-most) bin is half-open.  In other words, if "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "bins"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is::      "
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "value": "[1, 2, 3, 4]"
                },
                "type": "BlockVerbatim"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "then the first bin is "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "[1, 2)"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " (including 1, but excluding 2) and the second "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "[2, 3)"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ".  The last bin, however, is "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "[3, 4]"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", which "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "includes"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " 4."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "bins"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is a string, it is one of the binning strategies supported by "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "api",
                          "module": "numpy",
                          "path": "numpy.histogram_bin_edges",
                          "version": "*"
                        },
                        "value": "numpy.histogram_bin_edges"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ": 'auto', 'fd', 'doane', 'scott', 'stone', 'rice', 'sturges', or 'sqrt'."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "bins",
            "type_": "int or sequence or str, default: :rc:`hist.bins`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The lower and upper range of the bins. Lower and upper outliers are ignored. If not provided, "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "range"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "(x.min(), x.max())"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ". Range has no effect if "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "bins"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is a sequence."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "bins"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is a sequence or "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "range"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is specified, autoscaling is based on the specified bin range instead of the range of x."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "range",
            "type_": "tuple or None, default: None"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "True"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", draw and return a probability density: each bin will display the bin's raw count divided by the total number of counts "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "and the bin width"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " ("
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "density = counts / (sum(counts) * np.diff(bins))"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "), so that the area under the histogram integrates to 1 ("
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "np.sum(density * np.diff(bins)) == 1"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ")."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "stacked"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is also "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "True"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", the sum of the histograms is normalized to 1."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "density",
            "type_": "bool, default: False"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "An array of weights, of the same shape as "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "x"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": ".  Each value in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "x"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " only contributes its associated weight towards the bin count (instead of 1).  If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "density"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "True"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", the weights are normalized, so that the integral of the density over the range remains 1."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "This parameter can be used to draw a histogram of data that has already been binned, e.g. using "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "api",
                          "module": "numpy",
                          "path": "numpy.histogram",
                          "version": "*"
                        },
                        "value": "numpy.histogram"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " (by treating each bin as a single point with a weight equal to its count) ::      "
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "value": "counts, bins = np.histogram(data)\nplt.hist(bins[:-1], bins, weights=counts)"
                },
                "type": "BlockVerbatim"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "(or you may alternatively use "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "~.bar()"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": ")."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "weights",
            "type_": "(n,) array-like or None, default: None"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "True"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", then a histogram is computed where each bin gives the counts in that bin plus all bins for smaller values. The last bin gives the total number of datapoints."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "density"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is also "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "True"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " then the histogram is normalized such that the last bin equals 1."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "cumulative"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is a number less than 0 (e.g., -1), the direction of accumulation is reversed.  In this case, if "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "density"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is also "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "True"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", then the histogram is normalized such that the first bin equals 1."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "cumulative",
            "type_": "bool or -1, default: False"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Location of the bottom of each bin, ie. bins are drawn from "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "bottom"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "bottom + hist(x, bins)"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " If a scalar, the bottom of each bin is shifted by the same amount. If an array, each bin is shifted independently and the length of bottom must match the number of bins. If None, defaults to 0."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "bottom",
            "type_": "array-like, scalar, or None, default: None"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The type of histogram to draw."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'bar' is a traditional bar-type histogram.  If multiple data   are given the bars are arranged side by side."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'barstacked' is a bar-type histogram where multiple   data are stacked on top of each other."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'step' generates a lineplot that is by default unfilled."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'stepfilled' generates a lineplot that is by default filled."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ],
            "param": "histtype",
            "type_": "{'bar', 'barstacked', 'step', 'stepfilled'}, default: 'bar'"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The horizontal alignment of the histogram bars."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'left': bars are centered on the left bin edges."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'mid': bars are centered between the bin edges."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'right': bars are centered on the right bin edges."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ],
            "param": "align",
            "type_": "{'left', 'mid', 'right'}, default: 'mid'"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If 'horizontal', "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.axes._axes.Axes.barh",
                          "version": "3.5.1"
                        },
                        "value": "~.Axes.barh"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " will be used for bar-type histograms and the "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "bottom"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " kwarg will be the left edges."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "orientation",
            "type_": "{'vertical', 'horizontal'}, default: 'vertical'"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The relative width of the bars as a fraction of the bin width.  If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "None"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", automatically compute the width."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Ignored if "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "histtype"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is 'step' or 'stepfilled'."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "rwidth",
            "type_": "float or None, default: None"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "True"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", the histogram axis will be set to a log scale."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "log",
            "type_": "bool, default: False"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Color or sequence of colors, one per dataset.  Default ("
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "None"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ") uses the standard line color sequence."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "color",
            "type_": "color or array-like of colors or None, default: None"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "String, or sequence of strings to match multiple datasets.  Bar charts yield multiple patches per dataset, but only the first gets the label, so that "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.axes._axes.Axes.legend",
                          "version": "3.5.1"
                        },
                        "value": "~.Axes.legend"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " will work as expected."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "label",
            "type_": "str or None, default: None"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "True"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", multiple data are stacked on top of each other If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "False"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " multiple data are arranged side by side if histtype is 'bar' or on top of each other if histtype is 'step'"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "stacked",
            "type_": "bool, default: False"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The values of the histogram bins. See "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "density"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "weights"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " for a description of the possible semantics.  If input "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "x"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is an array, then this is an array of length "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "nbins"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": ". If input is a sequence of arrays "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "[data1, data2, ...]"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", then this is a list of arrays with the values of the histograms for each of the arrays in the same order.  The dtype of the array "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "n"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " (or of its element arrays) will always be float even if no weighting or normalization is used."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "n",
            "type_": "array or list of arrays"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The edges of the bins. Length nbins + 1 (nbins left edges and right edge of last bin).  Always a single array even when multiple data sets are passed in."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "bins",
            "type_": "array"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Container of individual artists used to create the histogram or list of such containers if there are multiple input datasets."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "patches",
            "type_": "`.BarContainer` or list of a single `.Polygon` or list of such objects"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Plot a histogram."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "matplotlib.pyplot.Axes.hist"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/matplotlib/axes/_axes.py",
  "item_line": 6343,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Other Parameters",
    "See Also",
    "Notes"
  ],
  "references": null,
  "refs": [
    "hexbin",
    "hist2d"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "2D histogram with rectangular bins"
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "hist2d",
        "ref": "matplotlib.axes._axes.Axes.hist2d"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "2D histogram with hexagonal bins"
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "hexbin",
        "ref": "matplotlib.axes._axes.Axes.hexbin"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "hist(self, x, bins=None, range=None, density=False, weights=None, cumulative=False, bottom=None, histtype='bar', align='mid', orientation='vertical', rwidth=None, log=False, color=None, label=None, stacked=False, *, data=None, **kwargs)"
  }
}