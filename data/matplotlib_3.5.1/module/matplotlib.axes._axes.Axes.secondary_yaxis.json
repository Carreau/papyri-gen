{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "For example if we want to have a second scale for the data plotted on the yaxis."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Other miscellaneous axes parameters."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "**kwargs",
            "type_": "`~matplotlib.axes.Axes` properties."
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The position to put the secondary axis.  Strings can be 'top' or 'bottom' for orientation='x' and 'right' or 'left' for orientation='y'. A float indicates the relative position on the parent axes to put the new axes, 0.0 being the bottom (or left) and 1.0 being the top (or right)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "location",
            "type_": "{'top', 'bottom', 'left', 'right'} or float"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If a 2-tuple of functions, the user specifies the transform function and its inverse.  i.e. "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "functions=(lambda x: 2 / x, lambda x: 2 / x)"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " would be an reciprocal transform with a factor of 2."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The user can also directly supply a subclass of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.transforms.Transform",
                          "version": "3.5.1"
                        },
                        "value": ".transforms.Transform"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " so long as it has an inverse."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "See "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "/gallery/subplots_axes_and_figures/secondary_axis"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " for examples of making these conversions."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "functions",
            "type_": "2-tuple of func, or Transform with an inverse"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [],
            "param": "ax",
            "type_": "axes._secondary_axes.SecondaryAxis"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Add a second y-axis to this Axes."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "This method is experimental as of 3.1, and the API may change."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "matplotlib.pyplot.Axes.secondary_yaxis"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Add a secondary Axes that converts from radians to degrees"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "args0": [],
          "directive_name": "plot",
          "inner": {
            "inline": [],
            "inner": []
          }
        },
        "type": "BlockDirective"
      },
      {
        "data": {
          "value": [
            "fig, ax = plt.subplots()",
            "ax.plot(range(1, 360, 5), range(1, 360, 5))",
            "ax.set_ylabel('degrees')",
            "secax = ax.secondary_yaxis('right', functions=(np.deg2rad,",
            "                                               np.rad2deg))",
            "secax.set_ylabel('radians')"
          ]
        },
        "type": "BlockQuote"
      }
    ],
    "title": null
  },
  "item_file": "/matplotlib/axes/_axes.py",
  "item_line": 564,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Warnings",
    "Parameters",
    "Returns",
    "Other Parameters",
    "Examples"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "secondary_yaxis(self, location, *, functions=None, **kwargs)"
  }
}