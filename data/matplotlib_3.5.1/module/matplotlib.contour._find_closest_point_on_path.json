{
  "aliases": [
    "matplotlib.contour._find_closest_point_on_path"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Coordinates of vertices."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "xys",
                "type_": "(N, 2) array-like"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Coordinates of point."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "p",
                "type_": "(float, float)"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Minimum square distance of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "p"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " to "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "xys"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "d2min",
                "type_": "float"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Projection of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "p"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " onto "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "xys"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "proj",
                "type_": "(float, float)"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Consecutive indices of vertices of segment in "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "xys"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " where "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "proj"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is. Segments are considered as including their end-points; i.e if the closest point on the path is a node in "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "xys"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " with index "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "i"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ", this returns "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "(i-1, i)"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ".  For the special case where "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "xys"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is a single point, this returns "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "(0, 0)"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "imin",
                "type_": "(int, int)"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/matplotlib/contour.py",
  "item_line": 623,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Parameters",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "_find_closest_point_on_path(xys, p)"
  }
}