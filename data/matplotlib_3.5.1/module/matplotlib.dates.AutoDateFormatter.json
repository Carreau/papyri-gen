{
  "aliases": [
    "matplotlib.dates.AutoDateFormatter"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.dates.AutoDateFormatter",
                    "version": "3.5.1"
                  },
                  "value": ".AutoDateFormatter"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " has a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    ".scale"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " dictionary that maps tick scales (the interval in days between one major tick) to format strings; this dictionary defaults to :      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "self.scaled = {\n    DAYS_PER_YEAR: rcParams['date.autoformat.year'],\n    DAYS_PER_MONTH: rcParams['date.autoformat.month'],\n    1: rcParams['date.autoformat.day'],\n    1 / HOURS_PER_DAY: rcParams['date.autoformat.hour'],\n    1 / MINUTES_PER_DAY: rcParams['date.autoformat.minute'],\n    1 / SEC_PER_DAY: rcParams['date.autoformat.second'],\n    1 / MUSECONDS_PER_DAY: rcParams['date.autoformat.microsecond'],\n}"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The formatter uses the format string corresponding to the lowest key in the dictionary that is greater or equal to the current scale.  Dictionary entries can be customized:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "locator = AutoDateLocator()\nformatter = AutoDateFormatter(locator)\nformatter.scaled[1/(24*60)] = '%M:%S' # only show min and sec"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Custom callables can also be used instead of format strings.  The following example shows how to use a custom format function to strip trailing zeros from decimal seconds and adds the date to the first ticklabel:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "def my_format_function(x, pos=None):\n    x = matplotlib.dates.num2date(x)\n    if pos == 0:\n        fmt = '%D %H:%M:%S.%f'\n    else:\n        fmt = '%H:%M:%S.%f'\n    label = x.strftime(fmt)\n    label = label.rstrip(\"0\")\n    label = label.rstrip(\".\")\n    return label\n\nformatter.scaled[1/(24*60)] = my_format_function"
          },
          "type": "BlockVerbatim"
        }
      ],
      "level": 0,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "A "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.Formatter",
                    "version": "3.5.1"
                  },
                  "value": ".Formatter"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " which attempts to figure out the best format to use.  This is most useful when used with the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.dates.AutoDateLocator",
                    "version": "3.5.1"
                  },
                  "value": "AutoDateLocator"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "title": null
  },
  "item_file": "/matplotlib/dates.py",
  "item_line": 862,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}