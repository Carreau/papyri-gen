{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Other miscellaneous text parameters."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Properties: agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array alpha: scalar or None animated: bool backgroundcolor: color bbox: dict with properties for "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.patches.FancyBboxPatch",
                              "version": "3.5.1"
                            },
                            "value": ".patches.FancyBboxPatch"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " clip_box: unknown clip_on: unknown clip_path: unknown color or c: color figure: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.figure.Figure",
                              "version": "3.5.1"
                            },
                            "value": ".Figure"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " fontfamily or family: {FONTNAME, 'serif', 'sans-serif', 'cursive', 'fantasy', 'monospace'} fontproperties or font or font_properties: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.font_manager.FontProperties",
                              "version": "3.5.1"
                            },
                            "value": ".font_manager.FontProperties"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "str"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "api",
                              "module": "pathlib",
                              "path": "pathlib.Path",
                              "version": "*"
                            },
                            "value": "pathlib.Path"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " fontsize or size: float or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'} fontstretch or stretch: {a numeric value in range 0-1000, 'ultra-condensed', 'extra-condensed', 'condensed', 'semi-condensed', 'normal', 'semi-expanded', 'expanded', 'extra-expanded', 'ultra-expanded'} fontstyle or style: {'normal', 'italic', 'oblique'} fontvariant or variant: {'normal', 'small-caps'} fontweight or weight: {a numeric value in range 0-1000, 'ultralight', 'light', 'normal', 'regular', 'book', 'medium', 'roman', 'semibold', 'demibold', 'demi', 'bold', 'heavy', 'extra bold', 'black'} gid: str horizontalalignment or ha: {'center', 'right', 'left'} in_layout: bool label: object linespacing: float (multiple of font size) math_fontfamily: str multialignment or ma: {'left', 'right', 'center'} parse_math: bool path_effects: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.patheffects.AbstractPathEffect",
                              "version": "3.5.1"
                            },
                            "value": ".AbstractPathEffect"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " picker: None or bool or float or callable position: (float, float) rasterized: bool rotation: float or {'vertical', 'horizontal'} rotation_mode: {None, 'default', 'anchor'} sketch_params: (scale: float, length: float, randomness: float) snap: bool or None text: object transform: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.transforms.Transform",
                              "version": "3.5.1"
                            },
                            "value": ".Transform"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " transform_rotates_text: bool url: str usetex: bool or None verticalalignment or va: {'center', 'top', 'bottom', 'baseline', 'center_baseline'} visible: bool wrap: bool x: float y: float zorder: float"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "**kwargs",
                "type_": "`~matplotlib.text.Text` properties"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The position to place the text. By default, this is in figure coordinates, floats in [0, 1]. The coordinate system can be changed using the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "transform"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " keyword."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "x, y",
                "type_": "float"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The text string."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "s",
                "type_": "str"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A dictionary to override the default text properties. If not given, the defaults are determined by "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "font.*"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". Properties passed as "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "kwargs"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " override the corresponding ones given in "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "fontdict"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "fontdict",
                "type_": "dict, optional"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [],
                "param": "",
                "type_": "`~.text.Text`"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Add text to figure."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "matplotlib.figure.FigureBase.text"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/matplotlib/figure.py",
  "item_line": 1077,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Other Parameters",
    "See Also"
  ],
  "references": null,
  "refs": [
    ".Axes.text",
    ".pyplot.text"
  ],
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": ".Axes.text",
        "ref": "matplotlib.axes._axes.Axes.text"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": ".pyplot.text",
        "ref": "matplotlib.pyplot.text"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "text(self, x, y, s, fontdict=None, **kwargs)"
  }
}