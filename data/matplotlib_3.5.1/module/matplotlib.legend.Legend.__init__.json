{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Users can specify any arbitrary location for the legend using the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "bbox_to_anchor"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " keyword argument. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "bbox_to_anchor"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " can be a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.transforms.BboxBase",
                    "version": "3.5.1"
                  },
                  "value": ".BboxBase"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " (or derived there from) or a tuple of 2 or 4 floats. See "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.legend.Legend.set_bbox_to_anchor",
                    "version": "3.5.1"
                  },
                  "value": "set_bbox_to_anchor"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " for more detail."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The legend location can be specified by setting "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "loc"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " with a tuple of 2 floats, which is interpreted as the lower-left corner of the legend in the normalized axes coordinate."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The location of the legend."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The strings "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "'upper left', 'upper right', 'lower left', 'lower right'"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " place the legend at the corresponding corner of the axes/figure."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The strings "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "'upper center', 'lower center', 'center left', 'center right'"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " place the legend at the center of the corresponding edge of the axes/figure."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The string "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "'center'"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " places the legend at the center of the axes/figure."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The string "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "'best'"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " places the legend at the location, among the nine locations defined so far, with the minimum overlap with other drawn artists.  This option can be quite slow for plots with large amounts of data; your plotting speed may benefit from providing a specific location."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The location can also be a 2-tuple giving the coordinates of the lower-left corner of the legend in axes coordinates (in which case "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "bbox_to_anchor"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " will be ignored)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "For back-compatibility, "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "'center right'"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " (but no other location) can also be spelled "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "'right'"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", and each \"string\" locations can also be given as a numeric value:"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "value": [
                    "===============   =============",
                    "Location String   Location Code",
                    "===============   =============",
                    "'best'            0",
                    "'upper right'     1",
                    "'upper left'      2",
                    "'lower left'      3",
                    "'lower right'     4",
                    "'right'           5",
                    "'center left'     6",
                    "'center right'    7",
                    "'lower center'    8",
                    "'upper center'    9",
                    "'center'          10",
                    "===============   ============="
                  ]
                },
                "type": "BlockQuote"
              }
            ],
            "param": "loc",
            "type_": "str or pair of floats, default: :rc:`legend.loc` ('best' for axes, 'upper right' for figures)"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Box that is used to position the legend in conjunction with "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "loc"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": ". Defaults to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "axes.bbox"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " (if called as a method to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.axes._axes.Axes.legend",
                          "version": "3.5.1"
                        },
                        "value": ".Axes.legend"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ") or "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "figure.bbox"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " (if "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": ".Figure.legend"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": ").  This argument allows arbitrary placement of the legend."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Bbox coordinates are interpreted in the coordinate system given by "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "bbox_transform"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": ", with the default transform Axes or Figure coordinates, depending on which "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "legend"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " is called."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If a 4-tuple or "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.transforms.BboxBase",
                          "version": "3.5.1"
                        },
                        "value": ".BboxBase"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is given, then it specifies the bbox "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "(x, y, width, height)"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " that the legend is placed in. To put the legend in the best location in the bottom right quadrant of the axes (or figure)::      "
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "value": "loc='best', bbox_to_anchor=(0.5, 0., 0.5, 0.5)"
                },
                "type": "BlockVerbatim"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "A 2-tuple "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "(x, y)"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " places the corner of the legend specified by "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "loc"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " at x, y.  For example, to put the legend's upper right-hand corner in the center of the axes (or figure) the following keywords can be used::      "
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "value": "loc='upper right', bbox_to_anchor=(0.5, 0.5)"
                },
                "type": "BlockVerbatim"
              }
            ],
            "param": "bbox_to_anchor",
            "type_": "`.BboxBase`, 2-tuple, or 4-tuple of floats"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The number of columns that the legend has."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "ncol",
            "type_": "int, default: 1"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The font properties of the legend. If None (default), the current "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "matplotlib.rcParams"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " will be used."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "prop",
            "type_": "None or `matplotlib.font_manager.FontProperties` or dict"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The font size of the legend. If the value is numeric the size will be the absolute font size in points. String values are relative to the current default font size. This argument is only used if "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "prop"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is not specified."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "fontsize",
            "type_": "int or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The color of the text in the legend. Either a valid color string (for example, 'red'), or a list of color strings. The labelcolor can also be made to match the color of the line or marker using 'linecolor', 'markerfacecolor' (or 'mfc'), or 'markeredgecolor' (or 'mec')."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Labelcolor can be set globally using "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "legend.labelcolor"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ". If None, use "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "text.color"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "labelcolor",
            "type_": "str or list, default: :rc:`legend.labelcolor`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The number of marker points in the legend when creating a legend entry for a "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.lines.Line2D",
                          "version": "3.5.1"
                        },
                        "value": ".Line2D"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " (line)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "numpoints",
            "type_": "int, default: :rc:`legend.numpoints`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The number of marker points in the legend when creating a legend entry for a "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.collections.PathCollection",
                          "version": "3.5.1"
                        },
                        "value": ".PathCollection"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " (scatter plot)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "scatterpoints",
            "type_": "int, default: :rc:`legend.scatterpoints`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The vertical offset (relative to the font size) for the markers created for a scatter plot legend entry. 0.0 is at the base the legend text, and 1.0 is at the top. To draw all markers at the same height, set to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "[0.5]"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "scatteryoffsets",
            "type_": "iterable of floats, default: ``[0.375, 0.5, 0.3125]``"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The relative size of legend markers compared with the originally drawn ones."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "markerscale",
            "type_": "float, default: :rc:`legend.markerscale`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "True"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": ", legend marker is placed to the left of the legend label. If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "False"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": ", legend marker is placed to the right of the legend label."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "markerfirst",
            "type_": "bool, default: True"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Whether the legend should be drawn on a patch (frame)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "frameon",
            "type_": "bool, default: :rc:`legend.frameon`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Whether round edges should be enabled around the "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.patches.FancyBboxPatch",
                          "version": "3.5.1"
                        },
                        "value": ".FancyBboxPatch"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " which makes up the legend's background."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "fancybox",
            "type_": "bool, default: :rc:`legend.fancybox`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Whether to draw a shadow behind the legend."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "shadow",
            "type_": "bool, default: :rc:`legend.shadow`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The alpha transparency of the legend's background. If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "shadow"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is activated and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "framealpha"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "None"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", the default value is ignored."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "framealpha",
            "type_": "float, default: :rc:`legend.framealpha`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The legend's background color. If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "\"inherit\""
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", use "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "axes.facecolor"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "facecolor",
            "type_": "\"inherit\" or color, default: :rc:`legend.facecolor`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The legend's background patch edge color. If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "\"inherit\""
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", use take "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "axes.edgecolor"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "edgecolor",
            "type_": "\"inherit\" or color, default: :rc:`legend.edgecolor`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "mode"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is set to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "\"expand\""
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " the legend will be horizontally expanded to fill the axes area (or "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "bbox_to_anchor"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " if defines the legend's size)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "mode",
            "type_": "{\"expand\", None}"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The transform for the bounding box ("
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "bbox_to_anchor"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": "). For a value of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "None"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " (default) the Axes' "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "~matplotlib.axes.Axes.transAxes"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " transform will be used."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "bbox_transform",
            "type_": "None or `matplotlib.transforms.Transform`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The legend's title. Default is no title ("
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "None"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ")."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "title",
            "type_": "str or None"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The font properties of the legend's title. If None (default), the "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "title_fontsize"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " argument will be used if present; if "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "title_fontsize"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is also None, the current "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "legend.title_fontsize"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " will be used."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "title_fontproperties",
            "type_": "None or `matplotlib.font_manager.FontProperties` or dict"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The font size of the legend's title. Note: This cannot be combined with "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "title_fontproperties"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": ". If you want to set the fontsize alongside other font properties, use the "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "size"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " parameter in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "title_fontproperties"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "title_fontsize",
            "type_": "int or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}, default: :rc:`legend.title_fontsize`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The fractional whitespace inside the legend border, in font-size units."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "borderpad",
            "type_": "float, default: :rc:`legend.borderpad`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The vertical space between the legend entries, in font-size units."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "labelspacing",
            "type_": "float, default: :rc:`legend.labelspacing`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The length of the legend handles, in font-size units."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "handlelength",
            "type_": "float, default: :rc:`legend.handlelength`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The height of the legend handles, in font-size units."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "handleheight",
            "type_": "float, default: :rc:`legend.handleheight`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The pad between the legend handle and text, in font-size units."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "handletextpad",
            "type_": "float, default: :rc:`legend.handletextpad`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The pad between the axes and legend border, in font-size units."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "borderaxespad",
            "type_": "float, default: :rc:`legend.borderaxespad`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The spacing between columns, in font-size units."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "columnspacing",
            "type_": "float, default: :rc:`legend.columnspacing`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The custom dictionary mapping instances or types to a legend handler. This "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "handler_map"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " updates the default handler map found at "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.legend.Legend.get_legend_handler_map",
                          "version": "3.5.1"
                        },
                        "value": "matplotlib.legend.Legend.get_legend_handler_map"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "handler_map",
            "type_": "dict or None"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The artist that contains the legend."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "parent",
            "type_": "`~matplotlib.axes.Axes` or `.Figure`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "A list of Artists (lines, patches) to be added to the legend."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "handles",
            "type_": "list of `.Artist`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "A list of labels to show next to the artists. The length of handles and labels should be the same. If they are not, they are truncated to the smaller of both lengths."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "labels",
            "type_": "list of str"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "matplotlib.legend.Legend.__init__"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/matplotlib/legend.py",
  "item_line": 296,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Parameters",
    "Other Parameters",
    "Notes"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "__init__(self, parent, handles, labels, loc=None, numpoints=None, markerscale=None, markerfirst=True, scatterpoints=None, scatteryoffsets=None, prop=None, fontsize=None, labelcolor=None, borderpad=None, labelspacing=None, handlelength=None, handleheight=None, handletextpad=None, borderaxespad=None, columnspacing=None, ncol=1, mode=None, fancybox=None, shadow=None, title=None, title_fontsize=None, framealpha=None, edgecolor=None, facecolor=None, bbox_to_anchor=None, bbox_transform=None, frameon=None, handler_map=None, title_fontproperties=None)"
  }
}