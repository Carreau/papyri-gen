{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Compute and plot a spectrogram of data in x.  Data are split into NFFT length segments and the spectrum of each section is computed.  The windowing function window is applied to each segment, and the amount of overlap of each segment is specified with noverlap."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "detrend and scale_by_freq only apply when "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "mode"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " is set to 'psd'."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "1-D array or sequence."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "x",
            "type_": "array-like"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The sampling frequency (samples per time unit).  It is used to calculate the Fourier frequencies, "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "freqs"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": ", in cycles per time unit."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "Fs",
            "type_": "float, default: 2"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "A function or a vector of length "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "NFFT"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": ".  To create window vectors see "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.mlab.window_hanning",
                          "version": "3.5.1"
                        },
                        "value": ".window_hanning"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ", "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.mlab.window_none",
                          "version": "3.5.1"
                        },
                        "value": ".window_none"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ", "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "api",
                          "module": "numpy",
                          "path": "numpy.blackman",
                          "version": "*"
                        },
                        "value": "numpy.blackman"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ", "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "api",
                          "module": "numpy",
                          "path": "numpy.hamming",
                          "version": "*"
                        },
                        "value": "numpy.hamming"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ", "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "api",
                          "module": "numpy",
                          "path": "numpy.bartlett",
                          "version": "*"
                        },
                        "value": "numpy.bartlett"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ", "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "api",
                          "module": "scipy",
                          "path": "scipy.signal",
                          "version": "*"
                        },
                        "value": "scipy.signal"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ", "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "api",
                          "module": "scipy",
                          "path": "scipy.signal.windows._windows.get_window",
                          "version": "*"
                        },
                        "value": "scipy.signal.get_window"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ", etc.  If a function is passed as the argument, it must take a data segment as an argument and return the windowed version of the segment."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "window",
            "type_": "callable or ndarray, default: `.window_hanning`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Which sides of the spectrum to return. 'default' is one-sided for real data and two-sided for complex data. 'onesided' forces the return of a one-sided spectrum, while 'twosided' forces two-sided."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "sides",
            "type_": "{'default', 'onesided', 'twosided'}, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The number of points to which the data segment is padded when performing the FFT.  This can be different from "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "NFFT"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": ", which specifies the number of data points used.  While not increasing the actual resolution of the spectrum (the minimum distance between resolvable peaks), this can give more points in the plot, allowing for more detail. This corresponds to the "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "n"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " parameter in the call to fft(). The default is None, which sets "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "pad_to"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " equal to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "NFFT"
                        }
                      },
                      "type": "Emph"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "pad_to",
            "type_": "int, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The number of data points used in each block for the FFT.  A power 2 is most efficient.  This should "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "NOT"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " be used to get zero padding, or the scaling of the result will be incorrect; use "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "pad_to"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " for this instead."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "NFFT",
            "type_": "int, default: 256"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The function applied to each segment before fft-ing, designed to remove the mean or linear trend.  Unlike in MATLAB, where the "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "detrend"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " parameter is a vector, in Matplotlib it is a function.  The "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "~matplotlib.mlab"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " module defines "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.mlab.detrend_none",
                          "version": "3.5.1"
                        },
                        "value": ".detrend_none"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ", "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.mlab.detrend_mean",
                          "version": "3.5.1"
                        },
                        "value": ".detrend_mean"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ", and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.mlab.detrend_linear",
                          "version": "3.5.1"
                        },
                        "value": ".detrend_linear"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ", but you can use a custom function as well.  You can also use a string to choose one of the functions: 'none' calls "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.mlab.detrend_none",
                          "version": "3.5.1"
                        },
                        "value": ".detrend_none"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ". 'mean' calls "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.mlab.detrend_mean",
                          "version": "3.5.1"
                        },
                        "value": ".detrend_mean"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ". 'linear' calls "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.mlab.detrend_linear",
                          "version": "3.5.1"
                        },
                        "value": ".detrend_linear"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "detrend",
            "type_": "{'none', 'mean', 'linear'} or callable, default: 'none'"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Whether the resulting density values should be scaled by the scaling frequency, which gives density in units of Hz^-1.  This allows for integration over the returned frequency values.  The default is True for MATLAB compatibility."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "scale_by_freq",
            "type_": "bool, default: True"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The number of points of overlap between blocks."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "noverlap",
            "type_": "int, default: 128"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "children": [
                    {
                      "dd": [
                        {
                          "data": {
                            "children": [
                              {
                                "dd": [
                                  {
                                    "data": {
                                      "inline": [
                                        {
                                          "data": {
                                            "value": "Returns the power spectral density."
                                          },
                                          "type": "Words"
                                        }
                                      ],
                                      "inner": []
                                    },
                                    "type": "Paragraph"
                                  }
                                ],
                                "dt": {
                                  "inline": [
                                    {
                                      "data": {
                                        "value": "'psd'"
                                      },
                                      "type": "Words"
                                    }
                                  ],
                                  "inner": []
                                }
                              },
                              {
                                "dd": [
                                  {
                                    "data": {
                                      "inline": [
                                        {
                                          "data": {
                                            "value": "Returns the complex-valued frequency spectrum."
                                          },
                                          "type": "Words"
                                        }
                                      ],
                                      "inner": []
                                    },
                                    "type": "Paragraph"
                                  }
                                ],
                                "dt": {
                                  "inline": [
                                    {
                                      "data": {
                                        "value": "'complex'"
                                      },
                                      "type": "Words"
                                    }
                                  ],
                                  "inner": []
                                }
                              },
                              {
                                "dd": [
                                  {
                                    "data": {
                                      "inline": [
                                        {
                                          "data": {
                                            "value": "Returns the magnitude spectrum."
                                          },
                                          "type": "Words"
                                        }
                                      ],
                                      "inner": []
                                    },
                                    "type": "Paragraph"
                                  }
                                ],
                                "dt": {
                                  "inline": [
                                    {
                                      "data": {
                                        "value": "'magnitude'"
                                      },
                                      "type": "Words"
                                    }
                                  ],
                                  "inner": []
                                }
                              },
                              {
                                "dd": [
                                  {
                                    "data": {
                                      "inline": [
                                        {
                                          "data": {
                                            "value": "Returns the phase spectrum without unwrapping."
                                          },
                                          "type": "Words"
                                        }
                                      ],
                                      "inner": []
                                    },
                                    "type": "Paragraph"
                                  }
                                ],
                                "dt": {
                                  "inline": [
                                    {
                                      "data": {
                                        "value": "'angle'"
                                      },
                                      "type": "Words"
                                    }
                                  ],
                                  "inner": []
                                }
                              },
                              {
                                "dd": [
                                  {
                                    "data": {
                                      "inline": [
                                        {
                                          "data": {
                                            "value": "Returns the phase spectrum with unwrapping."
                                          },
                                          "type": "Words"
                                        }
                                      ],
                                      "inner": []
                                    },
                                    "type": "Paragraph"
                                  }
                                ],
                                "dt": {
                                  "inline": [
                                    {
                                      "data": {
                                        "value": "'phase'"
                                      },
                                      "type": "Words"
                                    }
                                  ],
                                  "inner": []
                                }
                              }
                            ]
                          },
                          "type": "DefList"
                        }
                      ],
                      "dt": {
                        "inline": [
                          {
                            "data": {
                              "value": "What sort of spectrum to use:"
                            },
                            "type": "Words"
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                },
                "type": "DefList"
              }
            ],
            "param": "mode",
            "type_": "str, default: 'psd'"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "2D array, columns are the periodograms of successive segments."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "spectrum",
            "type_": "array-like"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "1-D array, frequencies corresponding to the rows in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "spectrum"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "freqs",
            "type_": "array-like"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "1-D array, the times corresponding to midpoints of segments (i.e the columns in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "spectrum"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": ")."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "t",
            "type_": "array-like"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Compute a spectrogram."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "matplotlib.mlab.specgram"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/matplotlib/mlab.py",
  "item_line": 701,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes"
  ],
  "references": null,
  "refs": [
    "angle_spectrum",
    "complex_spectrum",
    "magnitude_spectrum",
    "phase_spectrum",
    "psd"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "differs in the overlap and in the return values."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "psd",
        "ref": "matplotlib.mlab.psd"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "similar, but with complex valued frequencies."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "complex_spectrum",
        "ref": null
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "similar single segment when mode is 'magnitude'."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "magnitude_spectrum",
        "ref": null
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "similar to single segment when mode is 'angle'."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "angle_spectrum",
        "ref": null
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "similar to single segment when mode is 'phase'."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "phase_spectrum",
        "ref": null
      },
      "type": null
    }
  ],
  "signature": {
    "value": "specgram(x, NFFT=None, Fs=None, detrend=None, window=None, noverlap=None, pad_to=None, sides=None, scale_by_freq=None, mode=None)"
  }
}