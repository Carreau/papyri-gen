{
  "aliases": [
    "matplotlib.pyplot.angle_spectrum"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Compute the angle spectrum (wrapped phase spectrum) of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "x"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ". Data is padded to a length of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "pad_to"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " and the windowing function "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "window"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " is applied to the signal."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Other Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If given, the following parameters also accept a string "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "s"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", which is interpreted as "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "data[s]"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " (unless this raises an exception):"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": {
                              "value": "x"
                            }
                          },
                          "type": "Emph"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "data",
                "type_": "indexable object, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Keyword arguments control the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.lines.Line2D",
                              "version": "3.5.1"
                            },
                            "value": ".Line2D"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " properties:"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Properties: agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array alpha: scalar or None animated: bool antialiased or aa: bool clip_box: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.transforms.Bbox",
                              "version": "3.5.1"
                            },
                            "value": ".Bbox"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " clip_on: bool clip_path: Patch or (Path, Transform) or None color or c: color dash_capstyle: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib._enums.CapStyle",
                              "version": "3.5.1"
                            },
                            "value": ".CapStyle"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " or {'butt', 'projecting', 'round'} dash_joinstyle: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib._enums.JoinStyle",
                              "version": "3.5.1"
                            },
                            "value": ".JoinStyle"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " or {'miter', 'round', 'bevel'} dashes: sequence of floats (on/off ink in points) or (None, None) data: (2, N) array or two 1D arrays drawstyle or ds: {'default', 'steps', 'steps-pre', 'steps-mid', 'steps-post'}, default: 'default' figure: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.figure.Figure",
                              "version": "3.5.1"
                            },
                            "value": ".Figure"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " fillstyle: {'full', 'left', 'right', 'bottom', 'top', 'none'} gid: str in_layout: bool label: object linestyle or ls: {'-', '--', '-.', ':', '', (offset, on-off-seq), ...} linewidth or lw: float marker: marker style string, "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.path.Path",
                              "version": "3.5.1"
                            },
                            "value": "~.path.Path"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.markers.MarkerStyle",
                              "version": "3.5.1"
                            },
                            "value": "~.markers.MarkerStyle"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " markeredgecolor or mec: color markeredgewidth or mew: float markerfacecolor or mfc: color markerfacecoloralt or mfcalt: color markersize or ms: float markevery: None or int or (int, int) or slice or list[int] or float or (float, float) or list[bool] path_effects: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.patheffects.AbstractPathEffect",
                              "version": "3.5.1"
                            },
                            "value": ".AbstractPathEffect"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " picker: float or callable[[Artist, Event], tuple[bool, dict]] pickradius: float rasterized: bool sketch_params: (scale: float, length: float, randomness: float) snap: bool or None solid_capstyle: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib._enums.CapStyle",
                              "version": "3.5.1"
                            },
                            "value": ".CapStyle"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " or {'butt', 'projecting', 'round'} solid_joinstyle: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib._enums.JoinStyle",
                              "version": "3.5.1"
                            },
                            "value": ".JoinStyle"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " or {'miter', 'round', 'bevel'} transform: unknown url: str visible: bool xdata: 1D array ydata: 1D array zorder: float"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "**kwargs",
                "type_": ""
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Array or sequence containing the data."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "x",
                "type_": "1-D array or sequence"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The sampling frequency (samples per time unit).  It is used to calculate the Fourier frequencies, "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "freqs"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ", in cycles per time unit."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "Fs",
                "type_": "float, default: 2"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A function or a vector of length "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "NFFT"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ".  To create window vectors see "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.mlab.window_hanning",
                              "version": "3.5.1"
                            },
                            "value": ".window_hanning"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ", "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.mlab.window_none",
                              "version": "3.5.1"
                            },
                            "value": ".window_none"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ", "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "api",
                              "module": "numpy",
                              "path": "numpy.blackman",
                              "version": "*"
                            },
                            "value": "numpy.blackman"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ", "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "api",
                              "module": "numpy",
                              "path": "numpy.hamming",
                              "version": "*"
                            },
                            "value": "numpy.hamming"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ", "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "api",
                              "module": "numpy",
                              "path": "numpy.bartlett",
                              "version": "*"
                            },
                            "value": "numpy.bartlett"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ", "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "api",
                              "module": "scipy",
                              "path": "scipy.signal",
                              "version": "*"
                            },
                            "value": "scipy.signal"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ", "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "api",
                              "module": "scipy",
                              "path": "scipy.signal.windows._windows.get_window",
                              "version": "*"
                            },
                            "value": "scipy.signal.get_window"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ", etc.  If a function is passed as the argument, it must take a data segment as an argument and return the windowed version of the segment."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "window",
                "type_": "callable or ndarray, default: `.window_hanning`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Which sides of the spectrum to return. 'default' is one-sided for real data and two-sided for complex data. 'onesided' forces the return of a one-sided spectrum, while 'twosided' forces two-sided."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "sides",
                "type_": "{'default', 'onesided', 'twosided'}, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The number of points to which the data segment is padded when performing the FFT.  While not increasing the actual resolution of the spectrum (the minimum distance between resolvable peaks), this can give more points in the plot, allowing for more detail. This corresponds to the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "n"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " parameter in the call to fft().  The default is None, which sets "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "pad_to"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " equal to the length of the input signal (i.e. no padding)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "pad_to",
                "type_": "int, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The center frequency of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "x"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ", which offsets the x extents of the plot to reflect the frequency range used when a signal is acquired and then filtered and downsampled to baseband."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "Fc",
                "type_": "int, default: 0"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The values for the angle spectrum in radians (real valued)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "spectrum",
                "type_": "1-D array"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The frequencies corresponding to the elements in "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "spectrum"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "freqs",
                "type_": "1-D array"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The line created by this function."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "line",
                "type_": "`~matplotlib.lines.Line2D`"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Plot the angle spectrum."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "title": null
  },
  "item_file": "/matplotlib/pyplot.py",
  "item_line": 2319,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Other Parameters",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "Plots the magnitudes of the corresponding frequencies."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "matplotlib",
          "path": "matplotlib.pyplot.magnitude_spectrum",
          "version": "3.5.1"
        },
        "value": "magnitude_spectrum"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "Plots the unwrapped version of this function."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "matplotlib",
          "path": "matplotlib.pyplot.phase_spectrum",
          "version": "3.5.1"
        },
        "value": "phase_spectrum"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "Can plot the angle spectrum of segments within the signal in a colormap."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "matplotlib",
          "path": "matplotlib.pyplot.specgram",
          "version": "3.5.1"
        },
        "value": "specgram"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "angle_spectrum(x, Fs=None, Fc=None, window=None, pad_to=None, sides=None, *, data=None, **kwargs)"
  }
}