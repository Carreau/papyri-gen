{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The line can be defined either by two points "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "xy1"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "xy2"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", or by one point "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "xy1"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " and a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "slope"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This draws a straight line \"on the screen\", regardless of the x and y scales, and is thus also suitable for drawing exponential decays in semilog plots, power laws in loglog plots, etc. However, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "slope"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " should only be used with linear scales; It has no clear meaning for all other scales, and thus the behavior is undefined. Please specify the line using the points "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "xy1"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "xy2"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " for non-linear scales."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "transform"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " keyword argument only applies to the points "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "xy1"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "xy2"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ". The "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "slope"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " (if given) is always in data coordinates. This can be used e.g. with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ax.transAxes"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for drawing grid lines with a fixed slope."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Valid kwargs are "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.lines.Line2D",
                              "version": "3.5.1"
                            },
                            "value": ".Line2D"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " properties"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Properties: agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array alpha: scalar or None animated: bool antialiased or aa: bool clip_box: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.transforms.Bbox",
                              "version": "3.5.1"
                            },
                            "value": ".Bbox"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " clip_on: bool clip_path: Patch or (Path, Transform) or None color or c: color dash_capstyle: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib._enums.CapStyle",
                              "version": "3.5.1"
                            },
                            "value": ".CapStyle"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " or {'butt', 'projecting', 'round'} dash_joinstyle: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib._enums.JoinStyle",
                              "version": "3.5.1"
                            },
                            "value": ".JoinStyle"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " or {'miter', 'round', 'bevel'} dashes: sequence of floats (on/off ink in points) or (None, None) data: (2, N) array or two 1D arrays drawstyle or ds: {'default', 'steps', 'steps-pre', 'steps-mid', 'steps-post'}, default: 'default' figure: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.figure.Figure",
                              "version": "3.5.1"
                            },
                            "value": ".Figure"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " fillstyle: {'full', 'left', 'right', 'bottom', 'top', 'none'} gid: str in_layout: bool label: object linestyle or ls: {'-', '--', '-.', ':', '', (offset, on-off-seq), ...} linewidth or lw: float marker: marker style string, "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.path.Path",
                              "version": "3.5.1"
                            },
                            "value": "~.path.Path"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.markers.MarkerStyle",
                              "version": "3.5.1"
                            },
                            "value": "~.markers.MarkerStyle"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " markeredgecolor or mec: color markeredgewidth or mew: float markerfacecolor or mfc: color markerfacecoloralt or mfcalt: color markersize or ms: float markevery: None or int or (int, int) or slice or list[int] or float or (float, float) or list[bool] path_effects: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.patheffects.AbstractPathEffect",
                              "version": "3.5.1"
                            },
                            "value": ".AbstractPathEffect"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " picker: float or callable[[Artist, Event], tuple[bool, dict]] pickradius: float rasterized: bool sketch_params: (scale: float, length: float, randomness: float) snap: bool or None solid_capstyle: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib._enums.CapStyle",
                              "version": "3.5.1"
                            },
                            "value": ".CapStyle"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " or {'butt', 'projecting', 'round'} solid_joinstyle: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib._enums.JoinStyle",
                              "version": "3.5.1"
                            },
                            "value": ".JoinStyle"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " or {'miter', 'round', 'bevel'} transform: unknown url: str visible: bool xdata: 1D array ydata: 1D array zorder: float"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "**kwargs",
                "type_": ""
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Points for the line to pass through. Either "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "xy2"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "slope"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " has to be given."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "xy1, xy2",
                "type_": "(float, float)"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The slope of the line. Either "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "xy2"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "slope"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " has to be given."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "slope",
                "type_": "float, optional"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [],
                "param": "",
                "type_": "`.Line2D`"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Add an infinitely long straight line."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "matplotlib.pyplot.axline"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "value": [
            ">>> axline((0, 0), (1, 1), linewidth=4, color='r')"
          ]
        },
        "type": "BlockQuote"
      }
    ],
    "title": null
  },
  "item_file": "/matplotlib/pyplot.py",
  "item_line": 2365,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Other Parameters",
    "See Also",
    "Examples"
  ],
  "references": null,
  "refs": [
    "axhline",
    "axvline"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "for horizontal lines"
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "name": "axhline",
        "ref": "matplotlib.pyplot.axhline"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "for vertical lines"
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "name": "axvline",
        "ref": "matplotlib.pyplot.axvline"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "axline(xy1, xy2=None, *, slope=None, **kwargs)"
  }
}