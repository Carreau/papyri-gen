{
  "aliases": [
    "matplotlib.pyplot.colorbar"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Additional keyword arguments are of two kinds:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "axes properties:"
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "children": [
                          {
                            "dd": [
                              {
                                "data": {
                                  "children": [
                                    {
                                      "data": {
                                        "value": "location"
                                      },
                                      "type": "Words"
                                    }
                                  ]
                                },
                                "type": "Paragraph"
                              }
                            ],
                            "dt": {
                              "children": [
                                {
                                  "data": {
                                    "value": "location"
                                  },
                                  "type": "Words"
                                }
                              ]
                            }
                          },
                          {
                            "dd": [
                              {
                                "data": {
                                  "children": [
                                    {
                                      "data": {
                                        "value": "orientation"
                                      },
                                      "type": "Words"
                                    }
                                  ]
                                },
                                "type": "Paragraph"
                              }
                            ],
                            "dt": {
                              "children": [
                                {
                                  "data": {
                                    "value": "orientation"
                                  },
                                  "type": "Words"
                                }
                              ]
                            }
                          },
                          {
                            "dd": [
                              {
                                "data": {
                                  "children": [
                                    {
                                      "data": {
                                        "value": "fraction"
                                      },
                                      "type": "Words"
                                    }
                                  ]
                                },
                                "type": "Paragraph"
                              }
                            ],
                            "dt": {
                              "children": [
                                {
                                  "data": {
                                    "value": "fraction"
                                  },
                                  "type": "Words"
                                }
                              ]
                            }
                          },
                          {
                            "dd": [
                              {
                                "data": {
                                  "children": [
                                    {
                                      "data": {
                                        "value": "shrink"
                                      },
                                      "type": "Words"
                                    }
                                  ]
                                },
                                "type": "Paragraph"
                              }
                            ],
                            "dt": {
                              "children": [
                                {
                                  "data": {
                                    "value": "shrink"
                                  },
                                  "type": "Words"
                                }
                              ]
                            }
                          },
                          {
                            "dd": [
                              {
                                "data": {
                                  "children": [
                                    {
                                      "data": {
                                        "value": "aspect"
                                      },
                                      "type": "Words"
                                    }
                                  ]
                                },
                                "type": "Paragraph"
                              }
                            ],
                            "dt": {
                              "children": [
                                {
                                  "data": {
                                    "value": "aspect"
                                  },
                                  "type": "Words"
                                }
                              ]
                            }
                          },
                          {
                            "dd": [
                              {
                                "data": {
                                  "children": [
                                    {
                                      "data": {
                                        "value": "pad"
                                      },
                                      "type": "Words"
                                    }
                                  ]
                                },
                                "type": "Paragraph"
                              }
                            ],
                            "dt": {
                              "children": [
                                {
                                  "data": {
                                    "value": "pad"
                                  },
                                  "type": "Words"
                                }
                              ]
                            }
                          },
                          {
                            "dd": [
                              {
                                "data": {
                                  "children": [
                                    {
                                      "data": {
                                        "value": "anchor"
                                      },
                                      "type": "Words"
                                    }
                                  ]
                                },
                                "type": "Paragraph"
                              }
                            ],
                            "dt": {
                              "children": [
                                {
                                  "data": {
                                    "value": "anchor"
                                  },
                                  "type": "Words"
                                }
                              ]
                            }
                          },
                          {
                            "dd": [
                              {
                                "data": {
                                  "children": [
                                    {
                                      "data": {
                                        "value": "panchor"
                                      },
                                      "type": "Words"
                                    }
                                  ]
                                },
                                "type": "Paragraph"
                              }
                            ],
                            "dt": {
                              "children": [
                                {
                                  "data": {
                                    "value": "panchor"
                                  },
                                  "type": "Words"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "type": "DefList"
                    }
                  ]
                },
                "type": "BlockQuote"
              },
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "colorbar properties:"
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "children": [
                          {
                            "data": {
                              "value": "============  ====================================================     Property      Description     ============  ====================================================     "
                            },
                            "type": "Words"
                          },
                          {
                            "data": {
                              "value": {
                                "value": "extend"
                              }
                            },
                            "type": "Emph"
                          },
                          {
                            "data": {
                              "value": "      {'neither', 'both', 'min', 'max'}                   If not 'neither', make pointed end(s) for out-of-                   range values.  These are set for a given colormap                   using the colormap set_under and set_over methods.     "
                            },
                            "type": "Words"
                          },
                          {
                            "data": {
                              "value": {
                                "value": "extendfrac"
                              }
                            },
                            "type": "Emph"
                          },
                          {
                            "data": {
                              "value": "  {"
                            },
                            "type": "Words"
                          },
                          {
                            "data": {
                              "value": {
                                "value": "None"
                              }
                            },
                            "type": "Emph"
                          },
                          {
                            "data": {
                              "value": ", 'auto', length, lengths}                   If set to "
                            },
                            "type": "Words"
                          },
                          {
                            "data": {
                              "value": {
                                "value": "None"
                              }
                            },
                            "type": "Emph"
                          },
                          {
                            "data": {
                              "value": ", both the minimum and maximum                   triangular colorbar extensions with have a length of                   5% of the interior colorbar length (this is the                   default setting). If set to 'auto', makes the                   triangular colorbar extensions the same lengths as                   the interior boxes (when "
                            },
                            "type": "Words"
                          },
                          {
                            "data": {
                              "value": {
                                "value": "spacing"
                              }
                            },
                            "type": "Emph"
                          },
                          {
                            "data": {
                              "value": " is set to                   'uniform') or the same lengths as the respective                   adjacent interior boxes (when "
                            },
                            "type": "Words"
                          },
                          {
                            "data": {
                              "value": {
                                "value": "spacing"
                              }
                            },
                            "type": "Emph"
                          },
                          {
                            "data": {
                              "value": " is set to                   'proportional'). If a scalar, indicates the length                   of both the minimum and maximum triangular colorbar                   extensions as a fraction of the interior colorbar                   length. A two-element sequence of fractions may also                   be given, indicating the lengths of the minimum and                   maximum colorbar extensions respectively as a                   fraction of the interior colorbar length.     "
                            },
                            "type": "Words"
                          },
                          {
                            "data": {
                              "value": {
                                "value": "extendrect"
                              }
                            },
                            "type": "Emph"
                          },
                          {
                            "data": {
                              "value": "  bool                   If "
                            },
                            "type": "Words"
                          },
                          {
                            "data": {
                              "value": {
                                "value": "False"
                              }
                            },
                            "type": "Emph"
                          },
                          {
                            "data": {
                              "value": " the minimum and maximum colorbar extensions                   will be triangular (the default). If "
                            },
                            "type": "Words"
                          },
                          {
                            "data": {
                              "value": {
                                "value": "True"
                              }
                            },
                            "type": "Emph"
                          },
                          {
                            "data": {
                              "value": " the                   extensions will be rectangular.     "
                            },
                            "type": "Words"
                          },
                          {
                            "data": {
                              "value": {
                                "value": "spacing"
                              }
                            },
                            "type": "Emph"
                          },
                          {
                            "data": {
                              "value": "     {'uniform', 'proportional'}                   Uniform spacing gives each discrete color the same                   space; proportional makes the space proportional to                   the data interval.     "
                            },
                            "type": "Words"
                          },
                          {
                            "data": {
                              "value": {
                                "value": "ticks"
                              }
                            },
                            "type": "Emph"
                          },
                          {
                            "data": {
                              "value": "       "
                            },
                            "type": "Words"
                          },
                          {
                            "data": {
                              "value": {
                                "value": "None"
                              }
                            },
                            "type": "Emph"
                          },
                          {
                            "data": {
                              "value": " or list of ticks or Locator                   If None, ticks are determined automatically from the                   input.     "
                            },
                            "type": "Words"
                          },
                          {
                            "data": {
                              "value": {
                                "value": "format"
                              }
                            },
                            "type": "Emph"
                          },
                          {
                            "data": {
                              "value": "      None or str or Formatter                   If None, "
                            },
                            "type": "Words"
                          },
                          {
                            "data": {
                              "exists": true,
                              "kind": "module",
                              "reference": {
                                "kind": "module",
                                "module": "matplotlib",
                                "path": "matplotlib.ticker.ScalarFormatter",
                                "version": "3.5.1"
                              },
                              "value": "~.ticker.ScalarFormatter"
                            },
                            "type": "Link"
                          },
                          {
                            "data": {
                              "value": " is used.                   If a format string is given, e.g., '%.3f', that is used.                   An alternative "
                            },
                            "type": "Words"
                          },
                          {
                            "data": {
                              "exists": true,
                              "kind": "module",
                              "reference": {
                                "kind": "module",
                                "module": "matplotlib",
                                "path": "matplotlib.ticker.Formatter",
                                "version": "3.5.1"
                              },
                              "value": "~.ticker.Formatter"
                            },
                            "type": "Link"
                          },
                          {
                            "data": {
                              "value": " may be given instead.     "
                            },
                            "type": "Words"
                          },
                          {
                            "data": {
                              "value": {
                                "value": "drawedges"
                              }
                            },
                            "type": "Emph"
                          },
                          {
                            "data": {
                              "value": "   bool                   Whether to draw lines at color boundaries.     "
                            },
                            "type": "Words"
                          },
                          {
                            "data": {
                              "value": {
                                "value": "label"
                              }
                            },
                            "type": "Emph"
                          },
                          {
                            "data": {
                              "value": "       str                   The label on the colorbar's long axis.     ============  ===================================================="
                            },
                            "type": "Words"
                          }
                        ]
                      },
                      "type": "Paragraph"
                    },
                    {
                      "data": {
                        "children": [
                          {
                            "data": {
                              "value": "The following will probably be useful only in the context of     indexed colors (that is, when the mappable has norm=NoNorm()),     or other unusual circumstances."
                            },
                            "type": "Words"
                          }
                        ]
                      },
                      "type": "Paragraph"
                    },
                    {
                      "data": {
                        "children": [
                          {
                            "data": {
                              "value": "============   ===================================================     Property       Description     ============   ===================================================     "
                            },
                            "type": "Words"
                          },
                          {
                            "data": {
                              "value": {
                                "value": "boundaries"
                              }
                            },
                            "type": "Emph"
                          },
                          {
                            "data": {
                              "value": "   None or a sequence     "
                            },
                            "type": "Words"
                          },
                          {
                            "data": {
                              "value": {
                                "value": "values"
                              }
                            },
                            "type": "Emph"
                          },
                          {
                            "data": {
                              "value": "       None or a sequence which must be of length 1 less                    than the sequence of "
                            },
                            "type": "Words"
                          },
                          {
                            "data": {
                              "value": {
                                "value": "boundaries"
                              }
                            },
                            "type": "Emph"
                          },
                          {
                            "data": {
                              "value": ". For each region                    delimited by adjacent entries in "
                            },
                            "type": "Words"
                          },
                          {
                            "data": {
                              "value": {
                                "value": "boundaries"
                              }
                            },
                            "type": "Emph"
                          },
                          {
                            "data": {
                              "value": ", the                    colormapped to the corresponding value in values                    will be used.     ============   ==================================================="
                            },
                            "type": "Words"
                          }
                        ]
                      },
                      "type": "Paragraph"
                    }
                  ]
                },
                "type": "BlockQuote"
              }
            ]
          },
          "type": "BlockQuote"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "mappable"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " is a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.contour.ContourSet",
                    "version": "3.5.1"
                  },
                  "value": "~.contour.ContourSet"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ", its "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "extend"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " kwarg is included automatically."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "shrink"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " kwarg provides a simple way to scale the colorbar with respect to the axes. Note that if "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "cax"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " is specified, it determines the size of the colorbar and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "shrink"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "aspect"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " kwargs are ignored."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "For more precise control, you can manually specify the positions of the axes objects in which the mappable and the colorbar are drawn.  In this case, do not use any of the axes properties kwargs."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "It is known that some vector graphics viewers (svg and pdf) renders white gaps between segments of the colorbar.  This is due to bugs in the viewers, not Matplotlib.  As a workaround, the colorbar can be rendered with overlapping segments::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "cbar = colorbar()\ncbar.solids.set_edgecolor(\"face\")\ndraw()"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "However this has negative consequences in other circumstances, e.g. with semi-transparent images (alpha < 1) and colorbar extensions; therefore, this workaround is not used by default (see issue #1188)."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.cm.ScalarMappable",
                              "version": "3.5.1"
                            },
                            "value": "matplotlib.cm.ScalarMappable"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " (i.e., "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.image.AxesImage",
                              "version": "3.5.1"
                            },
                            "value": "~matplotlib.image.AxesImage"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ", "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.contour.ContourSet",
                              "version": "3.5.1"
                            },
                            "value": "~matplotlib.contour.ContourSet"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ", etc.) described by this colorbar. This argument is mandatory for the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": ".Figure.colorbar"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " method but optional for the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.pyplot.colorbar",
                              "version": "3.5.1"
                            },
                            "value": ".pyplot.colorbar"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " function, which sets the default to the current image."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Note that one can create a "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.cm.ScalarMappable",
                              "version": "3.5.1"
                            },
                            "value": ".ScalarMappable"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " \"on-the-fly\" to generate colorbars not attached to a previously drawn artist, e.g. ::      "
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "value": "fig.colorbar(cm.ScalarMappable(norm=norm, cmap=cmap), ax=ax)"
                    },
                    "type": "BlockVerbatim"
                  }
                ],
                "param": "mappable",
                "type_": ""
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Axes into which the colorbar will be drawn."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "cax",
                "type_": "`~matplotlib.axes.Axes`, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "One or more parent axes from which space for a new colorbar axes will be stolen, if "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "cax"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is None.  This has no effect if "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "cax"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is set."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "ax",
                "type_": "`~matplotlib.axes.Axes`, list of Axes, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "cax"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "None"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", a new "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "cax"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is created as an instance of Axes.  If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "ax"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is an instance of Subplot and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "use_gridspec"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "True"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "cax"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is created as an instance of Subplot using the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              ".gridspec"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " module."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "use_gridspec",
                "type_": "bool, optional"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [],
                "param": "colorbar",
                "type_": "`~matplotlib.colorbar.Colorbar`"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Add a colorbar to a plot."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/matplotlib/pyplot.py",
  "item_line": 2079,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "colorbar(mappable=None, cax=None, ax=None, **kw)"
  }
}