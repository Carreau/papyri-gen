{
  "aliases": [
    "matplotlib.pyplot.legend"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Call signatures:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "legend()\nlegend(handles, labels)\nlegend(handles=handles)\nlegend(labels)"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The call signatures correspond to the following different ways to use this method:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "content": {
                    "value": "1. Automatic detection of elements to be shown in the legend"
                  }
                },
                "type": "Strong"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The elements to be added to the legend are automatically determined, when you do not pass in any extra arguments."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "In this case, the labels are taken from the artist. You can specify them either at artist creation or by calling the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "~.Artist.set_label"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " method on the artist:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "ax.plot([1, 2, 3], label='Inline label')\nax.legend()"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "or:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "line, = ax.plot([1, 2, 3])\nline.set_label('Label via method')\nax.legend()"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Specific lines can be excluded from the automatic legend element selection by defining a label starting with an underscore. This is default for all artists, so calling "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.axes._axes.Axes.legend",
                    "version": "3.5.1"
                  },
                  "value": ".Axes.legend"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " without any arguments and without setting the labels manually will result in no legend being drawn."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "content": {
                    "value": "2. Explicitly listing the artists and labels in the legend"
                  }
                },
                "type": "Strong"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "For full control of which artists have a legend entry, it is possible to pass an iterable of legend artists followed by an iterable of legend labels respectively:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "ax.legend([line1, line2, line3], ['label1', 'label2', 'label3'])"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "content": {
                    "value": "3. Explicitly listing the artists in the legend"
                  }
                },
                "type": "Strong"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This is similar to 2, but the labels are taken from the artists' label properties. Example:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "line1, = ax.plot([1, 2, 3], label='label1')\nline2, = ax.plot([1, 2, 3], label='label2')\nax.legend(handles=[line1, line2])"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "content": {
                    "value": "4. Labeling existing plot elements"
                  }
                },
                "type": "Strong"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "Discouraged",
            "content": "This call signature is discouraged, because the relation between\nplot elements and labels is only implicit by their order and can\neasily be mixed up.",
            "name": "admonition",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "To make a legend for all artists on an Axes, call this function with an iterable of strings, one for each legend item. For example:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "ax.plot([1, 2, 3])\nax.plot([5, 6, 7])\nax.legend(['First line', 'Second line'])"
          },
          "type": "BlockVerbatim"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Some artists are not supported by this function.  See "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "/tutorials/intermediate/legend_guide"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for details."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The location of the legend."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The strings "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "'upper left', 'upper right', 'lower left', 'lower right'"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " place the legend at the corresponding corner of the axes/figure."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The strings "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "'upper center', 'lower center', 'center left', 'center right'"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " place the legend at the center of the corresponding edge of the axes/figure."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The string "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "'center'"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " places the legend at the center of the axes/figure."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The string "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "'best'"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " places the legend at the location, among the nine locations defined so far, with the minimum overlap with other drawn artists.  This option can be quite slow for plots with large amounts of data; your plotting speed may benefit from providing a specific location."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The location can also be a 2-tuple giving the coordinates of the lower-left corner of the legend in axes coordinates (in which case "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "bbox_to_anchor"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " will be ignored)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "For back-compatibility, "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "'center right'"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " (but no other location) can also be spelled "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "'right'"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", and each \"string\" locations can also be given as a numeric value:"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "===============   =============     Location String   Location Code     ===============   =============     'best'            0     'upper right'     1     'upper left'      2     'lower left'      3     'lower right'     4     'right'           5     'center left'     6     'center right'    7     'lower center'    8     'upper center'    9     'center'          10     ===============   ============="
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    "type": "BlockQuote"
                  }
                ],
                "param": "loc",
                "type_": "str or pair of floats, default: :rc:`legend.loc` ('best' for axes, 'upper right' for figures)"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Box that is used to position the legend in conjunction with "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "loc"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ". Defaults to "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "axes.bbox"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " (if called as a method to "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.axes._axes.Axes.legend",
                              "version": "3.5.1"
                            },
                            "value": ".Axes.legend"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ") or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "figure.bbox"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " (if "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": ".Figure.legend"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ").  This argument allows arbitrary placement of the legend."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Bbox coordinates are interpreted in the coordinate system given by "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "bbox_transform"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ", with the default transform Axes or Figure coordinates, depending on which "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "legend"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " is called."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If a 4-tuple or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.transforms.BboxBase",
                              "version": "3.5.1"
                            },
                            "value": ".BboxBase"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is given, then it specifies the bbox "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "(x, y, width, height)"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " that the legend is placed in. To put the legend in the best location in the bottom right quadrant of the axes (or figure):      "
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "value": "loc='best', bbox_to_anchor=(0.5, 0., 0.5, 0.5)"
                    },
                    "type": "BlockVerbatim"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A 2-tuple "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "(x, y)"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " places the corner of the legend specified by "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "loc"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " at x, y.  For example, to put the legend's upper right-hand corner in the center of the axes (or figure) the following keywords can be used:      "
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "value": "loc='upper right', bbox_to_anchor=(0.5, 0.5)"
                    },
                    "type": "BlockVerbatim"
                  }
                ],
                "param": "bbox_to_anchor",
                "type_": "`.BboxBase`, 2-tuple, or 4-tuple of floats"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The number of columns that the legend has."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "ncol",
                "type_": "int, default: 1"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The font properties of the legend. If None (default), the current "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "matplotlib.rcParams"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " will be used."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "prop",
                "type_": "None or `matplotlib.font_manager.FontProperties` or dict"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The font size of the legend. If the value is numeric the size will be the absolute font size in points. String values are relative to the current default font size. This argument is only used if "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "prop"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is not specified."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "fontsize",
                "type_": "int or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The color of the text in the legend. Either a valid color string (for example, 'red'), or a list of color strings. The labelcolor can also be made to match the color of the line or marker using 'linecolor', 'markerfacecolor' (or 'mfc'), or 'markeredgecolor' (or 'mec')."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Labelcolor can be set globally using "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "legend.labelcolor"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". If None, use "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "text.color"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "labelcolor",
                "type_": "str or list, default: :rc:`legend.labelcolor`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The number of marker points in the legend when creating a legend entry for a "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.lines.Line2D",
                              "version": "3.5.1"
                            },
                            "value": ".Line2D"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " (line)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "numpoints",
                "type_": "int, default: :rc:`legend.numpoints`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The number of marker points in the legend when creating a legend entry for a "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.collections.PathCollection",
                              "version": "3.5.1"
                            },
                            "value": ".PathCollection"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " (scatter plot)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "scatterpoints",
                "type_": "int, default: :rc:`legend.scatterpoints`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The vertical offset (relative to the font size) for the markers created for a scatter plot legend entry. 0.0 is at the base the legend text, and 1.0 is at the top. To draw all markers at the same height, set to "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "[0.5]"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "scatteryoffsets",
                "type_": "iterable of floats, default: ``[0.375, 0.5, 0.3125]``"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The relative size of legend markers compared with the originally drawn ones."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "markerscale",
                "type_": "float, default: :rc:`legend.markerscale`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "True"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ", legend marker is placed to the left of the legend label. If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "False"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ", legend marker is placed to the right of the legend label."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "markerfirst",
                "type_": "bool, default: True"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Whether the legend should be drawn on a patch (frame)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "frameon",
                "type_": "bool, default: :rc:`legend.frameon`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Whether round edges should be enabled around the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.patches.FancyBboxPatch",
                              "version": "3.5.1"
                            },
                            "value": ".FancyBboxPatch"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " which makes up the legend's background."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "fancybox",
                "type_": "bool, default: :rc:`legend.fancybox`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Whether to draw a shadow behind the legend."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "shadow",
                "type_": "bool, default: :rc:`legend.shadow`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The alpha transparency of the legend's background. If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "shadow"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is activated and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "framealpha"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "None"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", the default value is ignored."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "framealpha",
                "type_": "float, default: :rc:`legend.framealpha`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The legend's background color. If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "\"inherit\""
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", use "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "axes.facecolor"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "facecolor",
                "type_": "\"inherit\" or color, default: :rc:`legend.facecolor`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The legend's background patch edge color. If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "\"inherit\""
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", use take "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "axes.edgecolor"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "edgecolor",
                "type_": "\"inherit\" or color, default: :rc:`legend.edgecolor`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "mode"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is set to "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "\"expand\""
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " the legend will be horizontally expanded to fill the axes area (or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "bbox_to_anchor"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " if defines the legend's size)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "mode",
                "type_": "{\"expand\", None}"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The transform for the bounding box ("
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "bbox_to_anchor"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": "). For a value of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "None"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " (default) the Axes' "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "~matplotlib.axes.Axes.transAxes"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " transform will be used."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "bbox_transform",
                "type_": "None or `matplotlib.transforms.Transform`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The legend's title. Default is no title ("
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "None"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ")."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "title",
                "type_": "str or None"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The font properties of the legend's title. If None (default), the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "title_fontsize"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " argument will be used if present; if "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "title_fontsize"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is also None, the current "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "legend.title_fontsize"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " will be used."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "title_fontproperties",
                "type_": "None or `matplotlib.font_manager.FontProperties` or dict"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The font size of the legend's title. Note: This cannot be combined with "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "title_fontproperties"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ". If you want to set the fontsize alongside other font properties, use the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "size"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " parameter in "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "title_fontproperties"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "title_fontsize",
                "type_": "int or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'}, default: :rc:`legend.title_fontsize`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The fractional whitespace inside the legend border, in font-size units."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "borderpad",
                "type_": "float, default: :rc:`legend.borderpad`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The vertical space between the legend entries, in font-size units."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "labelspacing",
                "type_": "float, default: :rc:`legend.labelspacing`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The length of the legend handles, in font-size units."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "handlelength",
                "type_": "float, default: :rc:`legend.handlelength`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The height of the legend handles, in font-size units."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "handleheight",
                "type_": "float, default: :rc:`legend.handleheight`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The pad between the legend handle and text, in font-size units."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "handletextpad",
                "type_": "float, default: :rc:`legend.handletextpad`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The pad between the axes and legend border, in font-size units."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "borderaxespad",
                "type_": "float, default: :rc:`legend.borderaxespad`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The spacing between columns, in font-size units."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "columnspacing",
                "type_": "float, default: :rc:`legend.columnspacing`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The custom dictionary mapping instances or types to a legend handler. This "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "handler_map"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " updates the default handler map found at "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.legend.Legend.get_legend_handler_map",
                              "version": "3.5.1"
                            },
                            "value": "matplotlib.legend.Legend.get_legend_handler_map"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "handler_map",
                "type_": "dict or None"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A list of Artists (lines, patches) to be added to the legend. Use this together with "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "labels"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ", if you need full control on what is shown in the legend and the automatic mechanism described above is not sufficient."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The length of handles and labels should be the same in this case. If they are not, they are truncated to the smaller length."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "handles",
                "type_": "sequence of `.Artist`, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A list of labels to show next to the artists. Use this together with "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "handles"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ", if you need full control on what is shown in the legend and the automatic mechanism described above is not sufficient."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "labels",
                "type_": "list of str, optional"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [],
                "param": "",
                "type_": "`~matplotlib.legend.Legend`"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Place a legend on the Axes."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [
      {
        "data": {
          "argument": "gallery/text_labels_and_annotations/legend.py",
          "content": "",
          "name": "plot",
          "options": []
        },
        "type": "BlockDirective"
      }
    ],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/matplotlib/pyplot.py",
  "item_line": 2653,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Other Parameters",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": ".Figure.legend",
          "version": "current-version"
        },
        "value": ".Figure.legend"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "legend(*args, **kwargs)"
  }
}