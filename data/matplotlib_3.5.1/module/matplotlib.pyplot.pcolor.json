{
  "aliases": [
    "matplotlib.pyplot.pcolor"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Call signature::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "pcolor([X, Y,] C, **kwargs)"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": {
                    "value": "X"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "Y"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " can be used to specify the corners of the quadrilaterals."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "",
            "content": "``pcolor()`` can be very slow for large arrays. In most\ncases you should use the similar but much faster\n`~.Axes.pcolormesh` instead. See\n:ref:`Differences between pcolor() and pcolormesh()\n<differences-pcolor-pcolormesh>` for a discussion of the\ndifferences.",
            "name": "hint",
            "options": []
          },
          "type": "BlockDirective"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "content": {
                    "value": "Masked arrays"
                  }
                },
                "type": "Strong"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": {
                    "value": "X"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "Y"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "C"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " may be masked arrays. If either "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "C[i, j]"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", or one of the vertices surrounding "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "C[i, j]"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " ("
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "X"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "Y"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " at "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "[i, j], [i+1, j], [i, j+1], [i+1, j+1]"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ") is masked, nothing is plotted."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _axes-pcolor-grid-orientation:"
          },
          "type": "Unimplemented"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "content": {
                    "value": "Grid orientation"
                  }
                },
                "type": "Strong"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The grid orientation follows the standard matrix convention: An array "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "C"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " with shape (nrows, ncolumns) is plotted with the column number as "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "X"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " and the row number as "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "Y"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The default "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "antialiaseds"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is False if the default "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "edgecolors"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": "\\ =\"none\" is used.  This eliminates artificial lines at patch boundaries, and works regardless of the value of alpha. If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "edgecolors"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is not \"none\", then the default "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "antialiaseds"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is taken from "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "patch.antialiased"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". Stroking the edges may be preferred if "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "alpha"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is 1, but will cause artifacts otherwise."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "antialiaseds",
                "type_": "bool, default: False"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If given, all parameters also accept a string "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "s"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", which is interpreted as "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "data[s]"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " (unless this raises an exception)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "data",
                "type_": "indexable object, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Additionally, the following arguments are allowed. They are passed along to the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.collections.PolyCollection",
                              "version": "3.5.1"
                            },
                            "value": "~matplotlib.collections.PolyCollection"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " constructor:"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "**kwargs",
                "type_": ""
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array alpha: array-like or scalar or None animated: bool antialiased or aa or antialiaseds: bool or list of bools array: array-like or None capstyle: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib._enums.CapStyle",
                              "version": "3.5.1"
                            },
                            "value": ".CapStyle"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " or {'butt', 'projecting', 'round'} clim: (vmin: float, vmax: float) clip_box: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.transforms.Bbox",
                              "version": "3.5.1"
                            },
                            "value": ".Bbox"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " clip_on: bool clip_path: Patch or (Path, Transform) or None cmap: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.colors.Colormap",
                              "version": "3.5.1"
                            },
                            "value": ".Colormap"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " or str or None color: color or list of rgba tuples edgecolor or ec or edgecolors: color or list of colors or 'face' facecolor or facecolors or fc: color or list of colors figure: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.figure.Figure",
                              "version": "3.5.1"
                            },
                            "value": ".Figure"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " gid: str hatch: {'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'} in_layout: bool joinstyle: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib._enums.JoinStyle",
                              "version": "3.5.1"
                            },
                            "value": ".JoinStyle"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " or {'miter', 'round', 'bevel'} label: object linestyle or dashes or linestyles or ls: str or tuple or list thereof linewidth or linewidths or lw: float or list of floats norm: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.colors.Normalize",
                              "version": "3.5.1"
                            },
                            "value": ".Normalize"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " or None offset_transform: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.transforms.Transform",
                              "version": "3.5.1"
                            },
                            "value": ".Transform"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " offsets: (N, 2) or (2,) array-like path_effects: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.patheffects.AbstractPathEffect",
                              "version": "3.5.1"
                            },
                            "value": ".AbstractPathEffect"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " paths: list of array-like picker: None or bool or float or callable pickradius: float rasterized: bool sizes: ndarray or None sketch_params: (scale: float, length: float, randomness: float) snap: bool or None transform: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.transforms.Transform",
                              "version": "3.5.1"
                            },
                            "value": ".Transform"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " url: str urls: list of str or None verts: list of array-like verts_and_codes: unknown visible: bool zorder: float"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "Properties:",
                "type_": ""
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The color-mapped values."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "C",
                "type_": "2D array-like"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The coordinates of the corners of quadrilaterals of a pcolormesh::      "
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "value": "(X[i+1, j], Y[i+1, j])       (X[i+1, j+1], Y[i+1, j+1])\n                      +-----+\n                      |     |\n                      +-----+\n    (X[i, j], Y[i, j])       (X[i, j+1], Y[i, j+1])"
                    },
                    "type": "BlockVerbatim"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Note that the column index corresponds to the x-coordinate, and the row index corresponds to y. For details, see the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "Notes <axes-pcolormesh-grid-orientation>"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " section below."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "shading='flat'"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " the dimensions of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "X"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "Y"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " should be one greater than those of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "C"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ", and the quadrilateral is colored due to the value at "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "C[i, j]"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ".  If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "X"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ", "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "Y"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "C"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " have equal dimensions, a warning will be raised and the last row and column of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "C"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " will be ignored."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "shading='nearest'"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", the dimensions of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "X"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "Y"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " should be the same as those of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "C"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " (if not, a ValueError will be raised). The color "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "C[i, j]"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " will be centered on "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "(X[i, j], Y[i, j])"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "X"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " and/or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "Y"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " are 1-D arrays or column vectors they will be expanded as needed into the appropriate 2D arrays, making a rectangular grid."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "X, Y",
                "type_": "array-like, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The fill style for the quadrilateral. Possible values:"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "'flat': A solid color is used for each quad. The color of the   quad (i, j), (i+1, j), (i, j+1), (i+1, j+1) is given by   "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": [
                                        "C[i, j]"
                                      ]
                                    },
                                    "type": "Verbatim"
                                  },
                                  {
                                    "data": {
                                      "value": ". The dimensions of "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "X"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": " and "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "Y"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": " should be   one greater than those of "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "C"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": "; if they are the same as "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "C"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": ",   then a deprecation warning is raised, and the last row   and column of "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "C"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": " are dropped."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "'nearest': Each grid point will have a color centered on it,   extending halfway between the adjacent grid centers.  The   dimensions of "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "X"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": " and "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "Y"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": " must be the same as "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "C"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": "."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "'auto': Choose 'flat' if dimensions of "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "X"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": " and "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "Y"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": " are one   larger than "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": {
                                        "value": "C"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": ".  Choose 'nearest' if dimensions are the same."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "BulletList"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "See "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "/gallery/images_contours_and_fields/pcolormesh_grids"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " for more description."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "shading",
                "type_": "{'flat', 'nearest', 'auto'}, default: :rc:`pcolor.shading`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A Colormap instance or registered colormap name. The colormap maps the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "C"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " values to colors."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "cmap",
                "type_": "str or `~matplotlib.colors.Colormap`, default: :rc:`image.cmap`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The Normalize instance scales the data values to the canonical colormap range [0, 1] for mapping to colors. By default, the data range is mapped to the colorbar range using linear scaling."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "norm",
                "type_": "`~matplotlib.colors.Normalize`, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The colorbar range. If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "None"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ", suitable min/max values are automatically chosen by the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.colors.Normalize",
                              "version": "3.5.1"
                            },
                            "value": ".Normalize"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " instance (defaults to the respective min/max values of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "C"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " in case of the default linear scaling). It is an error to use "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "vmin"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": "/"
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "vmax"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " when "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "norm"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is given."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "vmin, vmax",
                "type_": "float, default: None"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The color of the edges. Defaults to 'none'. Possible values:"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "'none' or '': No edge."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": {
                                        "value": "None"
                                      }
                                    },
                                    "type": "Emph"
                                  },
                                  {
                                    "data": {
                                      "value": ": "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": [
                                        "patch.edgecolor"
                                      ]
                                    },
                                    "type": "Verbatim"
                                  },
                                  {
                                    "data": {
                                      "value": " will be used. Note that currently   "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": [
                                        "patch.force_edgecolor"
                                      ]
                                    },
                                    "type": "Verbatim"
                                  },
                                  {
                                    "data": {
                                      "value": " has to be True for this to work."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "'face': Use the adjacent face color."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "A color or sequence of colors will set the edge color."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "BulletList"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The singular form "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "edgecolor"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " works as an alias."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "edgecolors",
                "type_": "{'none', None, 'face', color, color sequence}, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The alpha blending value of the face color, between 0 (transparent) and 1 (opaque). Note: The edgecolor is currently not affected by this."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "alpha",
                "type_": "float, default: None"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Whether to snap the mesh to pixel boundaries."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "snap",
                "type_": "bool, default: False"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [],
                "param": "",
                "type_": "`matplotlib.collections.Collection`"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Create a pseudocolor plot with a non-regular rectangular grid."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/matplotlib/pyplot.py",
  "item_line": 2700,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Other Parameters",
    "See Also",
    "Notes"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "for an explanation of the differences between pcolor and pcolormesh."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "matplotlib",
          "path": "matplotlib.pyplot.pcolormesh",
          "version": "3.5.1"
        },
        "value": "pcolormesh"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "If "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": {
                  "value": "X"
                }
              },
              "type": "Emph"
            },
            {
              "data": {
                "value": " and "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": {
                  "value": "Y"
                }
              },
              "type": "Emph"
            },
            {
              "data": {
                "value": " are each equidistant, "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "~.Axes.imshow"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": " can be a faster alternative."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "matplotlib",
          "path": "matplotlib.pyplot.imshow",
          "version": "3.5.1"
        },
        "value": "imshow"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "pcolor(*args, shading=None, alpha=None, norm=None, cmap=None, vmin=None, vmax=None, data=None, **kwargs)"
  }
}