{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Evenly spaced strictly increasing arrays to make a grid.  If 2D, all rows of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "x"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " must be equal and all columns of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "y"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " must be equal; i.e., they must be as if generated by "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "np.meshgrid(x_1d, y_1d)"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "x, y",
            "type_": "1D/2D arrays"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": {
                          "value": "x"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "y"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": "-velocities. The number of rows and columns must match the length of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "y"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "x"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": ", respectively."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "u, v",
            "type_": "2D arrays"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Controls the closeness of streamlines. When "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "density = 1"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", the domain is divided into a 30x30 grid. "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "density"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " linearly scales this grid. Each cell in the grid can have, at most, one traversing streamline. For different densities in each direction, use a tuple (density_x, density_y)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "density",
            "type_": "float or (float, float)"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The width of the stream lines. With a 2D array the line width can be varied across the grid. The array must have the same shape as "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "u"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "v"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "linewidth",
            "type_": "float or 2D array"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The streamline color. If given an array, its values are converted to colors using "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "cmap"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "norm"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": ".  The array must have the same shape as "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "u"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "v"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "color",
            "type_": "color or 2D array"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Colormap used to plot streamlines and arrows. This is only used if "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "color"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is an array."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "cmap",
            "type_": "`~matplotlib.colors.Colormap`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Normalize object used to scale luminance data to 0, 1. If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "None"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", stretch (min, max) to (0, 1). This is only used if "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "color"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is an array."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "norm",
            "type_": "`~matplotlib.colors.Normalize`"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Scaling factor for the arrow size."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "arrowsize",
            "type_": "float"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Arrow style specification. See "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "matplotlib",
                          "path": "matplotlib.patches.FancyArrowPatch",
                          "version": "3.5.1"
                        },
                        "value": "~matplotlib.patches.FancyArrowPatch"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "arrowstyle",
            "type_": "str"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Minimum length of streamline in axes coordinates."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "minlength",
            "type_": "float"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Coordinates of starting points for the streamlines in data coordinates (the same coordinates as the "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "x"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "y"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " arrays)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "start_points",
            "type_": "Nx2 array"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The zorder of the stream lines and arrows. Artists with lower zorder values are drawn first."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "zorder",
            "type_": "int"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Maximum length of streamline in axes coordinates."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "maxlength",
            "type_": "float"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Integrate the streamline in forward, backward or both directions."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "integration_direction",
            "type_": "{'forward', 'backward', 'both'}, default: 'both'"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If given, the following parameters also accept a string "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "s"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", which is interpreted as "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "data[s]"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " (unless this raises an exception):"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": {
                          "value": "x"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": ", "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "y"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": ", "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "u"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": ", "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "v"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": ", "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "start_points"
                        }
                      },
                      "type": "Emph"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "data",
            "type_": "indexable object, optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Container object with attributes"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "lines"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": ": "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "exists": true,
                                  "kind": "module",
                                  "reference": {
                                    "kind": "module",
                                    "module": "matplotlib",
                                    "path": "matplotlib.collections.LineCollection",
                                    "version": "3.5.1"
                                  },
                                  "value": ".LineCollection"
                                },
                                "type": "Link"
                              },
                              {
                                "data": {
                                  "value": " of streamlines"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "arrows"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": ": "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "exists": true,
                                  "kind": "module",
                                  "reference": {
                                    "kind": "module",
                                    "module": "matplotlib",
                                    "path": "matplotlib.collections.PatchCollection",
                                    "version": "3.5.1"
                                  },
                                  "value": ".PatchCollection"
                                },
                                "type": "Link"
                              },
                              {
                                "data": {
                                  "value": " containing "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "exists": true,
                                  "kind": "module",
                                  "reference": {
                                    "kind": "module",
                                    "module": "matplotlib",
                                    "path": "matplotlib.patches.FancyArrowPatch",
                                    "version": "3.5.1"
                                  },
                                  "value": ".FancyArrowPatch"
                                },
                                "type": "Link"
                              },
                              {
                                "data": {
                                  "value": "   objects representing the arrows half-way along stream lines."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "This container will probably change in the future to allow changes to the colormap, alpha, etc. for both lines and arrows, but these changes should be backward compatible."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "StreamplotSet"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Draw streamlines of a vector flow."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "matplotlib.pyplot.streamplot"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/matplotlib/pyplot.py",
  "item_line": 2890,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "streamplot(x, y, u, v, density=1, linewidth=None, color=None, cmap=None, norm=None, arrowsize=1, arrowstyle='-|>', minlength=0.1, transform=None, zorder=None, start_points=None, maxlength=4.0, integration_direction='both', *, data=None)"
  }
}