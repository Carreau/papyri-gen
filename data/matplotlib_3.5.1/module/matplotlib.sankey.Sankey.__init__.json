{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The optional arguments listed below are applied to all subdiagrams so that there is consistent alignment and formatting."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "In order to draw a complex Sankey diagram, create an instance of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Sankey"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " by calling it without any kwargs::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "sankey = Sankey()"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Then add simple Sankey sub-diagrams::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "sankey.add() # 1\nsankey.add() # 2\n#...\nsankey.add() # n"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Finally, create the full diagram::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "sankey.finish()"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Or, instead, simply daisy-chain those calls::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "Sankey().add().add...  .add().finish()"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Axes onto which the data should be plotted.  If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "ax"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " isn't provided, new Axes will be created."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "ax",
                "type_": "`~.axes.Axes`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Scaling factor for the flows.  "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "scale"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " sizes the width of the paths in order to maintain proper layout.  The same scale is applied to all subdiagrams.  The value should be chosen such that the product of the scale and the sum of the inputs is approximately 1.0 (and the product of the scale and the sum of the outputs is approximately -1.0)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "scale",
                "type_": "float"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The physical unit associated with the flow quantities.  If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "unit"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is None, then none of the quantities are labeled."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "unit",
                "type_": "str"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A Python number formatting string or callable used to label the flows with their quantities (i.e., a number times a unit, where the unit is given). If a format string is given, the label will be "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "format % quantity"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". If a callable is given, it will be called with "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "quantity"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " as an argument."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "format",
                "type_": "str or callable"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Space between paths that break in/break away to/from the top or bottom."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "gap",
                "type_": "float"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Inner radius of the vertical paths."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "radius",
                "type_": "float"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Size of the shoulders of output arrows."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "shoulder",
                "type_": "float"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Text offset (from the dip or tip of the arrow)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "offset",
                "type_": "float"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Angle, in degrees, of the arrow heads (and negative of the angle of the tails)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "head_angle",
                "type_": "float"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Minimum space between Sankey outlines and the edge of the plot area."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "margin",
                "type_": "float"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Acceptable maximum of the magnitude of the sum of flows.  The magnitude of the sum of connected flows cannot be greater than "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "tolerance"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "tolerance",
                "type_": "float"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Any additional keyword arguments will be passed to "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "add"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", which will create the first subdiagram."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "**kwargs",
                "type_": ""
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Create a new Sankey instance."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "matplotlib.sankey.Sankey.__init__"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "argument": "gallery/specialty_plots/sankey_basics.py",
          "content": "",
          "name": "plot",
          "options": []
        },
        "type": "BlockDirective"
      }
    ],
    "title": null
  },
  "item_file": "/matplotlib/sankey.py",
  "item_line": 42,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Other Parameters",
    "See Also",
    "Examples"
  ],
  "references": null,
  "refs": [
    "Sankey.add",
    "Sankey.finish"
  ],
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "Sankey.add",
        "ref": "matplotlib.sankey.Sankey.add"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "Sankey.finish",
        "ref": "matplotlib.sankey.Sankey.finish"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "__init__(self, ax=None, scale=1.0, unit='', format='%G', gap=0.25, radius=0.1, shoulder=0.03, offset=0.15, head_angle=100, margin=0.4, tolerance=1e-06, **kwargs)"
  }
}