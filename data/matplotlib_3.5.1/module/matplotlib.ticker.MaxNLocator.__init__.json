{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Maximum number of intervals; one less than max number of ticks.  If the string 'auto', the number of bins will be automatically determined based on the length of the axis."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "nbins",
            "type_": "int or 'auto', default: 10"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Sequence of nice numbers starting with 1 and ending with 10; e.g., [1, 2, 4, 5, 10], where the values are acceptable tick multiples.  i.e. for the example, 20, 40, 60 would be an acceptable set of ticks, as would 0.4, 0.6, 0.8, because they are multiples of 2.  However, 30, 60, 90 would not be allowed because 3 does not appear in the list of steps."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "steps",
            "type_": "array-like, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If True, ticks will take only integer values, provided at least "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "min_n_ticks"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " integers are found within the view limits."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "integer",
            "type_": "bool, default: False"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If True, autoscaling will result in a range symmetric about zero."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "symmetric",
            "type_": "bool, default: False"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Remove edge ticks -- useful for stacked or ganged plots where the upper tick of one axes overlaps with the lower tick of the axes above it, primarily when "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "axes.autolimit_mode"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " is "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "'round_numbers'"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ".  If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "prune=='lower'"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", the smallest tick will be removed.  If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "prune == 'upper'"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", the largest tick will be removed.  If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "prune == 'both'"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", the largest and smallest ticks will be removed.  If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "prune"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " is "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "None"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": ", no ticks will be removed."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "prune",
            "type_": "{'lower', 'upper', 'both', None}, default: None"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Relax "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "nbins"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "integer"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " constraints if necessary to obtain this minimum number of ticks."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "min_n_ticks",
            "type_": "int, default: 2"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "matplotlib.pyplot.MaxNLocator.__init__"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/matplotlib/ticker.py",
  "item_line": 1945,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Parameters"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "__init__(self, nbins=None, **kwargs)"
  }
}