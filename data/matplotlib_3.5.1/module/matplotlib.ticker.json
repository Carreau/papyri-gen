{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "To remove in the future \u2013\u2013 matplotlib.ticker"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "matplotlib.ticker"
  ],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "This module contains classes for configuring tick locating and formatting. Generic tick locators and formatters are provided, as well as domain specific custom ones."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Although the locators know nothing about major or minor ticks, they are used by the Axis class to support major and minor tick locating and formatting."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": "Tick locating and formatting"
    },
    {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The Locator class is the base class for all tick locators. The locators handle autoscaling of the view limits based on the data limits, and the choosing of tick locations. A useful semi-automatic tick locator is "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.MultipleLocator",
                    "version": "3.5.1"
                  },
                  "value": "MultipleLocator"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ". It is initialized with a base, e.g., 10, and it picks axis limits and ticks that are multiples of that base."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The Locator subclasses defined here are:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "======================= ======================================================= "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.AutoLocator",
                    "version": "3.5.1"
                  },
                  "value": "AutoLocator"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "           "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.MaxNLocator",
                    "version": "3.5.1"
                  },
                  "value": "MaxNLocator"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " with simple defaults. This is the default                         tick locator for most plotting. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.MaxNLocator",
                    "version": "3.5.1"
                  },
                  "value": "MaxNLocator"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "           Finds up to a max number of intervals with ticks at                         nice locations. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.LinearLocator",
                    "version": "3.5.1"
                  },
                  "value": "LinearLocator"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "         Space ticks evenly from min to max. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.LogLocator",
                    "version": "3.5.1"
                  },
                  "value": "LogLocator"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "            Space ticks logarithmically from min to max. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.MultipleLocator",
                    "version": "3.5.1"
                  },
                  "value": "MultipleLocator"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "       Ticks and range are a multiple of base; either integer                         or float. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.FixedLocator",
                    "version": "3.5.1"
                  },
                  "value": "FixedLocator"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "          Tick locations are fixed. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.IndexLocator",
                    "version": "3.5.1"
                  },
                  "value": "IndexLocator"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "          Locator for index plots (e.g., where                         "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "x = range(len(y))"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "). "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.NullLocator",
                    "version": "3.5.1"
                  },
                  "value": "NullLocator"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "           No ticks. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.SymmetricalLogLocator",
                    "version": "3.5.1"
                  },
                  "value": "SymmetricalLogLocator"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " Locator for use with with the symlog norm; works like                         "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.LogLocator",
                    "version": "3.5.1"
                  },
                  "value": "LogLocator"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " for the part outside of the threshold and                         adds 0 if inside the limits. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.LogitLocator",
                    "version": "3.5.1"
                  },
                  "value": "LogitLocator"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "          Locator for logit scaling. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.AutoMinorLocator",
                    "version": "3.5.1"
                  },
                  "value": "AutoMinorLocator"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "      Locator for minor ticks when the axis is linear and the                         major ticks are uniformly spaced. Subdivides the major                         tick interval into a specified number of minor                         intervals, defaulting to 4 or 5 depending on the major                         interval. ======================= ======================================================="
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "There are a number of locators specialized for date locations - see the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    ".dates"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " module."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "You can define your own locator by deriving from Locator. You must override the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "__call__"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " method, which returns a sequence of locations, and you will probably want to override the autoscale method to set the view limits from the data limits."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "If you want to override the default locator, use one of the above or a custom locator and pass it to the x or y axis instance. The relevant methods are::    "
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "ax.xaxis.set_major_locator(xmajor_locator)\nax.xaxis.set_minor_locator(xminor_locator)\nax.yaxis.set_major_locator(ymajor_locator)\nax.yaxis.set_minor_locator(yminor_locator)"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The default minor locator is "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.NullLocator",
                    "version": "3.5.1"
                  },
                  "value": "NullLocator"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ", i.e., no minor ticks on by default."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "inline": [
                  {
                    "data": {
                      "value": "`Locator` instances should not be used with more than one `~matplotlib.axis.Axis` or `~matplotlib.axes.Axes`. So instead of : : locator = MultipleLocator ( 5) ax.xaxis.set_major_locator ( locator) ax2.xaxis.set_major_locator ( locator) do the following instead : : ax.xaxis.set_major_locator ( MultipleLocator ( 5)) ax2.xaxis.set_major_locator ( MultipleLocator ( 5)) "
                    },
                    "type": "Words"
                  }
                ],
                "inner": []
              }
            ],
            "kind": "note",
            "title": ""
          },
          "type": "Admonition"
        }
      ],
      "title": "Tick locating"
    },
    {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Tick formatting is controlled by classes derived from Formatter. The formatter operates on a single tick value and returns a string to the axis."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "========================= ===================================================== "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.NullFormatter",
                    "version": "3.5.1"
                  },
                  "value": "NullFormatter"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "           No labels on the ticks. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.FixedFormatter",
                    "version": "3.5.1"
                  },
                  "value": "FixedFormatter"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "          Set the strings manually for the labels. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.FuncFormatter",
                    "version": "3.5.1"
                  },
                  "value": "FuncFormatter"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "           User defined function sets the labels. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.StrMethodFormatter",
                    "version": "3.5.1"
                  },
                  "value": "StrMethodFormatter"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "      Use string "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "format"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " method. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.FormatStrFormatter",
                    "version": "3.5.1"
                  },
                  "value": "FormatStrFormatter"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "      Use an old-style sprintf format string. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.ScalarFormatter",
                    "version": "3.5.1"
                  },
                  "value": "ScalarFormatter"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "         Default formatter for scalars: autopick the format                           string. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.LogFormatter",
                    "version": "3.5.1"
                  },
                  "value": "LogFormatter"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "            Formatter for log axes. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.LogFormatterExponent",
                    "version": "3.5.1"
                  },
                  "value": "LogFormatterExponent"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "    Format values for log axis using                           "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "exponent = log_base(value)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.LogFormatterMathtext",
                    "version": "3.5.1"
                  },
                  "value": "LogFormatterMathtext"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "    Format values for log axis using                           "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "exponent = log_base(value)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " using Math text. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.LogFormatterSciNotation",
                    "version": "3.5.1"
                  },
                  "value": "LogFormatterSciNotation"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " Format values for log axis using scientific notation. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.LogitFormatter",
                    "version": "3.5.1"
                  },
                  "value": "LogitFormatter"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "          Probability formatter. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.EngFormatter",
                    "version": "3.5.1"
                  },
                  "value": "EngFormatter"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "            Format labels in engineering notation. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.PercentFormatter",
                    "version": "3.5.1"
                  },
                  "value": "PercentFormatter"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "        Format labels as a percentage. ========================= ====================================================="
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "You can derive your own formatter from the Formatter base class by simply overriding the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "__call__"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " method. The formatter class has access to the axis view and data limits."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "To control the major and minor tick label formats, use one of the following methods::    "
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "ax.xaxis.set_major_formatter(xmajor_formatter)\nax.xaxis.set_minor_formatter(xminor_formatter)\nax.yaxis.set_major_formatter(ymajor_formatter)\nax.yaxis.set_minor_formatter(yminor_formatter)"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "In addition to a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.Formatter",
                    "version": "3.5.1"
                  },
                  "value": ".Formatter"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " instance, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.axis.Axis.set_major_formatter",
                    "version": "3.5.1"
                  },
                  "value": "~.Axis.set_major_formatter"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.axis.Axis.set_minor_formatter",
                    "version": "3.5.1"
                  },
                  "value": "~.Axis.set_minor_formatter"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " also accept a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "str"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " or function.  "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "str"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " input will be internally replaced with an autogenerated "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.StrMethodFormatter",
                    "version": "3.5.1"
                  },
                  "value": ".StrMethodFormatter"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " with the input "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "str"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". For function input, a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.ticker.FuncFormatter",
                    "version": "3.5.1"
                  },
                  "value": ".FuncFormatter"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " with the input function will be generated and used."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "See "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "/gallery/ticks/major_minor_demo"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for an example of setting major and minor ticks. See the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "matplotlib.dates"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " module for more information and examples of using date locators and formatters."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": "Tick formatting"
    }
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/matplotlib/ticker.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": null
  }
}