{
  "aliases": [
    "matplotlib.image.Bbox"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "A mutable bounding box."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "example_section_data": {
    "children": [
      {
        "data": {
          "children": [
            {
              "data": {
                "content": {
                  "value": "Create from known bounds"
                }
              },
              "type": "Strong"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "The default constructor takes the boundary \"points\" "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "[[xmin, ymin],\n[xmax, ymax]]"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": "."
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> Bbox([[1, 1], [3, 7]])\nBbox([[1.0, 1.0], [3.0, 7.0]])"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "Alternatively, a Bbox can be created from the flattened points array, the so-called \"extents\" "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "(xmin, ymin, xmax, ymax)"
                ]
              },
              "type": "Verbatim"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> Bbox.from_extents(1, 1, 3, 7)\nBbox([[1.0, 1.0], [3.0, 7.0]])"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "or from the \"bounds\" "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "(xmin, ymin, width, height)"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": "."
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> Bbox.from_bounds(1, 1, 2, 6)\nBbox([[1.0, 1.0], [3.0, 7.0]])"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "content": {
                  "value": "Create from collections of points"
                }
              },
              "type": "Strong"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "The \"empty\" object for accumulating Bboxs is the null bbox, which is a stand-in for the empty set."
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> Bbox.null()\nBbox([[inf, inf], [-inf, -inf]])"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "Adding points to the null bbox will give you the bbox of those points."
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> box = Bbox.null()\n>>> box.update_from_data_xy([[1, 1]])\n>>> box\nBbox([[1.0, 1.0], [1.0, 1.0]])\n>>> box.update_from_data_xy([[2, 3], [3, 2]], ignore=False)\n>>> box\nBbox([[1.0, 1.0], [3.0, 3.0]])"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "Setting "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "ignore=True"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " is equivalent to starting over from a null bbox."
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> box.update_from_data_xy([[1, 1]], ignore=True)\n>>> box\nBbox([[1.0, 1.0], [1.0, 1.0]])"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [],
          "kind": "warning",
          "title": ""
        },
        "type": "Admonition"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "children": [
                  {
                    "data": {
                      "value": "It is recommended to always specify "
                    },
                    "type": "Words"
                  },
                  {
                    "data": {
                      "value": [
                        "ignore"
                      ]
                    },
                    "type": "Verbatim"
                  },
                  {
                    "data": {
                      "value": " explicitly.  If not, the     default value of "
                    },
                    "type": "Words"
                  },
                  {
                    "data": {
                      "value": [
                        "ignore"
                      ]
                    },
                    "type": "Verbatim"
                  },
                  {
                    "data": {
                      "value": " can be changed at any time by code with     access to your Bbox, for example using the method "
                    },
                    "type": "Words"
                  },
                  {
                    "data": {
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "matplotlib",
                        "path": "matplotlib.transforms.Bbox.ignore",
                        "version": "3.5.1"
                      },
                      "value": "~.Bbox.ignore"
                    },
                    "type": "Link"
                  },
                  {
                    "data": {
                      "value": "."
                    },
                    "type": "Words"
                  }
                ]
              },
              "type": "Paragraph"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "content": {
                  "value": "Properties of the ``null`` bbox"
                }
              },
              "type": "Strong"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "children": [],
          "kind": "note",
          "title": ""
        },
        "type": "Admonition"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "children": [
                  {
                    "data": {
                      "value": "The current behavior of "
                    },
                    "type": "Words"
                  },
                  {
                    "data": {
                      "domain": null,
                      "role": null,
                      "value": "Bbox.null()"
                    },
                    "type": "Directive"
                  },
                  {
                    "data": {
                      "value": " may be surprising as it does     not have all of the properties of the \"empty set\", and as such does     not behave like a \"zero\" object in the mathematical sense. We may     change that in the future (with a deprecation period)."
                    },
                    "type": "Words"
                  }
                ]
              },
              "type": "Paragraph"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "The null bbox is the identity for intersections"
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> Bbox.intersection(Bbox([[1, 1], [3, 7]]), Bbox.null())\nBbox([[1.0, 1.0], [3.0, 7.0]])"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "except with itself, where it returns the full space."
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> Bbox.intersection(Bbox.null(), Bbox.null())\nBbox([[-inf, -inf], [inf, inf]])"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "A union containing null will always return the full space (not the other set!)"
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> Bbox.union([Bbox([[0, 0], [0, 0]]), Bbox.null()])\nBbox([[-inf, -inf], [inf, inf]])"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      }
    ],
    "title": null
  },
  "item_file": "/matplotlib/transforms.py",
  "item_line": 686,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}