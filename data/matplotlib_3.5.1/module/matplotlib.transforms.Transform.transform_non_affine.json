{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": [
                    "transform(values)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is always equivalent to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "transform_affine(transform_non_affine(values))"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "In non-affine transformations, this is generally equivalent to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "transform(values)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ".  In affine transformations, this is always a no-op."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The input values as NumPy array of length "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "input_dims"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " or shape (N x "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "input_dims"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ")."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "values",
            "type_": "array"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The output values as NumPy array of length "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "input_dims"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " or shape (N x "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "output_dims"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "), depending on the input."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "array"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Apply only the non-affine part of this transformation."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "matplotlib.transforms.Transform.transform_non_affine"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/matplotlib/transforms.py",
  "item_line": 1543,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "transform_non_affine(self, values)"
  }
}