{
  "aliases": [
    "matplotlib.tri.TriAnalyzer._get_compressed_triangulation"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Returns minimal-length triangles array ("
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "compressed_triangles"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ") and coordinates arrays ("
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "compressed_x"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "compressed_y"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ") that can still describe the unmasked triangles of the encapsulated triangulation."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "the returned compressed triangulation triangles"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "compressed_triangles",
                "type_": "array-like"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "the returned compressed triangulation 1st coordinate"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "compressed_x",
                "type_": "array-like"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "the returned compressed triangulation 2nd coordinate"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "compressed_y",
                "type_": "array-like"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "renumbering table to translate the triangle numbers from the encapsulated triangulation into the new (compressed) renumbering. -1 for masked triangles (deleted from "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "compressed_triangles"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ")."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "tri_renum",
                "type_": "int array"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "renumbering table to translate the point numbers from the encapsulated triangulation into the new (compressed) renumbering. -1 for unused points (i.e. those deleted from "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "compressed_x"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "compressed_y"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ")."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "node_renum",
                "type_": "int array"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Compress (if masked) the encapsulated triangulation."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "title": null
  },
  "item_file": "/matplotlib/tri/tritools.py",
  "item_line": 192,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "_get_compressed_triangulation(self)"
  }
}