{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Returns a mask "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "new_mask"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " which allows to clean the encapsulated triangulation from its border-located flat triangles (according to their "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "circle_ratios"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "). This mask is meant to be subsequently applied to the triangulation using "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.tri.triangulation.Triangulation.set_mask",
                    "version": "3.5.1"
                  },
                  "value": ".Triangulation.set_mask"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ". "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "new_mask"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " is an extension of the initial triangulation mask in the sense that an initially masked triangle will remain masked."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "new_mask"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " array is computed recursively; at each step flat triangles are removed only if they share a side with the current mesh border. Thus no new holes in the triangulated domain will be created."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The rationale behind this function is that a Delaunay triangulation - of an unstructured set of points - sometimes contains almost flat triangles at its border, leading to artifacts in plots (especially for high-resolution contouring). Masked with computed "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "new_mask"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", the encapsulated triangulation would contain no more unmasked border triangles with a circle ratio below "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "min_circle_ratio"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", thus improving the mesh quality for subsequent plots or interpolation."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Border triangles with incircle/circumcircle radii ratio r/R will be removed if r/R < "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "min_circle_ratio"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "min_circle_ratio",
                "type_": "float, default: 0.01"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If True, first, internally rescale (based on "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "scale_factors"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ") so that the (unmasked) triangles fit exactly inside a unit square mesh.  This rescaling accounts for the difference of scale which might exist between the 2 axis."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "rescale",
                "type_": "bool, default: True"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Mask to apply to encapsulated triangulation. All the initially masked triangles remain masked in the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "new_mask"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "",
                "type_": "array of bool"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Eliminate excessively flat border triangles from the triangulation."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "matplotlib.tri.TriAnalyzer.get_flat_tri_mask"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/matplotlib/tri/tritools.py",
  "item_line": 117,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "get_flat_tri_mask(self, min_circle_ratio=0.01, rescale=True)"
  }
}