{
  "aliases": [
    "matplotlib.artist.setp"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The artist(s) whose properties are being set or queried.  When setting properties, all artists are affected; when querying the allowed values, only the first instance in the sequence is queried."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "For example, two lines can be made thicker and red with a single call:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "type": "code",
                  "value": ">>> x = arange(0, 1, 0.01)\n>>> lines = plot(x, sin(2*pi*x), x, sin(4*pi*x))\n>>> setp(lines, linewidth=2, color='r')"
                }
              ],
              "param": "obj",
              "type": "Param",
              "type_": "`.Artist` or list of `.Artist`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Where "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "setp"
                    },
                    {
                      "type": "text",
                      "value": " writes its output when asked to list allowed values."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "type": "code",
                  "value": ">>> with open('output.log') as file:\n...     setp(line, file=file)"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The default, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "None"
                    },
                    {
                      "type": "text",
                      "value": ", means "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "sys.stdout"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "file",
              "type": "Param",
              "type_": "file-like, default: `sys.stdout`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The properties to set.  The following combinations are supported:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "Set the linestyle of a line to be dashed:"
                            }
                          ],
                          "type": "paragraph"
                        },
                        {
                          "type": "code",
                          "value": ">>> line, = plot([1, 2, 3])\n>>> setp(line, linestyle='--')"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "Set multiple properties at once:"
                            }
                          ],
                          "type": "paragraph"
                        },
                        {
                          "type": "code",
                          "value": ">>> setp(line, linewidth=2, color='r')"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "List allowed values for a line's linestyle:"
                            }
                          ],
                          "type": "paragraph"
                        },
                        {
                          "type": "code",
                          "value": ">>> setp(line, 'linestyle')\nlinestyle: {'-', '--', '-.', ':', '', (offset, on-off-seq), ...}"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "List all properties that can be set, and their allowed values:"
                            }
                          ],
                          "type": "paragraph"
                        },
                        {
                          "type": "code",
                          "value": ">>> setp(line)\nagg_filter: a filter function, ...\n[long output listing omitted]"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                },
                {
                  "children": [
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "setp"
                    },
                    {
                      "type": "text",
                      "value": " also supports MATLAB style string/value pairs.  For example, the following are equivalent:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "type": "code",
                  "value": ">>> setp(lines, 'linewidth', 2, 'color', 'r')  # MATLAB style\n>>> setp(lines, linewidth=2, color='r')        # Python style"
                }
              ],
              "param": "*args, **kwargs",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Set one or more properties on an "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".Artist"
            },
            {
              "type": "text",
              "value": ", or list allowed values."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/artist.py",
  "item_line": 1720,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "getp",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "getp"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(obj, *args, file=None, **kwargs)"
  },
  "type": "DocBlob"
}