{
  "aliases": [
    "matplotlib.axis.Axis.set_ticklabels"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "args": "Discouraged",
          "children": [],
          "name": "admonition",
          "options": {},
          "type": "mystDirective",
          "value": "The use of this method is discouraged, because of the dependency\non tick positions. In most cases, you'll want to use\n``set_[x/y]ticks(positions, labels)`` instead.\n\nIf you are using this method, you should always fix the tick\npositions before, e.g. by using `.Axis.set_ticks` or by explicitly\nsetting a `~.ticker.FixedLocator`. Otherwise, ticks are free to\nmove and the labels may end up in unexpected positions."
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Texts for labeling each tick location in the sequence set by "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Axis.set_ticks"
                    },
                    {
                      "type": "text",
                      "value": "; the number of labels must match the number of locations."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "ticklabels",
              "type": "Param",
              "type_": "sequence of str or of `.Text`\\s"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, set minor ticks instead of major ticks."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "minor",
              "type": "Param",
              "type_": "bool"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Text properties."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "**kwargs",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "For each tick, includes "
                    },
                    {
                      "type": "inlineCode",
                      "value": "tick.label1"
                    },
                    {
                      "type": "text",
                      "value": " if it is visible, then "
                    },
                    {
                      "type": "inlineCode",
                      "value": "tick.label2"
                    },
                    {
                      "type": "text",
                      "value": " if it is visible, in that order."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "list of `.Text`\\s"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "[*Discouraged*] Set the text values of the tick labels."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/axis.py",
  "item_line": 1847,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self, ticklabels, *, minor=False, **kwargs)"
  },
  "type": "DocBlob"
}