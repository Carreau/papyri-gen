{
  "aliases": [
    "matplotlib.backend_bases.RendererBase._iter_collection"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This method yields all of the path, offset and graphics context combinations to draw the path collection.  The caller should already have looped over the results of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.backend_bases.RendererBase._iter_collection_raw_paths",
                    "version": "3.6.2"
                  },
                  "value": "_iter_collection_raw_paths"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " to draw this collection."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The arguments should be the same as that passed into "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.backend_bases.RendererBase.draw_path_collection",
                    "version": "3.6.2"
                  },
                  "value": "draw_path_collection"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ", with the exception of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "path_ids"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", which is a list of arbitrary objects that the backend will use to reference one of the paths created in the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.backend_bases.RendererBase._iter_collection_raw_paths",
                    "version": "3.6.2"
                  },
                  "value": "_iter_collection_raw_paths"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " stage."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Each yielded result is of the form:     "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "xo, yo, path_id, gc, rgbFace"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "where "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "xo"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "yo"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " is an offset; "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "path_id"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " is one of the elements of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "path_ids"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": "; "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "gc"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " is a graphics context and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "rgbFace"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " is a color to use for filling the path."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Helper method (along with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.backend_bases.RendererBase._iter_collection_raw_paths",
                    "version": "3.6.2"
                  },
                  "value": "_iter_collection_raw_paths"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ") to implement "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.backend_bases.RendererBase.draw_path_collection",
                    "version": "3.6.2"
                  },
                  "value": "draw_path_collection"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " in a memory-efficient manner."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/matplotlib/backend_bases.py",
  "item_line": 370,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "_iter_collection(self, gc, path_ids, offsets, offset_trans, facecolors, edgecolors, linewidths, linestyles, antialiaseds, urls, offset_position)"
  }
}