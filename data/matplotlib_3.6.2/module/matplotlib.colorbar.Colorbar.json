{
  "aliases": [
    "matplotlib.colorbar.Colorbar"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "~.axes.Axes"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " instance in which the colorbar is drawn."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "ax",
                "type_": "`~matplotlib.axes.Axes`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A list of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.collections.LineCollection",
                              "version": "3.6.2"
                            },
                            "value": ".LineCollection"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " (empty if no lines were drawn)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "lines",
                "type_": "list"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A LineCollection (empty if "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "drawedges"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "False"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ")."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "dividers",
                "type_": "`.LineCollection`"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Typically, colorbars are created using "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": ".Figure.colorbar"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.pyplot.colorbar",
                    "version": "3.6.2"
                  },
                  "value": ".pyplot.colorbar"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " and associated with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.cm.ScalarMappable",
                    "version": "3.6.2"
                  },
                  "value": ".ScalarMappable"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "\\s (such as an "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.image.AxesImage",
                    "version": "3.6.2"
                  },
                  "value": ".AxesImage"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " generated via "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "~.axes.Axes.imshow"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": ")."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "In order to draw a colorbar not associated with other elements in the figure, e.g. when showing a colormap by itself, one can create an empty "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.cm.ScalarMappable",
                    "version": "3.6.2"
                  },
                  "value": ".ScalarMappable"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ", or directly pass "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "cmap"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "norm"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " instead of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "mappable"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.colorbar.Colorbar",
                    "version": "3.6.2"
                  },
                  "value": "Colorbar"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Useful public methods are "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "set_label"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "add_lines"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "~.axes.Axes"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " instance in which the colorbar is drawn."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "ax",
                "type_": "`~matplotlib.axes.Axes`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The mappable whose colormap and norm will be used."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "To show the under- and over- value colors, the mappable's norm should be specified as :      "
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "value": "norm = colors.Normalize(clip=False)"
                    },
                    "type": "BlockVerbatim"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "To show the colors versus index instead of on a 0-1 scale, use:      "
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "value": "norm=colors.NoNorm()"
                    },
                    "type": "BlockVerbatim"
                  }
                ],
                "param": "mappable",
                "type_": "`.ScalarMappable`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The colormap to use.  This parameter is ignored, unless "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "mappable"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is None."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "cmap",
                "type_": "`~matplotlib.colors.Colormap`, default: :rc:`image.cmap`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The normalization to use.  This parameter is ignored, unless "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "mappable"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is None."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "norm",
                "type_": "`~matplotlib.colors.Normalize`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The colorbar transparency between 0 (transparent) and 1 (opaque)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "alpha",
                "type_": "float"
              },
              {
                "desc": [],
                "param": "orientation",
                "type_": "{'vertical', 'horizontal'}"
              },
              {
                "desc": [],
                "param": "ticklocation",
                "type_": "{'auto', 'left', 'right', 'top', 'bottom'}"
              },
              {
                "desc": [],
                "param": "drawedges",
                "type_": "bool"
              },
              {
                "desc": [],
                "param": "filled",
                "type_": "bool"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Make pointed end(s) for out-of-range values (unless 'neither').  These are set for a given colormap using the colormap set_under and set_over methods."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "extend",
                "type_": "{'neither', 'both', 'min', 'max'}"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If set to "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "None"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ", both the minimum and maximum triangular colorbar extensions will have a length of 5% of the interior colorbar length (this is the default setting)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If set to 'auto', makes the triangular colorbar extensions the same lengths as the interior boxes (when "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "spacing"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is set to 'uniform') or the same lengths as the respective adjacent interior boxes (when "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "spacing"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is set to 'proportional')."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If a scalar, indicates the length of both the minimum and maximum triangular colorbar extensions as a fraction of the interior colorbar length.  A two-element sequence of fractions may also be given, indicating the lengths of the minimum and maximum colorbar extensions respectively as a fraction of the interior colorbar length."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "extendfrac",
                "type_": "{*None*, 'auto', length, lengths}"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "False"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " the minimum and maximum colorbar extensions will be triangular (the default).  If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "True"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " the extensions will be rectangular."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "extendrect",
                "type_": "bool"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "For discrete colorbars ("
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.colors.BoundaryNorm",
                              "version": "3.6.2"
                            },
                            "value": ".BoundaryNorm"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " or contours), 'uniform' gives each color the same space; 'proportional' makes the space proportional to the data interval."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "spacing",
                "type_": "{'uniform', 'proportional'}"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If None, ticks are determined automatically from the input."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "ticks",
                "type_": "None or list of ticks or Locator"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If None, "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.ticker.ScalarFormatter",
                              "version": "3.6.2"
                            },
                            "value": "~.ticker.ScalarFormatter"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is used. Format strings, e.g., "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "\"%4.2e\""
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "\"{x:.2e}\""
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", are supported. An alternative "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.ticker.Formatter",
                              "version": "3.6.2"
                            },
                            "value": "~.ticker.Formatter"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " may be given instead."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "format",
                "type_": "None or str or Formatter"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Whether to draw lines at color boundaries."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "drawedges",
                "type_": "bool"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The label on the colorbar's long axis."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "label",
                "type_": "str"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If unset, the colormap will be displayed on a 0-1 scale. If sequences, "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "values"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " must have a length 1 less than "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "boundaries"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ".  For each region delimited by adjacent entries in "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "boundaries"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ", the color mapped to the corresponding value in values will be used. Normally only useful for indexed colors (i.e. "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "norm=NoNorm()"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ") or other unusual circumstances."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "boundaries, values",
                "type_": "None or a sequence"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Draw a colorbar in an existing axes."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/matplotlib/colorbar.py",
  "item_line": 199,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Attributes",
    "Parameters"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}