{
  "aliases": [
    "matplotlib.contour.ContourSet.__init__"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Call signature      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "ContourSet(ax, levels, allsegs, [allkinds], **kwargs)"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "~.axes.Axes"
                    },
                    {
                      "type": "text",
                      "value": " object to draw on."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "ax",
              "type": "Param",
              "type_": "`~.axes.Axes`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A list of floating point numbers indicating the contour levels."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "levels",
              "type": "Param",
              "type_": "[level0, level1, ..., leveln]"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "List of all the polygon segments for all the "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "levels"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ". For contour lines "
                    },
                    {
                      "type": "inlineCode",
                      "value": "len(allsegs) == len(levels)"
                    },
                    {
                      "type": "text",
                      "value": ", and for filled contour regions "
                    },
                    {
                      "type": "inlineCode",
                      "value": "len(allsegs) = len(levels)-1"
                    },
                    {
                      "type": "text",
                      "value": ". The lists should look like       "
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "type": "code",
                  "value": "level0segs = [polygon0, polygon1, ...]\npolygon0 = [[x0, y0], [x1, y1], ...]"
                }
              ],
              "param": "allsegs",
              "type": "Param",
              "type_": "[level0segs, level1segs, ...]"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Optional list of all the polygon vertex kinds (code types), as described and used in Path. This is used to allow multiply- connected paths such as holes within filled polygons. If not "
                    },
                    {
                      "type": "inlineCode",
                      "value": "None"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "inlineCode",
                      "value": "len(allkinds) == len(allsegs)"
                    },
                    {
                      "type": "text",
                      "value": ". The lists should look like       "
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "type": "code",
                  "value": "level0kinds = [polygon0kinds, ...]\npolygon0kinds = [vertexcode0, vertexcode1, ...]"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "allkinds"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is not "
                    },
                    {
                      "type": "inlineCode",
                      "value": "None"
                    },
                    {
                      "type": "text",
                      "value": ", usually all polygons for a particular contour level are grouped together so that "
                    },
                    {
                      "type": "inlineCode",
                      "value": "level0segs = [polygon0]"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "level0kinds = [polygon0kinds]"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "allkinds",
              "type": "Param",
              "type_": "[level0kinds, level1kinds, ...], optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Keyword arguments are as described in the docstring of "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "~.Axes.contour"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "**kwargs",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Draw contour lines or filled regions, depending on whether keyword arg "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "filled"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " is "
            },
            {
              "type": "inlineCode",
              "value": "False"
            },
            {
              "type": "text",
              "value": " (default) or "
            },
            {
              "type": "inlineCode",
              "value": "True"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/contour.py",
  "item_line": 697,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self, ax, *args, levels=None, filled=False, linewidths=None, linestyles=None, hatches=(None,), alpha=None, origin=None, extent=None, cmap=None, colors=None, norm=None, vmin=None, vmax=None, extend='neither', antialiased=None, nchunk=0, locator=None, transform=None, negative_linestyles=None, **kwargs)"
  },
  "type": "DocBlob"
}