{
  "aliases": [
    "matplotlib.pyplot.FigureBase.add_subplot"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Call signatures     "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "add_subplot(nrows, ncols, index, **kwargs)\nadd_subplot(pos, **kwargs)\nadd_subplot(ax)\nadd_subplot()"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "This method also takes the keyword arguments for the returned Axes base class; except for the "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "figure"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " argument. The keyword arguments for the rectilinear base class "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "~.axes.Axes"
                    },
                    {
                      "type": "text",
                      "value": " can be found in the following table but there might also be other keyword arguments if another projection is used."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Properties: adjustable: {'box', 'datalim'} agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array and two offsets from the bottom left corner of the image alpha: scalar or None anchor: (float, float) or {'C', 'SW', 'S', 'SE', 'E', 'NE', ...} animated: bool aspect: {'auto', 'equal'} or float autoscale_on: bool autoscalex_on: unknown autoscaley_on: unknown axes_locator: Callable[[Axes, Renderer], Bbox] axisbelow: bool or 'line' box_aspect: float or None clip_box: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Bbox"
                    },
                    {
                      "type": "text",
                      "value": " clip_on: bool clip_path: Patch or (Path, Transform) or None facecolor or fc: color figure: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Figure"
                    },
                    {
                      "type": "text",
                      "value": " frame_on: bool gid: str in_layout: bool label: object mouseover: bool navigate: bool navigate_mode: unknown path_effects: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".AbstractPathEffect"
                    },
                    {
                      "type": "text",
                      "value": " picker: None or bool or float or callable position: [left, bottom, width, height] or "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "api",
                        "module": "matplotlib.transforms",
                        "path": "matplotlib.transforms:Bbox",
                        "type": "RefInfo",
                        "version": "*"
                      },
                      "type": "Link",
                      "value": "Bbox"
                    },
                    {
                      "type": "text",
                      "value": " prop_cycle: unknown rasterization_zorder: float or None rasterized: bool sketch_params: (scale: float, length: float, randomness: float) snap: bool or None title: str transform: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Transform"
                    },
                    {
                      "type": "text",
                      "value": " url: str visible: bool xbound: unknown xlabel: str xlim: (bottom: float, top: float) xmargin: float greater than -0.5 xscale: unknown xticklabels: unknown xticks: unknown ybound: unknown ylabel: str ylim: (bottom: float, top: float) ymargin: float greater than -0.5 yscale: unknown yticklabels: unknown yticks: unknown zorder: float"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "**kwargs",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The position of the subplot described by one of"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "Three integers ("
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "nrows"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": ", "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "ncols"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": ", "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "index"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": "). The subplot will   take the "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "index"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": " position on a grid with "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "nrows"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": " rows and   "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "ncols"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": " columns. "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "index"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": " starts at 1 in the upper left corner   and increases to the right.  "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "index"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": " can also be a two-tuple   specifying the ("
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "first"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": ", "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "last"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": ") indices (1-based, and including   "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "last"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": ") of the subplot, e.g., "
                            },
                            {
                              "type": "inlineCode",
                              "value": "fig.add_subplot(3, 1, (1, 2))"
                            },
                            {
                              "type": "text",
                              "value": "   makes a subplot that spans the upper 2/3 of the figure."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "A 3-digit integer. The digits are interpreted as if given   separately as three single-digit integers, i.e.   "
                            },
                            {
                              "type": "inlineCode",
                              "value": "fig.add_subplot(235)"
                            },
                            {
                              "type": "text",
                              "value": " is the same as   "
                            },
                            {
                              "type": "inlineCode",
                              "value": "fig.add_subplot(2, 3, 5)"
                            },
                            {
                              "type": "text",
                              "value": ". Note that this can only be used   if there are no more than 9 subplots."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "A "
                            },
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": ".SubplotSpec"
                            },
                            {
                              "type": "text",
                              "value": "."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "In rare circumstances, "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "matplotlib",
                        "path": "matplotlib.figure:FigureBase.add_subplot",
                        "type": "RefInfo",
                        "version": "3.6.2"
                      },
                      "type": "Link",
                      "value": ".add_subplot"
                    },
                    {
                      "type": "text",
                      "value": " may be called with a single argument, a subplot Axes instance already created in the present figure but not in the figure's list of Axes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "*args",
              "type": "Param",
              "type_": "int, (int, int, *index*), or `.SubplotSpec`, default: (1, 1, 1)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The projection type of the subplot ("
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "~.axes.Axes"
                    },
                    {
                      "type": "text",
                      "value": "). "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "str"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is the name of a custom projection, see "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "matplotlib",
                        "path": "matplotlib.projections",
                        "type": "RefInfo",
                        "version": "3.6.2"
                      },
                      "type": "Link",
                      "value": "~matplotlib.projections"
                    },
                    {
                      "type": "text",
                      "value": ". The default None results in a 'rectilinear' projection."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "projection",
              "type": "Param",
              "type_": "{None, 'aitoff', 'hammer', 'lambert', 'mollweide', 'polar', 'rectilinear', str}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, equivalent to projection='polar'."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "polar",
              "type": "Param",
              "type_": "bool, default: False"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".axes.Axes"
                    },
                    {
                      "type": "text",
                      "value": " subclass that is instantiated.  This parameter is incompatible with "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "projection"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "polar"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ".  See "
                    },
                    {
                      "type": "inlineCode",
                      "value": "axisartist_users-guide-index"
                    },
                    {
                      "type": "text",
                      "value": " for examples."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axes_class",
              "type": "Param",
              "type_": "subclass type of `~.axes.Axes`, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Share the x or y "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "matplotlib",
                        "path": "matplotlib.axis",
                        "type": "RefInfo",
                        "version": "3.6.2"
                      },
                      "type": "Link",
                      "value": "~matplotlib.axis"
                    },
                    {
                      "type": "text",
                      "value": " with sharex and/or sharey. The axis will have the same limits, ticks, and scale as the axis of the shared axes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "sharex, sharey",
              "type": "Param",
              "type_": "`~.axes.Axes`, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A label for the returned Axes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "label",
              "type": "Param",
              "type_": "str"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The Axes of the subplot. The returned Axes base class depends on the projection used. It is "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "~.axes.Axes"
                    },
                    {
                      "type": "text",
                      "value": " if rectilinear projection is used and "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".projections.polar.PolarAxes"
                    },
                    {
                      "type": "text",
                      "value": " if polar projection is used. The returned Axes is then a subplot subclass of the base class."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "`.axes.SubplotBase`, or another subclass of `~.axes.Axes`"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Add an "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "~.axes.Axes"
            },
            {
              "type": "text",
              "value": " to the figure as part of a subplot arrangement."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "::"
      },
      {
        "type": "text",
        "value": "    fig = plt.figure()"
      },
      {
        "type": "text",
        "value": "    fig.add_subplot(231)\n    ax1 = fig.add_subplot(2, 3, 1)  # equivalent but more general"
      },
      {
        "type": "text",
        "value": "    fig.add_subplot(232, frameon=False)  # subplot with no frame\n    fig.add_subplot(233, projection='polar')  # polar subplot\n    fig.add_subplot(234, sharex=ax1)  # subplot sharing x-axis with ax1\n    fig.add_subplot(235, facecolor=\"red\")  # red subplot"
      },
      {
        "type": "text",
        "value": "    ax1.remove()  # delete ax1 from the figure\n    fig.add_subplot(ax1)  # add ax1 back to the figure"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/figure.py",
  "item_line": 619,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Other Parameters",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": ".Figure.add_axes",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": ".Figure.add_axes"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": ".pyplot.subplot",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": ".pyplot.subplot"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": ".pyplot.axes",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": ".pyplot.axes"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": ".Figure.subplots",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": ".Figure.subplots"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": ".pyplot.subplots",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": ".pyplot.subplots"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self, *args, **kwargs)"
  },
  "type": "DocBlob"
}