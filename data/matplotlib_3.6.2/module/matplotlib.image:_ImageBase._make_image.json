{
  "aliases": [
    "matplotlib.image._ImageBase._make_image"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "A"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " may be a greyscale image (M, N) with a dtype of float32, float64, float128, uint16 or uint8, or an (M, N, 4) RGBA image with a dtype of float32, float64, float128, or uint8."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "If "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "unsampled"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " is True, the image will not be scaled, but an appropriate affine transformation will be returned instead."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "If "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "round_to_pixel_border"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " is True, the output image size will be rounded to the nearest pixel boundary.  This makes the images align correctly with the axes.  It should not be used if exact scaling is needed, such as for "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "FigureImage"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The RGBA image, resampled unless "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "unsampled"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is True."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "image",
              "type": "Param",
              "type_": "(M, N, 4) uint8 array"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The upper left corner where the image should be drawn, in pixel space."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x, y",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The affine transformation from image to pixel space."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "trans",
              "type": "Param",
              "type_": "Affine2D"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Normalize, rescale, and colormap the image "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "A"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " from the given "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "in_bbox"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " (in data space), to the given "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "out_bbox"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " (in pixel space) clipped to the given "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "clip_bbox"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " (also in pixel space), and magnified by the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "magnification"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " factor."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/image.py",
  "item_line": 328,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self, A, in_bbox, out_bbox, clip_bbox, magnification=1.0, unsampled=False, round_to_pixel_border=True)"
  },
  "type": "DocBlob"
}