{
  "aliases": [
    "matplotlib.layout_engine"
  ],
  "arbitrary": [
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Classes to layout elements in a "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".Figure"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Figures have a "
            },
            {
              "type": "inlineCode",
              "value": "layout_engine"
            },
            {
              "type": "text",
              "value": " property that holds a subclass of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "~.LayoutEngine"
            },
            {
              "type": "text",
              "value": " defined here (or "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "None"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " for no layout).  At draw time "
            },
            {
              "type": "inlineCode",
              "value": "figure.get_layout_engine().execute()"
            },
            {
              "type": "text",
              "value": " is called, the goal of which is usually to rearrange Axes on the figure to produce a pleasing layout. This is like a "
            },
            {
              "type": "inlineCode",
              "value": "draw"
            },
            {
              "type": "text",
              "value": " callback, however when printing we disable the layout engine for the final draw and it is useful to know the layout engine while the figure is being created, in particular to deal with colorbars."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Matplotlib supplies two layout engines, "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".TightLayoutEngine"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".ConstrainedLayoutEngine"
            },
            {
              "type": "text",
              "value": ".  Third parties can create their own layout engine by subclassing "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".LayoutEngine"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  ],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Figures have a "
            },
            {
              "type": "inlineCode",
              "value": "layout_engine"
            },
            {
              "type": "text",
              "value": " property that holds a subclass of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "~.LayoutEngine"
            },
            {
              "type": "text",
              "value": " defined here (or "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "None"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " for no layout).  At draw time "
            },
            {
              "type": "inlineCode",
              "value": "figure.get_layout_engine().execute()"
            },
            {
              "type": "text",
              "value": " is called, the goal of which is usually to rearrange Axes on the figure to produce a pleasing layout. This is like a "
            },
            {
              "type": "inlineCode",
              "value": "draw"
            },
            {
              "type": "text",
              "value": " callback, however when printing we disable the layout engine for the final draw and it is useful to know the layout engine while the figure is being created, in particular to deal with colorbars."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Matplotlib supplies two layout engines, "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".TightLayoutEngine"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".ConstrainedLayoutEngine"
            },
            {
              "type": "text",
              "value": ".  Third parties can create their own layout engine by subclassing "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".LayoutEngine"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Classes to layout elements in a "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".Figure"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/layout_engine.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}