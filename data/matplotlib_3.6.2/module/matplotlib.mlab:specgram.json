{
  "aliases": [
    "matplotlib.mlab.specgram"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Compute and plot a spectrogram of data in "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "x"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ".  Data are split into "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "NFFT"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " length segments and the spectrum of each section is computed.  The windowing function "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "window"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " is applied to each segment, and the amount of overlap of each segment is specified with "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "noverlap"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "detrend"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "scale_by_freq"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " only apply when "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "mode"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " is set to 'psd'."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "1-D array or sequence."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x",
              "type": "Param",
              "type_": "array-like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The sampling frequency (samples per time unit).  It is used to calculate the Fourier frequencies, "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "freqs"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", in cycles per time unit."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "Fs",
              "type": "Param",
              "type_": "float, default: 2"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A function or a vector of length "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "NFFT"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ".  To create window vectors see "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".window_hanning"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".window_none"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "api",
                        "module": "numpy",
                        "path": "numpy:blackman",
                        "type": "RefInfo",
                        "version": "*"
                      },
                      "type": "Link",
                      "value": "numpy.blackman"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "api",
                        "module": "numpy",
                        "path": "numpy:hamming",
                        "type": "RefInfo",
                        "version": "*"
                      },
                      "type": "Link",
                      "value": "numpy.hamming"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "api",
                        "module": "numpy",
                        "path": "numpy:bartlett",
                        "type": "RefInfo",
                        "version": "*"
                      },
                      "type": "Link",
                      "value": "numpy.bartlett"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "api",
                        "module": "scipy.signal",
                        "path": "scipy.signal",
                        "type": "RefInfo",
                        "version": "*"
                      },
                      "type": "Link",
                      "value": "scipy.signal"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "api",
                        "module": "scipy.signal.windows._windows",
                        "path": "scipy.signal.windows._windows:get_window",
                        "type": "RefInfo",
                        "version": "*"
                      },
                      "type": "Link",
                      "value": "scipy.signal.get_window"
                    },
                    {
                      "type": "text",
                      "value": ", etc.  If a function is passed as the argument, it must take a data segment as an argument and return the windowed version of the segment."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "window",
              "type": "Param",
              "type_": "callable or ndarray, default: `.window_hanning`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Which sides of the spectrum to return. 'default' is one-sided for real data and two-sided for complex data. 'onesided' forces the return of a one-sided spectrum, while 'twosided' forces two-sided."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "sides",
              "type": "Param",
              "type_": "{'default', 'onesided', 'twosided'}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The number of points to which the data segment is padded when performing the FFT.  This can be different from "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "NFFT"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", which specifies the number of data points used.  While not increasing the actual resolution of the spectrum (the minimum distance between resolvable peaks), this can give more points in the plot, allowing for more detail. This corresponds to the "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "n"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " parameter in the call to "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "api",
                        "module": "numpy.fft",
                        "path": "numpy.fft:fft",
                        "type": "RefInfo",
                        "version": "*"
                      },
                      "type": "Link",
                      "value": "fft"
                    },
                    {
                      "type": "text",
                      "value": ". The default is None, which sets "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "pad_to"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " equal to "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "NFFT"
                        }
                      ],
                      "type": "emphasis"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "pad_to",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The number of data points used in each block for the FFT.  A power 2 is most efficient.  This should "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "NOT"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " be used to get zero padding, or the scaling of the result will be incorrect; use "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "pad_to"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " for this instead."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "NFFT",
              "type": "Param",
              "type_": "int, default: 256"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The function applied to each segment before fft-ing, designed to remove the mean or linear trend.  Unlike in MATLAB, where the "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "detrend"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " parameter is a vector, in Matplotlib it is a function.  The "
                    },
                    {
                      "type": "inlineCode",
                      "value": "~matplotlib.mlab"
                    },
                    {
                      "type": "text",
                      "value": " module defines "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".detrend_none"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".detrend_mean"
                    },
                    {
                      "type": "text",
                      "value": ", and "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".detrend_linear"
                    },
                    {
                      "type": "text",
                      "value": ", but you can use a custom function as well.  You can also use a string to choose one of the functions: 'none' calls "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".detrend_none"
                    },
                    {
                      "type": "text",
                      "value": ". 'mean' calls "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".detrend_mean"
                    },
                    {
                      "type": "text",
                      "value": ". 'linear' calls "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".detrend_linear"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "detrend",
              "type": "Param",
              "type_": "{'none', 'mean', 'linear'} or callable, default: 'none'"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether the resulting density values should be scaled by the scaling frequency, which gives density in units of 1/Hz.  This allows for integration over the returned frequency values.  The default is True for MATLAB compatibility."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "scale_by_freq",
              "type": "Param",
              "type_": "bool, default: True"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The number of points of overlap between blocks."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "noverlap",
              "type": "Param",
              "type_": "int, default: 128"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "dd": [
                                {
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "Returns the power spectral density."
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              "dt": {
                                "children": [
                                  {
                                    "type": "text",
                                    "value": "'psd'"
                                  }
                                ],
                                "type": "paragraph"
                              },
                              "type": "DefListItem"
                            },
                            {
                              "dd": [
                                {
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "Returns the complex-valued frequency spectrum."
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              "dt": {
                                "children": [
                                  {
                                    "type": "text",
                                    "value": "'complex'"
                                  }
                                ],
                                "type": "paragraph"
                              },
                              "type": "DefListItem"
                            },
                            {
                              "dd": [
                                {
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "Returns the magnitude spectrum."
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              "dt": {
                                "children": [
                                  {
                                    "type": "text",
                                    "value": "'magnitude'"
                                  }
                                ],
                                "type": "paragraph"
                              },
                              "type": "DefListItem"
                            },
                            {
                              "dd": [
                                {
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "Returns the phase spectrum without unwrapping."
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              "dt": {
                                "children": [
                                  {
                                    "type": "text",
                                    "value": "'angle'"
                                  }
                                ],
                                "type": "paragraph"
                              },
                              "type": "DefListItem"
                            },
                            {
                              "dd": [
                                {
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "Returns the phase spectrum with unwrapping."
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              "dt": {
                                "children": [
                                  {
                                    "type": "text",
                                    "value": "'phase'"
                                  }
                                ],
                                "type": "paragraph"
                              },
                              "type": "DefListItem"
                            }
                          ],
                          "type": "DefList"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "What sort of spectrum to use:"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    }
                  ],
                  "type": "DefList"
                }
              ],
              "param": "mode",
              "type": "Param",
              "type_": "str, default: 'psd'"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "2D array, columns are the periodograms of successive segments."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "spectrum",
              "type": "Param",
              "type_": "array-like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "1-D array, frequencies corresponding to the rows in "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "spectrum"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "freqs",
              "type": "Param",
              "type_": "array-like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "1-D array, the times corresponding to midpoints of segments (i.e the columns in "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "spectrum"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ")."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "t",
              "type": "Param",
              "type_": "array-like"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Compute a spectrogram."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/mlab.py",
  "item_line": 710,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "differs in the overlap and in the return values."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "matplotlib",
          "path": "matplotlib.axes._axes:Axes.psd",
          "type": "RefInfo",
          "version": "3.6.2"
        },
        "type": "Link",
        "value": "psd"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "similar, but with complex valued frequencies."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "complex_spectrum",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "complex_spectrum"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "similar single segment when "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "mode"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " is 'magnitude'."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "matplotlib",
          "path": "matplotlib.axes._axes:Axes.magnitude_spectrum",
          "type": "RefInfo",
          "version": "3.6.2"
        },
        "type": "Link",
        "value": "magnitude_spectrum"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "similar to single segment when "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "mode"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " is 'angle'."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "matplotlib",
          "path": "matplotlib.axes._axes:Axes.angle_spectrum",
          "type": "RefInfo",
          "version": "3.6.2"
        },
        "type": "Link",
        "value": "angle_spectrum"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "similar to single segment when "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "mode"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " is 'phase'."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "matplotlib",
          "path": "matplotlib.axes._axes:Axes.phase_spectrum",
          "type": "RefInfo",
          "version": "3.6.2"
        },
        "type": "Link",
        "value": "phase_spectrum"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(x, NFFT=None, Fs=None, detrend=None, window=None, noverlap=None, pad_to=None, sides=None, scale_by_freq=None, mode=None)"
  },
  "type": "DocBlob"
}