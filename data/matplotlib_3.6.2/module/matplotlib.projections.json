{
  "aliases": [
    "matplotlib.projections"
  ],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Non-separable transforms that map from data space to screen space."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Projections are defined as "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "~.axes.Axes"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " subclasses.  They include the following elements:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A transformation from data coordinates into display coordinates."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "An inverse of that transformation.  This is used, for example, to convert   mouse positions from screen space back into data space."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Transformations for the gridlines, ticks and ticklabels.  Custom projections   will often need to place these elements in special locations, and Matplotlib   has a facility to help with doing so."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Setting up default values (overriding "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "~.axes.Axes.cla"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": "), since the defaults   for a rectilinear axes may not be appropriate."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Defining the shape of the axes, for example, an elliptical axes, that will be   used to draw the background of the plot and for clipping any data elements."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Defining custom locators and formatters for the projection.  For example, in   a geographic projection, it may be more convenient to display the grid in   degrees, even if the data is in radians."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Set up interactive panning and zooming.  This is left as an \"advanced\"   feature left to the reader, but there is an example of this for polar plots   in "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.projections.polar",
                              "version": "3.6.2"
                            },
                            "value": "matplotlib.projections.polar"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Any additional methods for additional convenience or features."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Once the projection axes is defined, it can be used in one of two ways:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "By defining the class attribute "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "name"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", the projection axes can be   registered with "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.projections.register_projection",
                              "version": "3.6.2"
                            },
                            "value": "matplotlib.projections.register_projection"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " and subsequently   simply invoked by name:        "
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "value": "fig.add_subplot(projection=\"my_proj_name\")"
                    },
                    "type": "BlockVerbatim"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "For more complex, parameterisable projections, a generic \"projection\" object   may be defined which includes the method "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "_as_mpl_axes"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "_as_mpl_axes"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "   should take no arguments and return the projection's axes subclass and a   dictionary of additional arguments to pass to the subclass' "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "__init__"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "   method.  Subsequently a parameterised projection can be initialised with:        "
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "value": "fig.add_subplot(projection=MyProjection(param1=param1_value))"
                    },
                    "type": "BlockVerbatim"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "where MyProjection is an object which implements a "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "_as_mpl_axes"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " method."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "A full-fledged and heavily annotated example is in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "/gallery/misc/custom_projection"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ".  The polar plot functionality in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.projections.polar",
                    "version": "3.6.2"
                  },
                  "value": "matplotlib.projections.polar"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " may also be of interest."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    }
  ],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Projections are defined as "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "~.axes.Axes"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " subclasses.  They include the following elements:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A transformation from data coordinates into display coordinates."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "An inverse of that transformation.  This is used, for example, to convert   mouse positions from screen space back into data space."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Transformations for the gridlines, ticks and ticklabels.  Custom projections   will often need to place these elements in special locations, and Matplotlib   has a facility to help with doing so."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Setting up default values (overriding "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "~.axes.Axes.cla"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": "), since the defaults   for a rectilinear axes may not be appropriate."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Defining the shape of the axes, for example, an elliptical axes, that will be   used to draw the background of the plot and for clipping any data elements."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Defining custom locators and formatters for the projection.  For example, in   a geographic projection, it may be more convenient to display the grid in   degrees, even if the data is in radians."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Set up interactive panning and zooming.  This is left as an \"advanced\"   feature left to the reader, but there is an example of this for polar plots   in "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.projections.polar",
                              "version": "3.6.2"
                            },
                            "value": "matplotlib.projections.polar"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Any additional methods for additional convenience or features."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Once the projection axes is defined, it can be used in one of two ways:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "By defining the class attribute "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "name"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", the projection axes can be   registered with "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.projections.register_projection",
                              "version": "3.6.2"
                            },
                            "value": "matplotlib.projections.register_projection"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " and subsequently   simply invoked by name:        "
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "value": "fig.add_subplot(projection=\"my_proj_name\")"
                    },
                    "type": "BlockVerbatim"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "For more complex, parameterisable projections, a generic \"projection\" object   may be defined which includes the method "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "_as_mpl_axes"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "_as_mpl_axes"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "   should take no arguments and return the projection's axes subclass and a   dictionary of additional arguments to pass to the subclass' "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "__init__"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "   method.  Subsequently a parameterised projection can be initialised with:        "
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "value": "fig.add_subplot(projection=MyProjection(param1=param1_value))"
                    },
                    "type": "BlockVerbatim"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "where MyProjection is an object which implements a "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "_as_mpl_axes"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " method."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "A full-fledged and heavily annotated example is in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "/gallery/misc/custom_projection"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ".  The polar plot functionality in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.projections.polar",
                    "version": "3.6.2"
                  },
                  "value": "matplotlib.projections.polar"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " may also be of interest."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Non-separable transforms that map from data space to screen space."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/matplotlib/projections/__init__.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}