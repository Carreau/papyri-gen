{
  "aliases": [
    "matplotlib.pyplot.hist2d"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Currently "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "hist2d"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " calculates its own axis limits, and any limits   previously set are ignored."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Rendering the histogram with a logarithmic color scale is   accomplished by passing a "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.colors.LogNorm",
                              "version": "3.6.2"
                            },
                            "value": ".colors.LogNorm"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " instance to the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "norm"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": "   keyword argument. Likewise, power-law normalization (similar   in effect to gamma correction) can be accomplished with   "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.colors.PowerNorm",
                              "version": "3.6.2"
                            },
                            "value": ".colors.PowerNorm"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The Colormap instance or registered colormap name used to map scalar data to colors."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "cmap",
                "type_": "str or `~matplotlib.colors.Colormap`, default: :rc:`image.cmap`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The normalization method used to scale scalar data to the [0, 1] range before mapping to colors using "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "cmap"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ". By default, a linear scaling is used, mapping the lowest value to 0 and the highest to 1."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If given, this can be one of the following:"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "An instance of "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "anchor": null,
                                      "exists": true,
                                      "kind": "module",
                                      "reference": {
                                        "kind": "module",
                                        "module": "matplotlib",
                                        "path": "matplotlib.colors.Normalize",
                                        "version": "3.6.2"
                                      },
                                      "value": ".Normalize"
                                    },
                                    "type": "Link"
                                  },
                                  {
                                    "data": {
                                      "value": " or one of its subclasses   (see "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": [
                                        "/tutorials/colors/colormapnorms"
                                      ]
                                    },
                                    "type": "Verbatim"
                                  },
                                  {
                                    "data": {
                                      "value": ")."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "A scale name, i.e. one of \"linear\", \"log\", \"symlog\", \"logit\", etc.  For a   list of available scales, call "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "anchor": null,
                                      "exists": true,
                                      "kind": "module",
                                      "reference": {
                                        "kind": "api",
                                        "module": "matplotlib",
                                        "path": "matplotlib.scale.get_scale_names",
                                        "version": "*"
                                      },
                                      "value": "matplotlib.scale.get_scale_names()"
                                    },
                                    "type": "Link"
                                  },
                                  {
                                    "data": {
                                      "value": ".   In that case, a suitable "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "anchor": null,
                                      "exists": true,
                                      "kind": "module",
                                      "reference": {
                                        "kind": "module",
                                        "module": "matplotlib",
                                        "path": "matplotlib.colors.Normalize",
                                        "version": "3.6.2"
                                      },
                                      "value": ".Normalize"
                                    },
                                    "type": "Link"
                                  },
                                  {
                                    "data": {
                                      "value": " subclass is dynamically generated   and instantiated."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "BulletList"
                  }
                ],
                "param": "norm",
                "type_": "str or `~matplotlib.colors.Normalize`, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "When using scalar data and no explicit "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "norm"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ", "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "vmin"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "vmax"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " define the data range that the colormap covers. By default, the colormap covers the complete value range of the supplied data. It is an error to use "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "vmin"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": "/"
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "vmax"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " when a "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "norm"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " instance is given (but using a "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "str"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "norm"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " name together with "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "vmin"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": "/"
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "vmax"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " is acceptable)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "vmin, vmax",
                "type_": "float, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The alpha blending value."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "alpha",
                "type_": "``0 <= scalar <= 1`` or ``None``, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If given, the following parameters also accept a string "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "s"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", which is interpreted as "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "data[s]"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " (unless this raises an exception):"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": {
                              "value": "x"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ", "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "y"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ", "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "weights"
                            }
                          },
                          "type": "Emph"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "data",
                "type_": "indexable object, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Additional parameters are passed along to the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.axes._axes.Axes.pcolormesh",
                              "version": "3.6.2"
                            },
                            "value": "~.Axes.pcolormesh"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " method and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.collections.QuadMesh",
                              "version": "3.6.2"
                            },
                            "value": "~matplotlib.collections.QuadMesh"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " constructor."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "**kwargs",
                "type_": ""
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Input values"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "x, y",
                "type_": "array-like, shape (n, )"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The bin specification:"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "If int, the number of bins for the two dimensions   (nx=ny=bins)."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "If "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": [
                                        "[int, int]"
                                      ]
                                    },
                                    "type": "Verbatim"
                                  },
                                  {
                                    "data": {
                                      "value": ", the number of bins in each dimension   (nx, ny = bins)."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "If array-like, the bin edges for the two dimensions   (x_edges=y_edges=bins)."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "If "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": [
                                        "[array, array]"
                                      ]
                                    },
                                    "type": "Verbatim"
                                  },
                                  {
                                    "data": {
                                      "value": ", the bin edges in each dimension   (x_edges, y_edges = bins)."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "BulletList"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The default value is 10."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "bins",
                "type_": "None or int or [int, int] or array-like or [array, array]"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The leftmost and rightmost edges of the bins along each dimension (if not specified explicitly in the bins parameters): "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "[[xmin,\nxmax], [ymin, ymax]]"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". All values outside of this range will be considered outliers and not tallied in the histogram."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "range",
                "type_": "array-like shape(2, 2), optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Normalize histogram.  See the documentation for the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "density"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " parameter of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "matplotlib",
                              "path": "matplotlib.axes._axes.Axes.hist",
                              "version": "3.6.2"
                            },
                            "value": "~.Axes.hist"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " for more details."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "density",
                "type_": "bool, default: False"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "An array of values w_i weighing each sample (x_i, y_i)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "weights",
                "type_": "array-like, shape (n, ), optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "All bins that has count less than "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "cmin"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " or more than "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "cmax"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " will not be displayed (set to NaN before passing to imshow) and these count values in the return value count histogram will also be set to nan upon return."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "cmin, cmax",
                "type_": "float, default: None"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The bi-dimensional histogram of samples x and y. Values in x are histogrammed along the first dimension and values in y are histogrammed along the second dimension."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "h",
                "type_": "2D array"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The bin edges along the x axis."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "xedges",
                "type_": "1D array"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The bin edges along the y axis."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "yedges",
                "type_": "1D array"
              },
              {
                "desc": [],
                "param": "image",
                "type_": "`~.matplotlib.collections.QuadMesh`"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Make a 2D histogram plot."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/matplotlib/pyplot.py",
  "item_line": 2593,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Other Parameters",
    "See Also",
    "Notes"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "1D histogram plotting"
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "matplotlib",
          "path": "matplotlib.pyplot.hist",
          "version": "3.6.2"
        },
        "value": "hist"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "2D histogram with hexagonal bins"
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "matplotlib",
          "path": "matplotlib.pyplot.hexbin",
          "version": "3.6.2"
        },
        "value": "hexbin"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "hist2d(x, y, bins=10, range=None, density=False, weights=None, cmin=None, cmax=None, *, data=None, **kwargs)"
  }
}