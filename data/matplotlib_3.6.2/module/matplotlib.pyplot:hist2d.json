{
  "aliases": [
    "matplotlib.pyplot.hist2d"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Currently "
                    },
                    {
                      "type": "inlineCode",
                      "value": "hist2d"
                    },
                    {
                      "type": "text",
                      "value": " calculates its own axis limits, and any limits   previously set are ignored."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Rendering the histogram with a logarithmic color scale is   accomplished by passing a "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".colors.LogNorm"
                    },
                    {
                      "type": "text",
                      "value": " instance to the "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "norm"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "   keyword argument. Likewise, power-law normalization (similar   in effect to gamma correction) can be accomplished with   "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".colors.PowerNorm"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": false,
          "spread": false,
          "start": 1,
          "type": "list"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The Colormap instance or registered colormap name used to map scalar data to colors."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cmap",
              "type": "Param",
              "type_": "str or `~matplotlib.colors.Colormap`, default: :rc:`image.cmap`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The normalization method used to scale scalar data to the [0, 1] range before mapping to colors using "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "cmap"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ". By default, a linear scaling is used, mapping the lowest value to 0 and the highest to 1."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If given, this can be one of the following:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "An instance of "
                            },
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": ".Normalize"
                            },
                            {
                              "type": "text",
                              "value": " or one of its subclasses   (see "
                            },
                            {
                              "type": "inlineCode",
                              "value": "/tutorials/colors/colormapnorms"
                            },
                            {
                              "type": "text",
                              "value": ")."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "A scale name, i.e. one of \"linear\", \"log\", \"symlog\", \"logit\", etc.  For a   list of available scales, call "
                            },
                            {
                              "anchor": null,
                              "exists": true,
                              "kind": "module",
                              "reference": {
                                "kind": "api",
                                "module": "matplotlib.scale",
                                "path": "matplotlib.scale:get_scale_names",
                                "type": "RefInfo",
                                "version": "*"
                              },
                              "type": "Link",
                              "value": "matplotlib.scale.get_scale_names()"
                            },
                            {
                              "type": "text",
                              "value": ".   In that case, a suitable "
                            },
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": ".Normalize"
                            },
                            {
                              "type": "text",
                              "value": " subclass is dynamically generated   and instantiated."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                }
              ],
              "param": "norm",
              "type": "Param",
              "type_": "str or `~matplotlib.colors.Normalize`, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "When using scalar data and no explicit "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "norm"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmin"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmax"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " define the data range that the colormap covers. By default, the colormap covers the complete value range of the supplied data. It is an error to use "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmin"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "/"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmax"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " when a "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "norm"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " instance is given (but using a "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "str"
                    },
                    {
                      "type": "text",
                      "value": " "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "norm"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " name together with "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmin"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "/"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmax"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is acceptable)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "vmin, vmax",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The alpha blending value."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "alpha",
              "type": "Param",
              "type_": "``0 <= scalar <= 1`` or ``None``, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If given, the following parameters also accept a string "
                    },
                    {
                      "type": "inlineCode",
                      "value": "s"
                    },
                    {
                      "type": "text",
                      "value": ", which is interpreted as "
                    },
                    {
                      "type": "inlineCode",
                      "value": "data[s]"
                    },
                    {
                      "type": "text",
                      "value": " (unless this raises an exception):"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "x"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "y"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "weights"
                        }
                      ],
                      "type": "emphasis"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "data",
              "type": "Param",
              "type_": "indexable object, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Additional parameters are passed along to the "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "~.Axes.pcolormesh"
                    },
                    {
                      "type": "text",
                      "value": " method and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "api",
                        "module": "matplotlib.collections",
                        "path": "matplotlib.collections:QuadMesh",
                        "type": "RefInfo",
                        "version": "*"
                      },
                      "type": "Link",
                      "value": "QuadMesh"
                    },
                    {
                      "type": "text",
                      "value": " constructor."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "**kwargs",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Input values"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x, y",
              "type": "Param",
              "type_": "array-like, shape (n, )"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The bin specification:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "If int, the number of bins for the two dimensions   (nx=ny=bins)."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "If "
                            },
                            {
                              "type": "inlineCode",
                              "value": "[int, int]"
                            },
                            {
                              "type": "text",
                              "value": ", the number of bins in each dimension   (nx, ny = bins)."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "If array-like, the bin edges for the two dimensions   (x_edges=y_edges=bins)."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "If "
                            },
                            {
                              "type": "inlineCode",
                              "value": "[array, array]"
                            },
                            {
                              "type": "text",
                              "value": ", the bin edges in each dimension   (x_edges, y_edges = bins)."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The default value is 10."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "bins",
              "type": "Param",
              "type_": "None or int or [int, int] or array-like or [array, array]"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The leftmost and rightmost edges of the bins along each dimension (if not specified explicitly in the bins parameters): "
                    },
                    {
                      "type": "inlineCode",
                      "value": "[[xmin,\nxmax], [ymin, ymax]]"
                    },
                    {
                      "type": "text",
                      "value": ". All values outside of this range will be considered outliers and not tallied in the histogram."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "range",
              "type": "Param",
              "type_": "array-like shape(2, 2), optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Normalize histogram.  See the documentation for the "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "density"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " parameter of "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "~.Axes.hist"
                    },
                    {
                      "type": "text",
                      "value": " for more details."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "density",
              "type": "Param",
              "type_": "bool, default: False"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An array of values w_i weighing each sample (x_i, y_i)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "weights",
              "type": "Param",
              "type_": "array-like, shape (n, ), optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "All bins that has count less than "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "cmin"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " or more than "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "cmax"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " will not be displayed (set to NaN before passing to imshow) and these count values in the return value count histogram will also be set to nan upon return."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cmin, cmax",
              "type": "Param",
              "type_": "float, default: None"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The bi-dimensional histogram of samples x and y. Values in x are histogrammed along the first dimension and values in y are histogrammed along the second dimension."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "h",
              "type": "Param",
              "type_": "2D array"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The bin edges along the x axis."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "xedges",
              "type": "Param",
              "type_": "1D array"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The bin edges along the y axis."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "yedges",
              "type": "Param",
              "type_": "1D array"
            },
            {
              "desc": [],
              "param": "image",
              "type": "Param",
              "type_": "`~.matplotlib.collections.QuadMesh`"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Make a 2D histogram plot."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/pyplot.py",
  "item_line": 2593,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Other Parameters",
    "See Also",
    "Notes"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "1D histogram plotting"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "matplotlib",
          "path": "matplotlib.axes._axes:Axes.hist",
          "type": "RefInfo",
          "version": "3.6.2"
        },
        "type": "Link",
        "value": "hist"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "2D histogram with hexagonal bins"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "matplotlib",
          "path": "matplotlib.axes._axes:Axes.hexbin",
          "type": "RefInfo",
          "version": "3.6.2"
        },
        "type": "Link",
        "value": "hexbin"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(x, y, bins=10, range=None, density=False, weights=None, cmin=None, cmax=None, *, data=None, **kwargs)"
  },
  "type": "DocBlob"
}