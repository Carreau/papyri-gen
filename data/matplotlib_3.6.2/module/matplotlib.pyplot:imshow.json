{
  "aliases": [
    "matplotlib.pyplot.imshow"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The input may either be actual RGB(A) data, or 2D scalar data, which will be rendered as a pseudocolor image. For displaying a grayscale image set up the colormapping using the parameters "
            },
            {
              "type": "inlineCode",
              "value": "cmap='gray', vmin=0, vmax=255"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The number of pixels used to render an image is set by the Axes size and the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "dpi"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " of the figure. This can lead to aliasing artifacts when the image is resampled because the displayed image size will usually not match the size of "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "X"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " (see "
            },
            {
              "type": "inlineCode",
              "value": "/gallery/images_contours_and_fields/image_antialiasing"
            },
            {
              "type": "text",
              "value": "). The resampling can be controlled via the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "interpolation"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " parameter and/or "
            },
            {
              "type": "inlineCode",
              "value": "image.interpolation"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Unless "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "extent"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " is used, pixel centers will be located at integer coordinates. In other words: the origin will coincide with the center of pixel (0, 0)."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "There are two common representations for RGB images with an alpha channel:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Straight (unassociated) alpha: R, G, and B channels represent the     color of the pixel, disregarding its opacity."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Premultiplied (associated) alpha: R, G, and B channels represent     the color of the pixel, adjusted for its opacity by multiplication."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": false,
          "spread": false,
          "start": 1,
          "type": "list"
        },
        {
          "children": [
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "api",
                "module": "matplotlib.pyplot",
                "path": "matplotlib.pyplot:imshow",
                "type": "RefInfo",
                "version": "*"
              },
              "type": "Link",
              "value": "imshow"
            },
            {
              "type": "text",
              "value": " expects RGB images adopting the straight (unassociated) alpha representation."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If given, all parameters also accept a string "
                    },
                    {
                      "type": "inlineCode",
                      "value": "s"
                    },
                    {
                      "type": "text",
                      "value": ", which is interpreted as "
                    },
                    {
                      "type": "inlineCode",
                      "value": "data[s]"
                    },
                    {
                      "type": "text",
                      "value": " (unless this raises an exception)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "data",
              "type": "Param",
              "type_": "indexable object, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "These parameters are passed on to the constructor of the "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".AxesImage"
                    },
                    {
                      "type": "text",
                      "value": " artist."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "**kwargs",
              "type": "Param",
              "type_": "`~matplotlib.artist.Artist` properties"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The image data. Supported array shapes are:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "(M, N): an image with scalar data. The values are mapped to   colors using normalization and a colormap. See parameters "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "norm"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": ",   "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "cmap"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": ", "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "vmin"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": ", "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "vmax"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": "."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "(M, N, 3): an image with RGB values (0-1 float or 0-255 int)."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "(M, N, 4): an image with RGBA values (0-1 float or 0-255 int),   i.e. including transparency."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The first two dimensions (M, N) define the rows and columns of the image."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Out-of-range RGB(A) values are clipped."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "X",
              "type": "Param",
              "type_": "array-like or PIL image"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The Colormap instance or registered colormap name used to map scalar data to colors."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "This parameter is ignored if "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "X"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is RGB(A)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cmap",
              "type": "Param",
              "type_": "str or `~matplotlib.colors.Colormap`, default: :rc:`image.cmap`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The normalization method used to scale scalar data to the [0, 1] range before mapping to colors using "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "cmap"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ". By default, a linear scaling is used, mapping the lowest value to 0 and the highest to 1."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If given, this can be one of the following:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "An instance of "
                            },
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": ".Normalize"
                            },
                            {
                              "type": "text",
                              "value": " or one of its subclasses   (see "
                            },
                            {
                              "type": "inlineCode",
                              "value": "/tutorials/colors/colormapnorms"
                            },
                            {
                              "type": "text",
                              "value": ")."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "A scale name, i.e. one of \"linear\", \"log\", \"symlog\", \"logit\", etc.  For a   list of available scales, call "
                            },
                            {
                              "anchor": null,
                              "exists": true,
                              "kind": "module",
                              "reference": {
                                "kind": "api",
                                "module": "matplotlib.scale",
                                "path": "matplotlib.scale:get_scale_names",
                                "type": "RefInfo",
                                "version": "*"
                              },
                              "type": "Link",
                              "value": "matplotlib.scale.get_scale_names()"
                            },
                            {
                              "type": "text",
                              "value": ".   In that case, a suitable "
                            },
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": ".Normalize"
                            },
                            {
                              "type": "text",
                              "value": " subclass is dynamically generated   and instantiated."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "This parameter is ignored if "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "X"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is RGB(A)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "norm",
              "type": "Param",
              "type_": "str or `~matplotlib.colors.Normalize`, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "When using scalar data and no explicit "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "norm"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmin"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmax"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " define the data range that the colormap covers. By default, the colormap covers the complete value range of the supplied data. It is an error to use "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmin"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "/"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmax"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " when a "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "norm"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " instance is given (but using a "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "str"
                    },
                    {
                      "type": "text",
                      "value": " "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "norm"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " name together with "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmin"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "/"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmax"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is acceptable)."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "This parameter is ignored if "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "X"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is RGB(A)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "vmin, vmax",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The aspect ratio of the Axes.  This parameter is particularly relevant for images since it determines whether data pixels are square."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "This parameter is a shortcut for explicitly calling "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Axes.set_aspect"
                    },
                    {
                      "type": "text",
                      "value": ". See there for further details."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "'equal': Ensures an aspect ratio of 1. Pixels will be square   (unless pixel sizes are explicitly made non-square in data   coordinates using "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "extent"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": ")."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "'auto': The Axes is kept fixed and the aspect is adjusted so   that the data fit in the Axes. In general, this will result in   non-square pixels."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                }
              ],
              "param": "aspect",
              "type": "Param",
              "type_": "{'equal', 'auto'} or float, default: :rc:`image.aspect`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The interpolation method used."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Supported values are 'none', 'antialiased', 'nearest', 'bilinear', 'bicubic', 'spline16', 'spline36', 'hanning', 'hamming', 'hermite', 'kaiser', 'quadric', 'catrom', 'gaussian', 'bessel', 'mitchell', 'sinc', 'lanczos', 'blackman'."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "interpolation"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is 'none', then no interpolation is performed on the Agg, ps, pdf and svg backends. Other backends will fall back to 'nearest'. Note that most SVG renderers perform interpolation at rendering and that the default interpolation method they implement may differ."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "interpolation"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is the default 'antialiased', then 'nearest' interpolation is used if the image is upsampled by more than a factor of three (i.e. the number of display pixels is at least three times the size of the data array).  If the upsampling rate is smaller than 3, or the image is downsampled, then 'hanning' interpolation is used to act as an anti-aliasing filter, unless the image happens to be upsampled by exactly a factor of two or one."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "See "
                    },
                    {
                      "type": "inlineCode",
                      "value": "/gallery/images_contours_and_fields/interpolation_methods"
                    },
                    {
                      "type": "text",
                      "value": " for an overview of the supported interpolation methods, and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "/gallery/images_contours_and_fields/image_antialiasing"
                    },
                    {
                      "type": "text",
                      "value": " for a discussion of image antialiasing."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Some interpolation methods require an additional radius parameter, which can be set by "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "filterrad"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ". Additionally, the antigrain image resize filter is controlled by the parameter "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "filternorm"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "interpolation",
              "type": "Param",
              "type_": "str, default: :rc:`image.interpolation`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If 'data', interpolation is carried out on the data provided by the user.  If 'rgba', the interpolation is carried out after the colormapping has been applied (visual interpolation)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "interpolation_stage",
              "type": "Param",
              "type_": "{'data', 'rgba'}, default: 'data'"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The alpha blending value, between 0 (transparent) and 1 (opaque). If "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "alpha"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is an array, the alpha blending values are applied pixel by pixel, and "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "alpha"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " must have the same shape as "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "X"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "alpha",
              "type": "Param",
              "type_": "float or array-like, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Place the [0, 0] index of the array in the upper left or lower left corner of the Axes. The convention (the default) 'upper' is typically used for matrices and images."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Note that the vertical axis points upward for 'lower' but downward for 'upper'."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "See the "
                    },
                    {
                      "type": "inlineCode",
                      "value": "/tutorials/intermediate/imshow_extent"
                    },
                    {
                      "type": "text",
                      "value": " tutorial for examples and a more detailed description."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "origin",
              "type": "Param",
              "type_": "{'upper', 'lower'}, default: :rc:`image.origin`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The bounding box in data coordinates that the image will fill. The image is stretched individually along x and y to fill the box."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The default extent is determined by the following conditions. Pixels have unit size in data coordinates. Their centers are on integer coordinates, and their center coordinates range from 0 to columns-1 horizontally and from 0 to rows-1 vertically."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Note that the direction of the vertical axis and thus the default values for top and bottom depend on "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "origin"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ":"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "For "
                            },
                            {
                              "type": "inlineCode",
                              "value": "origin == 'upper'"
                            },
                            {
                              "type": "text",
                              "value": " the default is   "
                            },
                            {
                              "type": "inlineCode",
                              "value": "(-0.5, numcols-0.5, numrows-0.5, -0.5)"
                            },
                            {
                              "type": "text",
                              "value": "."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "For "
                            },
                            {
                              "type": "inlineCode",
                              "value": "origin == 'lower'"
                            },
                            {
                              "type": "text",
                              "value": " the default is   "
                            },
                            {
                              "type": "inlineCode",
                              "value": "(-0.5, numcols-0.5, -0.5, numrows-0.5)"
                            },
                            {
                              "type": "text",
                              "value": "."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "See the "
                    },
                    {
                      "type": "inlineCode",
                      "value": "/tutorials/intermediate/imshow_extent"
                    },
                    {
                      "type": "text",
                      "value": " tutorial for examples and a more detailed description."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "extent",
              "type": "Param",
              "type_": "floats (left, right, bottom, top), optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A parameter for the antigrain image resize filter (see the antigrain documentation).  If "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "filternorm"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is set, the filter normalizes integer values and corrects the rounding errors. It doesn't do anything with the source floating point values, it corrects only integers according to the rule of 1.0 which means that any sum of pixel weights must be equal to 1.0.  So, the filter function must produce a graph of the proper shape."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "filternorm",
              "type": "Param",
              "type_": "bool, default: True"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The filter radius for filters that have a radius parameter, i.e. when interpolation is one of: 'sinc', 'lanczos' or 'blackman'."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "filterrad",
              "type": "Param",
              "type_": "float > 0, default: 4.0"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "When "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "True"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", use a full resampling method.  When "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "False"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", only resample when the output image is larger than the input image."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "resample",
              "type": "Param",
              "type_": "bool, default: :rc:`image.resample`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Set the url of the created "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".AxesImage"
                    },
                    {
                      "type": "text",
                      "value": ". See "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Artist.set_url"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "url",
              "type": "Param",
              "type_": "str, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "",
              "type": "Param",
              "type_": "`~matplotlib.image.AxesImage`"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Display data as an image, i.e., on a 2D regular raster."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/pyplot.py",
  "item_line": 2617,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Other Parameters",
    "See Also",
    "Notes"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Plot a matrix or an array as an image."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "matplotlib",
          "path": "matplotlib.axes._axes:Axes.matshow",
          "type": "RefInfo",
          "version": "3.6.2"
        },
        "type": "Link",
        "value": "matshow"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(X, cmap=None, norm=None, *, aspect=None, interpolation=None, alpha=None, vmin=None, vmax=None, origin=None, extent=None, interpolation_stage=None, filternorm=True, filterrad=4.0, resample=None, url=None, data=None, **kwargs)"
  },
  "type": "DocBlob"
}