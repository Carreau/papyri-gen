{
  "aliases": [
    "matplotlib.pyplot.pie"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Make a pie chart of array "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "x"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ".  The fractional area of each wedge is given by "
            },
            {
              "type": "inlineCode",
              "value": "x/sum(x)"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The wedges are plotted counterclockwise, by default starting from the x-axis."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The pie chart will probably look best if the figure and Axes are square, or the Axes aspect is equal. This method sets the aspect ratio of the axis to \"equal\". The Axes aspect ratio can be controlled with "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".Axes.set_aspect"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The wedge sizes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x",
              "type": "Param",
              "type_": "1D array-like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If not "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "None"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", is a "
                    },
                    {
                      "type": "inlineCode",
                      "value": "len(x)"
                    },
                    {
                      "type": "text",
                      "value": " array which specifies the fraction of the radius with which to offset each wedge."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "explode",
              "type": "Param",
              "type_": "array-like, default: None"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A sequence of strings providing the labels for each wedge"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "labels",
              "type": "Param",
              "type_": "list, default: None"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A sequence of colors through which the pie chart will cycle.  If "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "None"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", will use the colors in the currently active cycle."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "colors",
              "type": "Param",
              "type_": "array-like, default: None"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If not "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "None"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", is a string or function used to label the wedges with their numeric value.  The label will be placed inside the wedge.  If it is a format string, the label will be "
                    },
                    {
                      "type": "inlineCode",
                      "value": "fmt % pct"
                    },
                    {
                      "type": "text",
                      "value": ". If it is a function, it will be called."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "autopct",
              "type": "Param",
              "type_": "None or str or callable, default: None"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The ratio between the center of each pie slice and the start of the text generated by "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "autopct"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ".  Ignored if "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "autopct"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "None"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "pctdistance",
              "type": "Param",
              "type_": "float, default: 0.6"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Draw a shadow beneath the pie."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "shadow",
              "type": "Param",
              "type_": "bool, default: False"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "When "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "True"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", always make a full pie by normalizing x so that "
                    },
                    {
                      "type": "inlineCode",
                      "value": "sum(x) == 1"
                    },
                    {
                      "type": "text",
                      "value": ". "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "False"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " makes a partial pie if "
                    },
                    {
                      "type": "inlineCode",
                      "value": "sum(x) <= 1"
                    },
                    {
                      "type": "text",
                      "value": " and raises a "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "ValueError"
                    },
                    {
                      "type": "text",
                      "value": " for "
                    },
                    {
                      "type": "inlineCode",
                      "value": "sum(x) > 1"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "normalize",
              "type": "Param",
              "type_": "bool, default: True"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The radial distance at which the pie labels are drawn. If set to "
                    },
                    {
                      "type": "inlineCode",
                      "value": "None"
                    },
                    {
                      "type": "text",
                      "value": ", label are not drawn, but are stored for use in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "legend()"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "labeldistance",
              "type": "Param",
              "type_": "float or None, default: 1.1"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The angle by which the start of the pie is rotated, counterclockwise from the x-axis."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "startangle",
              "type": "Param",
              "type_": "float, default: 0 degrees"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The radius of the pie."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "radius",
              "type": "Param",
              "type_": "float, default: 1"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Specify fractions direction, clockwise or counterclockwise."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "counterclock",
              "type": "Param",
              "type_": "bool, default: True"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Dict of arguments passed to the wedge objects making the pie. For example, you can pass in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "wedgeprops = {'linewidth': 3}"
                    },
                    {
                      "type": "text",
                      "value": " to set the width of the wedge border lines equal to 3. For more details, look at the doc/arguments of the wedge object. By default "
                    },
                    {
                      "type": "inlineCode",
                      "value": "clip_on=False"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "wedgeprops",
              "type": "Param",
              "type_": "dict, default: None"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Dict of arguments to pass to the text objects."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "textprops",
              "type": "Param",
              "type_": "dict, default: None"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The coordinates of the center of the chart."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "center",
              "type": "Param",
              "type_": "(float, float), default: (0, 0)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Plot Axes frame with the chart if true."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "frame",
              "type": "Param",
              "type_": "bool, default: False"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Rotate each label to the angle of the corresponding slice if true."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "rotatelabels",
              "type": "Param",
              "type_": "bool, default: False"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If given, the following parameters also accept a string "
                    },
                    {
                      "type": "inlineCode",
                      "value": "s"
                    },
                    {
                      "type": "text",
                      "value": ", which is interpreted as "
                    },
                    {
                      "type": "inlineCode",
                      "value": "data[s]"
                    },
                    {
                      "type": "text",
                      "value": " (unless this raises an exception):"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "x"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "explode"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "labels"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "colors"
                        }
                      ],
                      "type": "emphasis"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "data",
              "type": "Param",
              "type_": "indexable object, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A sequence of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "api",
                        "module": "matplotlib.patches",
                        "path": "matplotlib.patches:Wedge",
                        "type": "RefInfo",
                        "version": "*"
                      },
                      "type": "Link",
                      "value": "matplotlib.patches.Wedge"
                    },
                    {
                      "type": "text",
                      "value": " instances"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "patches",
              "type": "Param",
              "type_": "list"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A list of the label "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Text"
                    },
                    {
                      "type": "text",
                      "value": " instances."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "texts",
              "type": "Param",
              "type_": "list"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A list of "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Text"
                    },
                    {
                      "type": "text",
                      "value": " instances for the numeric labels. This will only be returned if the parameter "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "autopct"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is not "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "None"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "autotexts",
              "type": "Param",
              "type_": "list"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Plot a pie chart."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/pyplot.py",
  "item_line": 2720,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(x, explode=None, labels=None, colors=None, autopct=None, pctdistance=0.6, shadow=False, labeldistance=1.1, startangle=0, radius=1, counterclock=True, wedgeprops=None, textprops=None, center=(0, 0), frame=False, rotatelabels=False, *, normalize=True, data=None)"
  },
  "type": "DocBlob"
}