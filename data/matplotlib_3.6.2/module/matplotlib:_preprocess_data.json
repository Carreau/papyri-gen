{
  "aliases": [
    "matplotlib._preprocess_data"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "When applied      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "@_preprocess_data()\ndef func(ax, *args, **kwargs): ..."
        },
        {
          "children": [
            {
              "type": "text",
              "value": "the signature is modified to "
            },
            {
              "type": "inlineCode",
              "value": "decorated(ax, *args, data=None, **kwargs)"
            },
            {
              "type": "text",
              "value": " with the following behavior:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "if called with "
                    },
                    {
                      "type": "inlineCode",
                      "value": "data=None"
                    },
                    {
                      "type": "text",
                      "value": ", forward the other arguments to "
                    },
                    {
                      "type": "inlineCode",
                      "value": "func"
                    },
                    {
                      "type": "text",
                      "value": ";"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "otherwise, "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "data"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " must be a mapping; for any argument passed in as a   string "
                    },
                    {
                      "type": "inlineCode",
                      "value": "name"
                    },
                    {
                      "type": "text",
                      "value": ", replace the argument by "
                    },
                    {
                      "type": "inlineCode",
                      "value": "data[name]"
                    },
                    {
                      "type": "text",
                      "value": " (if this does not   throw an exception), then forward the arguments to "
                    },
                    {
                      "type": "inlineCode",
                      "value": "func"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": false,
          "spread": false,
          "start": 1,
          "type": "list"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "In either case, any argument that is a "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "MappingView"
            },
            {
              "type": "text",
              "value": " is also converted to a list."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The list of parameter names for which lookup into "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "data"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " should be attempted. If None, replacement is attempted for all arguments."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "replace_names",
              "type": "Param",
              "type_": "list of str or None, default: None"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If set e.g. to \"namer\" (which must be a kwarg in the function's signature -- not as "
                    },
                    {
                      "type": "inlineCode",
                      "value": "**kwargs"
                    },
                    {
                      "type": "text",
                      "value": "), if the "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "namer"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " argument passed in is a (string) key of "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "data"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " and no "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "label"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " kwarg is passed, then use the (string) value of the "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "namer"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " as "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "label"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ".       "
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "type": "code",
                  "value": "@_preprocess_data(label_namer=\"foo\")\ndef func(foo, label=None): ...\n\nfunc(\"key\", data={\"key\": value})\n# is equivalent to\nfunc.__wrapped__(value, label=\"key\")"
                }
              ],
              "param": "label_namer",
              "type": "Param",
              "type_": "str, default: None"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A decorator to add a 'data' kwarg to a function."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/__init__.py",
  "item_line": 1349,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(func=None, *, replace_names=None, label_namer=None)"
  },
  "type": "DocBlob"
}