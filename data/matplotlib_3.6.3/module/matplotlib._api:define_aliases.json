{
  "aliases": [
    "matplotlib._api.define_aliases"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Use as       "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "@_api.define_aliases({\"property\": [\"alias\", ...], ...})\nclass C: ..."
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For each property, if the corresponding "
            },
            {
              "type": "inlineCode",
              "value": "get_property"
            },
            {
              "type": "text",
              "value": " is defined in the class so far, an alias named "
            },
            {
              "type": "inlineCode",
              "value": "get_alias"
            },
            {
              "type": "text",
              "value": " will be defined; the same will be done for setters.  If neither the getter nor the setter exists, an exception will be raised."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The alias map is stored as the "
            },
            {
              "type": "inlineCode",
              "value": "_alias_map"
            },
            {
              "type": "text",
              "value": " attribute on the class and can be used by "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".normalize_kwargs"
            },
            {
              "type": "text",
              "value": " (which assumes that higher priority aliases come last)."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Class decorator for defining property aliases."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/_api/__init__.py",
  "item_line": 230,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(alias_d, cls=None)"
  },
  "type": "DocBlob"
}