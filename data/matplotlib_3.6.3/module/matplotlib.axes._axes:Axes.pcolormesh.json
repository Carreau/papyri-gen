{
  "aliases": [
    "matplotlib.pyplot.Axes.pcolormesh"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Call signature      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "pcolormesh([X, Y,] C, **kwargs)"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "X"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "Y"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " can be used to specify the corners of the quadrilaterals."
            }
          ],
          "type": "paragraph"
        },
        {
          "args": "",
          "children": [],
          "name": "hint",
          "options": {},
          "type": "mystDirective",
          "value": "`~.Axes.pcolormesh` is similar to `~.Axes.pcolor`. It is much faster\nand preferred in most cases. For a detailed discussion on the\ndifferences see :ref:`Differences between pcolor() and pcolormesh()\n<differences-pcolor-pcolormesh>`."
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "Masked arrays"
                }
              ],
              "type": "strong"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "C"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " may be a masked array. If "
            },
            {
              "type": "inlineCode",
              "value": "C[i, j]"
            },
            {
              "type": "text",
              "value": " is masked, the corresponding quadrilateral will be transparent. Masking of "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "X"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "Y"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " is not supported. Use "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "~.Axes.pcolor"
            },
            {
              "type": "text",
              "value": " if you need this functionality."
            }
          ],
          "type": "paragraph"
        },
        {
          "placeholder": "untarget",
          "type": "Unimplemented",
          "value": "_axes-pcolormesh-grid-orientation:"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "Grid orientation"
                }
              ],
              "type": "strong"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The grid orientation follows the standard matrix convention: An array "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "C"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " with shape (nrows, ncolumns) is plotted with the column number as "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "X"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " and the row number as "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "Y"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "placeholder": "untarget",
          "type": "Unimplemented",
          "value": "_differences-pcolor-pcolormesh:"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "Differences between pcolor() and pcolormesh()"
                }
              ],
              "type": "strong"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Both methods are used to create a pseudocolor plot of a 2D array using quadrilaterals."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The main difference lies in the created object and internal data handling: While "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "~.Axes.pcolor"
            },
            {
              "type": "text",
              "value": " returns a "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".PolyCollection"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "~.Axes.pcolormesh"
            },
            {
              "type": "text",
              "value": " returns a "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".QuadMesh"
            },
            {
              "type": "text",
              "value": ". The latter is more specialized for the given purpose and thus is faster. It should almost always be preferred."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "There is also a slight difference in the handling of masked arrays. Both "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "~.Axes.pcolor"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "~.Axes.pcolormesh"
            },
            {
              "type": "text",
              "value": " support masked arrays for "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "C"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ". However, only "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "~.Axes.pcolor"
            },
            {
              "type": "text",
              "value": " supports masked arrays for "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "X"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "Y"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ". The reason lies in the internal handling of the masked values. "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "~.Axes.pcolor"
            },
            {
              "type": "text",
              "value": " leaves out the respective polygons from the PolyCollection. "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "~.Axes.pcolormesh"
            },
            {
              "type": "text",
              "value": " sets the facecolor of the masked elements to transparent. You can see the difference when using edgecolors. While all edges are drawn irrespective of masking in a QuadMesh, the edge between two adjacent masked quadrilaterals in "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "~.Axes.pcolor"
            },
            {
              "type": "text",
              "value": " is not drawn as the corresponding polygons do not exist in the PolyCollection."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Another difference is the support of Gouraud shading in "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "~.Axes.pcolormesh"
            },
            {
              "type": "text",
              "value": ", which is not available with "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "~.Axes.pcolor"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If given, all parameters also accept a string "
                    },
                    {
                      "type": "inlineCode",
                      "value": "s"
                    },
                    {
                      "type": "text",
                      "value": ", which is interpreted as "
                    },
                    {
                      "type": "inlineCode",
                      "value": "data[s]"
                    },
                    {
                      "type": "text",
                      "value": " (unless this raises an exception)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "data",
              "type": "Param",
              "type_": "indexable object, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Additionally, the following arguments are allowed. They are passed along to the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "api",
                        "module": "matplotlib",
                        "path": "matplotlib.collections:QuadMesh",
                        "type": "RefInfo",
                        "version": "*"
                      },
                      "type": "Link",
                      "value": "QuadMesh"
                    },
                    {
                      "type": "text",
                      "value": " constructor:"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "**kwargs",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array and two offsets from the bottom left corner of the image alpha: array-like or scalar or None animated: bool antialiased or aa or antialiaseds: bool or list of bools array: (M, N) array-like or M*N array-like capstyle: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".CapStyle"
                    },
                    {
                      "type": "text",
                      "value": " or {'butt', 'projecting', 'round'} clim: (vmin: float, vmax: float) clip_box: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Bbox"
                    },
                    {
                      "type": "text",
                      "value": " clip_on: bool clip_path: Patch or (Path, Transform) or None cmap: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Colormap"
                    },
                    {
                      "type": "text",
                      "value": " or str or None color: color or list of RGBA tuples edgecolor or ec or edgecolors: color or list of colors or 'face' facecolor or facecolors or fc: color or list of colors figure: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Figure"
                    },
                    {
                      "type": "text",
                      "value": " gid: str hatch: {'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'} in_layout: bool joinstyle: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".JoinStyle"
                    },
                    {
                      "type": "text",
                      "value": " or {'miter', 'round', 'bevel'} label: object linestyle or dashes or linestyles or ls: str or tuple or list thereof linewidth or linewidths or lw: float or list of floats mouseover: bool norm: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Normalize"
                    },
                    {
                      "type": "text",
                      "value": " or str or None offset_transform or transOffset: unknown offsets: (N, 2) or (2,) array-like path_effects: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".AbstractPathEffect"
                    },
                    {
                      "type": "text",
                      "value": " picker: None or bool or float or callable pickradius: unknown rasterized: bool sketch_params: (scale: float, length: float, randomness: float) snap: bool or None transform: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Transform"
                    },
                    {
                      "type": "text",
                      "value": " url: str urls: list of str or None visible: bool zorder: float"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "Properties:",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The color-mapped values.  Color-mapping is controlled by "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "cmap"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "norm"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmin"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", and "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmax"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "C",
              "type": "Param",
              "type_": "2D array-like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The coordinates of the corners of quadrilaterals of a pcolormesh      "
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "type": "code",
                  "value": "(X[i+1, j], Y[i+1, j])       (X[i+1, j+1], Y[i+1, j+1])\n                      +-----+\n                      |     |\n                      +-----+\n    (X[i, j], Y[i, j])       (X[i, j+1], Y[i, j+1])"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Note that the column index corresponds to the x-coordinate, and the row index corresponds to y. For details, see the "
                    },
                    {
                      "type": "inlineCode",
                      "value": "Notes <axes-pcolormesh-grid-orientation>"
                    },
                    {
                      "type": "text",
                      "value": " section below."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "shading='flat'"
                    },
                    {
                      "type": "text",
                      "value": " the dimensions of "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "X"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "Y"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " should be one greater than those of "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "C"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", and the quadrilateral is colored due to the value at "
                    },
                    {
                      "type": "inlineCode",
                      "value": "C[i, j]"
                    },
                    {
                      "type": "text",
                      "value": ".  If "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "X"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "Y"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "C"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " have equal dimensions, a warning will be raised and the last row and column of "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "C"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " will be ignored."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "shading='nearest'"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "type": "inlineCode",
                      "value": "'gouraud'"
                    },
                    {
                      "type": "text",
                      "value": ", the dimensions of "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "X"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "Y"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " should be the same as those of "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "C"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " (if not, a ValueError will be raised).  For "
                    },
                    {
                      "type": "inlineCode",
                      "value": "'nearest'"
                    },
                    {
                      "type": "text",
                      "value": " the color "
                    },
                    {
                      "type": "inlineCode",
                      "value": "C[i, j]"
                    },
                    {
                      "type": "text",
                      "value": " is centered on "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(X[i, j], Y[i, j])"
                    },
                    {
                      "type": "text",
                      "value": ".  For "
                    },
                    {
                      "type": "inlineCode",
                      "value": "'gouraud'"
                    },
                    {
                      "type": "text",
                      "value": ", a smooth interpolation is caried out between the quadrilateral corners."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "X"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " and/or "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "Y"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " are 1-D arrays or column vectors they will be expanded as needed into the appropriate 2D arrays, making a rectangular grid."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "X, Y",
              "type": "Param",
              "type_": "array-like, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The Colormap instance or registered colormap name used to map scalar data to colors."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cmap",
              "type": "Param",
              "type_": "str or `~matplotlib.colors.Colormap`, default: :rc:`image.cmap`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The normalization method used to scale scalar data to the [0, 1] range before mapping to colors using "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "cmap"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ". By default, a linear scaling is used, mapping the lowest value to 0 and the highest to 1."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If given, this can be one of the following:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "An instance of "
                            },
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": ".Normalize"
                            },
                            {
                              "type": "text",
                              "value": " or one of its subclasses   (see "
                            },
                            {
                              "type": "inlineCode",
                              "value": "/tutorials/colors/colormapnorms"
                            },
                            {
                              "type": "text",
                              "value": ")."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "A scale name, i.e. one of \"linear\", \"log\", \"symlog\", \"logit\", etc.  For a   list of available scales, call "
                            },
                            {
                              "anchor": null,
                              "exists": true,
                              "kind": "module",
                              "reference": {
                                "kind": "api",
                                "module": "matplotlib",
                                "path": "matplotlib.scale:get_scale_names",
                                "type": "RefInfo",
                                "version": "*"
                              },
                              "type": "Link",
                              "value": "matplotlib.scale.get_scale_names()"
                            },
                            {
                              "type": "text",
                              "value": ".   In that case, a suitable "
                            },
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": ".Normalize"
                            },
                            {
                              "type": "text",
                              "value": " subclass is dynamically generated   and instantiated."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                }
              ],
              "param": "norm",
              "type": "Param",
              "type_": "str or `~matplotlib.colors.Normalize`, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "When using scalar data and no explicit "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "norm"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmin"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmax"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " define the data range that the colormap covers. By default, the colormap covers the complete value range of the supplied data. It is an error to use "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmin"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "/"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmax"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " when a "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "norm"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " instance is given (but using a "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "str"
                    },
                    {
                      "type": "text",
                      "value": " "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "norm"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " name together with "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmin"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "/"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmax"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is acceptable)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "vmin, vmax",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The color of the edges. Defaults to 'none'. Possible values:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "'none' or '': No edge."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "None"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": ": "
                            },
                            {
                              "type": "inlineCode",
                              "value": "patch.edgecolor"
                            },
                            {
                              "type": "text",
                              "value": " will be used. Note that currently   "
                            },
                            {
                              "type": "inlineCode",
                              "value": "patch.force_edgecolor"
                            },
                            {
                              "type": "text",
                              "value": " has to be True for this to work."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "'face': Use the adjacent face color."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "A color or sequence of colors will set the edge color."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The singular form "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "edgecolor"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " works as an alias."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "edgecolors",
              "type": "Param",
              "type_": "{'none', None, 'face', color, color sequence}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The alpha blending value, between 0 (transparent) and 1 (opaque)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "alpha",
              "type": "Param",
              "type_": "float, default: None"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The fill style for the quadrilateral; defaults to 'flat' or "
                    },
                    {
                      "type": "inlineCode",
                      "value": "pcolor.shading"
                    },
                    {
                      "type": "text",
                      "value": ". Possible values:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "'flat': A solid color is used for each quad. The color of the   quad (i, j), (i+1, j), (i, j+1), (i+1, j+1) is given by   "
                            },
                            {
                              "type": "inlineCode",
                              "value": "C[i, j]"
                            },
                            {
                              "type": "text",
                              "value": ". The dimensions of "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "X"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": " and "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "Y"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": " should be   one greater than those of "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "C"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": "; if they are the same as "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "C"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": ",   then a deprecation warning is raised, and the last row   and column of "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "C"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": " are dropped."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "'nearest': Each grid point will have a color centered on it,   extending halfway between the adjacent grid centers.  The   dimensions of "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "X"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": " and "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "Y"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": " must be the same as "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "C"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": "."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "'gouraud': Each quad will be Gouraud shaded: The color of the   corners (i', j') are given by "
                            },
                            {
                              "type": "inlineCode",
                              "value": "C[i', j']"
                            },
                            {
                              "type": "text",
                              "value": ". The color values of   the area in between is interpolated from the corner values.   The dimensions of "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "X"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": " and "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "Y"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": " must be the same as "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "C"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": ". When   Gouraud shading is used, "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "edgecolors"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": " is ignored."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "'auto': Choose 'flat' if dimensions of "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "X"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": " and "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "Y"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": " are one   larger than "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "C"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": ".  Choose 'nearest' if dimensions are the same."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "See "
                    },
                    {
                      "type": "inlineCode",
                      "value": "/gallery/images_contours_and_fields/pcolormesh_grids"
                    },
                    {
                      "type": "text",
                      "value": " for more description."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "shading",
              "type": "Param",
              "type_": "{'flat', 'nearest', 'gouraud', 'auto'}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether to snap the mesh to pixel boundaries."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "snap",
              "type": "Param",
              "type_": "bool, default: False"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Rasterize the pcolormesh when drawing vector graphics.  This can speed up rendering and produce smaller files for large data sets. See also "
                    },
                    {
                      "type": "inlineCode",
                      "value": "/gallery/misc/rasterization_demo"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "rasterized",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "",
              "type": "Param",
              "type_": "`matplotlib.collections.QuadMesh`"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Create a pseudocolor plot with a non-regular rectangular grid."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/axes/_axes.py",
  "item_line": 5988,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Other Parameters",
    "See Also",
    "Notes"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "An alternative implementation with slightly different features. For a detailed discussion on the differences see "
            },
            {
              "domain": null,
              "role": "ref",
              "type": "Directive",
              "value": "Differences between pcolor() and pcolormesh()\n<differences-pcolor-pcolormesh>"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "matplotlib",
          "path": "matplotlib.axes._axes:Axes.pcolor",
          "type": "RefInfo",
          "version": "3.6.3"
        },
        "type": "Link",
        "value": "pcolor"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "If "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "X"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "Y"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " are each equidistant, "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "~.Axes.imshow"
            },
            {
              "type": "text",
              "value": " can be a faster alternative."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "matplotlib",
          "path": "matplotlib.axes._axes:Axes.imshow",
          "type": "RefInfo",
          "version": "3.6.3"
        },
        "type": "Link",
        "value": "imshow"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self, *args, alpha=None, norm=None, cmap=None, vmin=None, vmax=None, shading=None, antialiased=False, data=None, **kwargs)"
  },
  "type": "DocBlob"
}