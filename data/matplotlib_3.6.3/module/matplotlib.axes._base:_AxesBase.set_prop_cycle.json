{
  "aliases": [
    "matplotlib.axes._base._AxesBase.set_prop_cycle"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The property cycle controls the style properties such as color, marker and linestyle of future plot commands. The style properties of data already added to the Axes are not modified."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Call signatures    "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "set_prop_cycle(cycler)\nset_prop_cycle(label=values[, label2=values2[, ...]])\nset_prop_cycle(label, values)"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Form 1 sets given "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "api",
                "module": "cycler:Cycler",
                "path": "cycler:Cycler",
                "type": "RefInfo",
                "version": "*"
              },
              "type": "Link",
              "value": "Cycler"
            },
            {
              "type": "text",
              "value": " object."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Form 2 creates a "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "api",
                "module": "cycler:Cycler",
                "path": "cycler:Cycler",
                "type": "RefInfo",
                "version": "*"
              },
              "type": "Link",
              "value": "Cycler"
            },
            {
              "type": "text",
              "value": " which cycles over one or more properties simultaneously and set it as the property cycle of the Axes. If multiple properties are given, their value lists must have the same length. This is just a shortcut for explicitly creating a cycler and passing it to the function, i.e. it's short for "
            },
            {
              "type": "inlineCode",
              "value": "set_prop_cycle(cycler(label=values label2=values2, ...))"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Form 3 creates a "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "api",
                "module": "cycler:Cycler",
                "path": "cycler:Cycler",
                "type": "RefInfo",
                "version": "*"
              },
              "type": "Link",
              "value": "Cycler"
            },
            {
              "type": "text",
              "value": " for a single property and set it as the property cycle of the Axes. This form exists for compatibility with the original "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "api",
                "module": "cycler:cycler",
                "path": "cycler:cycler",
                "type": "RefInfo",
                "version": "*"
              },
              "type": "Link",
              "value": "cycler.cycler"
            },
            {
              "type": "text",
              "value": " interface. Its use is discouraged in favor of the kwarg form, i.e. "
            },
            {
              "type": "inlineCode",
              "value": "set_prop_cycle(label=values)"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Set the given Cycler. "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "None"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " resets to the cycle defined by the current style."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cycler",
              "type": "Param",
              "type_": "Cycler"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The property key. Must be a valid "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Artist"
                    },
                    {
                      "type": "text",
                      "value": " property. For example, 'color' or 'linestyle'. Aliases are allowed, such as 'c' for 'color' and 'lw' for 'linewidth'."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "label",
              "type": "Param",
              "type_": "str"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Finite-length iterable of the property values. These values are validated and will raise a ValueError if invalid."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "values",
              "type": "Param",
              "type_": "iterable"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Set the property cycle of the Axes."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Setting the property cycle for a single property:"
      },
      {
        "type": "code",
        "value": "ax.set_prop_cycle(color=['red', 'green', 'blue'])"
      },
      {
        "type": "text",
        "value": "Setting the property cycle for simultaneously cycling over multiple\nproperties (e.g. red circle, green plus, blue cross):"
      },
      {
        "type": "code",
        "value": "ax.set_prop_cycle(color=['red', 'green', 'blue'],\n                  marker=['o', '+', 'x'])"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/axes/_base.py",
  "item_line": 1543,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Convenience function for creating validated cyclers for properties."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "matplotlib.rcsetup.cycler",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "matplotlib.rcsetup.cycler"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "The original function for creating unvalidated cyclers."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "cycler.cycler",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "cycler.cycler"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self, *args, **kwargs)"
  },
  "type": "DocBlob"
}