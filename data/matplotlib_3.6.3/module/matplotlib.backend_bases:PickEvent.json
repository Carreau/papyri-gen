{
  "aliases": [
    "matplotlib.backend_bases.PickEvent"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The mouse event that generated the pick."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "mouseevent",
              "type": "Param",
              "type_": "`MouseEvent`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The picked artist.  Note that artists are not pickable by default (see "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Artist.set_picker"
                    },
                    {
                      "type": "text",
                      "value": ")."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "artist",
              "type": "Param",
              "type_": "`matplotlib.artist.Artist`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Additional attributes may be present depending on the type of the picked object; e.g., a "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Line2D"
                    },
                    {
                      "type": "text",
                      "value": " pick may define different extra attributes than a "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".PatchCollection"
                    },
                    {
                      "type": "text",
                      "value": " pick."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "other",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This event is fired when the user picks a location on the canvas sufficiently close to an artist that has been made pickable with "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".Artist.set_picker"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "A PickEvent has a number of special attributes in addition to those defined by the parent "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "Event"
            },
            {
              "type": "text",
              "value": " class."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A pick event."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Bind a function ``on_pick()`` to pick events, that prints the coordinates\nof the picked data point::"
      },
      {
        "type": "text",
        "value": "    ax.plot(np.rand(100), 'o', picker=5)  # 5 points tolerance"
      },
      {
        "type": "text",
        "value": "    def on_pick(event):\n        line = event.artist\n        xdata, ydata = line.get_data()\n        ind = event.ind\n        print('on pick line:', np.array([xdata[ind], ydata[ind]]).T)"
      },
      {
        "type": "text",
        "value": "    cid = fig.canvas.mpl_connect('pick_event', on_pick)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/backend_bases.py",
  "item_line": 1414,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Attributes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}