{
  "aliases": [
    "matplotlib.bezier.find_bezier_t_intersecting_with_closedpath"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The intersection point "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "t"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " is approximated by two parameters "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "t0"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "t1"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " such that "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "t0"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " <= "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "t"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " <= "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "t1"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Search starts from "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "t0"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "t1"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " and uses a simple bisecting algorithm therefore one of the end points must be inside the path while the other doesn't. The search stops when the distance of the points parametrized by "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "t0"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "t1"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " gets smaller than the given "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "tolerance"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A function returning x, y coordinates of the B\u00e9zier at parameter "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "t"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ". It must have the signature      "
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "type": "code",
                  "value": "bezier_point_at_t(t: float) -> tuple[float, float]"
                }
              ],
              "param": "bezier_point_at_t",
              "type": "Param",
              "type_": "callable"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A function returning True if a given point (x, y) is inside the closed path. It must have the signature      "
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "type": "code",
                  "value": "inside_closedpath(point: tuple[float, float]) -> bool"
                }
              ],
              "param": "inside_closedpath",
              "type": "Param",
              "type_": "callable"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Start parameters for the search."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "t0, t1",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Maximal allowed distance between the final points."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "tolerance",
              "type": "Param",
              "type_": "float"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The B\u00e9zier path parameters."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "t0, t1",
              "type": "Param",
              "type_": "float"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Find the intersection of the B\u00e9zier curve with a closed path."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/bezier.py",
  "item_line": 113,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(bezier_point_at_t, inside_closedpath, t0=0.0, t1=1.0, tolerance=0.01)"
  },
  "type": "DocBlob"
}