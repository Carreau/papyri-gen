{
  "aliases": [
    "matplotlib.collections.Collection"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A Collection represents a sequence of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".Patch"
            },
            {
              "type": "text",
              "value": "\\es that can be drawn more efficiently together than individually. For example, when a single path is being drawn repeatedly at different offsets, the renderer can typically execute a "
            },
            {
              "type": "inlineCode",
              "value": "draw_marker()"
            },
            {
              "type": "text",
              "value": " call much more efficiently than a series of repeated calls to "
            },
            {
              "type": "inlineCode",
              "value": "draw_path()"
            },
            {
              "type": "text",
              "value": " with the offsets put in one-by-one."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Most properties of a collection can be configured per-element. Therefore, Collections have \"plural\" versions of many of the properties of a "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".Patch"
            },
            {
              "type": "text",
              "value": " (e.g. "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".Collection.get_paths"
            },
            {
              "type": "text",
              "value": " instead of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".Patch.get_path"
            },
            {
              "type": "text",
              "value": "). Exceptions are the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "zorder"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "hatch"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "pickradius"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "capstyle"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "joinstyle"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " properties, which can only be set globally for the whole collection."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Besides these exceptions, all properties can be specified as single values (applying to all elements) or sequences of values. The property of the "
            },
            {
              "type": "inlineCode",
              "value": "i"
            },
            {
              "type": "text",
              "value": "\\th element of the collection is    "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "prop[i % len(prop)]"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Each Collection can optionally be used as its own "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".ScalarMappable"
            },
            {
              "type": "text",
              "value": " by passing the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "norm"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "cmap"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " parameters to its constructor. If the Collection's "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".ScalarMappable"
            },
            {
              "type": "text",
              "value": " matrix "
            },
            {
              "type": "inlineCode",
              "value": "_A"
            },
            {
              "type": "text",
              "value": " has been set (via a call to "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".Collection.set_array"
            },
            {
              "type": "text",
              "value": "), then at draw time this internal scalar mappable will be used to set the "
            },
            {
              "type": "inlineCode",
              "value": "facecolors"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineCode",
              "value": "edgecolors"
            },
            {
              "type": "text",
              "value": ", ignoring those that were manually passed in."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Base class for Collections. Must be subclassed to be usable."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/collections.py",
  "item_line": 27,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}