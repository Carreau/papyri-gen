{
  "aliases": [
    "matplotlib.contour.ContourSet._make_paths"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Create and return Path objects for the specified segments and optional kind codes.  "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "segs"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " is a list of numpy arrays, each array is either a closed line loop or open line strip of 2D points with a shape of (npoints, 2).  "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "kinds"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " is either None or a list (with the same length as "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "segs"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ") of numpy arrays, each array is of shape (npoints,) and contains the kind codes for the corresponding line in "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "segs"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ".  If "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "kinds"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " is None then the Path constructor creates the kind codes assuming that the line is an open strip."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/contour.py",
  "item_line": 1057,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self, segs, kinds)"
  },
  "type": "DocBlob"
}