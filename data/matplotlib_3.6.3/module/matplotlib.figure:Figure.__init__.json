{
  "aliases": [
    "matplotlib.pyplot.Figure.__init__"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Properties: agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array and two offsets from the bottom left corner of the image alpha: scalar or None animated: bool canvas: FigureCanvas clip_box: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Bbox"
                    },
                    {
                      "type": "text",
                      "value": " clip_on: bool clip_path: Patch or (Path, Transform) or None constrained_layout: unknown constrained_layout_pads: unknown dpi: float edgecolor: color facecolor: color figheight: float figure: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Figure"
                    },
                    {
                      "type": "text",
                      "value": " figwidth: float frameon: bool gid: str in_layout: bool label: object layout_engine: unknown linewidth: number mouseover: bool path_effects: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".AbstractPathEffect"
                    },
                    {
                      "type": "text",
                      "value": " picker: None or bool or float or callable rasterized: bool size_inches: (float, float) or float sketch_params: (scale: float, length: float, randomness: float) snap: bool or None tight_layout: unknown transform: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Transform"
                    },
                    {
                      "type": "text",
                      "value": " url: str visible: bool zorder: float"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "**kwargs",
              "type": "Param",
              "type_": "`.Figure` properties, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Figure dimension "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(width, height)"
                    },
                    {
                      "type": "text",
                      "value": " in inches."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "figsize",
              "type": "Param",
              "type_": "2-tuple of floats, default: :rc:`figure.figsize`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Dots per inch."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dpi",
              "type": "Param",
              "type_": "float, default: :rc:`figure.dpi`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The figure patch facecolor."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "facecolor",
              "type": "Param",
              "type_": "default: :rc:`figure.facecolor`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The figure patch edge color."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "edgecolor",
              "type": "Param",
              "type_": "default: :rc:`figure.edgecolor`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The linewidth of the frame (i.e. the edge linewidth of the figure patch)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "linewidth",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "False"
                    },
                    {
                      "type": "text",
                      "value": ", suppress drawing the figure background patch."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "frameon",
              "type": "Param",
              "type_": "bool, default: :rc:`figure.frameon`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Subplot parameters. If not given, the default subplot parameters "
                    },
                    {
                      "type": "inlineCode",
                      "value": "figure.subplot.*"
                    },
                    {
                      "type": "text",
                      "value": " are used."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "subplotpars",
              "type": "Param",
              "type_": "`SubplotParams`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether to use the tight layout mechanism. See "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "matplotlib",
                        "path": "matplotlib.figure:Figure.set_tight_layout",
                        "type": "RefInfo",
                        "version": "3.6.3"
                      },
                      "type": "Link",
                      "value": ".set_tight_layout"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "args": "Discouraged",
                  "children": [],
                  "name": "admonition",
                  "options": {},
                  "type": "mystDirective",
                  "value": "The use of this parameter is discouraged. Please use\n``layout='tight'`` instead for the common case of\n``tight_layout=True`` and use `.set_tight_layout` otherwise."
                }
              ],
              "param": "tight_layout",
              "type": "Param",
              "type_": "bool or dict, default: :rc:`figure.autolayout`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "This is equal to "
                    },
                    {
                      "type": "inlineCode",
                      "value": "layout='constrained'"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "args": "Discouraged",
                  "children": [],
                  "name": "admonition",
                  "options": {},
                  "type": "mystDirective",
                  "value": "The use of this parameter is discouraged. Please use\n``layout='constrained'`` instead."
                }
              ],
              "param": "constrained_layout",
              "type": "Param",
              "type_": "bool, default: :rc:`figure.constrained_layout.use`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The layout mechanism for positioning of plot elements to avoid overlapping Axes decorations (labels, ticks, etc). Note that layout managers can have significant performance penalties. Defaults to "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "None"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "dd": [
                                {
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "to avoid overlapping axes decorations.  Can handle complex plot    layouts and colorbars, and is thus recommended."
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              "dt": {
                                "children": [
                                  {
                                    "type": "text",
                                    "value": "'constrained': The constrained layout solver adjusts axes sizes"
                                  }
                                ],
                                "type": "paragraph"
                              },
                              "type": "DefListItem"
                            }
                          ],
                          "type": "DefList"
                        },
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "See "
                            },
                            {
                              "type": "inlineCode",
                              "value": "/tutorials/intermediate/constrainedlayout_guide"
                            },
                            {
                              "type": "text",
                              "value": "   for examples."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "'compressed': uses the same algorithm as 'constrained', but   removes extra space between fixed-aspect-ratio Axes.  Best for   simple grids of axes."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "'tight': Use the tight layout mechanism. This is a relatively   simple algorithm that adjusts the subplot parameters so that   decorations do not overlap. See "
                            },
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": ".Figure.set_tight_layout"
                            },
                            {
                              "type": "text",
                              "value": " for   further details."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "A "
                            },
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": ".LayoutEngine"
                            },
                            {
                              "type": "text",
                              "value": " instance. Builtin layout classes are   "
                            },
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": ".ConstrainedLayoutEngine"
                            },
                            {
                              "type": "text",
                              "value": " and "
                            },
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": ".TightLayoutEngine"
                            },
                            {
                              "type": "text",
                              "value": ", more easily   accessible by 'constrained' and 'tight'.  Passing an instance   allows third parties to provide their own layout engine."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If not given, fall back to using the parameters "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "tight_layout"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "constrained_layout"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", including their config defaults "
                    },
                    {
                      "type": "inlineCode",
                      "value": "figure.autolayout"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "figure.constrained_layout.use"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "layout",
              "type": "Param",
              "type_": "{'constrained', 'compressed', 'tight', `.LayoutEngine`, None}"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/figure.py",
  "item_line": 2316,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Parameters",
    "Other Parameters"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self, figsize=None, dpi=None, *, facecolor=None, edgecolor=None, linewidth=0.0, frameon=None, subplotpars=None, tight_layout=None, constrained_layout=None, layout=None, **kwargs)"
  },
  "type": "DocBlob"
}