{
  "aliases": [
    "matplotlib.image.imsave"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "RGB(A) images are passed through.  Single channel images will be colormapped according to "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "cmap"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "norm"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "note "
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "If you want to save a single channel image as gray scale please use an image I/O library (such as pillow, tifffile, or imageio) directly."
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A path or a file-like object to store the image in. If "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "format"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is not set, then the output format is inferred from the extension of "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "fname"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", if any, and from "
                    },
                    {
                      "type": "inlineCode",
                      "value": "savefig.format"
                    },
                    {
                      "type": "text",
                      "value": " otherwise. If "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "format"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is set, it determines the output format."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "fname",
              "type": "Param",
              "type_": "str or path-like or file-like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The image data. The shape can be one of MxN (luminance), MxNx3 (RGB) or MxNx4 (RGBA)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "arr",
              "type": "Param",
              "type_": "array-like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmin"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmax"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " set the color scaling for the image by fixing the values that map to the colormap color limits. If either "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmin"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "vmax"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is None, that limit is determined from the "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "arr"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " min/max value."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "vmin, vmax",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A Colormap instance or registered colormap name. The colormap maps scalar data to colors. It is ignored for RGB(A) data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cmap",
              "type": "Param",
              "type_": "str or `~matplotlib.colors.Colormap`, default: :rc:`image.cmap`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The file format, e.g. 'png', 'pdf', 'svg', ...  The behavior when this is unset is documented under "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "fname"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "format",
              "type": "Param",
              "type_": "str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Indicates whether the "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(0, 0)"
                    },
                    {
                      "type": "text",
                      "value": " index of the array is in the upper left or lower left corner of the axes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "origin",
              "type": "Param",
              "type_": "{'upper', 'lower'}, default: :rc:`image.origin`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The DPI to store in the metadata of the file.  This does not affect the resolution of the output image.  Depending on file format, this may be rounded to the nearest integer."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dpi",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Metadata in the image file.  The supported keys depend on the output format, see the documentation of the respective backends for more information."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "metadata",
              "type": "Param",
              "type_": "dict, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Keyword arguments passed to "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "api",
                        "module": "PIL",
                        "path": "PIL.Image:Image.save",
                        "type": "RefInfo",
                        "version": "*"
                      },
                      "type": "Link",
                      "value": "PIL.Image.Image.save"
                    },
                    {
                      "type": "text",
                      "value": ".  If the 'pnginfo' key is present, it completely overrides "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "metadata"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", including the default 'Software' key."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "pil_kwargs",
              "type": "Param",
              "type_": "dict, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Colormap and save an array as an image file."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/image.py",
  "item_line": 1547,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(fname, arr, vmin=None, vmax=None, cmap=None, format=None, origin=None, dpi=100, *, metadata=None, pil_kwargs=None)"
  },
  "type": "DocBlob"
}