{
  "aliases": [
    "matplotlib.legend._parse_legend_args"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The parser is a bit involved because we support      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "legend()\nlegend(labels)\nlegend(handles, labels)\nlegend(labels=labels)\nlegend(handles=handles)\nlegend(handles=handles, labels=labels)"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The behavior for a mixture of positional and keyword handles and labels is undefined and issues a warning."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If handles are not given explicitly, the artists in these Axes are used as handles."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axs",
              "type": "Param",
              "type_": "list of `.Axes`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Positional parameters passed to "
                    },
                    {
                      "type": "inlineCode",
                      "value": "legend()"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "*args",
              "type": "Param",
              "type_": "tuple"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The value of the keyword argument "
                    },
                    {
                      "type": "inlineCode",
                      "value": "legend(handles=...)"
                    },
                    {
                      "type": "text",
                      "value": ", or "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "None"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " if that keyword argument was not used."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "handles",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The value of the keyword argument "
                    },
                    {
                      "type": "inlineCode",
                      "value": "legend(labels=...)"
                    },
                    {
                      "type": "text",
                      "value": ", or "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "None"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " if that keyword argument was not used."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "labels",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "All other keyword arguments passed to "
                    },
                    {
                      "type": "inlineCode",
                      "value": "legend()"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "**kwargs",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The legend handles."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "handles",
              "type": "Param",
              "type_": "list of `.Artist`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The legend labels."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "labels",
              "type": "Param",
              "type_": "list of str"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "args"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " with positional handles and labels removed."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "extra_args",
              "type": "Param",
              "type_": "tuple"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "kwargs"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " with keywords handles and labels removed."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "kwargs",
              "type": "Param",
              "type_": "dict"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Get the handles and labels from the calls to either "
            },
            {
              "type": "inlineCode",
              "value": "figure.legend"
            },
            {
              "type": "text",
              "value": " or "
            },
            {
              "type": "inlineCode",
              "value": "axes.legend"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/legend.py",
  "item_line": 1166,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(axs, *args, handles=None, labels=None, **kwargs)"
  },
  "type": "DocBlob"
}