{
  "aliases": [
    "matplotlib.offsetbox._get_packed_offsets"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "For simplicity of the description, the terminology used here assumes a horizontal layout, but the function works equally for a vertical layout."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "xdescent"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " is analogous to the usual descent, but along the x-direction; it is currently ignored."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "There are three packing "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "mode"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": "\\s:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "'fixed': The elements are packed tight to the left with a spacing of   "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "sep"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " in between. If "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "total"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "None"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " the returned total will be the   right edge of the last box. A non-"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "None"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " total will be passed unchecked   to the output. In particular this means that right edge of the last   box may be further to the right than the returned total."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "'expand': Distribute the boxes with equal spacing so that the left edge   of the first box is at 0, and the right edge of the last box is at   "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "total"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ". The parameter "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "sep"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is ignored in this mode. A total of "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "None"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "   is accepted and considered equal to 1. The total is returned unchanged   (except for the conversion "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "None"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " to 1). If the total is smaller than   the sum of the widths, the laid out boxes will overlap."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "'equal': If "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "total"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is given, the total space is divided in N equal   ranges and each box is left-aligned within its subspace.   Otherwise ("
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "total"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "None"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "), "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "sep"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " must be provided and each box is   left-aligned in its subspace of width "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(max(widths) + sep)"
                    },
                    {
                      "type": "text",
                      "value": ". The   total width is then calculated to be "
                    },
                    {
                      "type": "inlineCode",
                      "value": "N * (max(widths) + sep)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": false,
          "spread": false,
          "start": 1,
          "type": "list"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "(width, xdescent) of boxes to be packed."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "wd_list",
              "type": "Param",
              "type_": "list of (float, float)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Intended total length. "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "None"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " if not used."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "total",
              "type": "Param",
              "type_": "float or None"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Spacing between boxes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "sep",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The packing mode."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "mode",
              "type": "Param",
              "type_": "{'fixed', 'expand', 'equal'}"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The total width needed to accommodate the laid out boxes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "total",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The left offsets of the boxes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "offsets",
              "type": "Param",
              "type_": "array of float"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Pack boxes specified by their "
            },
            {
              "type": "inlineCode",
              "value": "(width, xdescent)"
            },
            {
              "type": "text",
              "value": " pair."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/offsetbox.py",
  "item_line": 49,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(wd_list, total, sep, mode='fixed')"
  },
  "type": "DocBlob"
}