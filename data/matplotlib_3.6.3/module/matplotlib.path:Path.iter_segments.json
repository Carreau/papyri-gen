{
  "aliases": [
    "matplotlib.transforms.Path.iter_segments"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Each iteration returns a pair "
            },
            {
              "type": "inlineCode",
              "value": "(vertices, code)"
            },
            {
              "type": "text",
              "value": ", where "
            },
            {
              "type": "inlineCode",
              "value": "vertices"
            },
            {
              "type": "text",
              "value": " is a sequence of 1-3 coordinate pairs, and "
            },
            {
              "type": "inlineCode",
              "value": "code"
            },
            {
              "type": "text",
              "value": " is a "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "Path"
            },
            {
              "type": "text",
              "value": " code."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Additionally, this method can provide a number of standard cleanups and conversions to the path."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If not None, the given affine transformation will be applied to the path."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "transform",
              "type": "Param",
              "type_": "None or :class:`~matplotlib.transforms.Transform`"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether to remove all NaNs from the path and skip over them using MOVETO commands."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "remove_nans",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If not None, must be a four-tuple (x1, y1, x2, y2) defining a rectangle in which to clip the path."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "clip",
              "type": "Param",
              "type_": "None or (float, float, float, float), optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, snap all nodes to pixels; if False, don't snap them. If None, snap if the path contains only segments parallel to the x or y axes, and no more than 1024 of them."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "snap",
              "type": "Param",
              "type_": "None or bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The width of the stroke being drawn (used for path snapping)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "stroke_width",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether to simplify the path by removing vertices that do not affect its appearance.  If None, use the "
                    },
                    {
                      "type": "inlineCode",
                      "value": "should_simplify"
                    },
                    {
                      "type": "text",
                      "value": " attribute.  See also "
                    },
                    {
                      "type": "inlineCode",
                      "value": "path.simplify"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "path.simplify_threshold"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "simplify",
              "type": "Param",
              "type_": "None or bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, curve segments will be returned as curve segments. If False, all curves will be converted to line segments."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "curves",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If not None, must be a 3-tuple of the form (scale, length, randomness), representing the sketch parameters."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "sketch",
              "type": "Param",
              "type_": "None or sequence, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Iterate over all curve segments in the path."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/path.py",
  "item_line": 354,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self, transform=None, remove_nans=True, clip=None, snap=False, stroke_width=1.0, simplify=None, curves=True, sketch=None)"
  },
  "type": "DocBlob"
}