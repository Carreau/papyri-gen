{
  "aliases": [
    "matplotlib.path.get_path_collection_extents"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The way that "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "paths"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "transforms"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "offsets"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " are combined follows the same method as for collections:  Each is iterated over independently, so if you have 3 paths, 2 transforms and 1 offset, their combinations are as follows:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "(A, A, A), (B, B, A), (C, A, A)"
                }
              ],
              "type": "paragraph"
            }
          ],
          "type": "blockquote"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Global transformation applied to all paths."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "master_transform",
              "type": "Param",
              "type_": "`.Transform`"
            },
            {
              "desc": [],
              "param": "paths",
              "type": "Param",
              "type_": "list of `Path`"
            },
            {
              "desc": [],
              "param": "transforms",
              "type": "Param",
              "type_": "list of `.Affine2D`"
            },
            {
              "desc": [],
              "param": "offsets",
              "type": "Param",
              "type_": "(N, 2) array-like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Transform applied to the offsets before offsetting the path."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "offset_transform",
              "type": "Param",
              "type_": "`.Affine2D`"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Given a sequence of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "Path"
            },
            {
              "type": "text",
              "value": "\\s, "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".Transform"
            },
            {
              "type": "text",
              "value": "\\s objects, and offsets, as found in a "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".PathCollection"
            },
            {
              "type": "text",
              "value": ", returns the bounding box that encapsulates all of them."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/path.py",
  "item_line": 1050,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Notes"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(master_transform, paths, transforms, offsets, offset_transform)"
  },
  "type": "DocBlob"
}