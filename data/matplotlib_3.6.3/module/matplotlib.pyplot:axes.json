{
  "aliases": [
    "matplotlib.pyplot.axes"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Call signatures      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "plt.axes()\nplt.axes(rect, projection=None, polar=False, **kwargs)\nplt.axes(ax)"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "If the figure already has an Axes with key ("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "args"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "kwargs"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ") then it will simply make that axes current and return it.  This behavior is deprecated. Meanwhile, if you do not want this behavior (i.e., you want to force the creation of a new axes), you must use a unique set of args and kwargs.  The Axes "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "label"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " attribute has been exposed for this purpose: if you want two Axes that are otherwise identical to be added to the figure, make sure you give them unique labels."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "This method also takes the keyword arguments for the returned Axes class. The keyword arguments for the rectilinear Axes class "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "~.axes.Axes"
                    },
                    {
                      "type": "text",
                      "value": " can be found in the following table but there might also be other keyword arguments if another projection is used, see the actual Axes class."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Properties: adjustable: {'box', 'datalim'} agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array and two offsets from the bottom left corner of the image alpha: scalar or None anchor: (float, float) or {'C', 'SW', 'S', 'SE', 'E', 'NE', ...} animated: bool aspect: {'auto', 'equal'} or float autoscale_on: bool autoscalex_on: unknown autoscaley_on: unknown axes_locator: Callable[[Axes, Renderer], Bbox] axisbelow: bool or 'line' box_aspect: float or None clip_box: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Bbox"
                    },
                    {
                      "type": "text",
                      "value": " clip_on: bool clip_path: Patch or (Path, Transform) or None facecolor or fc: color figure: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Figure"
                    },
                    {
                      "type": "text",
                      "value": " frame_on: bool gid: str in_layout: bool label: object mouseover: bool navigate: bool navigate_mode: unknown path_effects: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".AbstractPathEffect"
                    },
                    {
                      "type": "text",
                      "value": " picker: None or bool or float or callable position: [left, bottom, width, height] or "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "api",
                        "module": "matplotlib",
                        "path": "matplotlib.transforms:Bbox",
                        "type": "RefInfo",
                        "version": "*"
                      },
                      "type": "Link",
                      "value": "Bbox"
                    },
                    {
                      "type": "text",
                      "value": " prop_cycle: unknown rasterization_zorder: float or None rasterized: bool sketch_params: (scale: float, length: float, randomness: float) snap: bool or None title: str transform: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Transform"
                    },
                    {
                      "type": "text",
                      "value": " url: str visible: bool xbound: unknown xlabel: str xlim: (bottom: float, top: float) xmargin: float greater than -0.5 xscale: unknown xticklabels: unknown xticks: unknown ybound: unknown ylabel: str ylim: (bottom: float, top: float) ymargin: float greater than -0.5 yscale: unknown yticklabels: unknown yticks: unknown zorder: float"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "**kwargs",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The exact behavior of this function depends on the type:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "None"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": ": A new full window Axes is added using   "
                            },
                            {
                              "type": "inlineCode",
                              "value": "subplot(**kwargs)"
                            },
                            {
                              "type": "text",
                              "value": "."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "4-tuple of floats "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "rect"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": " = "
                            },
                            {
                              "type": "inlineCode",
                              "value": "[left, bottom, width, height]"
                            },
                            {
                              "type": "text",
                              "value": ".   A new Axes is added with dimensions "
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "rect"
                                }
                              ],
                              "type": "emphasis"
                            },
                            {
                              "type": "text",
                              "value": " in normalized   (0, 1) units using "
                            },
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": "~.Figure.add_axes"
                            },
                            {
                              "type": "text",
                              "value": " on the current figure."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                }
              ],
              "param": "arg",
              "type": "Param",
              "type_": "None or 4-tuple"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The projection type of the "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "~.axes.Axes"
                    },
                    {
                      "type": "text",
                      "value": ". "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "str"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is the name of a custom projection, see "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "matplotlib",
                        "path": "matplotlib.projections",
                        "type": "RefInfo",
                        "version": "3.6.3"
                      },
                      "type": "Link",
                      "value": "~matplotlib.projections"
                    },
                    {
                      "type": "text",
                      "value": ". The default None results in a 'rectilinear' projection."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "projection",
              "type": "Param",
              "type_": "{None, 'aitoff', 'hammer', 'lambert', 'mollweide', 'polar', 'rectilinear', str}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, equivalent to projection='polar'."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "polar",
              "type": "Param",
              "type_": "bool, default: False"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Share the x or y "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "matplotlib",
                        "path": "matplotlib.axis",
                        "type": "RefInfo",
                        "version": "3.6.3"
                      },
                      "type": "Link",
                      "value": "~matplotlib.axis"
                    },
                    {
                      "type": "text",
                      "value": " with sharex and/or sharey. The axis will have the same limits, ticks, and scale as the axis of the shared Axes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "sharex, sharey",
              "type": "Param",
              "type_": "`~.axes.Axes`, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A label for the returned Axes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "label",
              "type": "Param",
              "type_": "str"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The returned axes class depends on the projection used. It is "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "~.axes.Axes"
                    },
                    {
                      "type": "text",
                      "value": " if rectilinear projection is used and "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".projections.polar.PolarAxes"
                    },
                    {
                      "type": "text",
                      "value": " if polar projection is used."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "`~.axes.Axes`, or a subclass of `~.axes.Axes`"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Add an Axes to the current figure and make it the current Axes."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "::"
      },
      {
        "type": "text",
        "value": "    # Creating a new full window Axes\n    plt.axes()"
      },
      {
        "type": "text",
        "value": "    # Creating a new Axes with specified dimensions and a grey background\n    plt.axes((left, bottom, width, height), facecolor='grey')"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/pyplot.py",
  "item_line": 978,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Other Parameters",
    "Notes",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": ".Figure.add_axes",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": ".Figure.add_axes"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": ".pyplot.subplot",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": ".pyplot.subplot"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": ".Figure.add_subplot",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": ".Figure.add_subplot"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": ".Figure.subplots",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": ".Figure.subplots"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": ".pyplot.subplots",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": ".pyplot.subplots"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(arg=None, **kwargs)"
  },
  "type": "DocBlob"
}