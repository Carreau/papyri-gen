{
  "aliases": [
    "matplotlib.pyplot.streamplot"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Evenly spaced strictly increasing arrays to make a grid.  If 2D, all rows of "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "x"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " must be equal and all columns of "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "y"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " must be equal; i.e., they must be as if generated by "
                    },
                    {
                      "type": "inlineCode",
                      "value": "np.meshgrid(x_1d, y_1d)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x, y",
              "type": "Param",
              "type_": "1D/2D arrays"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "x"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "y"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "-velocities. The number of rows and columns must match the length of "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "y"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "x"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", respectively."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "u, v",
              "type": "Param",
              "type_": "2D arrays"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Controls the closeness of streamlines. When "
                    },
                    {
                      "type": "inlineCode",
                      "value": "density = 1"
                    },
                    {
                      "type": "text",
                      "value": ", the domain is divided into a 30x30 grid. "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "density"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " linearly scales this grid. Each cell in the grid can have, at most, one traversing streamline. For different densities in each direction, use a tuple (density_x, density_y)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "density",
              "type": "Param",
              "type_": "float or (float, float)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The width of the streamlines. With a 2D array the line width can be varied across the grid. The array must have the same shape as "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "u"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "v"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "linewidth",
              "type": "Param",
              "type_": "float or 2D array"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The streamline color. If given an array, its values are converted to colors using "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "cmap"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "norm"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ".  The array must have the same shape as "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "u"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "v"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "color",
              "type": "Param",
              "type_": "color or 2D array"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Data normalization and colormapping parameters for "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "color"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "; only used if "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "color"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is an array of floats. See "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "~.Axes.imshow"
                    },
                    {
                      "type": "text",
                      "value": " for a detailed description."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cmap, norm",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Scaling factor for the arrow size."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "arrowsize",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Arrow style specification. See "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "api",
                        "module": "matplotlib",
                        "path": "matplotlib.patches:FancyArrowPatch",
                        "type": "RefInfo",
                        "version": "*"
                      },
                      "type": "Link",
                      "value": "FancyArrowPatch"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "arrowstyle",
              "type": "Param",
              "type_": "str"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Minimum length of streamline in axes coordinates."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "minlength",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Coordinates of starting points for the streamlines in data coordinates (the same coordinates as the "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "x"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "y"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " arrays)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "start_points",
              "type": "Param",
              "type_": "Nx2 array"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The zorder of the streamlines and arrows. Artists with lower zorder values are drawn first."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "zorder",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Maximum length of streamline in axes coordinates."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "maxlength",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Integrate the streamline in forward, backward or both directions."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "integration_direction",
              "type": "Param",
              "type_": "{'forward', 'backward', 'both'}, default: 'both'"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If given, the following parameters also accept a string "
                    },
                    {
                      "type": "inlineCode",
                      "value": "s"
                    },
                    {
                      "type": "text",
                      "value": ", which is interpreted as "
                    },
                    {
                      "type": "inlineCode",
                      "value": "data[s]"
                    },
                    {
                      "type": "text",
                      "value": " (unless this raises an exception):"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "x"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "y"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "u"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "v"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "start_points"
                        }
                      ],
                      "type": "emphasis"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "data",
              "type": "Param",
              "type_": "indexable object, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If False, forces streamlines to continue until they leave the plot domain.  If True, they may be terminated if they come too close to another streamline."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "broken_streamlines",
              "type": "Param",
              "type_": "boolean, default: True"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Container object with attributes"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "inlineCode",
                              "value": "lines"
                            },
                            {
                              "type": "text",
                              "value": ": "
                            },
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": ".LineCollection"
                            },
                            {
                              "type": "text",
                              "value": " of streamlines"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "inlineCode",
                              "value": "arrows"
                            },
                            {
                              "type": "text",
                              "value": ": "
                            },
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": ".PatchCollection"
                            },
                            {
                              "type": "text",
                              "value": " containing "
                            },
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": ".FancyArrowPatch"
                            },
                            {
                              "type": "text",
                              "value": "   objects representing the arrows half-way along streamlines."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "This container will probably change in the future to allow changes to the colormap, alpha, etc. for both lines and arrows, but these changes should be backward compatible."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "StreamplotSet"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Draw streamlines of a vector flow."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/pyplot.py",
  "item_line": 2882,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(x, y, u, v, density=1, linewidth=None, color=None, cmap=None, norm=None, arrowsize=1, arrowstyle='-|>', minlength=0.1, transform=None, zorder=None, start_points=None, maxlength=4.0, integration_direction='both', broken_streamlines=True, *, data=None)"
  },
  "type": "DocBlob"
}