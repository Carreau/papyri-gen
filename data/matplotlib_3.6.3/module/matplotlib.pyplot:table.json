{
  "aliases": [
    "matplotlib.pyplot.table"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "At least one of "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "cellText"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " or "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "cellColours"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " must be specified. These parameters must be 2D lists, in which the outer lists define the rows and the inner list define the column values per row. Each row must have the same number of elements."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The table can optionally have row and column headers, which are configured using "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "rowLabels"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "rowColours"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "rowLoc"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "colLabels"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "colColours"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "colLoc"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " respectively."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For finer grained control over tables, use the "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".Table"
            },
            {
              "type": "text",
              "value": " class and add it to the axes with "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".Axes.add_table"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Table"
                    },
                    {
                      "type": "text",
                      "value": " properties."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "**kwargs",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "agg_filter: a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array and two offsets from the bottom left corner of the image alpha: scalar or None animated: bool clip_box: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Bbox"
                    },
                    {
                      "type": "text",
                      "value": " clip_on: bool clip_path: Patch or (Path, Transform) or None figure: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Figure"
                    },
                    {
                      "type": "text",
                      "value": " fontsize: float gid: str in_layout: bool label: object mouseover: bool path_effects: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".AbstractPathEffect"
                    },
                    {
                      "type": "text",
                      "value": " picker: None or bool or float or callable rasterized: bool sketch_params: (scale: float, length: float, randomness: float) snap: bool or None transform: "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".Transform"
                    },
                    {
                      "type": "text",
                      "value": " url: str visible: bool zorder: float"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "Properties:",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The texts to place into the table cells."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "Note"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ": Line breaks in the strings are currently not accounted for and will result in the text exceeding the cell boundaries."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cellText",
              "type": "Param",
              "type_": "2D list of str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The background colors of the cells."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cellColours",
              "type": "Param",
              "type_": "2D list of colors, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The alignment of the text within the cells."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cellLoc",
              "type": "Param",
              "type_": "{'left', 'center', 'right'}, default: 'right'"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The column widths in units of the axes. If not given, all columns will have a width of "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "1 / ncols"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "colWidths",
              "type": "Param",
              "type_": "list of float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The text of the row header cells."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "rowLabels",
              "type": "Param",
              "type_": "list of str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The colors of the row header cells."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "rowColours",
              "type": "Param",
              "type_": "list of colors, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The text alignment of the row header cells."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "rowLoc",
              "type": "Param",
              "type_": "{'left', 'center', 'right'}, default: 'left'"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The text of the column header cells."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "colLabels",
              "type": "Param",
              "type_": "list of str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The colors of the column header cells."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "colColours",
              "type": "Param",
              "type_": "list of colors, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The text alignment of the column header cells."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "colLoc",
              "type": "Param",
              "type_": "{'left', 'center', 'right'}, default: 'left'"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The position of the cell with respect to "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "ax"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ". This must be one of the "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "~.Table.codes"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "loc",
              "type": "Param",
              "type_": "str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A bounding box to draw the table into. If this is not "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "None"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": ", this overrides "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "loc"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "bbox",
              "type": "Param",
              "type_": "`.Bbox`, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The cell edges to be drawn with a line. See also "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "~.Cell.visible_edges"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "edges",
              "type": "Param",
              "type_": "substring of 'BRTL' or {'open', 'closed', 'horizontal', 'vertical'}"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The created table."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "`~matplotlib.table.Table`"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Add a table to an "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "~.axes.Axes"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/pyplot.py",
  "item_line": 2903,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Other Parameters"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(cellText=None, cellColours=None, cellLoc='right', colWidths=None, rowLabels=None, rowColours=None, rowLoc='left', colLabels=None, colColours=None, colLoc='center', loc='bottom', bbox=None, edges='closed', **kwargs)"
  },
  "type": "DocBlob"
}