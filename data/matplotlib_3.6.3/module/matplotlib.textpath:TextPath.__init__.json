{
  "aliases": [
    "matplotlib.text.TextPath.__init__"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Position of the text. For no offset, use "
                    },
                    {
                      "type": "inlineCode",
                      "value": "xy=(0, 0)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "xy",
              "type": "Param",
              "type_": "tuple or array of two float values"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The text to convert to a path."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "s",
              "type": "Param",
              "type_": "str"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Font size in points. Defaults to the size specified via the font properties "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "prop"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "size",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Font property. If not provided, will use a default "
                    },
                    {
                      "type": "inlineCode",
                      "value": "FontProperties"
                    },
                    {
                      "type": "text",
                      "value": " with parameters from the "
                    },
                    {
                      "type": "inlineCode",
                      "value": "rcParams<customizing-with-dynamic-rc-settings>"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "prop",
              "type": "Param",
              "type_": "`matplotlib.font_manager.FontProperties`, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "(Currently ignored)"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "_interpolation_steps",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether to use tex rendering."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "usetex",
              "type": "Param",
              "type_": "bool, default: False"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Create a path from the text. Note that it simply is a path, not an artist. You need to use the "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".PathPatch"
            },
            {
              "type": "text",
              "value": " (or other artists) to draw this path onto the canvas."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "The following creates a path from the string \"ABC\" with Helvetica\nfont face; and another path from the latex fraction 1/2::"
      },
      {
        "type": "text",
        "value": "    from matplotlib.textpath import TextPath\n    from matplotlib.font_manager import FontProperties"
      },
      {
        "type": "text",
        "value": "    fp = FontProperties(family=\"Helvetica\", style=\"italic\")\n    path1 = TextPath((12, 12), \"ABC\", size=12, prop=fp)\n    path2 = TextPath((0, 0), r\"$\\frac{1}{2}$\", size=12, usetex=True)"
      },
      {
        "type": "text",
        "value": "Also see :doc:`/gallery/text_labels_and_annotations/demo_text_path`."
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/textpath.py",
  "item_line": 309,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self, xy, s, size=None, prop=None, _interpolation_steps=1, usetex=False)"
  },
  "type": "DocBlob"
}