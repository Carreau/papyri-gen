{
  "aliases": [
    "matplotlib.pyplot.ScalarFormatter.set_powerlimits"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A tuple "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "(min_exp, max_exp)"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " containing the powers of 10 that determine the switchover threshold. For a number representable as "
                    },
                    {
                      "type": "inlineMath",
                      "value": "a \\times 10^\\mathrm{exp}"
                    },
                    {
                      "type": "text",
                      "value": " with "
                    },
                    {
                      "type": "inlineMath",
                      "value": "1 <= |a| < 10"
                    },
                    {
                      "type": "text",
                      "value": ", scientific notation will be used if "
                    },
                    {
                      "type": "inlineCode",
                      "value": "exp <= min_exp"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "type": "inlineCode",
                      "value": "exp >= max_exp"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The default limits are controlled by "
                    },
                    {
                      "type": "inlineCode",
                      "value": "axes.formatter.limits"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "In particular numbers with "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "exp"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " equal to the thresholds are written in scientific notation."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Typically, "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "min_exp"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " will be negative and "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "max_exp"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " will be positive."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "For example, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "formatter.set_powerlimits((-3, 4))"
                    },
                    {
                      "type": "text",
                      "value": " will provide the following formatting: "
                    },
                    {
                      "type": "inlineMath",
                      "value": "1 \\times 10^{-3}, 9.9 \\times 10^{-3}, 0.01,"
                    },
                    {
                      "type": "text",
                      "value": " "
                    },
                    {
                      "type": "inlineMath",
                      "value": "9999, 1 \\times 10^4"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "lims",
              "type": "Param",
              "type_": "(int, int)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Set size thresholds for scientific notation."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/ticker.py",
  "item_line": 605,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "matplotlib",
          "path": "matplotlib.ticker:ScalarFormatter.set_scientific",
          "type": "RefInfo",
          "version": "3.6.3"
        },
        "type": "Link",
        "value": "ScalarFormatter.set_scientific"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self, lims)"
  },
  "type": "DocBlob"
}