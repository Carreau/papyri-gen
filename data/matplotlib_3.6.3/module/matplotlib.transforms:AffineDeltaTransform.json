{
  "aliases": [
    "matplotlib.transforms.AffineDeltaTransform"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This class is intended to be used to transform displacements (\"position deltas\") between pairs of points (e.g., as the "
            },
            {
              "type": "inlineCode",
              "value": "offset_transform"
            },
            {
              "type": "text",
              "value": " of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": ".Collection"
            },
            {
              "type": "text",
              "value": "\\s): given a transform "
            },
            {
              "type": "inlineCode",
              "value": "t"
            },
            {
              "type": "text",
              "value": " such that "
            },
            {
              "type": "inlineCode",
              "value": "t =\nAffineDeltaTransform(t) + offset"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "AffineDeltaTransform"
            },
            {
              "type": "text",
              "value": " satisfies "
            },
            {
              "type": "inlineCode",
              "value": "AffineDeltaTransform(a - b) == AffineDeltaTransform(a) -\nAffineDeltaTransform(b)"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "This is implemented by forcing the offset components of the transform matrix to zero."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "This class is experimental as of 3.3, and the API may change."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A transform wrapper for transforming displacements between pairs of points."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/transforms.py",
  "item_line": 2699,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}