{
  "aliases": [
    "matplotlib.image.Bbox"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A mutable bounding box."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "**Create from known bounds**"
      },
      {
        "type": "text",
        "value": "The default constructor takes the boundary \"points\" ``[[xmin, ymin],\n[xmax, ymax]]``."
      },
      {
        "type": "text",
        "value": "    >>> Bbox([[1, 1], [3, 7]])\n    Bbox([[1.0, 1.0], [3.0, 7.0]])"
      },
      {
        "type": "text",
        "value": "Alternatively, a Bbox can be created from the flattened points array, the\nso-called \"extents\" ``(xmin, ymin, xmax, ymax)``"
      },
      {
        "type": "text",
        "value": "    >>> Bbox.from_extents(1, 1, 3, 7)\n    Bbox([[1.0, 1.0], [3.0, 7.0]])"
      },
      {
        "type": "text",
        "value": "or from the \"bounds\" ``(xmin, ymin, width, height)``."
      },
      {
        "type": "text",
        "value": "    >>> Bbox.from_bounds(1, 1, 2, 6)\n    Bbox([[1.0, 1.0], [3.0, 7.0]])"
      },
      {
        "type": "text",
        "value": "**Create from collections of points**"
      },
      {
        "type": "text",
        "value": "The \"empty\" object for accumulating Bboxs is the null bbox, which is a\nstand-in for the empty set."
      },
      {
        "type": "text",
        "value": "    >>> Bbox.null()\n    Bbox([[inf, inf], [-inf, -inf]])"
      },
      {
        "type": "text",
        "value": "Adding points to the null bbox will give you the bbox of those points."
      },
      {
        "type": "text",
        "value": "    >>> box = Bbox.null()\n    >>> box.update_from_data_xy([[1, 1]])\n    >>> box\n    Bbox([[1.0, 1.0], [1.0, 1.0]])\n    >>> box.update_from_data_xy([[2, 3], [3, 2]], ignore=False)\n    >>> box\n    Bbox([[1.0, 1.0], [3.0, 3.0]])"
      },
      {
        "type": "text",
        "value": "Setting ``ignore=True`` is equivalent to starting over from a null bbox."
      },
      {
        "type": "text",
        "value": "    >>> box.update_from_data_xy([[1, 1]], ignore=True)\n    >>> box\n    Bbox([[1.0, 1.0], [1.0, 1.0]])"
      },
      {
        "type": "text",
        "value": ".. warning::"
      },
      {
        "type": "text",
        "value": "    It is recommended to always specify ``ignore`` explicitly.  If not, the\n    default value of ``ignore`` can be changed at any time by code with\n    access to your Bbox, for example using the method `~.Bbox.ignore`."
      },
      {
        "type": "text",
        "value": "**Properties of the ``null`` bbox**"
      },
      {
        "type": "text",
        "value": ".. note::"
      },
      {
        "type": "text",
        "value": "    The current behavior of `Bbox.null()` may be surprising as it does\n    not have all of the properties of the \"empty set\", and as such does\n    not behave like a \"zero\" object in the mathematical sense. We may\n    change that in the future (with a deprecation period)."
      },
      {
        "type": "text",
        "value": "The null bbox is the identity for intersections"
      },
      {
        "type": "text",
        "value": "    >>> Bbox.intersection(Bbox([[1, 1], [3, 7]]), Bbox.null())\n    Bbox([[1.0, 1.0], [3.0, 7.0]])"
      },
      {
        "type": "text",
        "value": "except with itself, where it returns the full space."
      },
      {
        "type": "text",
        "value": "    >>> Bbox.intersection(Bbox.null(), Bbox.null())\n    Bbox([[-inf, -inf], [inf, inf]])"
      },
      {
        "type": "text",
        "value": "A union containing null will always return the full space (not the other\nset!)"
      },
      {
        "type": "text",
        "value": "    >>> Bbox.union([Bbox([[0, 0], [0, 0]]), Bbox.null()])\n    Bbox([[-inf, -inf], [inf, inf]])"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/matplotlib/transforms.py",
  "item_line": 673,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}