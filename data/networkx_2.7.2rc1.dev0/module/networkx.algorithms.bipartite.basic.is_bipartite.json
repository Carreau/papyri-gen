{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [],
            "param": "G",
            "type_": "NetworkX graph"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Returns True if graph G is bipartite, False if not."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.is_bipartite"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "networkx",
              "networkx",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "algorithms",
              "networkx.algorithms",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "bipartite",
              "networkx.algorithms.bipartite",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "G",
              "typing.Generator",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "nx",
              "networkx",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "path_graph",
              "networkx.generators.classic.path_graph",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "print",
              "builtins.print",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "bipartite",
              "networkx.algorithms.bipartite",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "is_bipartite",
              "networkx.algorithms.bipartite.basic.is_bipartite",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "G",
              "typing.Generator",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "True"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "networkx/algorithms/bipartite/basic.py",
  "item_line": 84,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Examples",
    "See Also"
  ],
  "references": null,
  "refs": [
    "builtins.print",
    "color",
    "is_bipartite_node_set",
    "networkx",
    "networkx.algorithms",
    "networkx.algorithms.bipartite",
    "networkx.algorithms.bipartite.basic.is_bipartite",
    "networkx.generators.classic.path_graph",
    "typing.Generator"
  ],
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "color",
        "ref": "networkx.algorithms.bipartite.basic.color"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "is_bipartite_node_set",
        "ref": "networkx.algorithms.bipartite.basic.is_bipartite_node_set"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "is_bipartite(G)"
  }
}