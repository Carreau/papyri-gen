{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The nodes are labeled with the attribute "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "networkx",
                    "path": "networkx.algorithms.bipartite",
                    "version": "2.7.2rc1.dev0"
                  },
                  "value": "bipartite"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " set to an integer 0 or 1 representing membership in part 0 or part 1 of the bipartite graph."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "create_using"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " is an instance of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "networkx.MultiGraph"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "networkx.MultiDiGraph"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and the entries of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "A",
                    "version": null
                  },
                  "value": "A"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " are of type "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "int"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", then this function returns a multigraph (of the same type as "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "create_using"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": ") with parallel edges. In this case, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "edge_attribute"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " will be ignored."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A biadjacency matrix representation of a graph"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "A: scipy sparse matrix",
                "type_": ""
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Use specified graph for result.  The default is Graph()"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "create_using: NetworkX graph",
                "type_": ""
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Name of edge attribute to store matrix numeric value. The data will have the same type as the matrix entry (int, float, (real,imag))."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "edge_attribute: string",
                "type_": ""
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Creates a new bipartite graph from a biadjacency matrix given as a SciPy sparse matrix."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.bipartite.from_biadjacency_matrix"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "networkx/algorithms/bipartite/matrix.py",
  "item_line": 120,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Notes",
    "See Also",
    "References"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.algorithms.bipartite.matrix.biadjacency_matrix",
          "version": "2.7.2rc1.dev0"
        },
        "value": "biadjacency_matrix"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.convert_matrix.from_numpy_array",
          "version": "2.7.2rc1.dev0"
        },
        "value": "from_numpy_array"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "from_biadjacency_matrix(A, create_using=None, edge_attribute='weight')"
  }
}