{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The redundancy coefficient of a node "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "v"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " is the fraction of pairs of neighbors of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "v"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " that are both linked to other nodes. In a one-mode projection these nodes would be linked together even if "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "v"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " were not there."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "More formally, for any vertex "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "v"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": ", the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "redundancy coefficient of `v`"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " is defined by"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "rc(v) = \\frac{|\\{\\{u, w\\} \\subseteq N(v),\n\\: \\exists v' \\neq  v,\\: (v',u) \\in E\\:\n\\mathrm{and}\\: (v',w) \\in E\\}|}{ \\frac{|N(v)|(|N(v)|-1)}{2}},"
          },
          "type": "BlockMath"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "where "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "N(v)"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " is the set of neighbors of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "v"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "G",
                    "version": null
                  },
                  "value": "G"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A bipartite graph"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "G",
                "type_": "graph"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Compute redundancy for these nodes. The default is all nodes in G."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "nodes",
                "type_": "list or iterable (optional)"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If any of the nodes in the graph (or in "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "networkx",
                              "path": "networkx.classes.function.nodes",
                              "version": "2.7.2rc1.dev0"
                            },
                            "value": "nodes"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ", if specified) has (out-)degree less than two (which would result in division by zero, according to the definition of the redundancy coefficient)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "",
                "type_": "NetworkXError"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A dictionary keyed by node with the node redundancy value."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "redundancy",
                "type_": "dictionary"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Computes the node redundancy coefficients for the nodes in the bipartite graph "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "G",
                    "version": null
                  },
                  "value": "G"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.bipartite.node_redundancy"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "value": [
            ">>> from networkx.algorithms import bipartite",
            ">>> G = nx.cycle_graph(4)",
            ">>> rc = bipartite.node_redundancy(G)",
            ">>> rc[0]",
            "1.0"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            ">>> from networkx.algorithms import bipartite",
            ">>> G = nx.cycle_graph(4)",
            ">>> rc = bipartite.node_redundancy(G)",
            ">>> sum(rc.values()) / len(G)",
            "1.0"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            ">>> from networkx.algorithms import bipartite",
            ">>> G = nx.cycle_graph(4)",
            ">>> rc = bipartite.node_redundancy(G)",
            ">>> nodes = [0, 2]",
            ">>> sum(rc[n] for n in nodes) / len(nodes)",
            "1.0"
          ]
        },
        "type": "BlockQuote"
      }
    ],
    "title": null
  },
  "item_file": "networkx/algorithms/bipartite/redundancy.py",
  "item_line": 9,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples",
    "Raises",
    "References"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "node_redundancy(G, nodes=None)"
  }
}