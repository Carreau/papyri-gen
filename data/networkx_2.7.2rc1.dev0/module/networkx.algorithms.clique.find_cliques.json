{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "For each node "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "n"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "maximal clique for n"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " is a largest complete subgraph containing "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "n"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ". The largest maximal clique is sometimes called the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "maximum clique"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This function returns an iterator over cliques, each of which is a list of nodes. It is an iterative implementation, so should not suffer from recursion depth issues."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This function accepts a list of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "networkx",
                    "path": "networkx.classes.function.nodes",
                    "version": "2.7.2rc1.dev0"
                  },
                  "value": "nodes"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " and only the maximal cliques containing all of these "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "networkx",
                    "path": "networkx.classes.function.nodes",
                    "version": "2.7.2rc1.dev0"
                  },
                  "value": "nodes"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " are returned. It can considerably speed up the running time if some specific cliques are desired."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "To obtain a list of all maximal cliques, use "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "list(find_cliques(G))"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": ". However, be aware that in the worst-case, the length of this list can be exponential in the number of nodes in the graph. This function avoids storing all cliques in memory by only keeping current candidate node lists in memory during its search."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This implementation is based on the algorithm published by Bron and Kerbosch (1973) , as adapted by Tomita, Tanaka and Takahashi (2006)  and discussed in Cazals and Karande (2008) . It essentially unrolls the recursion used in the references to avoid issues of recursion stack depth (for a recursive implementation, see "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "find_cliques_recursive"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ")."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This algorithm ignores self-loops and parallel edges, since cliques are not conventionally defined with such edges."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "An undirected graph."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "G",
                "type_": "NetworkX graph"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If provided, only yield "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "maximal cliques"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " containing all nodes in "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "networkx",
                              "path": "networkx.classes.function.nodes",
                              "version": "2.7.2rc1.dev0"
                            },
                            "value": "nodes"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ". If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "networkx",
                              "path": "networkx.classes.function.nodes",
                              "version": "2.7.2rc1.dev0"
                            },
                            "value": "nodes"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " isn't a clique itself, a ValueError is raised."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "nodes",
                "type_": "list, optional (default=None)"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "networkx",
                              "path": "networkx.classes.function.nodes",
                              "version": "2.7.2rc1.dev0"
                            },
                            "value": "nodes"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is not a clique."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "",
                "type_": "ValueError"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "An iterator over maximal cliques, each of which is a list of nodes in "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "G",
                              "version": null
                            },
                            "value": "G"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ". If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "networkx",
                              "path": "networkx.classes.function.nodes",
                              "version": "2.7.2rc1.dev0"
                            },
                            "value": "nodes"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is provided, only the maximal cliques containing all the nodes in "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "networkx",
                              "path": "networkx.classes.function.nodes",
                              "version": "2.7.2rc1.dev0"
                            },
                            "value": "nodes"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " are returned. The order of cliques is arbitrary."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "",
                "type_": "iterator"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Returns all maximal cliques in an undirected graph."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.find_cliques"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "networkx/algorithms/clique.py",
  "item_line": 104,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "See Also",
    "Notes",
    "References"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "A recursive version of the same algorithm."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.algorithms.clique.find_cliques_recursive",
          "version": "2.7.2rc1.dev0"
        },
        "value": "find_cliques_recursive"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "find_cliques(G, nodes=None)"
  }
}