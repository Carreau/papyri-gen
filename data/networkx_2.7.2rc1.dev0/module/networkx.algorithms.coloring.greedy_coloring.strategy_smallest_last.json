{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Specifically, the degrees of each node are tracked in a bucket queue. From this, the node of minimum degree is repeatedly popped from the graph, updating its neighbors' degrees."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": [
                    "G"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is a NetworkX graph. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "colors"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is ignored."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This implementation of the strategy runs in $O(n + m)$ time (ignoring polylogarithmic factors), where $n$ is the number of nodes and $m$ is the number of edges."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This strategy is related to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "strategy_independent_set"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ": if we interpret each node removed as an independent set of size one, then this strategy chooses an independent set of size one instead of a maximal independent set."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Returns a deque of the nodes of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "G"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", \"smallest\" last."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.coloring.strategy_smallest_last"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "networkx/algorithms/coloring/greedy_coloring.py",
  "item_line": 50,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "strategy_smallest_last(G, colors)"
  }
}