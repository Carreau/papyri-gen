{
  "aliases": [
    "networkx.community.quality._require_partition"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Raises "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "networkx.NetworkXError"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " if the partition is not valid."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This decorator should be used on functions whose first two arguments are a graph and a partition of the nodes of that graph (in that order)::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ">>> @require_partition\n... def foo(G, partition):\n...     print(\"partition is valid!\")\n...\n>>> G = nx.complete_graph(5)\n>>> partition = [{0, 1}, {2, 3}, {4}]\n>>> foo(G, partition)\npartition is valid!\n>>> partition = [{0}, {2, 3}, {4}]\n>>> foo(G, partition)\nTraceback (most recent call last):\n  ...\nnetworkx.exception.NetworkXError: `partition` is not a valid partition of the nodes of G\n>>> partition = [{0, 1}, {1, 2, 3}, {4}]\n>>> foo(G, partition)\nTraceback (most recent call last):\n  ...\nnetworkx.exception.NetworkXError: `partition` is not a valid partition of the nodes of G"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Decorator to check that a valid partition is input to a function"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "networkx/algorithms/community/quality.py",
  "item_line": 25,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "_require_partition(G, partition)"
  }
}