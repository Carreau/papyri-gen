{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The average connectivity "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "\\bar{\\kappa}"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " of a graph G is the average of local node connectivity over all pairs of nodes of G  ."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "\\bar { \\kappa} ( G) = \\frac { \\sum_ { u,v} \\kappa_ { G} ( u,v)} { { n \\choose 2}} "
          },
          "type": "BlockMath"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Undirected graph"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "G",
            "type_": "NetworkX graph"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "A function for computing the maximum flow among a pair of nodes. The function has to accept at least three parameters: a Digraph, a source node, and a target node. And return a residual network that follows NetworkX conventions (see "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "maximum_flow"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " for details). If flow_func is None, the default maximum flow function ("
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "edmonds_karp"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ") is used. See "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "local_node_connectivity"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " for details. The choice of the default function may change from version to version and should not be relied on. Default value: None."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "flow_func",
            "type_": "function"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Average node connectivity"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "K",
            "type_": "float"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Returns the average connectivity of a graph G."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.average_node_connectivity"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "networkx/algorithms/connectivity/connectivity.py",
  "item_line": 352,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "References"
  ],
  "references": null,
  "refs": [
    "edge_connectivity",
    "edmonds_karp",
    "local_node_connectivity",
    "maximum_flow",
    "node_connectivity",
    "preflow_push",
    "shortest_augmenting_path"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "meth"
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "local_node_connectivity",
        "ref": "networkx.algorithms.connectivity.connectivity.local_node_connectivity"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "meth"
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "node_connectivity",
        "ref": "networkx.algorithms.connectivity.connectivity.node_connectivity"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "meth"
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "edge_connectivity",
        "ref": "networkx.algorithms.connectivity.connectivity.edge_connectivity"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "meth"
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "maximum_flow",
        "ref": "networkx.algorithms.flow.maxflow.maximum_flow"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "meth"
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "edmonds_karp",
        "ref": "networkx.algorithms.flow.edmondskarp.edmonds_karp"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "meth"
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "preflow_push",
        "ref": "networkx.algorithms.flow.preflowpush.preflow_push"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "meth"
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "shortest_augmenting_path",
        "ref": "networkx.algorithms.flow.shortestaugmentingpath.shortest_augmenting_path"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "average_node_connectivity(G, flow_func=None)"
  }
}