{
  "aliases": [
    "networkx.recursive_simple_cycles"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "A "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "simple cycle"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": ", or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "elementary circuit"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": ", is a closed path where no node appears twice. Two elementary circuits are distinct if they are not cyclic permutations of each other."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This version uses a recursive algorithm to build a list of cycles. You should probably use the iterator version called simple_cycles(). Warning: This recursive version uses lots of RAM! It appears in NetworkX for pedagogical value."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The implementation follows pp. 79-80 in ."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The time complexity is $O((n+e)(c+1))$ for $n$ nodes, $e$ edges and $c$ elementary circuits."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A directed graph"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "G",
                "type_": "NetworkX DiGraph"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [],
                "param": "",
                "type_": "A list of cycles, where each cycle is represented by a list of nodes"
              },
              {
                "desc": [],
                "param": "",
                "type_": "along the cycle."
              },
              {
                "desc": [],
                "param": "",
                "type_": "Example:"
              },
              {
                "desc": [],
                "param": "",
                "type_": ">>> edges = [(0, 0), (0, 1), (0, 2), (1, 2), (2, 0), (2, 1), (2, 2)]"
              },
              {
                "desc": [],
                "param": "",
                "type_": ">>> G = nx.DiGraph(edges)"
              },
              {
                "desc": [],
                "param": "",
                "type_": ">>> nx.recursive_simple_cycles(G)"
              },
              {
                "desc": [],
                "param": "",
                "type_": "[[0], [2], [0, 1, 2], [0, 2], [1, 2]]"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Find simple cycles (elementary circuits) of a directed graph."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "networkx/algorithms/cycles.py",
  "item_line": 227,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes",
    "References",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.algorithms.cycles.simple_cycles",
          "version": "2.7.2rc1.dev0"
        },
        "value": "simple_cycles"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.algorithms.cycles.cycle_basis",
          "version": "2.7.2rc1.dev0"
        },
        "value": "cycle_basis"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "recursive_simple_cycles(G)"
  }
}