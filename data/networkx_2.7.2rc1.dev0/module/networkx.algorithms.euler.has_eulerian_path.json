{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "An Eulerian path is a path in a graph which uses each edge of a graph exactly once. If "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "source",
                    "version": null
                  },
                  "value": "source"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is specified, then this function checks whether an Eulerian path that starts at node "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "source",
                    "version": null
                  },
                  "value": "source"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " exists."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "dd": [
                  {
                    "data": {
                      "children": [
                        {
                          "value": [
                            {
                              "data": {
                                "inline": [
                                  {
                                    "data": {
                                      "value": "at most one vertex has out_degree - in_degree = 1,"
                                    },
                                    "type": "Words"
                                  }
                                ],
                                "inner": []
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "value": [
                            {
                              "data": {
                                "inline": [
                                  {
                                    "data": {
                                      "value": "at most one vertex has in_degree - out_degree = 1,"
                                    },
                                    "type": "Words"
                                  }
                                ],
                                "inner": []
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "value": [
                            {
                              "data": {
                                "inline": [
                                  {
                                    "data": {
                                      "value": "every other vertex has equal in_degree and out_degree,"
                                    },
                                    "type": "Words"
                                  }
                                ],
                                "inner": []
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "value": [
                            {
                              "data": {
                                "inline": [
                                  {
                                    "data": {
                                      "value": "and all of its vertices with nonzero degree belong to a       single connected component of the underlying undirected graph."
                                    },
                                    "type": "Words"
                                  }
                                ],
                                "inner": []
                              },
                              "type": "Paragraph"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "BulletList"
                  }
                ],
                "dt": {
                  "inline": [
                    {
                      "data": {
                        "value": "A directed graph has an Eulerian path iff:"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                }
              }
            ]
          },
          "type": "DefList"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "If "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "source",
                    "version": null
                  },
                  "value": "source"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is not None, an Eulerian path starting at "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "source",
                    "version": null
                  },
                  "value": "source"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " exists if no other node has out_degree - in_degree = 1. This is equivalent to either there exists an Eulerian circuit or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "source",
                    "version": null
                  },
                  "value": "source"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " has out_degree - in_degree = 1 and the conditions above hold."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "dd": [
                  {
                    "data": {
                      "children": [
                        {
                          "value": [
                            {
                              "data": {
                                "inline": [
                                  {
                                    "data": {
                                      "value": "exactly zero or two vertices have odd degree,"
                                    },
                                    "type": "Words"
                                  }
                                ],
                                "inner": []
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "value": [
                            {
                              "data": {
                                "inline": [
                                  {
                                    "data": {
                                      "value": "and all of its vertices with nonzero degree belong to a"
                                    },
                                    "type": "Words"
                                  }
                                ],
                                "inner": []
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "value": [
                            {
                              "data": {
                                "inline": [
                                  {
                                    "data": {
                                      "value": "single connected component."
                                    },
                                    "type": "Words"
                                  }
                                ],
                                "inner": []
                              },
                              "type": "Paragraph"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "BulletList"
                  }
                ],
                "dt": {
                  "inline": [
                    {
                      "data": {
                        "value": "An undirected graph has an Eulerian path iff:"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                }
              }
            ]
          },
          "type": "DefList"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "If "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "source",
                    "version": null
                  },
                  "value": "source"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is not None, an Eulerian path starting at "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "source",
                    "version": null
                  },
                  "value": "source"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " exists if either there exists an Eulerian circuit or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "source",
                    "version": null
                  },
                  "value": "source"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " has an odd degree and the conditions above hold."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The graph to find an euler path in."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "G",
            "type_": "NetworkX Graph"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Starting node for path."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "source",
            "type_": "node, optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [],
            "param": "Bool",
            "type_": "True if G has an Eulerian path."
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Return True iff "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "G",
                    "version": null
                  },
                  "value": "G"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " has an Eulerian path."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.has_eulerian_path"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "networkx/algorithms/euler.py",
  "item_line": 216,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also"
  ],
  "references": null,
  "refs": [
    "eulerian_path",
    "is_eulerian"
  ],
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "is_eulerian",
        "ref": "networkx.algorithms.euler.is_eulerian"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "eulerian_path",
        "ref": "networkx.algorithms.euler.eulerian_path"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "has_eulerian_path(G, source=None)"
  }
}