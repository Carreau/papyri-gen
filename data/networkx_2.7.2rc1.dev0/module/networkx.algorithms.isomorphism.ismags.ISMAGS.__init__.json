{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [],
            "param": "graph: networkx.Graph",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "subgraph: networkx.Graph",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Function used to determine whether two nodes are equivalent. Its signature should look like "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "f(n1: dict, n2: dict) -> bool"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", with "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "n1"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "n2"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " node property dicts. See also "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "~networkx.algorithms.isomorphism.categorical_node_match"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " and friends. If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "None"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", all nodes are considered equal."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "node_match: collections.abc.Callable or None",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Function used to determine whether two edges are equivalent. Its signature should look like "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "f(e1: dict, e2: dict) -> bool"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", with "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "networkx",
                          "path": "networkx.generators.degree_seq.DegreeSequenceRandomGraph.phase1",
                          "version": "2.7.2rc1.dev0"
                        },
                        "value": "e1"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "networkx",
                          "path": "networkx.generators.degree_seq.DegreeSequenceRandomGraph.phase2",
                          "version": "2.7.2rc1.dev0"
                        },
                        "value": "e2"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " edge property dicts. See also "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "~networkx.algorithms.isomorphism.categorical_edge_match"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " and friends. If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "None"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", all edges are considered equal."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "edge_match: collections.abc.Callable or None",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "A cache used for caching graph symmetries."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "cache: collections.abc.Mapping",
            "type_": ""
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.isomorphism.ISMAGS.__init__"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "networkx/algorithms/isomorphism/ismags.py",
  "item_line": 270,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Parameters"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "__init__(self, graph, subgraph, node_match=None, edge_match=None, cache=None)"
  }
}