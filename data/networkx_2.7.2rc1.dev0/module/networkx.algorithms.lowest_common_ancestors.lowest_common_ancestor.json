{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Only defined on non-null directed acyclic graphs. Takes n log(n) time in the size of the graph. See "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "networkx",
                    "path": "networkx.algorithms.lowest_common_ancestors.all_pairs_lowest_common_ancestor",
                    "version": "2.7.2rc1.dev0"
                  },
                  "value": "all_pairs_lowest_common_ancestor"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " when you have more than one pair of nodes of interest."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [],
                "param": "G",
                "type_": "NetworkX directed graph"
              },
              {
                "desc": [],
                "param": "node1, node2",
                "type_": "nodes in the graph."
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Returned if no common ancestor between "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "node1"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "node2"
                          },
                          "type": "Directive"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "default",
                "type_": "object"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [],
                "param": "",
                "type_": "The lowest common ancestor of node1 and node2,"
              },
              {
                "desc": [],
                "param": "",
                "type_": "or default if they have no common ancestors."
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Compute the lowest common ancestor of the given pair of nodes."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.lowest_common_ancestor"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "networkx/algorithms/lowest_common_ancestors.py",
  "item_line": 114,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "See Also"
  ],
  "references": null,
  "refs": [
    "all_pairs_lowest_common_ancestor",
    "tree_all_pairs_lowest_common_ancestor"
  ],
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "tree_all_pairs_lowest_common_ancestor",
        "ref": "networkx.algorithms.lowest_common_ancestors.tree_all_pairs_lowest_common_ancestor"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "all_pairs_lowest_common_ancestor",
        "ref": "networkx.algorithms.lowest_common_ancestors.all_pairs_lowest_common_ancestor"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "lowest_common_ancestor(G, node1, node2, default=None)"
  }
}