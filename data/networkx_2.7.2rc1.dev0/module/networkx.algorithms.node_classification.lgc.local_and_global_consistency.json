{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [],
                "param": "G",
                "type_": "NetworkX Graph"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Clamping factor"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "alpha",
                "type_": "float"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Maximum number of iterations allowed"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "max_iter",
                "type_": "int"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Name of target labels to predict"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "label_name",
                "type_": "string"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If no nodes in "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "G",
                              "version": null
                            },
                            "value": "G"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " have attribute "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "label_name"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "",
                "type_": "NetworkXError"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "List of length "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "len(G)"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " with the predicted labels for each node."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "predicted",
                "type_": "list"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Node classification by Local and Global Consistency"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.node_classification.local_and_global_consistency"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            {
              "link": {
                "data": "from",
                "type": "str"
              },
              "type": "kn"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "networkx",
                    "path": "networkx",
                    "version": "2.7.2rc1.dev0"
                  },
                  "value": "networkx"
                },
                "type": "Link"
              },
              "type": "nn"
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "nn"
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "networkx",
                    "path": "networkx.algorithms",
                    "version": "2.7.2rc1.dev0"
                  },
                  "value": "algorithms"
                },
                "type": "Link"
              },
              "type": "nn"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "import",
                "type": "str"
              },
              "type": "kn"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "networkx",
                    "path": "networkx.algorithms.node_classification",
                    "version": "2.7.2rc1.dev0"
                  },
                  "value": "node_classification"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "typing",
                    "path": "typing.Generator",
                    "version": "*"
                  },
                  "value": "G"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "networkx",
                    "path": "networkx",
                    "version": "2.7.2rc1.dev0"
                  },
                  "value": "nx"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "networkx",
                    "path": "networkx.generators.classic.path_graph",
                    "version": "2.7.2rc1.dev0"
                  },
                  "value": "path_graph"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "4",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "typing",
                    "path": "typing.Generator",
                    "version": "*"
                  },
                  "value": "G"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "nodes",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "[",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "0",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": "]",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "[",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\"",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "label",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "\"",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "]",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\"",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "A",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "\"",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "typing",
                    "path": "typing.Generator",
                    "version": "*"
                  },
                  "value": "G"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "nodes",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "[",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "3",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": "]",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "[",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\"",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "label",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "\"",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "]",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\"",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "B",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "\"",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "typing",
                    "path": "typing.Generator",
                    "version": "*"
                  },
                  "value": "G"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "nodes",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "data",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "True",
                "type": "str"
              },
              "type": "kc"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "NodeDataView({0: {'label': 'A'}, 1: {}, 2: {}, 3: {'label': 'B'}})"
        },
        "type": "Code2"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "typing",
                    "path": "typing.Generator",
                    "version": "*"
                  },
                  "value": "G"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "edges",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "EdgeView([(0, 1), (1, 2), (2, 3)])"
        },
        "type": "Code2"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            {
              "link": {
                "data": "predicted",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "networkx",
                    "path": "networkx.algorithms.node_classification",
                    "version": "2.7.2rc1.dev0"
                  },
                  "value": "node_classification"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "local_and_global_consistency",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "typing",
                    "path": "typing.Generator",
                    "version": "*"
                  },
                  "value": "G"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "builtins",
                    "path": "builtins.list",
                    "version": "*"
                  },
                  "value": "predicted"
                },
                "type": "Link"
              },
              "type": ""
            }
          ],
          "out": "['A', 'A', 'B', 'B']"
        },
        "type": "Code2"
      }
    ],
    "title": null
  },
  "item_file": "networkx/algorithms/node_classification/lgc.py",
  "item_line": 17,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Raises",
    "Examples",
    "References"
  ],
  "references": null,
  "refs": [
    "builtins.list",
    "networkx",
    "networkx.algorithms",
    "networkx.algorithms.node_classification",
    "networkx.generators.classic.path_graph",
    "typing.Generator"
  ],
  "see_also": [],
  "signature": {
    "value": "local_and_global_consistency(G, alpha=0.99, max_iter=30, label_name='label')"
  }
}