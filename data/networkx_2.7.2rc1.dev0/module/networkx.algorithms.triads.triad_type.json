{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "There can be 6 unique edges in a triad (order-3 DiGraph) (so 2^^6=64 unique triads given 3 nodes). These 64 triads each display exactly 1 of 16 topologies of triads (topologies can be permuted). These topologies are identified by the following notation:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "{m}{a}{n}{type} (for example: 111D, 210, 102)"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Here:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "dd": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "AND (1,0)"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ],
                "dt": {
                  "inline": [
                    {
                      "data": {
                        "value": "{m}     = number of mutual ties (takes 0, 1, 2, 3); a mutual tie is (0,1)"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                }
              },
              {
                "dd": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "is (0,1) BUT NOT (1,0) or vice versa"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ],
                "dt": {
                  "inline": [
                    {
                      "data": {
                        "value": "{a}     = number of assymmetric ties (takes 0, 1, 2, 3); an assymmetric tie"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                }
              },
              {
                "dd": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "(0,1) NOR (1,0)"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ],
                "dt": {
                  "inline": [
                    {
                      "data": {
                        "value": "{n}     = number of null ties (takes 0, 1, 2, 3); a null tie is NEITHER"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                }
              },
              {
                "dd": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "and transitive. This is only used for topologies that can have           more than one form (eg: 021D and 021U)."
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ],
                "dt": {
                  "inline": [
                    {
                      "data": {
                        "value": "{type}  = a letter (takes U, D, C, T) corresponding to up, down, cyclical"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                }
              }
            ]
          },
          "type": "DefList"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "A NetworkX DiGraph with 3 nodes"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "G",
            "type_": "digraph"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "A string identifying the triad type"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "triad_type",
            "type_": "str"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Returns the sociological triad type for a triad."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.triad_type"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "networkx/algorithms/triads.py",
  "item_line": 296,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "References"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "triad_type(G)"
  }
}