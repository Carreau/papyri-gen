{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "args0": [
              "The call order of arguments `values` and `name`"
            ],
            "directive_name": "Warning",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "switched between v1.x & v2.x. "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [],
            "param": "G",
            "type_": "NetworkX Graph"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "What the edge attribute should be set to.  If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "values",
                          "version": null
                        },
                        "value": "values"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is not a dictionary, then it is treated as a single attribute value that is then applied to every edge in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "G",
                          "version": null
                        },
                        "value": "G"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ".  This means that if you provide a mutable object, like a list, updates to that object will be reflected in the edge attribute for each edge.  The attribute name will be "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "name",
                          "version": null
                        },
                        "value": "name"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "values",
                          "version": null
                        },
                        "value": "values"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is a dict or a dict of dict, it should be keyed by edge tuple to either an attribute value or a dict of attribute key/value pairs used to update the edge's attributes. For multigraphs, the edge tuples must be of the form "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "(u, v, key)"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", where "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "u"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "v"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " are nodes and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "key"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " is the edge key. For non-multigraphs, the keys must be tuples of the form "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "(u, v)"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "values",
            "type_": "scalar value, dict-like"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Name of the edge attribute to set if values is a scalar."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "name",
            "type_": "string (optional, default=None)"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Sets edge attributes from a given value or dictionary of values."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.set_edge_attributes"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "value": [
            ">>> G = nx.path_graph(3)",
            ">>> bb = nx.edge_betweenness_centrality(G, normalized=False)",
            ">>> nx.set_edge_attributes(G, bb, \"betweenness\")",
            ">>> G.edges[1, 2][\"betweenness\"]",
            "2.0"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            ">>> labels = []",
            ">>> nx.set_edge_attributes(G, labels, \"labels\")",
            ">>> labels.append(\"foo\")",
            ">>> G.edges[0, 1][\"labels\"]",
            "['foo']",
            ">>> G.edges[1, 2][\"labels\"]",
            "['foo']"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            ">>> G = nx.path_graph(3)",
            ">>> attrs = {(0, 1): {\"attr1\": 20, \"attr2\": \"nothing\"}, (1, 2): {\"attr2\": 3}}",
            ">>> nx.set_edge_attributes(G, attrs)",
            ">>> G[0][1][\"attr1\"]",
            "20",
            ">>> G[0][1][\"attr2\"]",
            "'nothing'",
            ">>> G[1][2][\"attr2\"]",
            "3"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            ">>> G = nx.Graph([(0, 1)])",
            ">>> nx.set_edge_attributes(G, {(1, 2): {\"weight\": 2.0}})",
            ">>> (1, 2) in G.edges()",
            "False"
          ]
        },
        "type": "BlockQuote"
      }
    ],
    "title": null
  },
  "item_file": "networkx/classes/function.py",
  "item_line": 724,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Examples"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "set_edge_attributes(G, values, name=None)"
  }
}