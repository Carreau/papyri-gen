{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A networkx graph"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "G",
                "type_": "graph"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A dictionary with nodes as keys and positions as values. Positions should be sequences of length 2."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "pos",
                "type_": "dictionary"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Edge labels in a dictionary of labels keyed by edge two-tuple. Only labels for the keys in the dictionary are drawn."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "edge_labels",
                "type_": "dictionary (default=None)"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Position of edge label along edge (0=head, 0.5=center, 1=tail)"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "label_pos",
                "type_": "float (default=0.5)"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Font size for text labels"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "font_size",
                "type_": "int (default=10)"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Font color string"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "font_color",
                "type_": "string (default='k' black)"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Font weight"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "font_weight",
                "type_": "string (default='normal')"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Font family"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "font_family",
                "type_": "string (default='sans-serif')"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The text transparency"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "alpha",
                "type_": "float or None (default=None)"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Specify text box properties (e.g. shape, color etc.) for edge labels. Default is {boxstyle='round', ec=(1.0, 1.0, 1.0), fc=(1.0, 1.0, 1.0)}."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "bbox",
                "type_": "Matplotlib bbox, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Horizontal alignment {'center', 'right', 'left'}"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "horizontalalignment",
                "type_": "string (default='center')"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Vertical alignment {'center', 'top', 'bottom', 'baseline', 'center_baseline'}"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "verticalalignment",
                "type_": "string (default='center')"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Draw the graph in the specified Matplotlib axes."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "ax",
                "type_": "Matplotlib Axes object, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Rotate edge labels to lie parallel to edges"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "rotate",
                "type_": "bool (deafult=True)"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Turn on clipping of edge labels at axis boundaries"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "clip_on",
                "type_": "bool (default=True)"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "dict"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " of labels keyed by edge"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "",
                "type_": "dict"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Draw edge labels."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.draw_networkx_edge_labels"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "typing",
                    "path": "typing.Generator",
                    "version": "*"
                  },
                  "value": "G"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "G",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "networkx",
                    "path": "networkx",
                    "version": "2.7.2rc1.dev0"
                  },
                  "value": "nx"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "networkx",
                    "path": "networkx.generators.small.dodecahedral_graph",
                    "version": "2.7.2rc1.dev0"
                  },
                  "value": "dodecahedral_graph"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "builtins",
                    "path": "builtins.dict",
                    "version": "*"
                  },
                  "value": "edge_labels"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "edge_labels",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "networkx",
                    "path": "networkx",
                    "version": "2.7.2rc1.dev0"
                  },
                  "value": "nx"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "networkx",
                    "path": "networkx.drawing.nx_pylab.draw_networkx_edge_labels",
                    "version": "2.7.2rc1.dev0"
                  },
                  "value": "draw_networkx_edge_labels"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "typing",
                    "path": "typing.Generator",
                    "version": "*"
                  },
                  "value": "G"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "G",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "pos",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "networkx",
                    "path": "networkx",
                    "version": "2.7.2rc1.dev0"
                  },
                  "value": "nx"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "networkx",
                    "path": "networkx.drawing.layout.spring_layout",
                    "version": "2.7.2rc1.dev0"
                  },
                  "value": "spring_layout"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "typing",
                    "path": "typing.Generator",
                    "version": "*"
                  },
                  "value": "G"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "G",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": ""
        },
        "type": "Code2"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "Also see the NetworkX drawing examples at https://networkx.org/documentation/latest/auto_examples/index.html"
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      }
    ],
    "title": null
  },
  "item_file": "networkx/drawing/nx_pylab.py",
  "item_line": 1033,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Examples",
    "See Also"
  ],
  "references": null,
  "refs": [
    "builtins.dict",
    "draw",
    "draw_networkx",
    "draw_networkx_edges",
    "draw_networkx_labels",
    "draw_networkx_nodes",
    "networkx",
    "networkx.drawing.layout.spring_layout",
    "networkx.drawing.nx_pylab.draw_networkx_edge_labels",
    "networkx.generators.small.dodecahedral_graph",
    "typing.Generator"
  ],
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "draw",
        "ref": "networkx.drawing.nx_pylab.draw"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "draw_networkx",
        "ref": "networkx.drawing.nx_pylab.draw_networkx"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "draw_networkx_nodes",
        "ref": "networkx.drawing.nx_pylab.draw_networkx_nodes"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "draw_networkx_edges",
        "ref": "networkx.drawing.nx_pylab.draw_networkx_edges"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "draw_networkx_labels",
        "ref": "networkx.drawing.nx_pylab.draw_networkx_labels"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "draw_networkx_edge_labels(G, pos, edge_labels=None, label_pos=0.5, font_size=10, font_color='k', font_family='sans-serif', font_weight='normal', alpha=None, bbox=None, horizontalalignment='center', verticalalignment='center', ax=None, rotate=True, clip_on=True)"
  }
}