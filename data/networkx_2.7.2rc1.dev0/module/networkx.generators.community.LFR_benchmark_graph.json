{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "This algorithm proceeds as follows:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "Find a degree sequence with a power law distribution, and minimum    value "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "min_degree"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", which has approximate average degree    "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "average_degree"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". This is accomplished by either"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "value": [
                            {
                              "data": {
                                "inline": [
                                  {
                                    "data": {
                                      "value": "specifying "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": [
                                        "min_degree"
                                      ]
                                    },
                                    "type": "Verbatim"
                                  },
                                  {
                                    "data": {
                                      "value": " and not "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": [
                                        "average_degree"
                                      ]
                                    },
                                    "type": "Verbatim"
                                  },
                                  {
                                    "data": {
                                      "value": ","
                                    },
                                    "type": "Words"
                                  }
                                ],
                                "inner": []
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "value": [
                            {
                              "data": {
                                "inline": [
                                  {
                                    "data": {
                                      "value": "specifying "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": [
                                        "average_degree"
                                      ]
                                    },
                                    "type": "Verbatim"
                                  },
                                  {
                                    "data": {
                                      "value": " and not "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "value": [
                                        "min_degree"
                                      ]
                                    },
                                    "type": "Verbatim"
                                  },
                                  {
                                    "data": {
                                      "value": ", in which       case a suitable minimum degree will be found."
                                    },
                                    "type": "Words"
                                  }
                                ],
                                "inner": []
                              },
                              "type": "Paragraph"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "EnumeratedList"
                  },
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": [
                              "max_degree"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " can also be specified, otherwise it will be set to    "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "n"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". Each node "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "u"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " will have "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "\\mu \\mathrm{deg}(u)"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " edges    joining it to nodes in communities other than its own and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "(1 -\n   \\mu) \\mathrm{deg}(u)"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " edges joining it to nodes in its own    community."
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "Generate community sizes according to a power law distribution    with exponent "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "tau2"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "min_community"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " and    "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "max_community"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " are not specified they will be selected to be    "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "min_degree"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "max_degree"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", respectively.  Community sizes    are generated until the sum of their sizes equals "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "n"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "Each node will be randomly assigned a community with the    condition that the community is large enough for the node's    intra-community degree, "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "(1 - \\mu) \\mathrm{deg}(u)"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " as    described in step 2. If a community grows too large, a random node    will be selected for reassignment to a new community, until all    nodes have been assigned a community."
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "Each node "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "u"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " then adds "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "(1 - \\mu) \\mathrm{deg}(u)"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": "    intra-community edges and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "\\mu \\mathrm{deg}(u)"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " inter-community    edges."
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "EnumeratedList"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "This algorithm differs slightly from the original way it was presented in [1]."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "Rather than connecting the graph via a configuration model then    rewiring to match the intra-community and inter-community    degrees, we do this wiring explicitly at the end, which should be    equivalent."
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "The code posted on the author's website [2] calculates the random    power law distributed variables and their average using    continuous approximations, whereas we use the discrete    distributions here as both degree and community size are    discrete."
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "EnumeratedList"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Though the authors describe the algorithm as quite robust, testing during development indicates that a somewhat narrower parameter set is likely to successfully produce a graph. Some suggestions have been provided in the event of exceptions."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Number of nodes in the created graph."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "n",
            "type_": "int"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Power law exponent for the degree distribution of the created graph. This value must be strictly greater than one."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "tau1",
            "type_": "float"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Power law exponent for the community size distribution in the created graph. This value must be strictly greater than one."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "tau2",
            "type_": "float"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Fraction of inter-community edges incident to each node. This value must be in the interval [0, 1]."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "mu",
            "type_": "float"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Desired average degree of nodes in the created graph. This value must be in the interval [0, "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "n"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": "]. Exactly one of this and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "min_degree"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " must be specified, otherwise a "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "NetworkXError"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " is raised."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "average_degree",
            "type_": "float"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Minimum degree of nodes in the created graph. This value must be in the interval [0, "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": {
                          "value": "n"
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": "]. Exactly one of this and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "average_degree"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " must be specified, otherwise a "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "NetworkXError"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " is raised."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "min_degree",
            "type_": "int"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Maximum degree of nodes in the created graph. If not specified, this is set to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "n"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", the total number of nodes in the graph."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "max_degree",
            "type_": "int"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Minimum size of communities in the graph. If not specified, this is set to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "min_degree"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "min_community",
            "type_": "int"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Maximum size of communities in the graph. If not specified, this is set to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "n"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", the total number of nodes in the graph."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "max_community",
            "type_": "int"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Tolerance when comparing floats, specifically when comparing average degree values."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "tol",
            "type_": "float"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Maximum number of iterations to try to create the community sizes, degree distribution, and community affiliations."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "max_iters",
            "type_": "int"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Indicator of random number generation state. See "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "Randomness<randomness>"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "seed",
            "type_": "integer, random_state, or None (default)"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If any of the parameters do not meet their upper and lower bounds:"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "tau1"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " and "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "tau2"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " must be strictly greater than 1."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "mu"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " must be in [0, 1]."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "max_degree"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " must be in {1, ..., "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": {
                                    "value": "n"
                                  }
                                },
                                "type": "Emph"
                              },
                              {
                                "data": {
                                  "value": "}."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "min_community"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " and "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "max_community"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " must be in {0, ...,   "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": {
                                    "value": "n"
                                  }
                                },
                                "type": "Emph"
                              },
                              {
                                "data": {
                                  "value": "}."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If not exactly one of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "average_degree"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "min_degree"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " is specified."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "min_degree"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " is not specified and a suitable "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "min_degree"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " cannot be found."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "NetworkXError"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If a valid degree sequence cannot be created within "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "max_iters"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " number of iterations."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If a valid set of community sizes cannot be created within "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "max_iters"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " number of iterations."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If a valid community assignment cannot be created within "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "10 *\nn * max_iters"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " number of iterations."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "ExceededMaxIterations"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The LFR benchmark graph generated according to the specified parameters."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Each node in the graph has a node attribute "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "'community'"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " that stores the community (that is, the set of nodes) that includes it."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "G",
            "type_": "NetworkX graph"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Returns the LFR benchmark graph."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.LFR_benchmark_graph"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "value": [
            ">>> from networkx.generators.community import LFR_benchmark_graph",
            ">>> n = 250",
            ">>> tau1 = 3",
            ">>> tau2 = 1.5",
            ">>> mu = 0.1",
            ">>> G = LFR_benchmark_graph(",
            "...     n, tau1, tau2, mu, average_degree=5, min_community=20, seed=10",
            "... )"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            ">>> communities = {frozenset(G.nodes[v][\"community\"]) for v in G}"
          ]
        },
        "type": "BlockQuote"
      }
    ],
    "title": null
  },
  "item_file": "networkx/generators/community.py",
  "item_line": 801,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "Examples",
    "Notes",
    "References"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "LFR_benchmark_graph(n, tau1, tau2, mu, average_degree=None, min_degree=None, max_degree=None, min_community=None, max_community=None, tol=1e-07, max_iters=500, seed=None)"
  }
}