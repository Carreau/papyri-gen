{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "First, it selects "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "w_prime"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", an  unsaturated node that has the same degree as "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "w"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". Second, it selects "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "switch_node"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ", a neighbor node of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "w"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " that is not  connected to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "w_prime"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ". Then it executes an edge swap i.e. removes ("
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "w"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ",*switch_node*) and adds ("
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "w_prime"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": ",*switch_node*). Gjoka et. al. [1] prove that such an edge swap is always possible."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Graph in which the neighbor switch will take place."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "G",
                "type_": "NetworkX graph"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Node id for which we will execute this neighbor switch."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "w",
                "type_": "integer"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Set of unsaturated node ids that have the same degree as w."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "unsat",
                "type_": "set of integers"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Keeps track of the remaining stubs  for a given node."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "h_node_residual: dictionary of integers",
                "type_": ""
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Node id to avoid when selecting w_prime."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "avoid_node_id: integer",
                "type_": ""
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Releases one free stub for "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "w"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", while preserving joint degree in G."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.joint_degree_seq._neighbor_switch"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "networkx/generators/joint_degree_seq.py",
  "item_line": 80,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Notes",
    "References"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "_neighbor_switch(G, w, unsat, h_node_residual, avoid_node_id=None)"
  }
}