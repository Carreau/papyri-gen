{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The dimension "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "n"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " is the length of the list "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "dim",
                    "version": null
                  },
                  "value": "dim"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " and the size in each dimension is the value of the corresponding list element."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "'dim' is a tuple or list with, for each dimension, either a number that is the size of that dimension or an iterable of nodes for that dimension. The dimension of the grid_graph is the length of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "dim",
                          "version": null
                        },
                        "value": "dim"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "dim",
            "type_": "list or tuple of numbers or iterables of nodes"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "periodic",
                          "version": null
                        },
                        "value": "periodic"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is True, all dimensions are periodic. If False all dimensions are not periodic. If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "periodic",
                          "version": null
                        },
                        "value": "periodic"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is iterable, it should yield "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "dim",
                          "version": null
                        },
                        "value": "dim"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " bool values each of which indicates whether the corresponding axis is periodic."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "periodic",
            "type_": "bool or iterable"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The (possibly periodic) grid graph of the specified dimensions."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "NetworkX graph"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Returns the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "n"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": "-dimensional grid graph."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.grid_graph"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "To produce a 2 by 3 by 4 grid graph, a graph on 24 nodes:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "networkx",
              "networkx",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "grid_graph",
              "networkx.generators.lattice.grid_graph",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "G",
              "networkx.classes.digraph.DiGraph",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "grid_graph",
              "networkx.generators.lattice.grid_graph",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "dim",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "len",
              "builtins.len",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "G",
              "networkx.classes.digraph.DiGraph",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "24"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "G",
              "networkx.classes.digraph.DiGraph",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "grid_graph",
              "networkx.generators.lattice.grid_graph",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "dim",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "range",
              "builtins.range",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "7",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "9",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "range",
              "builtins.range",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "6",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "len",
              "builtins.len",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "G",
              "networkx.classes.digraph.DiGraph",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "6"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "networkx/generators/lattice.py",
  "item_line": 89,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "references": null,
  "refs": [
    "builtins.len",
    "builtins.range",
    "networkx",
    "networkx.classes.digraph.DiGraph",
    "networkx.generators.lattice.grid_graph"
  ],
  "see_also": [],
  "signature": {
    "value": "grid_graph(dim, periodic=False)"
  }
}