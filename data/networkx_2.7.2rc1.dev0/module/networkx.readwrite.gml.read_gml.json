{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "GML files are stored using a 7-bit ASCII encoding with any extended ASCII characters (iso8859-1) appearing as HTML character entities. Without specifying a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "stringizer"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": "/"
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "destringizer",
                    "version": null
                  },
                  "value": "destringizer"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ", the code is capable of writing "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "int"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": "/"
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "float"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": "/"
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "str"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": "/"
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "dict"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": "/"
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "list"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " data as required by the GML specification.  For writing other data types, and for reading data other than "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "str"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " you need to explicitly supply a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "stringizer"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": "/"
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "destringizer",
                    "version": null
                  },
                  "value": "destringizer"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "For additional documentation on the GML file format, please see the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://web.archive.org/web/20190207140002/http://www.fim.uni-passau.de/index.php?id=17297&L=1",
                  "value": "GML url"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "See the module docstring "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "networkx.readwrite.gml"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for more details."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The filename or filehandle to read from."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "path",
            "type_": "filename or filehandle"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If not None, the parsed nodes will be renamed according to node attributes indicated by "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "label",
                          "version": null
                        },
                        "value": "label"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ". Default value: 'label'."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "label",
            "type_": "string, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "A "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "destringizer",
                          "version": null
                        },
                        "value": "destringizer"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " that recovers values stored as strings in GML. If it cannot convert a string to a value, a "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "ValueError"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " is raised. Default value : None."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "destringizer",
            "type_": "callable, optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If the input cannot be parsed."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "NetworkXError"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The parsed graph."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "G",
            "type_": "NetworkX graph"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Read graph in GML format from "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "path",
                    "version": null
                  },
                  "value": "path"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.read_gml"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "G",
              "typing.Generator",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "nx",
              "networkx",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "path_graph",
              "networkx.generators.classic.path_graph",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "nx",
              "networkx",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "write_gml",
              "networkx.readwrite.gml.write_gml",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "G",
              "typing.Generator",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "test.gml",
              "",
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": ""
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "GML values are interpreted as strings by default:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "H",
              "networkx.classes.digraph.DiGraph",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "nx",
              "networkx",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "read_gml",
              "networkx.readwrite.gml.read_gml",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "test.gml",
              "",
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "H",
              "networkx.classes.digraph.DiGraph",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "nodes",
              "networkx.classes.reportviews.NodeView",
              ""
            ]
          ],
          "out": "NodeView(('0', '1', '2', '3'))"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "When a "
              },
              "type": "Words"
            },
            {
              "data": {
                "exists": true,
                "kind": "local",
                "reference": {
                  "kind": "local",
                  "module": null,
                  "path": "destringizer",
                  "version": null
                },
                "value": "destringizer"
              },
              "type": "Link"
            },
            {
              "data": {
                "value": " is provided, GML values are converted to the provided type. For example, integer nodes can be recovered as shown below:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "J",
              "networkx.classes.digraph.DiGraph",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "nx",
              "networkx",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "read_gml",
              "networkx.readwrite.gml.read_gml",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "test.gml",
              "",
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "destringizer",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "int",
              "builtins.int",
              "nb"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "J",
              "networkx.classes.digraph.DiGraph",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "nodes",
              "networkx.classes.reportviews.NodeView",
              ""
            ]
          ],
          "out": "NodeView((0, 1, 2, 3))"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "networkx/readwrite/gml.py",
  "item_line": 116,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Raises",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "refs": [
    "builtins.int",
    "literal_destringizer",
    "networkx",
    "networkx.classes.digraph.DiGraph",
    "networkx.classes.reportviews.NodeView",
    "networkx.generators.classic.path_graph",
    "networkx.readwrite.gml.read_gml",
    "networkx.readwrite.gml.write_gml",
    "parse_gml",
    "typing.Generator",
    "write_gml"
  ],
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "write_gml",
        "ref": "networkx.readwrite.gml.write_gml"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "parse_gml",
        "ref": "networkx.readwrite.gml.parse_gml"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "literal_destringizer",
        "ref": "networkx.readwrite.gml.literal_destringizer"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "read_gml(path, label='label', destringizer=None)"
  }
}