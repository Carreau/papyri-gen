{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "File or filename to write."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "path",
                "type_": "file or string"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If the string is unable to be parsed in graph6 format"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "",
                "type_": "NetworkXError"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If the file contains multiple lines then a list of graphs is returned"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "G",
                "type_": "Graph or list of Graphs"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Read simple undirected graphs in graph6 format from path."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.read_graph6"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "value": [
            ">>> import tempfile",
            ">>> with tempfile.NamedTemporaryFile() as f:",
            "...     _ = f.write(b\">>graph6<<A_\\n\")",
            "...     _ = f.seek(0)",
            "...     G = nx.read_graph6(f.name)",
            ">>> list(G.edges())",
            "[(0, 1)]"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            ">>> import tempfile",
            ">>> with tempfile.NamedTemporaryFile() as f:",
            "...     _ = f.write(b\">>graph6<<A_\\n\")",
            "...     _ = f.seek(0)",
            "...     G = nx.read_graph6(f)",
            ">>> list(G.edges())",
            "[(0, 1)]"
          ]
        },
        "type": "BlockQuote"
      }
    ],
    "title": null
  },
  "item_file": "networkx/readwrite/graph6.py",
  "item_line": 183,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Raises",
    "Examples",
    "See Also",
    "References"
  ],
  "references": null,
  "refs": [
    "from_graph6_bytes",
    "write_graph6"
  ],
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "from_graph6_bytes",
        "ref": "networkx.readwrite.graph6.from_graph6_bytes"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "write_graph6",
        "ref": "networkx.readwrite.graph6.write_graph6"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "read_graph6(path)"
  }
}