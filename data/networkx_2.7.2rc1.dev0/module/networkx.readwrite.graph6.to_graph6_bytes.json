{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The returned bytes end with a newline character."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The format does not support edge or node labels, parallel edges or self loops. If self loops are present they are silently ignored."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [],
            "param": "G",
            "type_": "Graph (undirected)"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Nodes are labeled 0...n-1 in the order provided.  If None the ordering given by "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "G.nodes()"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " is used."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "nodes: list or iterable",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If True add '>>graph6<<' bytes to head of data."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "header: bool",
            "type_": ""
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If the graph is directed or is a multigraph."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "NetworkXNotImplemented"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If the graph has at least "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "2 ** 36"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " nodes; the graph6 format is only defined for graphs of order less than "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "2 ** 36"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "ValueError"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Convert a simple undirected graph to bytes in graph6 format."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.to_graph6_bytes"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "nx",
              "networkx",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "to_graph6_bytes",
              "networkx.readwrite.graph6.to_graph6_bytes",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "nx",
              "networkx",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "path_graph",
              "networkx.generators.classic.path_graph",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "b'>>graph6<<A_\\n'"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "networkx/readwrite/graph6.py",
  "item_line": 131,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Raises",
    "Examples",
    "See Also",
    "Notes",
    "References"
  ],
  "references": null,
  "refs": [
    "from_graph6_bytes",
    "networkx",
    "networkx.generators.classic.path_graph",
    "networkx.readwrite.graph6.to_graph6_bytes",
    "read_graph6",
    "write_graph6_bytes"
  ],
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "from_graph6_bytes",
        "ref": "networkx.readwrite.graph6.from_graph6_bytes"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "read_graph6",
        "ref": "networkx.readwrite.graph6.read_graph6"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": null,
        "name": "write_graph6_bytes",
        "ref": null
      },
      "type": null
    }
  ],
  "signature": {
    "value": "to_graph6_bytes(G, nodes=None, header=True)"
  }
}