{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "These formats are suitable for use with the d3.js examples https://d3js.org/"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The three formats that you can generate with NetworkX are:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": [
              "- node-link like in the d3.js example https://bl.ocks.org/mbostock/4062045",
              "- tree like in the d3.js example https://bl.ocks.org/mbostock/4063550",
              "- adjacency like in the d3.js example https://bost.ocks.org/mike/miserables/"
            ]
          },
          "type": "BlockQuote"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Generate and parse JSON serializable data for NetworkX graphs."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": "JSON data"
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.json_graph"
  ],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Generate and parse JSON serializable data for NetworkX graphs."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "These formats are suitable for use with the d3.js examples https://d3js.org/"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The three formats that you can generate with NetworkX are:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": [
              "- node-link like in the d3.js example https://bl.ocks.org/mbostock/4062045",
              "- tree like in the d3.js example https://bl.ocks.org/mbostock/4063550",
              "- adjacency like in the d3.js example https://bost.ocks.org/mike/miserables/"
            ]
          },
          "type": "BlockQuote"
        }
      ],
      "title": "JSON data"
    }
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "networkx/readwrite/json_graph/__init__.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": null
  }
}