{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "G"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " is an undirected simple graph. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "networkx",
                    "path": "networkx.classes.function.nodes",
                    "version": "2.7.2rc1.dev0"
                  },
                  "value": "nodes"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is the list of nodes for which the node-induced subgraph will be encoded; if "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "networkx",
                    "path": "networkx.classes.function.nodes",
                    "version": "2.7.2rc1.dev0"
                  },
                  "value": "nodes"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is the list of all nodes in the graph, the entire graph will be encoded. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "header"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " is a Boolean that specifies whether to generate the header "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "b'>>sparse6<<'"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " before the remaining data."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This function generates "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "bytes"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " objects in the following order:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "the header (if requested),"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "the encoding of the number of nodes,"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "each character, one-at-a-time, in the encoding of the requested    node-induced subgraph,"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "a newline character."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "EnumeratedList"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This function raises "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ValueError"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " if the graph is too large for the graph6 format (that is, greater than "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "2 ** 36"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " nodes)."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Yield bytes in the sparse6 encoding of a graph."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.sparse6._generate_sparse6_bytes"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "networkx/readwrite/sparse6.py",
  "item_line": 22,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "_generate_sparse6_bytes(G, nodes, header)"
  }
}