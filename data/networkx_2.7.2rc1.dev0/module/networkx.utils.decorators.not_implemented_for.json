{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Multiple types are joined logically with \"and\". For \"or\" use multiple @not_implemented_for() lines."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Entries must be one of \"directed\", \"undirected\", \"multigraph\", or \"graph\"."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "graph_types",
            "type_": "container of strings"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "data": {
            "desc": [],
            "param": "",
            "type_": "NetworkXNotImplemented"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "",
            "type_": "If any of the packages cannot be imported"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The decorated function."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "_require",
            "type_": "function"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Decorator to mark algorithms as not implemented"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.algebraicconnectivity.not_implemented_for"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "value": [
            "@not_implemented_for(\"directed\")",
            "def sp_function(G):",
            "    pass"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            "# rule out MultiDiGraph",
            "@not_implemented_for(\"directed\",\"multigraph\")",
            "def sp_np_function(G):",
            "    pass"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            "# rule out all except DiGraph",
            "@not_implemented_for(\"undirected\")",
            "@not_implemented_for(\"multigraph\")",
            "def sp_np_function(G):",
            "    pass"
          ]
        },
        "type": "BlockQuote"
      }
    ],
    "title": null
  },
  "item_file": "networkx/utils/decorators.py",
  "item_line": 25,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Raises",
    "Notes",
    "Examples"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "not_implemented_for(*graph_types)"
  }
}