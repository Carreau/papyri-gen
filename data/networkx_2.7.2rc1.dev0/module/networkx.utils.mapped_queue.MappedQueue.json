{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The min heap uses heapq as well as custom written _siftup and _siftdown methods to allow the heap positions to be tracked by an additional dict keyed by element to position. The smallest element can be popped in O(1) time, new elements can be pushed in O(log n) time, and any element can be removed or updated in O(log n) time. The queue cannot contain duplicate elements and an attempt to push an element already in the queue will have no effect."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "MappedQueue complements the heapq package from the python standard library. While MappedQueue is designed for maximum compatibility with heapq, it adds element removal, lookup, and priority update."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The MappedQueue class implements a min-heap with removal and update-priority."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.community.modularity_max.MappedQueue"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "A "
              },
              "type": "Words"
            },
            {
              "data": {
                "exists": true,
                "kind": "module",
                "reference": {
                  "kind": "module",
                  "module": "networkx",
                  "path": "networkx.utils.mapped_queue.MappedQueue",
                  "version": "2.7.2rc1.dev0"
                },
                "value": "MappedQueue"
              },
              "type": "Link"
            },
            {
              "data": {
                "value": " can be created empty or optionally given an array of initial elements. Calling "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "push()"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": " will add an element and calling "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "pop()"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": " will remove and return the smallest element."
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "q",
              "networkx.utils.mapped_queue.MappedQueue",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "MappedQueue",
              "networkx.utils.mapped_queue.MappedQueue",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "916",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "50",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4609",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "493",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "237",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "q",
              "networkx.utils.mapped_queue.MappedQueue",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "push",
              "networkx.utils.mapped_queue.MappedQueue.push",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "1310",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "True"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "[",
              "",
              ""
            ],
            [
              "q",
              "networkx.utils.mapped_queue.MappedQueue",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "pop",
              "networkx.utils.mapped_queue.MappedQueue.pop",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "for",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "i",
              "builtins.int",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "in",
              null,
              "ow"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "range",
              "builtins.range",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "len",
              "builtins.len",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "q",
              "networkx.utils.mapped_queue.MappedQueue",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "heap",
              "builtins.list",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ]
          ],
          "out": "[50, 237, 493, 916, 1310, 4609]"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Elements can also be updated or removed from anywhere in the queue."
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "q",
              "networkx.utils.mapped_queue.MappedQueue",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "MappedQueue",
              "networkx.utils.mapped_queue.MappedQueue",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "916",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "50",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4609",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "493",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "237",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "q",
              "networkx.utils.mapped_queue.MappedQueue",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "remove",
              "networkx.utils.mapped_queue.MappedQueue.remove",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "493",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "q",
              "networkx.utils.mapped_queue.MappedQueue",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "update",
              "networkx.utils.mapped_queue.MappedQueue.update",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "237",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1117",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "q",
              "networkx.utils.mapped_queue.MappedQueue",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "pop",
              "networkx.utils.mapped_queue.MappedQueue.pop",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "for",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "i",
              "builtins.int",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "in",
              null,
              "ow"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "range",
              "builtins.range",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "len",
              "builtins.len",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "q",
              "networkx.utils.mapped_queue.MappedQueue",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "heap",
              "builtins.list",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ]
          ],
          "out": "[50, 916, 1117, 4609]"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "networkx/utils/mapped_queue.py",
  "item_line": 82,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Examples",
    "References"
  ],
  "references": null,
  "refs": [
    "builtins.int",
    "builtins.len",
    "builtins.list",
    "builtins.range",
    "networkx.utils.mapped_queue.MappedQueue",
    "networkx.utils.mapped_queue.MappedQueue.pop",
    "networkx.utils.mapped_queue.MappedQueue.push",
    "networkx.utils.mapped_queue.MappedQueue.remove",
    "networkx.utils.mapped_queue.MappedQueue.update"
  ],
  "see_also": [],
  "signature": {
    "value": null
  }
}