{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "This is most useful for \"peeking\" at an arbitrary element of a set, but can be used for any list, dictionary, etc., as well."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "This function does not return a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "random"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " element. If "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "iterable",
                    "version": null
                  },
                  "value": "iterable"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is ordered, sequential calls will return the same value::      "
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ">>> l = [1, 2, 3]\n>>> nx.utils.arbitrary_element(l)\n1\n>>> nx.utils.arbitrary_element(l)\n1"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Any object that implements "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "__iter__"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", e.g. set, dict, list, tuple, etc."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "iterable",
            "type_": "`abc.collections.Iterable` instance"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "iterable",
                          "version": null
                        },
                        "value": "iterable"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is an iterator (because the current implementation of this function would consume an element from the iterator)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "ValueError"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [],
            "param": "",
            "type_": "The object that results from ``next(iter(iterable))``"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Returns an arbitrary element of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "iterable",
                    "version": null
                  },
                  "value": "iterable"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " without removing it."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "networkx.chordal.arbitrary_element"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Arbitrary elements from common Iterable objects:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "nx",
              "networkx",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "utils",
              "networkx.utils",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "arbitrary_element",
              "networkx.utils.misc.arbitrary_element",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# list",
              "",
              "c1"
            ]
          ],
          "out": "1"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "nx",
              "networkx",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "utils",
              "networkx.utils",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "arbitrary_element",
              "networkx.utils.misc.arbitrary_element",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# tuple",
              "",
              "c1"
            ]
          ],
          "out": "1"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "nx",
              "networkx",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "utils",
              "networkx.utils",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "arbitrary_element",
              "networkx.utils.misc.arbitrary_element",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "{",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              "}",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# set",
              "",
              "c1"
            ]
          ],
          "out": "1"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "d",
              "builtins.dict",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "{",
              "",
              ""
            ],
            [
              "k",
              "builtins.int",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "v",
              "builtins.int",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "for",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "k",
              "builtins.int",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "v",
              "builtins.int",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "in",
              null,
              "ow"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "zip",
              "builtins.zip",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "}",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "nx",
              "networkx",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "utils",
              "networkx.utils",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "arbitrary_element",
              "networkx.utils.misc.arbitrary_element",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "d",
              "builtins.dict",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# dict_keys",
              "",
              "c1"
            ]
          ],
          "out": "1"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "nx",
              "networkx",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "utils",
              "networkx.utils",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "arbitrary_element",
              "networkx.utils.misc.arbitrary_element",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "d",
              "builtins.dict",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "values",
              "builtins.dict.values",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "   ",
              "",
              ""
            ],
            [
              "# dict values",
              "",
              "c1"
            ]
          ],
          "out": "3"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "str"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": " is also an Iterable:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "nx",
              "networkx",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "utils",
              "networkx.utils",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "arbitrary_element",
              "networkx.utils.misc.arbitrary_element",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "hello",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "'h'"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": [
                  "ValueError"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " is raised if "
              },
              "type": "Words"
            },
            {
              "data": {
                "exists": true,
                "kind": "local",
                "reference": {
                  "kind": "local",
                  "module": null,
                  "path": "iterable",
                  "version": null
                },
                "value": "iterable"
              },
              "type": "Link"
            },
            {
              "data": {
                "value": " is an iterator:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "exception_in_exec",
          "entries": [
            [
              "iterator",
              "typing.Iterator",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "iter",
              "builtins.iter",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# Iterator, *not* Iterable",
              "",
              "c1"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "nx",
              "networkx",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "utils",
              "networkx.utils",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "arbitrary_element",
              "networkx.utils.misc.arbitrary_element",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "iterator",
              "typing.Iterator",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "Traceback (most recent call last):\n    ...\nValueError: cannot return an arbitrary item from an iterator"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "networkx/utils/misc.py",
  "item_line": 289,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "Examples",
    "Notes"
  ],
  "references": null,
  "refs": [
    "builtins.dict",
    "builtins.dict.values",
    "builtins.int",
    "builtins.iter",
    "builtins.zip",
    "networkx",
    "networkx.utils",
    "networkx.utils.misc.arbitrary_element",
    "typing.Iterator"
  ],
  "see_also": [],
  "signature": {
    "value": "arbitrary_element(iterable)"
  }
}