{
  "aliases": [
    "networkx.approximation.connectivity._bidirectional_shortest_path"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This function and its helper are originally from networkx.algorithms.shortest_paths.unweighted and are modified to accept the extra parameter 'exclude', which is a container for nodes already used in other paths that should be ignored."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [],
                "param": "G",
                "type_": "NetworkX graph"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Starting node for path"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "source",
                "type_": "node"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Ending node for path"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "target",
                "type_": "node"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Container for nodes to exclude from the search for shortest paths"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "exclude: container",
                "type_": ""
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "title": null
    },
    "Raises": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If there is no path or if nodes are adjacent and have only one path between them"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "",
                "type_": "NetworkXNoPath"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Shortest path between source and target ignoring nodes in 'exclude'"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "",
                "type_": "path: list"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Returns shortest path between source and target ignoring nodes in the container 'exclude'."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "title": null
  },
  "item_file": "/networkx/algorithms/approximation/connectivity.py",
  "item_line": 280,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Raises",
    "Notes",
    "References"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "_bidirectional_shortest_path(G, source, target, exclude)"
  }
}