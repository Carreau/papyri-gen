{
  "aliases": [
    "networkx.flow.build_residual_network"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The residual network "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "R"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " from an input graph "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "G"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " has the same nodes as "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "G"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "R"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is a DiGraph that contains a pair of edges "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "(u, v)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "(v, u)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " iff "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "(u, v)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is not a self-loop, and at least one of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "(u, v)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "(v, u)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " exists in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "G"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "For each edge "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "(u, v)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "R"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "R[u][v]['capacity']"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is equal to the capacity of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "(u, v)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "G"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " if it exists in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "G"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " or zero otherwise. If the capacity is infinite, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "R[u][v]['capacity']"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " will have a high arbitrary finite value that does not affect the solution of the problem. This value is stored in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "R.graph['inf']"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". For each edge "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "(u, v)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "R"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "R[u][v]['flow']"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " represents the flow function of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "(u, v)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and satisfies "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "R[u][v]['flow'] == -R[v][u]['flow']"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The flow value, defined as the total flow into "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "t"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", the sink, is stored in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "R.graph['flow_value']"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". If "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "cutoff"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is not specified, reachability to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "t"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " using only edges "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "(u, v)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " such that "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "R[u][v]['flow'] < R[u][v]['capacity']"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " induces a minimum "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "s"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "-"
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "t"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " cut."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Build a residual network and initialize a zero flow."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "title": null
  },
  "item_file": "/networkx/algorithms/flow/utils.py",
  "item_line": 74,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "build_residual_network(G, capacity)"
  }
}