{
  "aliases": [
    "networkx.generators.community._powerlaw_sequence"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": [
                    "gamma"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "low"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " are the parameters for the Zipf distribution."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": [
                    "high"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is the maximum allowed value for values draw from the Zipf distribution. For more information, see "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "_zipf_rv_below"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": [
                    "condition"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "length"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " are Boolean-valued functions on lists. While generating the list, random values are drawn and appended to the list until "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "length"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is satisfied by the created list. Once "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "condition"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is satisfied, the sequence generated in this way is returned."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": [
                    "max_iters"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " indicates the number of times to generate a list satisfying "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "length"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". If the number of iterations exceeds this value, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "~networkx.exception.ExceededMaxIterations"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is raised."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "dd": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "seed"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "dt": {
                  "children": [
                    {
                      "data": {
                        "value": "seed"
                      },
                      "type": "Words"
                    }
                  ]
                }
              }
            ]
          },
          "type": "DefList"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Returns a list of numbers obeying a constrained power law distribution."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/networkx/generators/community.py",
  "item_line": 669,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "_powerlaw_sequence(gamma, low, high, condition, length, max_iters, seed)"
  }
}