{
  "aliases": [
    "networkx.approximation"
  ],
  "arbitrary": [
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Approximations of graph properties and Heuristic methods for optimization."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The functions in this class are not imported into the top-level "
            },
            {
              "type": "inlineCode",
              "value": "networkx"
            },
            {
              "type": "text",
              "value": " namespace so the easiest way to use them is with      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": ">>> from networkx.algorithms import approximation"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Another option is to import the specific function with "
            },
            {
              "type": "inlineCode",
              "value": "from networkx.algorithms.approximation import function_name"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  ],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The functions in this class are not imported into the top-level "
            },
            {
              "type": "inlineCode",
              "value": "networkx"
            },
            {
              "type": "text",
              "value": " namespace so the easiest way to use them is with      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": ">>> from networkx.algorithms import approximation"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Another option is to import the specific function with "
            },
            {
              "type": "inlineCode",
              "value": "from networkx.algorithms.approximation import function_name"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Approximations of graph properties and Heuristic methods for optimization."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/approximation/__init__.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}