{
  "aliases": [
    "networkx.approximation.treewidth"
  ],
  "arbitrary": [
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Functions for computing treewidth decomposition."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Treewidth of an undirected graph is a number associated with the graph. It can be defined as the size of the largest vertex set (bag) in a tree decomposition of the graph minus one."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "Wikipedia: Treewidth"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://en.wikipedia.org/wiki/Treewidth"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The notions of treewidth and tree decomposition have gained their attractiveness partly because many graph and network problems that are intractable (e.g., NP-hard) on arbitrary graphs become efficiently solvable (e.g., with a linear time algorithm) when the treewidth of the input graphs is bounded by a constant  ."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "There are two different functions for computing a tree decomposition: "
            },
            {
              "type": "inlineCode",
              "value": "treewidth_min_degree"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineCode",
              "value": "treewidth_min_fill_in"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "placeholder": "footnote",
          "type": "Unimplemented",
          "value": ".. [1] Hans L. Bodlaender and Arie M. C. A. Koster. 2010. \"Treewidth\n      computations I.Upper bounds\". Inf. Comput. 208, 3 (March 2010),259-275.\n      http://dx.doi.org/10.1016/j.ic.2009.03.008"
        },
        {
          "placeholder": "footnote",
          "type": "Unimplemented",
          "value": ".. [2] Hans L. Bodlaender. \"Discovering Treewidth\". Institute of Information\n      and Computing Sciences, Utrecht University.\n      Technical Report UU-CS-2005-018.\n      http://www.cs.uu.nl"
        },
        {
          "placeholder": "footnote",
          "type": "Unimplemented",
          "value": ".. [3] K. Wang, Z. Lu, and J. Hicks *Treewidth*.\n      https://web.archive.org/web/20210507025929/http://web.eecs.utk.edu/~cphill25/cs594_spring2015_projects/treewidth.pdf"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  ],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Treewidth of an undirected graph is a number associated with the graph. It can be defined as the size of the largest vertex set (bag) in a tree decomposition of the graph minus one."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "Wikipedia: Treewidth"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://en.wikipedia.org/wiki/Treewidth"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The notions of treewidth and tree decomposition have gained their attractiveness partly because many graph and network problems that are intractable (e.g., NP-hard) on arbitrary graphs become efficiently solvable (e.g., with a linear time algorithm) when the treewidth of the input graphs is bounded by a constant  ."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "There are two different functions for computing a tree decomposition: "
            },
            {
              "type": "inlineCode",
              "value": "treewidth_min_degree"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineCode",
              "value": "treewidth_min_fill_in"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "placeholder": "footnote",
          "type": "Unimplemented",
          "value": ".. [1] Hans L. Bodlaender and Arie M. C. A. Koster. 2010. \"Treewidth\n      computations I.Upper bounds\". Inf. Comput. 208, 3 (March 2010),259-275.\n      http://dx.doi.org/10.1016/j.ic.2009.03.008"
        },
        {
          "placeholder": "footnote",
          "type": "Unimplemented",
          "value": ".. [2] Hans L. Bodlaender. \"Discovering Treewidth\". Institute of Information\n      and Computing Sciences, Utrecht University.\n      Technical Report UU-CS-2005-018.\n      http://www.cs.uu.nl"
        },
        {
          "placeholder": "footnote",
          "type": "Unimplemented",
          "value": ".. [3] K. Wang, Z. Lu, and J. Hicks *Treewidth*.\n      https://web.archive.org/web/20210507025929/http://web.eecs.utk.edu/~cphill25/cs594_spring2015_projects/treewidth.pdf"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Functions for computing treewidth decomposition."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/approximation/treewidth.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}