{
  "aliases": [
    "networkx.average_neighbor_degree"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "In an undirected graph, the neighborhood "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "N(i)"
            },
            {
              "type": "text",
              "value": " of node "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "i"
            },
            {
              "type": "text",
              "value": " contains the nodes that are connected to "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "i"
            },
            {
              "type": "text",
              "value": " by an edge."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For directed graphs, "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "N(i)"
            },
            {
              "type": "text",
              "value": " is defined according to the parameter "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "source",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "source"
            },
            {
              "type": "text",
              "value": ":"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "if source is 'in', then "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "N(i)"
                        },
                        {
                          "type": "text",
                          "value": " consists of predecessors of node "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "i"
                        },
                        {
                          "type": "text",
                          "value": "."
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "spread": false,
                  "type": "listItem"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "if source is 'out', then "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "N(i)"
                        },
                        {
                          "type": "text",
                          "value": " consists of successors of node "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "i"
                        },
                        {
                          "type": "text",
                          "value": "."
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "spread": false,
                  "type": "listItem"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "if source is 'in+out', then "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "N(i)"
                        },
                        {
                          "type": "text",
                          "value": " is both predecessors and successors."
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "spread": false,
                  "type": "listItem"
                }
              ],
              "ordered": false,
              "spread": false,
              "start": 1,
              "type": "list"
            }
          ],
          "type": "blockquote"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The average neighborhood degree of a node "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "i"
            },
            {
              "type": "text",
              "value": " is"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "k_{nn,i} = \\frac{1}{|N(i)|} \\sum_{j \\in N(i)} k_j"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "where "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "N(i)"
            },
            {
              "type": "text",
              "value": " are the neighbors of node "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "i"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "k_j"
            },
            {
              "type": "text",
              "value": " is the degree of node "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "j"
            },
            {
              "type": "text",
              "value": " which belongs to "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "N(i)"
            },
            {
              "type": "text",
              "value": ". For weighted graphs, an analogous measure can be defined ,"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "k_{nn,i}^{w} = \\frac{1}{s_i} \\sum_{j \\in N(i)} w_{ij} k_j"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "where "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "s_i"
            },
            {
              "type": "text",
              "value": " is the weighted degree of node "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "i"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "w_{ij}"
            },
            {
              "type": "text",
              "value": " is the weight of the edge that links "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "i"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "j"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "N(i)"
            },
            {
              "type": "text",
              "value": " are the neighbors of node "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "i"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "G",
              "type": "Param",
              "type_": "NetworkX graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Directed graphs only. Use \"in\"- or \"out\"-neighbors of source node."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "source",
              "type": "Param",
              "type_": "string (\"in\"|\"out\"|\"in+out\"), optional (default=\"out\")"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Directed graphs only. Use \"in\"- or \"out\"-degree for target node."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "target",
              "type": "Param",
              "type_": "string (\"in\"|\"out\"|\"in+out\"), optional (default=\"out\")"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Compute neighbor degree only for specified nodes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "nodes",
              "type": "Param",
              "type_": "list or iterable, optional (default=G.nodes)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The edge attribute that holds the numerical value used as a weight. If None, then each edge has weight 1."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "weight",
              "type": "Param",
              "type_": "string or None, optional (default=None)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If either "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "source",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "source"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "target",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "target"
                    },
                    {
                      "type": "text",
                      "value": " are not one of 'in', 'out', or 'in+out'. If either "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "source",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "source"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "target",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "target"
                    },
                    {
                      "type": "text",
                      "value": " is passed for an undirected graph."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "NetworkXError"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A dictionary keyed by node to the average degree of its neighbors."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "d: dict"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns the average degree of the neighborhood of each node."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "G = nx.path_graph(4)\nG.edges[0, 1][\"weight\"] = 5\nG.edges[2, 3][\"weight\"] = 3"
      },
      {
        "type": "code",
        "value": "nx.average_neighbor_degree(G)"
      },
      {
        "type": "code",
        "value": "nx.average_neighbor_degree(G, weight=\"weight\")"
      },
      {
        "type": "code",
        "value": "G = nx.DiGraph()\nnx.add_path(G, [0, 1, 2, 3])\nnx.average_neighbor_degree(G, source=\"in\", target=\"in\")"
      },
      {
        "type": "code",
        "value": "nx.average_neighbor_degree(G, source=\"out\", target=\"out\")"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/assortativity/neighbor_degree.py",
  "item_line": 6,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "Examples",
    "See Also",
    "References"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.algorithms.assortativity.connectivity:average_degree_connectivity",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "average_degree_connectivity"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(G, source='out', target='out', nodes=None, weight=None)"
  },
  "type": "DocBlob"
}