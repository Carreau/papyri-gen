{
  "aliases": [
    "networkx.bipartite.generate_edgelist"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The graph is assumed to have node attribute "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "part"
                    },
                    {
                      "type": "text",
                      "value": " set to 0,1 representing the two graph parts"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "G",
              "type": "Param",
              "type_": "NetworkX graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Separator for node labels"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "delimiter",
              "type": "Param",
              "type_": "string, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If False generate no edge data.  If True use a dictionary representation of edge data.  If a list of keys use a list of data values corresponding to the keys."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "data",
              "type": "Param",
              "type_": "bool or list of keys"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Lines of data in adjlist format."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "lines",
              "type": "Param",
              "type_": "string"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Generate a single line of the bipartite graph G in edge list format."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from networkx.algorithms import bipartite\nG = nx.path_graph(4)\nG.add_nodes_from([0, 2], bipartite=0)\nG.add_nodes_from([1, 3], bipartite=1)\nG[1][2][\"weight\"] = 3\nG[2][3][\"capacity\"] = 12\nfor line in bipartite.generate_edgelist(G, data=False):\n    print(line)"
      },
      {
        "type": "code",
        "value": "for line in bipartite.generate_edgelist(G):\n    print(line)"
      },
      {
        "type": "code",
        "value": "for line in bipartite.generate_edgelist(G, data=[\"weight\"]):\n    print(line)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/bipartite/edgelist.py",
  "item_line": 81,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(G, delimiter=' ', data=True)"
  },
  "type": "DocBlob"
}