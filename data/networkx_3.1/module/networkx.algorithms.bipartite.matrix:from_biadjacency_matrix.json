{
  "aliases": [
    "networkx.bipartite.from_biadjacency_matrix"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The nodes are labeled with the attribute "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "networkx",
                "path": "networkx.algorithms.bipartite",
                "type": "RefInfo",
                "version": "3.1"
              },
              "type": "Link",
              "value": "bipartite"
            },
            {
              "type": "text",
              "value": " set to an integer 0 or 1 representing membership in part 0 or part 1 of the bipartite graph."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "If "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "create_using"
            },
            {
              "type": "text",
              "value": " is an instance of "
            },
            {
              "type": "inlineCode",
              "value": "networkx.MultiGraph"
            },
            {
              "type": "text",
              "value": " or "
            },
            {
              "type": "inlineCode",
              "value": "networkx.MultiDiGraph"
            },
            {
              "type": "text",
              "value": " and the entries of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "A"
            },
            {
              "type": "text",
              "value": " are of type "
            },
            {
              "type": "inlineCode",
              "value": "int"
            },
            {
              "type": "text",
              "value": ", then this function returns a multigraph (of the same type as "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "create_using"
            },
            {
              "type": "text",
              "value": ") with parallel edges. In this case, "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "edge_attribute"
            },
            {
              "type": "text",
              "value": " will be ignored."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A biadjacency matrix representation of a graph"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "A: scipy sparse array",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Use specified graph for result.  The default is Graph()"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "create_using: NetworkX graph",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Name of edge attribute to store matrix numeric value. The data will have the same type as the matrix entry (int, float, (real,imag))."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "edge_attribute: string",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Creates a new bipartite graph from a biadjacency matrix given as a SciPy sparse array."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/bipartite/matrix.py",
  "item_line": 113,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Notes",
    "See Also",
    "References"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "biadjacency_matrix",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "biadjacency_matrix"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.convert_matrix:from_numpy_array",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "from_numpy_array"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(A, create_using=None, edge_attribute='weight')"
  },
  "type": "DocBlob"
}