{
  "aliases": [
    "networkx.bipartite.collaboration_weighted_projected_graph"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The collaboration weighted projection is the projection of the bipartite network B onto the specified nodes with weights assigned using Newman's collaboration model :"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "w_{u, v} = \\sum_k \\frac{\\delta_{u}^{k} \\delta_{v}^{k}}{d_k - 1}"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "where "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "u"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "v"
            },
            {
              "type": "text",
              "value": " are nodes from the bottom bipartite node set, and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "k"
            },
            {
              "type": "text",
              "value": " is a node of the top node set. The value "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "d_k"
            },
            {
              "type": "text",
              "value": " is the degree of node "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "k"
            },
            {
              "type": "text",
              "value": " in the bipartite network and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "\\delta_{u}^{k}"
            },
            {
              "type": "text",
              "value": " is 1 if node "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "u"
            },
            {
              "type": "text",
              "value": " is linked to node "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "k"
            },
            {
              "type": "text",
              "value": " in the original bipartite graph or 0 otherwise."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The nodes retain their attributes and are connected in the resulting graph if have an edge to a common node in the original bipartite graph."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "No attempt is made to verify that the input graph B is bipartite. The graph and node properties are (shallow) copied to the projected graph."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "See "
            },
            {
              "type": "inlineCode",
              "value": "bipartite documentation <networkx.algorithms.bipartite>"
            },
            {
              "type": "text",
              "value": " for further details on how bipartite graphs are handled in NetworkX."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The input graph should be bipartite."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "B",
              "type": "Param",
              "type_": "NetworkX graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Nodes to project onto (the \"bottom\" nodes)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "nodes",
              "type": "Param",
              "type_": "list or iterable"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A graph that is the projection onto the given nodes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "Graph",
              "type": "Param",
              "type_": "NetworkX graph"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Newman's weighted projection of B onto one of its node sets."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from networkx.algorithms import bipartite\nB = nx.path_graph(5)\nB.add_edge(1, 5)\nG = bipartite.collaboration_weighted_projected_graph(B, [0, 2, 4, 5])\nlist(G)"
      },
      {
        "type": "code",
        "value": "for edge in sorted(G.edges(data=True)):\n    print(edge)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/bipartite/projection.py",
  "item_line": 218,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples",
    "Notes",
    "See Also",
    "References"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "is_bipartite",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "is_bipartite"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.algorithms.bipartite.basic:is_bipartite_node_set",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "is_bipartite_node_set"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "sets",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "sets"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "weighted_projected_graph",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "weighted_projected_graph"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.algorithms.bipartite.projection:overlap_weighted_projected_graph",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "overlap_weighted_projected_graph"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.algorithms.bipartite.projection:generic_weighted_projected_graph",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "generic_weighted_projected_graph"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "projected_graph",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "projected_graph"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(B, nodes)"
  },
  "type": "DocBlob"
}