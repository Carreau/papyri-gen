{
  "aliases": [
    "networkx.bipartite.node_redundancy"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The redundancy coefficient of a node "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "v"
            },
            {
              "type": "text",
              "value": " is the fraction of pairs of neighbors of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "v"
            },
            {
              "type": "text",
              "value": " that are both linked to other nodes. In a one-mode projection these nodes would be linked together even if "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "v"
            },
            {
              "type": "text",
              "value": " were not there."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "More formally, for any vertex "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "v"
            },
            {
              "type": "text",
              "value": ", the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "redundancy coefficient of `v`"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " is defined by"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "rc(v) = \\frac{|\\{\\{u, w\\} \\subseteq N(v),\n\\: \\exists v' \\neq  v,\\: (v',u) \\in E\\:\n\\mathrm{and}\\: (v',w) \\in E\\}|}{ \\frac{|N(v)|(|N(v)|-1)}{2}},"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "where "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "N(v)"
            },
            {
              "type": "text",
              "value": " is the set of neighbors of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "v"
            },
            {
              "type": "text",
              "value": " in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "G",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "G"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A bipartite graph"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "G",
              "type": "Param",
              "type_": "graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Compute redundancy for these nodes. The default is all nodes in G."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "nodes",
              "type": "Param",
              "type_": "list or iterable (optional)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If any of the nodes in the graph (or in "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "nodes",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "nodes"
                    },
                    {
                      "type": "text",
                      "value": ", if specified) has (out-)degree less than two (which would result in division by zero, according to the definition of the redundancy coefficient)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "NetworkXError"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A dictionary keyed by node with the node redundancy value."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "redundancy",
              "type": "Param",
              "type_": "dictionary"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Computes the node redundancy coefficients for the nodes in the bipartite graph "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "G",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "G"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Compute the redundancy coefficient of each node in a graph::"
      },
      {
        "type": "text",
        "value": "    >>> from networkx.algorithms import bipartite\n    >>> G = nx.cycle_graph(4)\n    >>> rc = bipartite.node_redundancy(G)\n    >>> rc[0]\n    1.0"
      },
      {
        "type": "text",
        "value": "Compute the average redundancy for the graph::"
      },
      {
        "type": "text",
        "value": "    >>> from networkx.algorithms import bipartite\n    >>> G = nx.cycle_graph(4)\n    >>> rc = bipartite.node_redundancy(G)\n    >>> sum(rc.values()) / len(G)\n    1.0"
      },
      {
        "type": "text",
        "value": "Compute the average redundancy for a set of nodes::"
      },
      {
        "type": "text",
        "value": "    >>> from networkx.algorithms import bipartite\n    >>> G = nx.cycle_graph(4)\n    >>> rc = bipartite.node_redundancy(G)\n    >>> nodes = [0, 2]\n    >>> sum(rc[n] for n in nodes) / len(nodes)\n    1.0"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/bipartite/redundancy.py",
  "item_line": 9,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples",
    "Raises",
    "References"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(G, nodes=None)"
  },
  "type": "DocBlob"
}