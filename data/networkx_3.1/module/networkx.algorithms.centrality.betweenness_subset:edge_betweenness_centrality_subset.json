{
  "aliases": [
    "networkx.edge_betweenness_centrality_subset"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "type": "math",
          "value": "c_B(v) =\\sum_{s\\in S,t \\in T} \\frac{\\sigma(s, t|e)}{\\sigma(s, t)}"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "where $S$ is the set of sources, $T$ is the set of targets, $\\sigma(s, t)$ is the number of shortest $(s, t)$-paths, and $\\sigma(s, t|e)$ is the number of those paths passing through edge $e$ ."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The basic algorithm is from ."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For weighted graphs the edge weights must be greater than zero. Zero edge weights can produce an infinite number of equal length paths between pairs of nodes."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The normalization might seem a little strange but it is the same as in edge_betweenness_centrality() and is designed to make edge_betweenness_centrality(G) be the same as edge_betweenness_centrality_subset(G,sources=G.nodes(),targets=G.nodes())."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A networkx graph."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "G",
              "type": "Param",
              "type_": "graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Nodes to use as sources for shortest paths in betweenness"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "sources: list of nodes",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Nodes to use as targets for shortest paths in betweenness"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "targets: list of nodes",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True the betweenness values are normalized by "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "2/(n(n-1))"
                    },
                    {
                      "type": "text",
                      "value": " for graphs, and "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "1/(n(n-1))"
                    },
                    {
                      "type": "text",
                      "value": " for directed graphs where "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "n"
                    },
                    {
                      "type": "text",
                      "value": " is the number of nodes in G."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "normalized",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If None, all edge weights are considered equal. Otherwise holds the name of the edge attribute used as weight. Weights are used to calculate weighted shortest paths, so they are interpreted as distances."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "weight",
              "type": "Param",
              "type_": "None or string, optional (default=None)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Dictionary of edges with Betweenness centrality as the value."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "edges",
              "type": "Param",
              "type_": "dictionary"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Compute betweenness centrality for edges for a subset of nodes."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/centrality/betweenness_subset.py",
  "item_line": 115,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "References"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "betweenness_centrality",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "betweenness_centrality"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.algorithms.centrality.load:edge_load_centrality",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "edge_load"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(G, sources, targets, normalized=False, weight=None)"
  },
  "type": "DocBlob"
}