{
  "aliases": [
    "networkx.clustering"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "For unweighted graphs, the clustering of a node "
            },
            {
              "type": "inlineMath",
              "value": "u"
            },
            {
              "type": "text",
              "value": " is the fraction of possible triangles through that node that exist,"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "c_u = \\frac{2 T(u)}{deg(u)(deg(u)-1)},"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "where "
            },
            {
              "type": "inlineMath",
              "value": "T(u)"
            },
            {
              "type": "text",
              "value": " is the number of triangles through node "
            },
            {
              "type": "inlineMath",
              "value": "u"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineMath",
              "value": "deg(u)"
            },
            {
              "type": "text",
              "value": " is the degree of "
            },
            {
              "type": "inlineMath",
              "value": "u"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For weighted graphs, there are several ways to define clustering . the one used here is defined as the geometric average of the subgraph edge weights ,"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "c_u = \\frac{1}{deg(u)(deg(u)-1))}\n      \\sum_{vw} (\\hat{w}_{uv} \\hat{w}_{uw} \\hat{w}_{vw})^{1/3}."
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The edge weights "
            },
            {
              "type": "inlineMath",
              "value": "\\hat{w}_{uv}"
            },
            {
              "type": "text",
              "value": " are normalized by the maximum weight in the network "
            },
            {
              "type": "inlineMath",
              "value": "\\hat{w}_{uv} = w_{uv}/\\max(w)"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The value of "
            },
            {
              "type": "inlineMath",
              "value": "c_u"
            },
            {
              "type": "text",
              "value": " is assigned to 0 if "
            },
            {
              "type": "inlineMath",
              "value": "deg(u) < 2"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Additionally, this weighted definition has been generalized to support negative edge weights ."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For directed graphs, the clustering is similarly defined as the fraction of all possible directed triangles or geometric average of the subgraph edge weights for unweighted and weighted directed graph respectively ."
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "c_u = \\frac{T(u)}{2(deg^{tot}(u)(deg^{tot}(u)-1) - 2deg^{\\leftrightarrow}(u))},"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "where "
            },
            {
              "type": "inlineMath",
              "value": "T(u)"
            },
            {
              "type": "text",
              "value": " is the number of directed triangles through node "
            },
            {
              "type": "inlineMath",
              "value": "u"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineMath",
              "value": "deg^{tot}(u)"
            },
            {
              "type": "text",
              "value": " is the sum of in degree and out degree of "
            },
            {
              "type": "inlineMath",
              "value": "u"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineMath",
              "value": "deg^{\\leftrightarrow}(u)"
            },
            {
              "type": "text",
              "value": " is the reciprocal degree of "
            },
            {
              "type": "inlineMath",
              "value": "u"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Self loops are ignored."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "G",
              "type": "Param",
              "type_": "graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If a singleton node, return the number of triangles for that node. If an iterable, compute the number of triangles for each of those nodes. If "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "None"
                    },
                    {
                      "type": "text",
                      "value": " (the default) compute the number of triangles for all nodes in "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "G",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "G"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "nodes",
              "type": "Param",
              "type_": "node, iterable of nodes, or None (default=None)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The edge attribute that holds the numerical value used as a weight. If None, then each edge has weight 1."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "weight",
              "type": "Param",
              "type_": "string or None, optional (default=None)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Clustering coefficient at specified nodes"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "float, or dictionary"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Compute the clustering coefficient for nodes."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "G = nx.complete_graph(5)\nprint(nx.clustering(G, 0))"
      },
      {
        "type": "code",
        "value": "print(nx.clustering(G))"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/cluster.py",
  "item_line": 283,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples",
    "Notes",
    "References"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(G, nodes=None, weight=None)"
  },
  "type": "DocBlob"
}