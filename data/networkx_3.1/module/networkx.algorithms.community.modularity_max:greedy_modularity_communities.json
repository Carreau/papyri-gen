{
  "aliases": [
    "networkx.community.greedy_modularity_communities"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This function uses Clauset-Newman-Moore greedy modularity maximization  to find the community partition with the largest modularity."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Greedy modularity maximization begins with each node in its own community and repeatedly joins the pair of communities that lead to the largest modularity until no further increase in modularity is possible (a maximum). Two keyword arguments adjust the stopping condition. "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "cutoff",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "cutoff"
            },
            {
              "type": "text",
              "value": " is a lower limit on the number of communities so you can stop the process before reaching a maximum (used to save computation time). "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "best_n",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "best_n"
            },
            {
              "type": "text",
              "value": " is an upper limit on the number of communities so you can make the process continue until at most n communities remain even if the maximum modularity occurs for more. To obtain exactly n communities, set both "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "cutoff",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "cutoff"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "best_n",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "best_n"
            },
            {
              "type": "text",
              "value": " to n."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "This function maximizes the generalized modularity, where "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "resolution",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "resolution"
            },
            {
              "type": "text",
              "value": " is the resolution parameter, often expressed as $\\gamma$. See "
            },
            {
              "type": "inlineCode",
              "value": "~networkx.algorithms.community.quality.modularity"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "G",
              "type": "Param",
              "type_": "NetworkX graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The name of an edge attribute that holds the numerical value used as a weight.  If None, then each edge has weight 1. The degree is the sum of the edge weights adjacent to the node."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "weight",
              "type": "Param",
              "type_": "string or None, optional (default=None)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If resolution is less than 1, modularity favors larger communities. Greater than 1 favors smaller communities."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "resolution",
              "type": "Param",
              "type_": "float, optional (default=1)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A minimum number of communities below which the merging process stops. The process stops at this number of communities even if modularity is not maximized. The goal is to let the user stop the process early. The process stops before the cutoff if it finds a maximum of modularity."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cutoff",
              "type": "Param",
              "type_": "int, optional (default=1)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A maximum number of communities above which the merging process will not stop. This forces community merging to continue after modularity starts to decrease until "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "best_n",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "best_n"
                    },
                    {
                      "type": "text",
                      "value": " communities remain. If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "None"
                    },
                    {
                      "type": "text",
                      "value": ", don't force it to continue beyond a maximum."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "best_n",
              "type": "Param",
              "type_": "int or None, optional (default=None)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "[1, G.number_of_nodes()]"
                    },
                    {
                      "type": "text",
                      "value": ", or if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "best_n",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "best_n"
                    },
                    {
                      "type": "text",
                      "value": " < "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "cutoff",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "cutoff"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "ValueError",
              "type": "Param",
              "type_": "If the `cutoff` or `best_n`  value is not in the range"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A list of frozensets of nodes, one for each community. Sorted by length with largest communities first."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "communities: list"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Find communities in G using greedy modularity maximization."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "G = nx.karate_club_graph()\nc = nx.community.greedy_modularity_communities(G)\nsorted(c[0])"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/community/modularity_max.py",
  "item_line": 226,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Raises",
    "Returns",
    "Examples",
    "See Also",
    "References"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "modularity",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "modularity"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(G, weight=None, resolution=1, cutoff=1, best_n=None)"
  },
  "type": "DocBlob"
}