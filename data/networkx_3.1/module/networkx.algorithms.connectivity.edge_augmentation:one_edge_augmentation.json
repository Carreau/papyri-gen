{
  "aliases": [
    "networkx.connectivity.edge_augmentation.one_edge_augmentation"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Equivalent to "
            },
            {
              "type": "inlineCode",
              "value": "k_edge_augmentation"
            },
            {
              "type": "text",
              "value": " when k=1. Adding the resulting edges to G will make it 1-edge-connected. The solution is optimal for both weighted and non-weighted variants."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Uses either "
            },
            {
              "type": "inlineCode",
              "value": "unconstrained_one_edge_augmentation"
            },
            {
              "type": "text",
              "value": " or "
            },
            {
              "type": "inlineCode",
              "value": "weighted_one_edge_augmentation"
            },
            {
              "type": "text",
              "value": " depending on whether "
            },
            {
              "type": "inlineCode",
              "value": "avail"
            },
            {
              "type": "text",
              "value": " is specified. Both algorithms are based on finding a minimum spanning tree. As such both algorithms find optimal solutions and run in linear time."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An undirected graph."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "G",
              "type": "Param",
              "type_": "NetworkX graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "For more details, see "
                    },
                    {
                      "type": "inlineCode",
                      "value": "k_edge_augmentation"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "avail",
              "type": "Param",
              "type_": "dict or a set of 2 or 3 tuples"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "key to use to find weights if "
                    },
                    {
                      "type": "inlineCode",
                      "value": "avail"
                    },
                    {
                      "type": "text",
                      "value": " is a set of 3-tuples. For more details, see "
                    },
                    {
                      "type": "inlineCode",
                      "value": "k_edge_augmentation"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "weight",
              "type": "Param",
              "type_": "string"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If partial is True and no feasible k-edge-augmentation exists, then the augmenting edges minimize the number of connected components."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "partial",
              "type": "Param",
              "type_": "boolean"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If partial is False and no one-edge-augmentation exists."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "NetworkXUnfeasible"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Finds minimum weight set of edges to connect G."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Edges in the one-augmentation of G"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "edge",
              "type": "Param",
              "type_": "tuple"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/connectivity/edge_augmentation.py",
  "item_line": 384,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Yields",
    "Raises",
    "Notes",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "func"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "k_edge_augmentation",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "k_edge_augmentation"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(G, avail=None, weight=None, partial=False)"
  },
  "type": "DocBlob"
}