{
  "aliases": [
    "networkx.k_edge_subgraphs"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Attempts to use the most efficient implementation available based on k. If k=1, or k=2 and the graph is undirected, then this simply calls "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "networkx",
                "path": "networkx.algorithms.connectivity.edge_kcomponents:EdgeComponentAuxGraph.k_edge_components",
                "type": "RefInfo",
                "version": "3.1"
              },
              "type": "Link",
              "value": "k_edge_components"
            },
            {
              "type": "text",
              "value": ".  Otherwise the algorithm from _[1] is used."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "G",
              "type": "Param",
              "type_": "NetworkX graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Desired edge connectivity"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "k",
              "type": "Param",
              "type_": "Integer"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If the input graph is a multigraph."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "NetworkXNotImplemented"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If k is less than 1"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "ValueError:"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Each k-edge-subgraph is a maximal set of nodes that defines a subgraph of G that is k-edge-connected."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "k_edge_subgraphs",
              "type": "Param",
              "type_": "a generator of k-edge-subgraphs"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Generates nodes in each maximal k-edge-connected subgraph in G."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import itertools as it\nfrom networkx.utils import pairwise\npaths = [\n    (1, 2, 4, 3, 1, 4),\n    (5, 6, 7, 8, 5, 7, 8, 6),\n]\nG = nx.Graph()\nG.add_nodes_from(it.chain(*paths))\nG.add_edges_from(it.chain(*[pairwise(path) for path in paths]))\n# note this does not return {1, 4} unlike k_edge_components\nsorted(map(sorted, nx.k_edge_subgraphs(G, k=3)))"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/connectivity/edge_kcomponents.py",
  "item_line": 109,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Raises",
    "Notes",
    "Examples",
    "References"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "func"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "edge_connectivity",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "edge_connectivity"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "similar to this function, but nodes only need to have k-edge-connctivity within the graph G and the subgraphs might not be k-edge-connected."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.algorithms.connectivity.edge_kcomponents:EdgeComponentAuxGraph.k_edge_components",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "k_edge_components"
      },
      "type": "func"
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(G, k)"
  },
  "type": "DocBlob"
}