{
  "aliases": [
    "networkx.connectivity.build_auxiliary_node_connectivity"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "For an undirected graph G having "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "n"
            },
            {
              "type": "text",
              "value": " nodes and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "m"
            },
            {
              "type": "text",
              "value": " edges we derive a directed graph D with "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "2n"
            },
            {
              "type": "text",
              "value": " nodes and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "2m+n"
            },
            {
              "type": "text",
              "value": " arcs by replacing each original node "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "v"
            },
            {
              "type": "text",
              "value": " with two nodes "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "vA"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "vB"
            },
            {
              "type": "text",
              "value": " linked by an (internal) arc in D. Then for each edge ("
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "u"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "v"
            },
            {
              "type": "text",
              "value": ") in G we add two arcs ("
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "uB"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "vA"
            },
            {
              "type": "text",
              "value": ") and ("
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "vB"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "uA"
            },
            {
              "type": "text",
              "value": ") in D. Finally we set the attribute capacity = 1 for each arc in D ."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For a directed graph having "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "n"
            },
            {
              "type": "text",
              "value": " nodes and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "m"
            },
            {
              "type": "text",
              "value": " arcs we derive a directed graph D with "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "2n"
            },
            {
              "type": "text",
              "value": " nodes and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "m+n"
            },
            {
              "type": "text",
              "value": " arcs by replacing each original node "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "v"
            },
            {
              "type": "text",
              "value": " with two nodes "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "vA"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "vB"
            },
            {
              "type": "text",
              "value": " linked by an (internal) arc ("
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "vA"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "vB"
            },
            {
              "type": "text",
              "value": ") in D. Then for each arc ("
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "u"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "v"
            },
            {
              "type": "text",
              "value": ") in G we add one arc ("
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "uB"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "vA"
            },
            {
              "type": "text",
              "value": ") in D. Finally we set the attribute capacity = 1 for each arc in D."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "A dictionary with a mapping between nodes in the original graph and the auxiliary digraph is stored as a graph attribute: H.graph['mapping']."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Creates a directed graph D from an undirected graph G to compute flow based node connectivity."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/connectivity/utils.py",
  "item_line": 9,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "References"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(G)"
  },
  "type": "DocBlob"
}