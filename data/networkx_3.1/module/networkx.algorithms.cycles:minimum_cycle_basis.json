{
  "aliases": [
    "networkx.minimum_cycle_basis"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Minimum weight means a cycle basis for which the total weight (length for unweighted graphs) of all the cycles is minimum."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "G",
              "type": "Param",
              "type_": "NetworkX Graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "name of the edge attribute to use for edge weights"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "weight: string",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "",
              "type": "Param",
              "type_": "A list of cycle lists.  Each cycle list is a list of nodes"
            },
            {
              "desc": [],
              "param": "",
              "type": "Param",
              "type_": "which forms a cycle (loop) in G. Note that the nodes are not"
            },
            {
              "desc": [],
              "param": "",
              "type": "Param",
              "type_": "necessarily returned in a order by which they appear in the cycle"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns a minimum weight cycle basis for G"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "G = nx.Graph()\nnx.add_cycle(G, [0, 1, 2, 3])\nnx.add_cycle(G, [0, 3, 4, 5])\nprint([sorted(c) for c in nx.minimum_cycle_basis(G)])"
      },
      {
        "type": "text",
        "value": "References:\n    [1] Kavitha, Telikepalli, et al. \"An O(m^2n) Algorithm for\n    Minimum Cycle Basis of Graphs.\"\n    http://link.springer.com/article/10.1007/s00453-007-9064-z\n    [2] de Pina, J. 1995. Applications of shortest path methods.\n    Ph.D. thesis, University of Amsterdam, Netherlands"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/cycles.py",
  "item_line": 1028,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "simple_cycles",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "simple_cycles"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "cycle_basis",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "cycle_basis"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(G, weight=None)"
  },
  "type": "DocBlob"
}