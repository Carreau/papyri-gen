{
  "aliases": [
    "networkx.is_eulerian"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A graph is "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "Eulerian"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " if it has an Eulerian circuit. An "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "Eulerian\ncircuit"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " is a closed walk that includes each edge of a graph exactly once."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Graphs with isolated vertices (i.e. vertices with zero degree) are not considered to have Eulerian circuits. Therefore, if the graph is not connected (or not strongly connected, for directed graphs), this function returns False."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A graph, either directed or undirected."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "G",
              "type": "Param",
              "type_": "NetworkX graph"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns True if and only if "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "G",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "G"
            },
            {
              "type": "text",
              "value": " is Eulerian."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "nx.is_eulerian(nx.DiGraph({0: [3], 1: [2], 2: [3], 3: [0, 1]}))"
      },
      {
        "type": "code",
        "value": "nx.is_eulerian(nx.complete_graph(5))"
      },
      {
        "type": "code",
        "value": "nx.is_eulerian(nx.petersen_graph())"
      },
      {
        "type": "text",
        "value": "If you prefer to allow graphs with isolated vertices to have Eulerian circuits,\nyou can first remove such vertices and then call `is_eulerian` as below example shows."
      },
      {
        "type": "code",
        "value": "G = nx.Graph([(0, 1), (1, 2), (0, 2)])\nG.add_node(3)\nnx.is_eulerian(G)"
      },
      {
        "type": "code",
        "value": "G.remove_nodes_from(list(nx.isolates(G)))\nnx.is_eulerian(G)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/euler.py",
  "item_line": 20,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(G)"
  },
  "type": "DocBlob"
}