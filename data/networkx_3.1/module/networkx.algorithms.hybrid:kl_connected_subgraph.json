{
  "aliases": [
    "networkx.kl_connected_subgraph"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A graph is locally "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "(k, l)"
            },
            {
              "type": "text",
              "value": "-connected if for each edge "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "(u, v)"
            },
            {
              "type": "text",
              "value": " in the graph there are at least "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "l",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "l"
            },
            {
              "type": "text",
              "value": " edge-disjoint paths of length at most "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "k",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "k"
            },
            {
              "type": "text",
              "value": " joining "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "u"
            },
            {
              "type": "text",
              "value": " to "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "v"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The graph in which to find a maximum locally "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "(k, l)"
                    },
                    {
                      "type": "text",
                      "value": "-connected subgraph."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "G",
              "type": "Param",
              "type_": "NetworkX graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The maximum length of paths to consider. A higher number means a looser connectivity requirement."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "k",
              "type": "Param",
              "type_": "integer"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The number of edge-disjoint paths. A higher number means a stricter connectivity requirement."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "l",
              "type": "Param",
              "type_": "integer"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If this is True, this function uses an algorithm that uses slightly more time but less memory."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "low_memory",
              "type": "Param",
              "type_": "bool"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True then return a tuple of the form "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "(H, is_same)"
                    },
                    {
                      "type": "text",
                      "value": ", where "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "H"
                    },
                    {
                      "type": "text",
                      "value": " is the maximum locally "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "(k, l)"
                    },
                    {
                      "type": "text",
                      "value": "-connected subgraph and "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "is_same"
                    },
                    {
                      "type": "text",
                      "value": " is a Boolean representing whether "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "G",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "G"
                    },
                    {
                      "type": "text",
                      "value": " is locally "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "(k,\nl)"
                    },
                    {
                      "type": "text",
                      "value": "-connected (and hence, whether "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "H"
                    },
                    {
                      "type": "text",
                      "value": " is simply a copy of the input graph "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "G",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "G"
                    },
                    {
                      "type": "text",
                      "value": ")."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "same_as_graph",
              "type": "Param",
              "type_": "bool"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "same_as_graph",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "same_as_graph"
                    },
                    {
                      "type": "text",
                      "value": " is True, then this function returns a two-tuple as described above. Otherwise, it returns only the maximum locally "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "(k, l)"
                    },
                    {
                      "type": "text",
                      "value": "-connected subgraph."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "NetworkX graph or two-tuple"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns the maximum locally "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "(k, l)"
            },
            {
              "type": "text",
              "value": "-connected subgraph of "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "G",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "G"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/hybrid.py",
  "item_line": 13,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "References"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.algorithms.hybrid:is_kl_connected",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "is_kl_connected"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(G, k, l, low_memory=False, same_as_graph=False)"
  },
  "type": "DocBlob"
}