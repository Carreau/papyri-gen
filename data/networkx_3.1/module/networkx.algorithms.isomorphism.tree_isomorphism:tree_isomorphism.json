{
  "aliases": [
    "networkx.isomorphism.tree_isomorphism"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Note that two trees may have more than one isomorphism, and this routine just returns one valid mapping."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This runs in O(n*log(n)) time for trees with n nodes."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "One of the trees being compared"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "t1",
              "type": "Param",
              "type_": "undirected NetworkX graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The other tree being compared"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "t2",
              "type": "Param",
              "type_": "undirected NetworkX graph"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A list of pairs in which the left element is a node in "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "t1",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "t1"
                    },
                    {
                      "type": "text",
                      "value": " and the right element is a node in "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "t2",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "t2"
                    },
                    {
                      "type": "text",
                      "value": ".  The pairs are in arbitrary order.  If the nodes in one tree is mapped to the names in the other, then trees will be identical. Note that an isomorphism will not necessarily be unique."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "t1",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "t1"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "t2",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "t2"
                    },
                    {
                      "type": "text",
                      "value": " are not isomorphic, then it returns the empty list."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "isomorphism",
              "type": "Param",
              "type_": "list"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Given two undirected (or free) trees "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "t1",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "t1"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "t2",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "t2"
            },
            {
              "type": "text",
              "value": ", this routine will determine if they are isomorphic. It returns the isomorphism, a mapping of the nodes of "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "t1",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "t1"
            },
            {
              "type": "text",
              "value": " onto the nodes of "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "t2",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "t2"
            },
            {
              "type": "text",
              "value": ", such that two trees are then identical."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/isomorphism/tree_isomorphism.py",
  "item_line": 209,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(t1, t2)"
  },
  "type": "DocBlob"
}