{
  "aliases": [
    "networkx.within_inter_cluster"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "For two nodes "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "u"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "v"
            },
            {
              "type": "text",
              "value": ", if a common neighbor "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "w"
            },
            {
              "type": "text",
              "value": " belongs to the same community as them, "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "w"
            },
            {
              "type": "text",
              "value": " is considered as within-cluster common neighbor of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "u"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "v"
            },
            {
              "type": "text",
              "value": ". Otherwise, it is considered as inter-cluster common neighbor of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "u"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "v"
            },
            {
              "type": "text",
              "value": ". The ratio between the size of the set of within- and inter-cluster common neighbors is defined as the WIC measure."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A NetworkX undirected graph."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "G",
              "type": "Param",
              "type_": "graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The WIC measure will be computed for each pair of nodes given in the iterable. The pairs must be given as 2-tuples (u, v) where u and v are nodes in the graph. If ebunch is None then all non-existent edges in the graph will be used. Default value: None."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "ebunch",
              "type": "Param",
              "type_": "iterable of node pairs, optional (default = None)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Value to prevent division by zero in case there is no inter-cluster common neighbor between two nodes. See  for details. Default value: 0.001."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "delta",
              "type": "Param",
              "type_": "float, optional (default = 0.001)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Nodes attribute name containing the community information. G[u][community] identifies which community u belongs to. Each node belongs to at most one community. Default value: 'community'."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "community",
              "type": "Param",
              "type_": "string, optional (default = 'community')"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An iterator of 3-tuples in the form (u, v, p) where (u, v) is a pair of nodes and p is their WIC measure."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "piter",
              "type": "Param",
              "type_": "iterator"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Compute the ratio of within- and inter-cluster common neighbors of all node pairs in ebunch."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "G = nx.Graph()\nG.add_edges_from([(0, 1), (0, 2), (0, 3), (1, 4), (2, 4), (3, 4)])\nG.nodes[0][\"community\"] = 0\nG.nodes[1][\"community\"] = 1\nG.nodes[2][\"community\"] = 0\nG.nodes[3][\"community\"] = 0\nG.nodes[4][\"community\"] = 0\npreds = nx.within_inter_cluster(G, [(0, 4)])\nfor u, v, p in preds:\n    print(f\"({u}, {v}) -> {p:.8f}\")"
      },
      {
        "type": "code",
        "value": "preds = nx.within_inter_cluster(G, [(0, 4)], delta=0.5)\nfor u, v, p in preds:\n    print(f\"({u}, {v}) -> {p:.8f}\")"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/link_prediction.py",
  "item_line": 508,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples",
    "References"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(G, ebunch=None, delta=0.001, community='community')"
  },
  "type": "DocBlob"
}