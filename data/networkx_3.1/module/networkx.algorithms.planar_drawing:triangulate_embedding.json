{
  "aliases": [
    "networkx.planar_drawing.triangulate_embedding"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Traverses faces of the embedding and adds edges to a copy of the embedding to triangulate it. The method also ensures that the resulting graph is 2-connected by adding edges if the same vertex is contained twice on a path around a face."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The input graph must contain at least 3 nodes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "embedding",
              "type": "Param",
              "type_": "nx.PlanarEmbedding"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If set to False the face with the most nodes is chooses as outer face. This outer face does not get triangulated."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "fully_triangulate",
              "type": "Param",
              "type_": "bool"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The element "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "embedding",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "embedding"
                    },
                    {
                      "type": "text",
                      "value": " is a new embedding containing all edges from the input embedding and the additional edges to triangulate the graph. The element "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "outer_face"
                    },
                    {
                      "type": "text",
                      "value": " is a list of nodes that lie on the outer face. If the graph is fully triangulated these are three arbitrary connected nodes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "(embedding, outer_face)",
              "type": "Param",
              "type_": "(nx.PlanarEmbedding, list) tuple"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Triangulates the embedding."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/planar_drawing.py",
  "item_line": 336,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(embedding, fully_triangulate=True)"
  },
  "type": "DocBlob"
}