{
  "aliases": [
    "networkx.polynomials"
  ],
  "arbitrary": [
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Provides algorithms supporting the computation of graph polynomials."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Graph polynomials are polynomial-valued graph invariants that encode a wide variety of structural information. Examples include the Tutte polynomial, chromatic polynomial, characteristic polynomial, and matching polynomial. An extensive treatment is provided in ."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For a simple example, the "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "api",
                "module": "sympy.matrices.matrices",
                "path": "sympy.matrices.matrices:MatrixDeterminant.charpoly",
                "type": "RefInfo",
                "version": "*"
              },
              "type": "Link",
              "value": "charpoly"
            },
            {
              "type": "text",
              "value": " method can be used to compute the characteristic polynomial from the adjacency matrix of a graph. Consider the complete graph "
            },
            {
              "type": "inlineCode",
              "value": "K_4"
            },
            {
              "type": "text",
              "value": ":"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": ">>> import sympy\n>>> x = sympy.Symbol(\"x\")\n>>> G = nx.complete_graph(4)\n>>> A = nx.adjacency_matrix(G)\n>>> M = sympy.SparseMatrix(A.todense())\n>>> M.charpoly(x).as_expr()\nx**4 - 6*x**2 - 8*x - 3"
        },
        {
          "placeholder": "footnote",
          "type": "Unimplemented",
          "value": ".. [1] Y. Shi, M. Dehmer, X. Li, I. Gutman,\n   \"Graph Polynomials\""
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  ],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Graph polynomials are polynomial-valued graph invariants that encode a wide variety of structural information. Examples include the Tutte polynomial, chromatic polynomial, characteristic polynomial, and matching polynomial. An extensive treatment is provided in ."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For a simple example, the "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "api",
                "module": "sympy.matrices.matrices",
                "path": "sympy.matrices.matrices:MatrixDeterminant.charpoly",
                "type": "RefInfo",
                "version": "*"
              },
              "type": "Link",
              "value": "charpoly"
            },
            {
              "type": "text",
              "value": " method can be used to compute the characteristic polynomial from the adjacency matrix of a graph. Consider the complete graph "
            },
            {
              "type": "inlineCode",
              "value": "K_4"
            },
            {
              "type": "text",
              "value": ":"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": ">>> import sympy\n>>> x = sympy.Symbol(\"x\")\n>>> G = nx.complete_graph(4)\n>>> A = nx.adjacency_matrix(G)\n>>> M = sympy.SparseMatrix(A.todense())\n>>> M.charpoly(x).as_expr()\nx**4 - 6*x**2 - 8*x - 3"
        },
        {
          "placeholder": "footnote",
          "type": "Unimplemented",
          "value": ".. [1] Y. Shi, M. Dehmer, X. Li, I. Gutman,\n   \"Graph Polynomials\""
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Provides algorithms supporting the computation of graph polynomials."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/polynomials.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}