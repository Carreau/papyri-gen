{
  "aliases": [
    "networkx.dijkstra_path_length"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Uses Dijkstra's Method to compute the shortest weighted path length between two nodes in a graph."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Edge weight attributes must be numerical. Distances are calculated as sums of weighted edges traversed."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The weight function can be used to hide edges by returning None. So "
            },
            {
              "type": "inlineCode",
              "value": "weight = lambda u, v, d: 1 if d['color']==\"red\" else None"
            },
            {
              "type": "text",
              "value": " will find the shortest red path."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The function "
            },
            {
              "type": "inlineCode",
              "value": "single_source_dijkstra"
            },
            {
              "type": "text",
              "value": " computes both path and length-of-path if you need both, use that."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "G",
              "type": "Param",
              "type_": "NetworkX graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "starting node for path"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "source",
              "type": "Param",
              "type_": "node label"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "ending node for path"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "target",
              "type": "Param",
              "type_": "node label"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If this is a string, then edge weights will be accessed via the edge attribute with this key (that is, the weight of the edge joining "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "u"
                    },
                    {
                      "type": "text",
                      "value": " to "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "v"
                    },
                    {
                      "type": "text",
                      "value": " will be "
                    },
                    {
                      "type": "inlineCode",
                      "value": "G.edges[u, v][weight]"
                    },
                    {
                      "type": "text",
                      "value": "). If no such edge attribute exists, the weight of the edge is assumed to be one."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If this is a function, the weight of an edge is the value returned by the function. The function must accept exactly three positional arguments: the two endpoints of an edge and the dictionary of edge attributes for that edge. The function must return a number or None to indicate a hidden edge."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "weight",
              "type": "Param",
              "type_": "string or function"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "source",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "source"
                    },
                    {
                      "type": "text",
                      "value": " is not in "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "G",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "G"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "NodeNotFound"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If no path exists between source and target."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "NetworkXNoPath"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Shortest path length."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "length",
              "type": "Param",
              "type_": "number"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns the shortest weighted path length in G from source to target."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "G = nx.path_graph(5)\nnx.dijkstra_path_length(G, 0, 4)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/shortest_paths/weighted.py",
  "item_line": 171,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "Examples",
    "Notes",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "bidirectional_dijkstra",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "bidirectional_dijkstra"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "bellman_ford_path_length",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "bellman_ford_path_length"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "single_source_dijkstra",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "single_source_dijkstra"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(G, source, target, weight='weight')"
  },
  "type": "DocBlob"
}