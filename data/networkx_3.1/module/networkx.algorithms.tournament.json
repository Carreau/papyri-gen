{
  "aliases": [
    "networkx.tournament"
  ],
  "arbitrary": [
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Functions concerning tournament graphs."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "A "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "tournament graph"
            },
            {
              "type": "text",
              "value": " is a complete oriented graph. In other words, it is a directed graph in which there is exactly one directed edge joining each pair of distinct nodes. For each function in this module that accepts a graph as input, you must provide a tournament graph. The responsibility is on the caller to ensure that the graph is a tournament graph."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "To access the functions in this module, you must access them through the "
            },
            {
              "type": "inlineCode",
              "value": "networkx.algorithms.tournament"
            },
            {
              "type": "text",
              "value": " module      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": ">>> from networkx.algorithms import tournament\n>>> G = nx.DiGraph([(0, 1), (1, 2), (2, 0)])\n>>> tournament.is_tournament(G)\nTrue"
        },
        {
          "placeholder": "target",
          "type": "Unimplemented",
          "value": ".. _tournament graph: https://en.wikipedia.org/wiki/Tournament_%28graph_theory%29"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  ],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "tournament graph"
            },
            {
              "type": "text",
              "value": " is a complete oriented graph. In other words, it is a directed graph in which there is exactly one directed edge joining each pair of distinct nodes. For each function in this module that accepts a graph as input, you must provide a tournament graph. The responsibility is on the caller to ensure that the graph is a tournament graph."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "To access the functions in this module, you must access them through the "
            },
            {
              "type": "inlineCode",
              "value": "networkx.algorithms.tournament"
            },
            {
              "type": "text",
              "value": " module      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": ">>> from networkx.algorithms import tournament\n>>> G = nx.DiGraph([(0, 1), (1, 2), (2, 0)])\n>>> tournament.is_tournament(G)\nTrue"
        },
        {
          "placeholder": "target",
          "type": "Unimplemented",
          "value": ".. _tournament graph: https://en.wikipedia.org/wiki/Tournament_%28graph_theory%29"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Functions concerning tournament graphs."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/tournament.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}