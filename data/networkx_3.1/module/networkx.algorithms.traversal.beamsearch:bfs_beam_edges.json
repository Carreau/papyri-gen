{
  "aliases": [
    "networkx.bfs_beam_edges"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The beam search is a generalized breadth-first search in which only the \"best\" "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "w"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " neighbors of the current node are enqueued, where "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "w"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " is the beam width and \"best\" is an application-specific heuristic. In general, a beam search with a small beam width might not visit each node in the graph."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "G",
              "type": "Param",
              "type_": "NetworkX graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Starting node for the breadth-first search; this function iterates over only those edges in the component reachable from this node."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "source",
              "type": "Param",
              "type_": "node"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A function that takes a node of the graph as input and returns a real number indicating how \"good\" it is. A higher value means it is more likely to be visited sooner during the search. When visiting a new node, only the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "width",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "width"
                    },
                    {
                      "type": "text",
                      "value": " neighbors with the highest "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "value",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "value"
                    },
                    {
                      "type": "text",
                      "value": " are enqueued (in decreasing order of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "value",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "value"
                    },
                    {
                      "type": "text",
                      "value": ")."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "value",
              "type": "Param",
              "type_": "function"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The beam width for the search. This is the number of neighbors (ordered by "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "value",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "value"
                    },
                    {
                      "type": "text",
                      "value": ") to enqueue when visiting each new node."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "width",
              "type": "Param",
              "type_": "int (default = None)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Iterates over edges in a beam search."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Edges in the beam search starting from "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "source",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "source"
                    },
                    {
                      "type": "text",
                      "value": ", given as a pair of nodes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "edge"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "To give nodes with, for example, a higher centrality precedence\nduring the search, set the `value` function to return the centrality\nvalue of the node:"
      },
      {
        "type": "code",
        "value": "G = nx.karate_club_graph()\ncentrality = nx.eigenvector_centrality(G)\nsource = 0\nwidth = 5\nfor u, v in nx.bfs_beam_edges(G, source, centrality.get, width):\n    print((u, v))"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/traversal/beamsearch.py",
  "item_line": 8,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Yields",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(G, source, value, width=None)"
  },
  "type": "DocBlob"
}