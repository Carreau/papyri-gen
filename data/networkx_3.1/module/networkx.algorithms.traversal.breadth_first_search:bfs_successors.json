{
  "aliases": [
    "networkx.bfs_successors"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Based on http://www.ics.uci.edu/~eppstein/PADS/BFS.py by D. Eppstein, July 2004.The modifications to allow depth limits based on the Wikipedia article \""
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "Depth-limited-search"
            },
            {
              "type": "text",
              "value": "\"."
            }
          ],
          "type": "paragraph"
        },
        {
          "placeholder": "target",
          "type": "Unimplemented",
          "value": ".. _Depth-limited-search: https://en.wikipedia.org/wiki/Depth-limited_search"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "G",
              "type": "Param",
              "type_": "NetworkX graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Specify starting node for breadth-first search"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "source",
              "type": "Param",
              "type_": "node"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Specify the maximum search depth"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "depth_limit",
              "type": "Param",
              "type_": "int, optional(default=len(G))"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A function that takes the list of neighbors of given node as input, and returns an "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "iterator"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " over these neighbors but with custom ordering."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "sort_neighbors",
              "type": "Param",
              "type_": "function"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "(node, successors) iterator where "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "networkx",
                        "path": "networkx.classes.digraph:DiGraph.successors",
                        "type": "RefInfo",
                        "version": "3.1"
                      },
                      "type": "Link",
                      "value": "successors"
                    },
                    {
                      "type": "text",
                      "value": " is the non-empty list of successors of "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "node"
                    },
                    {
                      "type": "text",
                      "value": " in a breadth first search from "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "source",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "source"
                    },
                    {
                      "type": "text",
                      "value": ". To appear in the iterator, "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "node"
                    },
                    {
                      "type": "text",
                      "value": " must have successors."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "succ: iterator"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns an iterator of successors in breadth-first-search from source."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "G = nx.path_graph(3)\nprint(dict(nx.bfs_successors(G, 0)))"
      },
      {
        "type": "code",
        "value": "H = nx.Graph()\nH.add_edges_from([(0, 1), (0, 2), (1, 3), (1, 4), (2, 5), (2, 6)])\nprint(dict(nx.bfs_successors(H, 0)))"
      },
      {
        "type": "code",
        "value": "G = nx.Graph()\nnx.add_path(G, [0, 1, 2, 3, 4, 5, 6])\nnx.add_path(G, [2, 7, 8, 9, 10])\nprint(dict(nx.bfs_successors(G, source=1, depth_limit=3)))"
      },
      {
        "type": "code",
        "value": "G = nx.DiGraph()\nnx.add_path(G, [0, 1, 2, 3, 4, 5])\nprint(dict(nx.bfs_successors(G, source=3)))"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/traversal/breadth_first_search.py",
  "item_line": 304,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Examples",
    "Notes",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.algorithms.traversal.breadth_first_search:bfs_tree",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "bfs_tree"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "bfs_edges",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "bfs_edges"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.algorithms.traversal.edgebfs:edge_bfs",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "edge_bfs"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(G, source, depth_limit=None, sort_neighbors=None)"
  },
  "type": "DocBlob"
}