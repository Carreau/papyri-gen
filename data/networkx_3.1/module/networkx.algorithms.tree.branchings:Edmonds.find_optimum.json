{
  "aliases": [
    "networkx.tree.Edmonds.find_optimum"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The edge attribute used to in determining optimality."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "attr",
              "type": "Param",
              "type_": "str"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The value of the edge attribute used if an edge does not have the attribute "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "attr",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "attr"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "default",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The type of optimum to search for, either 'min' or 'max'."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "kind",
              "type": "Param",
              "type_": "{'min', 'max'}"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If 'branching', then an optimal branching is found. If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "style",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "style"
                    },
                    {
                      "type": "text",
                      "value": " is 'arborescence', then a branching is found, such that if the branching is also an arborescence, then the branching is an optimal spanning arborescences. A given graph G need not have an optimal spanning arborescence."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "style",
              "type": "Param",
              "type_": "{'branching', 'arborescence'}"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, preserve the other edge attributes of the original graph (that are not the one passed to "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "attr",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "attr"
                    },
                    {
                      "type": "text",
                      "value": ")"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "preserve_attrs",
              "type": "Param",
              "type_": "bool"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The edge attribute holding edge partition data. Used in the spanning arborescence iterator."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "partition",
              "type": "Param",
              "type_": "str"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Indicator of random number generation state. See "
                    },
                    {
                      "type": "inlineCode",
                      "value": "Randomness<randomness>"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "seed",
              "type": "Param",
              "type_": "integer, random_state, or None (default)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The branching."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "H",
              "type": "Param",
              "type_": "(multi)digraph"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns a branching from G."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/tree/branchings.py",
  "item_line": 387,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self, attr='weight', default=1, kind='max', style='branching', preserve_attrs=False, partition=None, seed=None)"
  },
  "type": "DocBlob"
}