{
  "aliases": [
    "networkx.partition_spanning_tree"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Edges can be flagged as either "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "INCLUDED"
            },
            {
              "type": "text",
              "value": " which are required to be in the returned tree, "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "EXCLUDED"
            },
            {
              "type": "text",
              "value": ", which cannot be in the returned tree and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "OPEN"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "This is used in the SpanningTreeIterator to create new partitions following the algorithm of S\u00f6rensen and Janssens ."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An undirected graph."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "G",
              "type": "Param",
              "type_": "undirected graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Determines whether the returned tree is the minimum spanning tree of the partition of the maximum one."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "minimum",
              "type": "Param",
              "type_": "bool (default: True)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Data key to use for edge weights."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "weight",
              "type": "Param",
              "type_": "str"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The key for the edge attribute containing the partition data on the graph. Edges can be included, excluded or open using the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "networkx",
                        "path": "networkx.algorithms.tree.mst:EdgePartition",
                        "type": "RefInfo",
                        "version": "3.1"
                      },
                      "type": "Link",
                      "value": "EdgePartition"
                    },
                    {
                      "type": "text",
                      "value": " enum."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "partition",
              "type": "Param",
              "type_": "str"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If a NaN is found as an edge weight normally an exception is raised. If "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "ignore_nan is True"
                    },
                    {
                      "type": "text",
                      "value": " then that edge is ignored instead."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "ignore_nan",
              "type": "Param",
              "type_": "bool (default: False)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A minimum spanning tree using all of the included edges in the graph and none of the excluded edges."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "G",
              "type": "Param",
              "type_": "NetworkX Graph"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Find a spanning tree while respecting a partition of edges."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/tree/mst.py",
  "item_line": 610,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "References"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(G, minimum=True, weight='weight', partition='partition', ignore_nan=False)"
  },
  "type": "DocBlob"
}