{
  "aliases": [
    "networkx.tree.mst.prim_mst_edges"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The graph holding the tree of interest."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "G",
              "type": "Param",
              "type_": "NetworkX Graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Find the minimum (True) or maximum (False) spanning tree."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "minimum",
              "type": "Param",
              "type_": "bool (default: True)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The name of the edge attribute holding the edge weights."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "weight",
              "type": "Param",
              "type_": "string (default: 'weight')"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "G",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "G"
                    },
                    {
                      "type": "text",
                      "value": " is a multigraph, "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "keys",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "keys"
                    },
                    {
                      "type": "text",
                      "value": " controls whether edge keys ar yielded. Otherwise "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "keys",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "keys"
                    },
                    {
                      "type": "text",
                      "value": " is ignored."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "keys",
              "type": "Param",
              "type_": "bool (default: True)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Flag for whether to yield edge attribute dicts. If True, yield edges "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "(u, v, d)"
                    },
                    {
                      "type": "text",
                      "value": ", where "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "d"
                    },
                    {
                      "type": "text",
                      "value": " is the attribute dict. If False, yield edges "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "(u, v)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "data",
              "type": "Param",
              "type_": "bool (default: True)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If a NaN is found as an edge weight normally an exception is raised. If "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "ignore_nan is True"
                    },
                    {
                      "type": "text",
                      "value": " then that edge is ignored instead."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "ignore_nan",
              "type": "Param",
              "type_": "bool (default: False)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Iterate over edges of Prim's algorithm min/max spanning tree."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/algorithms/tree/mst.py",
  "item_line": 250,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(G, minimum, weight='weight', keys=True, data=True, ignore_nan=False)"
  },
  "type": "DocBlob"
}