{
  "aliases": [
    "networkx.selfloop_edges"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A selfloop edge has the same node at both ends."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A NetworkX graph."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "G",
              "type": "Param",
              "type_": "graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Return selfloop edges as two tuples (u, v) (data=False) or three-tuples (u, v, datadict) (data=True) or three-tuples (u, v, datavalue) (data='attrname')"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "data",
              "type": "Param",
              "type_": "string or bool, optional (default=False)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, return edge keys with each edge."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "keys",
              "type": "Param",
              "type_": "bool, optional (default=False)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Value used for edges that don't have the requested attribute. Only relevant if data is not True or False."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "default",
              "type": "Param",
              "type_": "value, optional (default=None)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An iterator over all selfloop edges."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "edgeiter",
              "type": "Param",
              "type_": "iterator over edge tuples"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns an iterator over selfloop edges."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "G = nx.MultiGraph()  # or Graph, DiGraph, MultiDiGraph, etc\nekey = G.add_edge(1, 1)\nekey = G.add_edge(1, 2)\nlist(nx.selfloop_edges(G))"
      },
      {
        "type": "code",
        "value": "list(nx.selfloop_edges(G, data=True))"
      },
      {
        "type": "code",
        "value": "list(nx.selfloop_edges(G, keys=True))"
      },
      {
        "type": "code",
        "value": "list(nx.selfloop_edges(G, keys=True, data=True))"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/classes/function.py",
  "item_line": 1112,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.classes.function:nodes_with_selfloops",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "nodes_with_selfloops"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.classes.function:number_of_selfloops",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "number_of_selfloops"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(G, data=False, keys=False, default=None)"
  },
  "type": "DocBlob"
}