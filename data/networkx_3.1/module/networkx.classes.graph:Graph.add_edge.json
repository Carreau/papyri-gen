{
  "aliases": [
    "networkx.Graph.add_edge"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The nodes u and v will be automatically added if they are not already in the graph."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Edge attributes can be specified with keywords or by directly accessing the edge's attribute dictionary. See examples below."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Adding an edge that already exists updates the edge data."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Many NetworkX algorithms designed for weighted graphs use an edge attribute (by default "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "weight"
            },
            {
              "type": "text",
              "value": ") to hold a numerical value."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Nodes can be, for example, strings or numbers. Nodes must be hashable (and not None) Python objects."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "u_of_edge, v_of_edge",
              "type": "Param",
              "type_": "nodes"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Edge data (or labels or objects) can be assigned using keyword arguments."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "attr",
              "type": "Param",
              "type_": "keyword arguments, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Add an edge between u and v."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "The following all add the edge e=(1, 2) to graph G:"
      },
      {
        "type": "code",
        "value": "G = nx.Graph()  # or DiGraph, MultiGraph, MultiDiGraph, etc\ne = (1, 2)\nG.add_edge(1, 2)  # explicit two-node form\nG.add_edge(*e)  # single edge as tuple of two nodes\nG.add_edges_from([(1, 2)])  # add edges from iterable container"
      },
      {
        "type": "text",
        "value": "Associate data to edges using keywords:"
      },
      {
        "type": "code",
        "value": "G.add_edge(1, 2, weight=3)\nG.add_edge(1, 3, weight=7, capacity=15, length=342.7)"
      },
      {
        "type": "text",
        "value": "For non-string attribute keys, use subscript notation."
      },
      {
        "type": "code",
        "value": "G.add_edge(1, 2)\nG[1][2].update({0: 5})\nG.edges[1, 2].update({0: 5})"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/classes/graph.py",
  "item_line": 893,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "add a collection of edges"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.classes.graph:Graph.add_edges_from",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "add_edges_from"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self, u_of_edge, v_of_edge, **attr)"
  },
  "type": "DocBlob"
}