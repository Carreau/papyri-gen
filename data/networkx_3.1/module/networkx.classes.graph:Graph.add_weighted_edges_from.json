{
  "aliases": [
    "networkx.Graph.add_weighted_edges_from"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Adding the same edge twice for Graph/DiGraph simply updates the edge data. For MultiGraph/MultiDiGraph, duplicate edges are stored."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "When adding edges from an iterator over the graph you are changing, a "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "RuntimeError"
            },
            {
              "type": "text",
              "value": " can be raised with message: "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "RuntimeError: dictionary changed size during iteration"
            },
            {
              "type": "text",
              "value": ". This happens when the graph's underlying dictionary is modified during iteration. To avoid this error, evaluate the iterator into a separate object, e.g. by using "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "list(iterator_of_edges)"
            },
            {
              "type": "text",
              "value": ", and pass this object to "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "G.add_weighted_edges_from"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Each edge given in the list or container will be added to the graph. The edges must be given as 3-tuples (u, v, w) where w is a number."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "ebunch_to_add",
              "type": "Param",
              "type_": "container of edges"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The attribute name for the edge weights to be added."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "weight",
              "type": "Param",
              "type_": "string, optional (default= 'weight')"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Edge attributes to add/update for all edges."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "attr",
              "type": "Param",
              "type_": "keyword arguments, optional (default= no attributes)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Add weighted edges in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "ebunch_to_add",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "ebunch_to_add"
            },
            {
              "type": "text",
              "value": " with specified weight attr"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "G = nx.Graph()  # or DiGraph, MultiGraph, MultiDiGraph, etc\nG.add_weighted_edges_from([(0, 1, 3.0), (1, 2, 7.5)])"
      },
      {
        "type": "text",
        "value": "Evaluate an iterator over edges before passing it"
      },
      {
        "type": "code",
        "value": "G = nx.Graph([(1, 2), (2, 3), (3, 4)])\nweight = 0.1\n# Grow graph by one new node, adding edges to all existing nodes.\n# wrong way - will raise RuntimeError\n# G.add_weighted_edges_from(((5, n, weight) for n in G.nodes))\n# correct way - note that there will be no self-edge for node 5\nG.add_weighted_edges_from(list((5, n, weight) for n in G.nodes))"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/classes/graph.py",
  "item_line": 1041,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "add a single edge"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.classes.graph:Graph.add_edge",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "add_edge"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "add multiple edges"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.classes.graph:Graph.add_edges_from",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "add_edges_from"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self, ebunch_to_add, weight='weight', **attr)"
  },
  "type": "DocBlob"
}