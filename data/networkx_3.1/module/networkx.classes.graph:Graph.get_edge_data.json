{
  "aliases": [
    "networkx.Graph.get_edge_data"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This is identical to "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "G[u][v]"
            },
            {
              "type": "text",
              "value": " except the default is returned instead of an exception if the edge doesn't exist."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "u, v",
              "type": "Param",
              "type_": "nodes"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Value to return if the edge (u, v) is not found."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "default:  any Python object (default=None)",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The edge attribute dictionary."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "edge_dict",
              "type": "Param",
              "type_": "dictionary"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns the attribute dictionary associated with edge (u, v)."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "G = nx.path_graph(4)  # or DiGraph, MultiGraph, MultiDiGraph, etc\nG[0][1]"
      },
      {
        "type": "text",
        "value": "Warning: Assigning to `G[u][v]` is not permitted.\nBut it is safe to assign attributes `G[u][v]['foo']`"
      },
      {
        "type": "code",
        "value": "G[0][1][\"weight\"] = 7\nG[0][1][\"weight\"]"
      },
      {
        "type": "code",
        "value": "G[1][0][\"weight\"]"
      },
      {
        "type": "code",
        "value": "G = nx.path_graph(4)  # or DiGraph, MultiGraph, MultiDiGraph, etc\nG.get_edge_data(0, 1)  # default edge data is {}"
      },
      {
        "type": "code",
        "value": "e = (0, 1)\nG.get_edge_data(*e)  # tuple form"
      },
      {
        "type": "code",
        "value": "G.get_edge_data(\"a\", \"b\", default=0)  # edge not in graph, return 0"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/classes/graph.py",
  "item_line": 1415,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self, u, v, default=None)"
  },
  "type": "DocBlob"
}