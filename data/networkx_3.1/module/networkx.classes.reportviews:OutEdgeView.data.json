{
  "aliases": [
    "networkx.digraph.OutEdgeView.data"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "If "
            },
            {
              "type": "inlineCode",
              "value": "data=False"
            },
            {
              "type": "text",
              "value": ", returns an "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "EdgeView"
            },
            {
              "type": "text",
              "value": " without any edge data."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "data=True"
                    },
                    {
                      "type": "text",
                      "value": ", then the data view maps each edge to a dictionary containing all of its attributes. If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "data",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "data"
                    },
                    {
                      "type": "text",
                      "value": " is a key in the edge dictionary, then the data view maps each edge to its value for the keyed attribute. In this case, if the edge doesn't have the attribute, the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "default",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "default"
                    },
                    {
                      "type": "text",
                      "value": " value is returned."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "data",
              "type": "Param",
              "type_": "bool or edge attribute key"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The value used when an edge does not have a specific attribute"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "default",
              "type": "Param",
              "type_": "object, default=None"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Allows restriction to edges only involving certain nodes. All edges are considered by default."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "nbunch",
              "type": "Param",
              "type_": "container of nodes, optional (default=None)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Returns an "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "EdgeDataView"
                    },
                    {
                      "type": "text",
                      "value": " for undirected Graphs, "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "OutEdgeDataView"
                    },
                    {
                      "type": "text",
                      "value": " for DiGraphs, "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "MultiEdgeDataView"
                    },
                    {
                      "type": "text",
                      "value": " for MultiGraphs and "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "OutMultiEdgeDataView"
                    },
                    {
                      "type": "text",
                      "value": " for MultiDiGraphs."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "dataview"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return a read-only view of edge data."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "G = nx.Graph()\nG.add_edges_from([\n    (0, 1, {\"dist\": 3, \"capacity\": 20}),\n    (1, 2, {\"dist\": 4}),\n    (2, 0, {\"dist\": 5})\n])"
      },
      {
        "type": "text",
        "value": "Accessing edge data with ``data=True`` (the default) returns an\nedge data view object listing each edge with all of its attributes:"
      },
      {
        "type": "code",
        "value": "G.edges.data()"
      },
      {
        "type": "text",
        "value": "If `data` represents a key in the edge attribute dict, a dataview listing\neach edge with its value for that specific key is returned:"
      },
      {
        "type": "code",
        "value": "G.edges.data(\"dist\")"
      },
      {
        "type": "text",
        "value": "`nbunch` can be used to limit the edges:"
      },
      {
        "type": "code",
        "value": "G.edges.data(\"dist\", nbunch=[0])"
      },
      {
        "type": "text",
        "value": "If a specific key is not found in an edge attribute dict, the value\nspecified by `default` is used:"
      },
      {
        "type": "code",
        "value": "G.edges.data(\"capacity\")"
      },
      {
        "type": "text",
        "value": "Note that there is no check that the `data` key is present in any of\nthe edge attribute dictionaries:"
      },
      {
        "type": "code",
        "value": "G.edges.data(\"speed\")"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/classes/reportviews.py",
  "item_line": 1093,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "EdgeDataView",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "EdgeDataView"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "OutEdgeDataView",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "OutEdgeDataView"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "MultiEdgeDataView",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "MultiEdgeDataView"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "OutMultiEdgeDataView",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "OutMultiEdgeDataView"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self, data=True, default=None, nbunch=None)"
  },
  "type": "DocBlob"
}