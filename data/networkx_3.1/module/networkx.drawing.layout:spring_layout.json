{
  "aliases": [
    "networkx.fruchterman_reingold_layout"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The algorithm simulates a force-directed representation of the network treating edges as springs holding nodes close, while treating nodes as repelling objects, sometimes called an anti-gravity force. Simulation continues until the positions are close to an equilibrium."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "There are some hard-coded values: minimal distance between nodes (0.01) and \"temperature\" of 0.1 to ensure nodes don't fly away. During the simulation, "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "k",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "k"
            },
            {
              "type": "text",
              "value": " helps determine the distance between nodes, though "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "scale",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "scale"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "center",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "center"
            },
            {
              "type": "text",
              "value": " determine the size and place after rescaling occurs at the end of the simulation."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Fixing some nodes doesn't allow them to move in the simulation. It also turns off the rescaling feature at the simulation's end. In addition, setting "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "scale",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "scale"
            },
            {
              "type": "text",
              "value": " to "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "None"
            },
            {
              "type": "text",
              "value": " turns off rescaling."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A position will be assigned to every node in G."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "G",
              "type": "Param",
              "type_": "NetworkX graph or list of nodes"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Optimal distance between nodes.  If None the distance is set to 1/sqrt(n) where n is the number of nodes.  Increase this value to move nodes farther apart."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "k",
              "type": "Param",
              "type_": "float (default=None)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Initial positions for nodes as a dictionary with node as keys and values as a coordinate list or tuple.  If None, then use random initial positions."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "pos",
              "type": "Param",
              "type_": "dict or None  optional (default=None)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Nodes to keep fixed at initial position. Nodes not in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "G.nodes"
                    },
                    {
                      "type": "text",
                      "value": " are ignored. ValueError raised if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "fixed",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "fixed"
                    },
                    {
                      "type": "text",
                      "value": " specified and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "pos",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "pos"
                    },
                    {
                      "type": "text",
                      "value": " not."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "fixed",
              "type": "Param",
              "type_": "list or None  optional (default=None)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Maximum number of iterations taken"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "iterations",
              "type": "Param",
              "type_": "int  optional (default=50)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Threshold for relative error in node position changes. The iteration stops if the error is below this threshold."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "threshold: float optional (default = 1e-4)",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The edge attribute that holds the numerical value used for the edge weight.  Larger means a stronger attractive force. If None, then all edge weights are 1."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "weight",
              "type": "Param",
              "type_": "string or None   optional (default='weight')"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Scale factor for positions. Not used unless "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "fixed is None"
                    },
                    {
                      "type": "text",
                      "value": ". If scale is None, no rescaling is performed."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "scale",
              "type": "Param",
              "type_": "number or None (default: 1)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Coordinate pair around which to center the layout. Not used unless "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "fixed is None"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "center",
              "type": "Param",
              "type_": "array-like or None"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Dimension of layout."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dim",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Set the random state for deterministic node layouts. If int, "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "seed",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "seed"
                    },
                    {
                      "type": "text",
                      "value": " is the seed used by the random number generator, if numpy.random.RandomState instance, "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "seed",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "seed"
                    },
                    {
                      "type": "text",
                      "value": " is the random number generator, if None, the random number generator is the RandomState instance used by numpy.random."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "seed",
              "type": "Param",
              "type_": "int, RandomState instance or None  optional (default=None)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A dictionary of positions keyed by node"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "pos",
              "type": "Param",
              "type_": "dict"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Position nodes using Fruchterman-Reingold force-directed algorithm."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "G = nx.path_graph(4)\npos = nx.spring_layout(G)"
      },
      {
        "type": "text",
        "value": "# The same using longer but equivalent function name\n>>> pos = nx.fruchterman_reingold_layout(G)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/drawing/layout.py",
  "item_line": 346,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(G, k=None, pos=None, fixed=None, iterations=50, threshold=0.0001, weight='weight', scale=1, center=None, dim=2, seed=None)"
  },
  "type": "DocBlob"
}