{
  "aliases": [
    "networkx.nx_latex"
  ],
  "arbitrary": [
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Export NetworkX graphs in LaTeX format using the TikZ library within TeX/LaTeX. Usually, you will want the drawing to appear in a figure environment so you use "
            },
            {
              "type": "inlineCode",
              "value": "to_latex(G, caption=\"A caption\")"
            },
            {
              "type": "text",
              "value": ". If you want the raw drawing commands without a figure environment use "
            },
            {
              "type": "inlineCode",
              "value": "to_latex_raw"
            },
            {
              "type": "text",
              "value": ". And if you want to write to a file instead of just returning the latex code as a string, use "
            },
            {
              "type": "inlineCode",
              "value": "write_latex(G, \"filename.tex\", caption=\"A caption\")"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "To construct a figure with subfigures for each graph to be shown, provide "
            },
            {
              "type": "inlineCode",
              "value": "to_latex"
            },
            {
              "type": "text",
              "value": " or "
            },
            {
              "type": "inlineCode",
              "value": "write_latex"
            },
            {
              "type": "text",
              "value": " a list of graphs, a list of subcaptions, and a number of rows of subfigures inside the figure."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "To be able to refer to the figures or subfigures in latex using "
            },
            {
              "type": "inlineCode",
              "value": "\\\\ref"
            },
            {
              "type": "text",
              "value": ", the keyword "
            },
            {
              "type": "inlineCode",
              "value": "latex_label"
            },
            {
              "type": "text",
              "value": " is available for figures and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "sub_labels"
            },
            {
              "type": "text",
              "value": " for a list of labels, one for each subfigure."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "We intend to eventually provide an interface to the TikZ Graph features which include e.g. layout algorithms."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Let us know via github what you'd like to see available, or better yet give us some code to do it, or even better make a github pull request to add the feature."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": "LaTeX",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Drawing options can be stored on the graph as node/edge attributes, or can be provided as dicts keyed by node/edge to a string of the options for that node/edge. Similarly a label can be shown for each node/edge by specifying the labels as graph node/edge attributes or by providing a dict keyed by node/edge to the text to be written for that node/edge."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Options for the tikzpicture environment (e.g. \"[scale=2]\") can be provided via a keyword argument. Similarly default node and edge options can be provided through keywords arguments. The default node options are applied to the single TikZ \"path\" that draws all nodes (and no edges). The default edge options are applied to a TikZ \"scope\" which contains a path for each edge."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "The TikZ approach",
      "type": "Section"
    },
    {
      "children": [
        {
          "type": "code",
          "value": ">>> G = nx.path_graph(3)\n>>> nx.write_latex(G, \"just_my_figure.tex\", as_document=True)\n>>> nx.write_latex(G, \"my_figure.tex\", caption=\"A path graph\", latex_label=\"fig1\")\n>>> latex_code = nx.to_latex(G)  # a string rather than a file"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "You can change many features of the nodes and edges."
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": ">>> G = nx.path_graph(4, create_using=nx.DiGraph)\n>>> pos = {n: (n, n) for n in G}  # nodes set on a line"
        },
        {
          "type": "code",
          "value": ">>> G.nodes[0][\"style\"] = \"blue\"\n>>> G.nodes[2][\"style\"] = \"line width=3,draw\"\n>>> G.nodes[3][\"label\"] = \"Stop\"\n>>> G.edges[(0, 1)][\"label\"] = \"1st Step\"\n>>> G.edges[(0, 1)][\"label_opts\"] = \"near start\"\n>>> G.edges[(1, 2)][\"style\"] = \"line width=3\"\n>>> G.edges[(1, 2)][\"label\"] = \"2nd Step\"\n>>> G.edges[(2, 3)][\"style\"] = \"green\"\n>>> G.edges[(2, 3)][\"label\"] = \"3rd Step\"\n>>> G.edges[(2, 3)][\"label_opts\"] = \"near end\""
        },
        {
          "type": "code",
          "value": ">>> nx.write_latex(G, \"latex_graph.tex\", pos=pos, as_document=True)"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Then compile the LaTeX using something like "
            },
            {
              "type": "inlineCode",
              "value": "pdflatex latex_graph.tex"
            },
            {
              "type": "text",
              "value": " and view the pdf file created: "
            },
            {
              "type": "inlineCode",
              "value": "latex_graph.pdf"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "If you want "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "subfigures"
                }
              ],
              "type": "strong"
            },
            {
              "type": "text",
              "value": " each containing one graph, you can input a list of graphs."
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": ">>> H1 = nx.path_graph(4)\n>>> H2 = nx.complete_graph(4)\n>>> H3 = nx.path_graph(8)\n>>> H4 = nx.complete_graph(8)\n>>> graphs = [H1, H2, H3, H4]\n>>> caps = [\"Path 4\", \"Complete graph 4\", \"Path 8\", \"Complete graph 8\"]\n>>> lbls = [\"fig2a\", \"fig2b\", \"fig2c\", \"fig2d\"]\n>>> nx.write_latex(graphs, \"subfigs.tex\", n_rows=2, sub_captions=caps, sub_labels=lbls)\n>>> latex_code = nx.to_latex(graphs, n_rows=2, sub_captions=caps, sub_labels=lbls)"
        },
        {
          "type": "code",
          "value": ">>> node_color = {0: \"red\", 1: \"orange\", 2: \"blue\", 3: \"gray!90\"}\n>>> edge_width = {e: \"line width=1.5\" for e in H3.edges}\n>>> pos = nx.circular_layout(H3)\n>>> latex_code = nx.to_latex(H3, pos, node_options=node_color, edge_options=edge_width)\n>>> print(latex_code)\n\\documentclass{report}\n\\usepackage{tikz}\n\\usepackage{subcaption}\n<BLANKLINE>\n\\begin{document}\n\\begin{figure}\n  \\begin{tikzpicture}\n      \\draw\n        (1.0, 0.0) node[red] (0){0}\n        (0.707, 0.707) node[orange] (1){1}\n        (-0.0, 1.0) node[blue] (2){2}\n        (-0.707, 0.707) node[gray!90] (3){3}\n        (-1.0, -0.0) node (4){4}\n        (-0.707, -0.707) node (5){5}\n        (0.0, -1.0) node (6){6}\n        (0.707, -0.707) node (7){7};\n      \\begin{scope}[-]\n        \\draw[line width=1.5] (0) to (1);\n        \\draw[line width=1.5] (1) to (2);\n        \\draw[line width=1.5] (2) to (3);\n        \\draw[line width=1.5] (3) to (4);\n        \\draw[line width=1.5] (4) to (5);\n        \\draw[line width=1.5] (5) to (6);\n        \\draw[line width=1.5] (6) to (7);\n      \\end{scope}\n    \\end{tikzpicture}\n\\end{figure}\n\\end{document}"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Examples",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "If you want to change the preamble/postamble of the figure/document/subfigure environment, use the keyword arguments: "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "figure_wrapper"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "document_wrapper"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "subfigure_wrapper"
            },
            {
              "type": "text",
              "value": ". The default values are stored in private variables e.g. "
            },
            {
              "type": "inlineCode",
              "value": "nx.nx_layout._DOCUMENT_WRAPPER"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Notes",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "TikZ:          https://tikz.dev/"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "TikZ options details:   https://tikz.dev/tikz-actions"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "References",
      "type": "Section"
    }
  ],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "To remove in the future \u2013\u2013 networkx.drawing.nx_latex"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/drawing/nx_latex.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}