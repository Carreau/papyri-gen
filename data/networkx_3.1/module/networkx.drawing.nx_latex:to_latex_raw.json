{
  "aliases": [
    "networkx.to_latex_raw"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This function produces just the code for the tikzpicture without any enclosing environment."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The NetworkX graph to be drawn"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "G",
              "type": "Param",
              "type_": "NetworkX graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The name of the node attribute on "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "G",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "G"
                    },
                    {
                      "type": "text",
                      "value": " that holds the position of each node. Positions can be sequences of length 2 with numbers for (x,y) coordinates. They can also be strings to denote positions in TikZ style, such as (x, y) or (angle:radius). If a dict, it should be keyed by node to a position. If an empty dict, a circular layout is computed by TikZ."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "pos",
              "type": "Param",
              "type_": "string or dict (default \"pos\")"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The tikzpicture options description defining the options for the picture. Often large scale options like "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "[scale=2]"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "tikz_options",
              "type": "Param",
              "type_": "string"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The draw options for a path of nodes. Individual node options override these."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "default_node_options",
              "type": "Param",
              "type_": "string"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The name of the node attribute on "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "G",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "G"
                    },
                    {
                      "type": "text",
                      "value": " that holds the options for each node. Or a dict keyed by node to a string holding the options for that node."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "node_options",
              "type": "Param",
              "type_": "string or dict"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The name of the node attribute on "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "G",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "G"
                    },
                    {
                      "type": "text",
                      "value": " that holds the node label (text) displayed for each node. If the attribute is \"\" or not present, the node itself is drawn as a string. LaTeX processing such as "
                    },
                    {
                      "type": "inlineCode",
                      "value": "\"$A_1$\""
                    },
                    {
                      "type": "text",
                      "value": " is allowed. Or a dict keyed by node to a string holding the label for that node."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "node_label",
              "type": "Param",
              "type_": "string or dict"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The options for the scope drawing all edges. The default is \"[-]\" for undirected graphs and \"[->]\" for directed graphs."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "default_edge_options",
              "type": "Param",
              "type_": "string"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The name of the edge attribute on "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "G",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "G"
                    },
                    {
                      "type": "text",
                      "value": " that holds the options for each edge. If the edge is a self-loop and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "\"loop\" not in edge_options"
                    },
                    {
                      "type": "text",
                      "value": " the option \"loop,\" is added to the options for the self-loop edge. Hence you can use \"[loop above]\" explicitly, but the default is \"[loop]\". Or a dict keyed by edge to a string holding the options for that edge."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "edge_options",
              "type": "Param",
              "type_": "string or dict"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The name of the edge attribute on "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "G",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "G"
                    },
                    {
                      "type": "text",
                      "value": " that holds the edge label (text) displayed for each edge. If the attribute is \"\" or not present, no edge label is drawn. Or a dict keyed by edge to a string holding the label for that edge."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "edge_label",
              "type": "Param",
              "type_": "string or dict"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The name of the edge attribute on "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "G",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "G"
                    },
                    {
                      "type": "text",
                      "value": " that holds the label options for each edge. For example, \"[sloped,above,blue]\". The default is no options. Or a dict keyed by edge to a string holding the label options for that edge."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "edge_label_options",
              "type": "Param",
              "type_": "string or dict"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The text string which draws the desired graph(s) when compiled by LaTeX."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "latex_code",
              "type": "Param",
              "type_": "string"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return a string of the LaTeX/TikZ code to draw "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "G",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "G"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/drawing/nx_latex.py",
  "item_line": 141,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "to_latex",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "to_latex"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.drawing.nx_latex:write_latex",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "write_latex"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(G, pos='pos', tikz_options='', default_node_options='', node_options='node_options', node_label='label', default_edge_options='', edge_options='edge_options', edge_label='label', edge_label_options='edge_label_options')"
  },
  "type": "DocBlob"
}