{
  "aliases": [
    "networkx.draw_networkx_nodes"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This draws only the nodes of the graph G."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A networkx graph"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "G",
              "type": "Param",
              "type_": "graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A dictionary with nodes as keys and positions as values. Positions should be sequences of length 2."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "pos",
              "type": "Param",
              "type_": "dictionary"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Draw the graph in the specified Matplotlib axes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "ax",
              "type": "Param",
              "type_": "Matplotlib Axes object, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Draw only specified nodes"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "nodelist",
              "type": "Param",
              "type_": "list (default list(G))"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Size of nodes.  If an array it must be the same length as nodelist."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "node_size",
              "type": "Param",
              "type_": "scalar or array (default=300)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Node color. Can be a single color or a sequence of colors with the same length as nodelist. Color can be string or rgb (or rgba) tuple of floats from 0-1. If numeric values are specified they will be mapped to colors using the cmap and vmin,vmax parameters. See matplotlib.scatter for more details."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "node_color",
              "type": "Param",
              "type_": "color or array of colors (default='#1f78b4')"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The shape of the node.  Specification is as matplotlib.scatter marker, one of 'so^>v<dph8'."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "node_shape",
              "type": "Param",
              "type_": "string (default='o')"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The node transparency.  This can be a single alpha value, in which case it will be applied to all the nodes of color. Otherwise, if it is an array, the elements of alpha will be applied to the colors in order (cycling through alpha multiple times if necessary)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "alpha",
              "type": "Param",
              "type_": "float or array of floats (default=None)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Colormap for mapping intensities of nodes"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cmap",
              "type": "Param",
              "type_": "Matplotlib colormap (default=None)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Minimum and maximum for node colormap scaling"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "vmin,vmax",
              "type": "Param",
              "type_": "floats or None (default=None)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Line width of symbol border"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "linewidths",
              "type": "Param",
              "type_": "[None | scalar | sequence] (default=1.0)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Colors of node borders"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "edgecolors",
              "type": "Param",
              "type_": "[None | scalar | sequence] (default = node_color)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Label for legend"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "label",
              "type": "Param",
              "type_": "[None | string]"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Sets the padding for axis autoscaling. Increase margin to prevent clipping for nodes that are near the edges of an image. Values should be in the range "
                    },
                    {
                      "type": "inlineCode",
                      "value": "[0, 1]"
                    },
                    {
                      "type": "text",
                      "value": ". See "
                    },
                    {
                      "type": "inlineCode",
                      "value": "matplotlib.axes.Axes.margins"
                    },
                    {
                      "type": "text",
                      "value": " for details. The default is "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "None"
                    },
                    {
                      "type": "text",
                      "value": ", which uses the Matplotlib default."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "margins",
              "type": "Param",
              "type_": "float or 2-tuple, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "PathCollection"
                    },
                    {
                      "type": "text",
                      "value": " of the nodes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "matplotlib.collections.PathCollection"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Draw the nodes of the graph G."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "G = nx.dodecahedral_graph()\nnodes = nx.draw_networkx_nodes(G, pos=nx.spring_layout(G))"
      },
      {
        "type": "text",
        "value": "Also see the NetworkX drawing examples at\nhttps://networkx.org/documentation/latest/auto_examples/index.html"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/drawing/nx_pylab.py",
  "item_line": 310,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "draw",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "draw"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "draw_networkx",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "draw_networkx"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.drawing.nx_pylab:draw_networkx_edges",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "draw_networkx_edges"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.drawing.nx_pylab:draw_networkx_labels",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "draw_networkx_labels"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.drawing.nx_pylab:draw_networkx_edge_labels",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "draw_networkx_edge_labels"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(G, pos, nodelist=None, node_size=300, node_color='#1f78b4', node_shape='o', alpha=None, cmap=None, vmin=None, vmax=None, ax=None, linewidths=None, edgecolors=None, label=None, margins=None)"
  },
  "type": "DocBlob"
}