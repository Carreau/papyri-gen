{
  "aliases": [
    "networkx.complete_multipartite_graph"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This function generalizes several other graph builder functions."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If no subset sizes are given, this returns the null graph."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If a single subset size "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "n"
                    },
                    {
                      "type": "text",
                      "value": " is given, this returns the empty graph on   "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "n"
                    },
                    {
                      "type": "text",
                      "value": " nodes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If two subset sizes "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "m"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "n"
                    },
                    {
                      "type": "text",
                      "value": " are given, this returns the complete   bipartite graph on "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "m + n"
                    },
                    {
                      "type": "text",
                      "value": " nodes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If subset sizes "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "1"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "n"
                    },
                    {
                      "type": "text",
                      "value": " are given, this returns the star graph on   "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "n + 1"
                    },
                    {
                      "type": "text",
                      "value": " nodes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": false,
          "spread": false,
          "start": 1,
          "type": "list"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The arguments can either all be integer number of nodes or they can all be iterables of nodes. If integers, they represent the number of nodes in each subset of the multipartite graph. If iterables, each is used to create the nodes for that subset. The length of subset_sizes is the number of subsets."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "subset_sizes",
              "type": "Param",
              "type_": "tuple of integers or tuple of node iterables"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Returns the complete multipartite graph with the specified subsets."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "For each node, the node attribute 'subset' is an integer indicating which subset contains the node."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "G",
              "type": "Param",
              "type_": "NetworkX Graph"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns the complete multipartite graph with the specified subset sizes."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Creating a complete tripartite graph, with subsets of one, two, and three\nnodes, respectively."
      },
      {
        "type": "text",
        "value": "    >>> G = nx.complete_multipartite_graph(1, 2, 3)\n    >>> [G.nodes[u][\"subset\"] for u in G]\n    [0, 1, 1, 2, 2, 2]\n    >>> list(G.edges(0))\n    [(0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]\n    >>> list(G.edges(2))\n    [(2, 0), (2, 3), (2, 4), (2, 5)]\n    >>> list(G.edges(4))\n    [(4, 0), (4, 1), (4, 2)]"
      },
      {
        "type": "text",
        "value": "    >>> G = nx.complete_multipartite_graph(\"a\", \"bc\", \"def\")\n    >>> [G.nodes[u][\"subset\"] for u in sorted(G)]\n    [0, 1, 1, 2, 2, 2]"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/generators/classic.py",
  "item_line": 763,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Examples",
    "Notes",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.algorithms.bipartite.generators:complete_bipartite_graph",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "complete_bipartite_graph"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(*subset_sizes)"
  },
  "type": "DocBlob"
}