{
  "aliases": [
    "networkx.directed_configuration_model"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The configuration model generates a random directed pseudograph (graph with parallel edges and self loops) by randomly assigning edges to match the given degree sequences."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Algorithm as described by Newman ."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "A non-graphical degree sequence (not realizable by some simple graph) is allowed since this function returns graphs with self loops and parallel edges.  An exception is raised if the degree sequences does not have the same sum."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "This configuration model construction process can lead to duplicate edges and loops.  You can remove the self-loops and parallel edges (see below) which will likely result in a graph that doesn't have the exact degree sequence specified.  This \"finite-size effect\" decreases as the size of the graph increases."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Each list entry corresponds to the in-degree of a node."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "in_degree_sequence",
              "type": "Param",
              "type_": "list of nonnegative integers"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Each list entry corresponds to the out-degree of a node."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out_degree_sequence",
              "type": "Param",
              "type_": "list of nonnegative integers"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Graph type to create. If graph instance, then cleared before populated."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "create_using",
              "type": "Param",
              "type_": "NetworkX graph constructor, optional (default MultiDiGraph)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Indicator of random number generation state. See "
                    },
                    {
                      "type": "inlineCode",
                      "value": "Randomness<randomness>"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "seed",
              "type": "Param",
              "type_": "integer, random_state, or None (default)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If the degree sequences do not have the same sum."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "NetworkXError"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A graph with the specified degree sequences. Nodes are labeled starting at 0 with an index corresponding to the position in deg_sequence."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "G",
              "type": "Param",
              "type_": "MultiDiGraph"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns a directed_random graph with the given degree sequences."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "One can modify the in- and out-degree sequences from an existing\ndirected graph in order to create a new directed graph. For example,\nhere we modify the directed path graph:"
      },
      {
        "type": "code",
        "value": "D = nx.DiGraph([(0, 1), (1, 2), (2, 3)])\ndin = list(d for n, d in D.in_degree())\ndout = list(d for n, d in D.out_degree())\ndin.append(1)\ndout[0] = 2\n# We now expect an edge from node 0 to a new node, node 3.\nD = nx.directed_configuration_model(din, dout)"
      },
      {
        "type": "text",
        "value": "The returned graph is a directed multigraph, which may have parallel\nedges. To remove any parallel edges from the returned graph:"
      },
      {
        "type": "code",
        "value": "D = nx.DiGraph(D)"
      },
      {
        "type": "text",
        "value": "Similarly, to remove self-loops:"
      },
      {
        "type": "code",
        "value": "D.remove_edges_from(nx.selfloop_edges(D))"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/generators/degree_seq.py",
  "item_line": 228,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "configuration_model",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "configuration_model"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(in_degree_sequence, out_degree_sequence, create_using=None, seed=None)"
  },
  "type": "DocBlob"
}