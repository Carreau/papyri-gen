{
  "aliases": [
    "networkx.joint_degree_seq._neighbor_switch"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "First, it selects "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "w_prime"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ", an  unsaturated node that has the same degree as "
            },
            {
              "type": "inlineCode",
              "value": "w"
            },
            {
              "type": "text",
              "value": ". Second, it selects "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "switch_node"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ", a neighbor node of "
            },
            {
              "type": "inlineCode",
              "value": "w"
            },
            {
              "type": "text",
              "value": " that is not  connected to "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "w_prime"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ". Then it executes an edge swap i.e. removes ("
            },
            {
              "type": "inlineCode",
              "value": "w"
            },
            {
              "type": "text",
              "value": ",*switch_node*) and adds ("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "w_prime"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ",*switch_node*). Gjoka et. al. [1] prove that such an edge swap is always possible."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Graph in which the neighbor switch will take place."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "G",
              "type": "Param",
              "type_": "NetworkX graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Node id for which we will execute this neighbor switch."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "w",
              "type": "Param",
              "type_": "integer"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Set of unsaturated node ids that have the same degree as w."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "unsat",
              "type": "Param",
              "type_": "set of integers"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Keeps track of the remaining stubs  for a given node."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "h_node_residual: dictionary of integers",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Node id to avoid when selecting w_prime."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "avoid_node_id: integer",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Releases one free stub for "
            },
            {
              "type": "inlineCode",
              "value": "w"
            },
            {
              "type": "text",
              "value": ", while preserving joint degree in G."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/generators/joint_degree_seq.py",
  "item_line": 80,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Notes",
    "References"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(G, w, unsat, h_node_residual, avoid_node_id=None)"
  },
  "type": "DocBlob"
}