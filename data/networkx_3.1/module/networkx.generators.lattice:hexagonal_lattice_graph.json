{
  "aliases": [
    "networkx.hexagonal_lattice_graph"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "hexagonal lattice graph"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " is a graph whose nodes and edges are the "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "hexagonal tiling"
            },
            {
              "type": "text",
              "value": " of the plane."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The returned graph will have "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "m",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "m"
            },
            {
              "type": "text",
              "value": " rows and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "n",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "n"
            },
            {
              "type": "text",
              "value": " columns of hexagons. "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "Odd numbered columns"
            },
            {
              "type": "text",
              "value": " are shifted up relative to even numbered columns."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Positions of nodes are computed by default or "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "with_positions is True"
            },
            {
              "type": "text",
              "value": ". Node positions creating the standard embedding in the plane with sidelength 1 and are stored in the node attribute 'pos'. "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "pos = nx.get_node_attributes(G, 'pos')"
            },
            {
              "type": "text",
              "value": " creates a dict ready for drawing."
            }
          ],
          "type": "paragraph"
        },
        {
          "placeholder": "target",
          "type": "Unimplemented",
          "value": ".. _hexagonal tiling: https://en.wikipedia.org/wiki/Hexagonal_tiling"
        },
        {
          "placeholder": "target",
          "type": "Unimplemented",
          "value": ".. _Odd numbered columns: http://www-cs-students.stanford.edu/~amitp/game-programming/grids/"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The number of rows of hexagons in the lattice."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "m",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The number of columns of hexagons in the lattice."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "n",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether to make a periodic grid by joining the boundary vertices. For this to work "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "n",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "n"
                    },
                    {
                      "type": "text",
                      "value": " must be even and both "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "n > 1"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "m > 1"
                    },
                    {
                      "type": "text",
                      "value": ". The periodic connections create another row and column of hexagons so these graphs have fewer nodes as boundary nodes are identified."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "periodic",
              "type": "Param",
              "type_": "bool"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Store the coordinates of each node in the graph node attribute 'pos'. The coordinates provide a lattice with vertical columns of hexagons offset to interleave and cover the plane. Periodic positions shift the nodes vertically in a nonlinear way so the edges don't overlap so much."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "with_positions",
              "type": "Param",
              "type_": "bool (default: True)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Graph type to create. If graph instance, then cleared before populated. If graph is directed, edges will point up or right."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "create_using",
              "type": "Param",
              "type_": "NetworkX graph constructor, optional (default=nx.Graph)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "m"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " by "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "n"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " hexagonal lattice graph."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "NetworkX graph"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns an "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "m",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "m"
            },
            {
              "type": "text",
              "value": " by "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "n",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "n"
            },
            {
              "type": "text",
              "value": " hexagonal lattice graph."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/generators/lattice.py",
  "item_line": 269,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(m, n, periodic=False, with_positions=True, create_using=None)"
  },
  "type": "DocBlob"
}