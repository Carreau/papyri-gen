{
  "aliases": [
    "networkx.line_graph"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The line graph of a graph "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "G",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "G"
            },
            {
              "type": "text",
              "value": " has a node for each edge in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "G",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "G"
            },
            {
              "type": "text",
              "value": " and an edge joining those nodes if the two edges in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "G",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "G"
            },
            {
              "type": "text",
              "value": " share a common node. For directed graphs, nodes are adjacent exactly when the edges they represent form a directed path of length two."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The nodes of the line graph are 2-tuples of nodes in the original graph (or 3-tuples for multigraphs, with the key of the edge as the third element)."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For information about self-loops and more discussion, see the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "Notes"
                }
              ],
              "type": "strong"
            },
            {
              "type": "text",
              "value": " section below."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Graph, node, and edge data are not propagated to the new graph. For undirected graphs, the nodes in G must be sortable, otherwise the constructed line graph may not be correct."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "Self-loops in undirected graphs"
                }
              ],
              "type": "emphasis"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For an undirected graph "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "G",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "G"
            },
            {
              "type": "text",
              "value": " without multiple edges, each edge can be written as a set "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "\\{u, v\\}"
            },
            {
              "type": "text",
              "value": ".  Its line graph "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "L",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "L"
            },
            {
              "type": "text",
              "value": " has the edges of "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "G",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "G"
            },
            {
              "type": "text",
              "value": " as its nodes. If "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "x"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "y"
            },
            {
              "type": "text",
              "value": " are two nodes in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "L",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "L"
            },
            {
              "type": "text",
              "value": ", then "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "\\{x, y\\}"
            },
            {
              "type": "text",
              "value": " is an edge in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "L",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "L"
            },
            {
              "type": "text",
              "value": " if and only if the intersection of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "x"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "y"
            },
            {
              "type": "text",
              "value": " is nonempty. Thus, the set of all edges is determined by the set of all pairwise intersections of edges in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "G",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "G"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Trivially, every edge in G would have a nonzero intersection with itself, and so every node in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "L",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "L"
            },
            {
              "type": "text",
              "value": " should have a self-loop. This is not so interesting, and the original context of line graphs was with simple graphs, which had no self-loops or multiple edges. The line graph was also meant to be a simple graph and thus, self-loops in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "L",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "L"
            },
            {
              "type": "text",
              "value": " are not part of the standard definition of a line graph. In a pairwise intersection matrix, this is analogous to excluding the diagonal entries from the line graph definition."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Self-loops and multiple edges in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "G",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "G"
            },
            {
              "type": "text",
              "value": " add nodes to "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "L",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "L"
            },
            {
              "type": "text",
              "value": " in a natural way, and do not require any fundamental changes to the definition. It might be argued that the self-loops we excluded before should now be included. However, the self-loops are still \"trivial\" in some sense and thus, are usually excluded."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "Self-loops in directed graphs"
                }
              ],
              "type": "emphasis"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For a directed graph "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "G",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "G"
            },
            {
              "type": "text",
              "value": " without multiple edges, each edge can be written as a tuple "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "(u, v)"
            },
            {
              "type": "text",
              "value": ". Its line graph "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "L",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "L"
            },
            {
              "type": "text",
              "value": " has the edges of "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "G",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "G"
            },
            {
              "type": "text",
              "value": " as its nodes. If "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "x"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "y"
            },
            {
              "type": "text",
              "value": " are two nodes in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "L",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "L"
            },
            {
              "type": "text",
              "value": ", then "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "(x, y)"
            },
            {
              "type": "text",
              "value": " is an edge in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "L",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "L"
            },
            {
              "type": "text",
              "value": " if and only if the tail of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "x"
            },
            {
              "type": "text",
              "value": " matches the head of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "y"
            },
            {
              "type": "text",
              "value": ", for example, if "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "x\n= (a, b)"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "y = (b, c)"
            },
            {
              "type": "text",
              "value": " for some vertices "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "a"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "b"
            },
            {
              "type": "text",
              "value": ", and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "c"
            },
            {
              "type": "text",
              "value": " in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "G",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "G"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Due to the directed nature of the edges, it is no longer the case that every edge in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "G",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "G"
            },
            {
              "type": "text",
              "value": " should have a self-loop in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "L",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "L"
            },
            {
              "type": "text",
              "value": ". Now, the only time self-loops arise is if a node in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "G",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "G"
            },
            {
              "type": "text",
              "value": " itself has a self-loop.  So such self-loops are no longer \"trivial\" but instead, represent essential features of the topology of "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "G",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "G"
            },
            {
              "type": "text",
              "value": ". For this reason, the historical development of line digraphs is such that self-loops are included. When the graph "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "G",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "G"
            },
            {
              "type": "text",
              "value": " has multiple edges, once again only superficial changes are required to the definition."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A NetworkX Graph, DiGraph, MultiGraph, or MultiDigraph."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "G",
              "type": "Param",
              "type_": "graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Graph type to create. If graph instance, then cleared before populated."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "create_using",
              "type": "Param",
              "type_": "NetworkX graph constructor, optional (default=nx.Graph)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The line graph of G."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "L",
              "type": "Param",
              "type_": "graph"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns the line graph of the graph or digraph "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "G",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "G"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "G = nx.star_graph(3)\nL = nx.line_graph(G)\nprint(sorted(map(sorted, L.edges())))  # makes a 3-clique, K3"
      },
      {
        "type": "text",
        "value": "Edge attributes from `G` are not copied over as node attributes in `L`, but\nattributes can be copied manually:"
      },
      {
        "type": "code",
        "value": "G = nx.path_graph(4)\nG.add_edges_from((u, v, {\"tot\": u+v}) for u, v in G.edges)\nG.edges(data=True)"
      },
      {
        "type": "code",
        "value": "H = nx.line_graph(G)\nH.add_nodes_from((node, G.edges[node]) for node in H)\nH.nodes(data=True)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/generators/line.py",
  "item_line": 13,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples",
    "Notes",
    "References"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(G, create_using=None)"
  },
  "type": "DocBlob"
}