{
  "aliases": [
    "networkx.directed_combinatorial_laplacian_matrix"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The graph directed combinatorial Laplacian is the matrix"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "L = \\Phi - (\\Phi P + P^T \\Phi) / 2"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "where "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "P"
            },
            {
              "type": "text",
              "value": " is the transition matrix of the graph and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "\\Phi"
            },
            {
              "type": "text",
              "value": " a matrix with the Perron vector of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "P"
            },
            {
              "type": "text",
              "value": " in the diagonal and zeros elsewhere ."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Depending on the value of walk_type, "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "P"
            },
            {
              "type": "text",
              "value": " can be the transition matrix induced by a random walk, a lazy random walk, or a random walk with teleportation (PageRank)."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Only implemented for DiGraphs"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A NetworkX graph"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "G",
              "type": "Param",
              "type_": "DiGraph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The rows and columns are ordered according to the nodes in nodelist. If nodelist is None, then the ordering is produced by G.nodes()."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "nodelist",
              "type": "Param",
              "type_": "list, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The edge data key used to compute each value in the matrix. If None, then each edge has weight 1."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "weight",
              "type": "Param",
              "type_": "string or None, optional (default='weight')"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If None, "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "P"
                    },
                    {
                      "type": "text",
                      "value": " is selected depending on the properties of the graph. Otherwise is one of 'random', 'lazy', or 'pagerank'"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "walk_type",
              "type": "Param",
              "type_": "string or None, optional (default=None)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "(1 - alpha) is the teleportation probability used with pagerank"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "alpha",
              "type": "Param",
              "type_": "real"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Combinatorial Laplacian of G."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "L",
              "type": "Param",
              "type_": "NumPy matrix"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return the directed combinatorial Laplacian matrix of G."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/linalg/laplacianmatrix.py",
  "item_line": 274,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes",
    "See Also",
    "References"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "laplacian_matrix",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "laplacian_matrix"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(G, nodelist=None, weight='weight', walk_type=None, alpha=0.95)"
  },
  "type": "DocBlob"
}