{
  "aliases": [
    "networkx.gml.literal_stringizer"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "networkx",
                "path": "networkx.readwrite.gml:literal_stringizer",
                "type": "RefInfo",
                "version": "3.1"
              },
              "type": "Link",
              "value": "literal_stringizer"
            },
            {
              "type": "text",
              "value": " is largely the same as "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "repr"
            },
            {
              "type": "text",
              "value": " in terms of functionality but attempts prefix "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "unicode"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "bytes"
            },
            {
              "type": "text",
              "value": " literals with "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "u"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "b"
            },
            {
              "type": "text",
              "value": " to provide better interoperability of data generated by Python 2 and Python 3."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The original value can be recovered using the "
            },
            {
              "type": "inlineCode",
              "value": "networkx.readwrite.gml.literal_destringizer"
            },
            {
              "type": "text",
              "value": " function."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "value",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "value"
                    },
                    {
                      "type": "text",
                      "value": " to be converted to GML representation."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "value",
              "type": "Param",
              "type_": "object"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "value",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "value"
                    },
                    {
                      "type": "text",
                      "value": " cannot be converted to GML."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "ValueError"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A double-quoted Python literal representing value. Unprintable characters are replaced by XML character references."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "rep",
              "type": "Param",
              "type_": "string"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Convert a "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "value",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "value"
            },
            {
              "type": "text",
              "value": " to a Python literal in GML representation."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/readwrite/gml.py",
  "item_line": 499,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Raises",
    "Notes"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(value)"
  },
  "type": "DocBlob"
}