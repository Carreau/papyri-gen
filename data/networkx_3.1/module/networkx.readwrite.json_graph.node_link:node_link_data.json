{
  "aliases": [
    "networkx.node_link_data"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Graph, node, and link attributes are stored in this format.  Note that attribute keys will be converted to strings in order to comply with JSON."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Attribute 'key' is only used for multigraphs."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "To use "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "networkx",
                "path": "networkx.readwrite.json_graph.node_link:node_link_data",
                "type": "RefInfo",
                "version": "3.1"
              },
              "type": "Link",
              "value": "node_link_data"
            },
            {
              "type": "text",
              "value": " in conjunction with "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "networkx",
                "path": "networkx.readwrite.json_graph.node_link:node_link_graph",
                "type": "RefInfo",
                "version": "3.1"
              },
              "type": "Link",
              "value": "node_link_graph"
            },
            {
              "type": "text",
              "value": ", the keyword names for the attributes must match."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "G",
              "type": "Param",
              "type_": "NetworkX graph"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A dictionary that contains five keys 'source', 'target', 'name', 'key' and 'link'.  The corresponding values provide the attribute names for storing NetworkX-internal graph data.  The values should be unique.  Default value      "
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "type": "code",
                  "value": "dict(source='source', target='target', name='id',\n     key='key', link='links')"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If some user-defined graph data use these attribute names as data keys, they may be silently dropped."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "deprecated 2.8.6"
                        }
                      ],
                      "type": "admonitionTitle"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "The "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "attrs"
                        },
                        {
                          "type": "text",
                          "value": " keyword argument will be replaced with "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "source"
                        },
                        {
                          "type": "text",
                          "value": ", "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "target"
                        },
                        {
                          "type": "text",
                          "value": ", "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "name"
                        },
                        {
                          "type": "text",
                          "value": ", "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "key"
                        },
                        {
                          "type": "text",
                          "value": " and "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "link"
                        },
                        {
                          "type": "text",
                          "value": ". in networkx 3.2"
                        }
                      ],
                      "type": "paragraph"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "If the "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "attrs"
                        },
                        {
                          "type": "text",
                          "value": " keyword and the new keywords are both used in a single function call (not recommended) the "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "attrs"
                        },
                        {
                          "type": "text",
                          "value": " keyword argument will take precedence."
                        }
                      ],
                      "type": "paragraph"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "The values of the keywords must be unique."
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "attrs",
              "type": "Param",
              "type_": "dict"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A string that provides the 'source' attribute name for storing NetworkX-internal graph data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "source",
              "type": "Param",
              "type_": "string"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A string that provides the 'target' attribute name for storing NetworkX-internal graph data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "target",
              "type": "Param",
              "type_": "string"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A string that provides the 'name' attribute name for storing NetworkX-internal graph data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "name",
              "type": "Param",
              "type_": "string"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A string that provides the 'key' attribute name for storing NetworkX-internal graph data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "key",
              "type": "Param",
              "type_": "string"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A string that provides the 'link' attribute name for storing NetworkX-internal graph data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "link",
              "type": "Param",
              "type_": "string"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If the values of 'source', 'target' and 'key' are not unique."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "NetworkXError"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A dictionary with node-link formatted data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "data",
              "type": "Param",
              "type_": "dict"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns data in node-link format that is suitable for JSON serialization and use in Javascript documents."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "G = nx.Graph([(\"A\", \"B\")])\ndata1 = nx.node_link_data(G)\ndata1"
      },
      {
        "type": "text",
        "value": "To serialize with JSON"
      },
      {
        "type": "code",
        "value": "import json\ns1 = json.dumps(data1)\ns1"
      },
      {
        "type": "text",
        "value": "A graph can also be serialized by passing `node_link_data` as an encoder function. The two methods are equivalent."
      },
      {
        "type": "code",
        "value": "s1 = json.dumps(G, default=nx.node_link_data)\ns1"
      },
      {
        "type": "text",
        "value": "The attribute names for storing NetworkX-internal graph data can\nbe specified as keyword options."
      },
      {
        "type": "code",
        "value": "H = nx.gn_graph(2)\ndata2 = nx.node_link_data(H, link=\"edges\", source=\"from\", target=\"to\")\ndata2"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/readwrite/json_graph/node_link.py",
  "item_line": 34,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Raises",
    "Examples",
    "Notes",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.readwrite.json_graph.node_link:node_link_graph",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "node_link_graph"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.readwrite.json_graph.adjacency:adjacency_data",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "adjacency_data"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.readwrite.json_graph.tree:tree_data",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "tree_data"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(G, attrs=None, *, source='source', target='target', name='id', key='key', link='links')"
  },
  "type": "DocBlob"
}