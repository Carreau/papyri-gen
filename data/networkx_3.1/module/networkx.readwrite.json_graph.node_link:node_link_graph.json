{
  "aliases": [
    "networkx.node_link_graph"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Attribute 'key' is only used for multigraphs."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "To use "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "networkx",
                "path": "networkx.readwrite.json_graph.node_link:node_link_data",
                "type": "RefInfo",
                "version": "3.1"
              },
              "type": "Link",
              "value": "node_link_data"
            },
            {
              "type": "text",
              "value": " in conjunction with "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "networkx",
                "path": "networkx.readwrite.json_graph.node_link:node_link_graph",
                "type": "RefInfo",
                "version": "3.1"
              },
              "type": "Link",
              "value": "node_link_graph"
            },
            {
              "type": "text",
              "value": ", the keyword names for the attributes must match."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "node-link formatted graph data"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "data",
              "type": "Param",
              "type_": "dict"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, and direction not specified in data, return a directed graph."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "directed",
              "type": "Param",
              "type_": "bool"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, and multigraph not specified in data, return a multigraph."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "multigraph",
              "type": "Param",
              "type_": "bool"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A dictionary that contains five keys 'source', 'target', 'name', 'key' and 'link'.  The corresponding values provide the attribute names for storing NetworkX-internal graph data.  Default value:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "dd": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "key='key', link='links')"
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "dt": {
                            "children": [
                              {
                                "type": "text",
                                "value": "dict(source='source', target='target', name='id',"
                              }
                            ],
                            "type": "paragraph"
                          },
                          "type": "DefListItem"
                        }
                      ],
                      "type": "DefList"
                    }
                  ],
                  "type": "blockquote"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "deprecated 2.8.6"
                        }
                      ],
                      "type": "admonitionTitle"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "The "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "attrs"
                        },
                        {
                          "type": "text",
                          "value": " keyword argument will be replaced with the individual keywords: "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "source"
                        },
                        {
                          "type": "text",
                          "value": ", "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "target"
                        },
                        {
                          "type": "text",
                          "value": ", "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "name"
                        },
                        {
                          "type": "text",
                          "value": ", "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "key"
                        },
                        {
                          "type": "text",
                          "value": " and "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "link"
                        },
                        {
                          "type": "text",
                          "value": ". in networkx 3.2."
                        }
                      ],
                      "type": "paragraph"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "If the "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "attrs"
                        },
                        {
                          "type": "text",
                          "value": " keyword and the new keywords are both used in a single function call (not recommended) the "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "attrs"
                        },
                        {
                          "type": "text",
                          "value": " keyword argument will take precedence."
                        }
                      ],
                      "type": "paragraph"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "The values of the keywords must be unique."
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "attrs",
              "type": "Param",
              "type_": "dict"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A string that provides the 'source' attribute name for storing NetworkX-internal graph data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "source",
              "type": "Param",
              "type_": "string"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A string that provides the 'target' attribute name for storing NetworkX-internal graph data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "target",
              "type": "Param",
              "type_": "string"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A string that provides the 'name' attribute name for storing NetworkX-internal graph data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "name",
              "type": "Param",
              "type_": "string"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A string that provides the 'key' attribute name for storing NetworkX-internal graph data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "key",
              "type": "Param",
              "type_": "string"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A string that provides the 'link' attribute name for storing NetworkX-internal graph data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "link",
              "type": "Param",
              "type_": "string"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A NetworkX graph object"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "G",
              "type": "Param",
              "type_": "NetworkX graph"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns graph from node-link data format. Useful for de-serialization from JSON."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Create data in node-link format by converting a graph."
      },
      {
        "type": "code",
        "value": "G = nx.Graph([('A', 'B')])\ndata = nx.node_link_data(G)\ndata"
      },
      {
        "type": "text",
        "value": "Revert data in node-link format to a graph."
      },
      {
        "type": "code",
        "value": "H = nx.node_link_graph(data)\nprint(H.edges)"
      },
      {
        "type": "text",
        "value": "To serialize and deserialize a graph with JSON,"
      },
      {
        "type": "code",
        "value": ">>> import json\n>>> d = json.dumps(node_link_data(G))\n>>> H = node_link_graph(json.loads(d))\n>>> print(G.edges, H.edges)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/readwrite/json_graph/node_link.py",
  "item_line": 187,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Examples",
    "Notes",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.readwrite.json_graph.node_link:node_link_data",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "node_link_data"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.readwrite.json_graph.adjacency:adjacency_data",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "adjacency_data"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.readwrite.json_graph.tree:tree_data",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "tree_data"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(data, directed=False, multigraph=True, attrs=None, *, source='source', target='target', name='id', key='key', link='links')"
  },
  "type": "DocBlob"
}