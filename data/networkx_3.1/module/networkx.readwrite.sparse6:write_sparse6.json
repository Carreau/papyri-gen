{
  "aliases": [
    "networkx.write_sparse6"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The format does not support edge or node labels."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "G",
              "type": "Param",
              "type_": "Graph (undirected)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "File or filename to write"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "path",
              "type": "Param",
              "type_": "file or string"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Nodes are labeled 0...n-1 in the order provided.  If None the ordering given by G.nodes() is used."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "nodes: list or iterable",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True add '>>sparse6<<' string to head of data"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "header: bool",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If the graph is directed"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "NetworkXError"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Write graph G to given path in sparse6 format."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "You can write a sparse6 file by giving the path to the file::"
      },
      {
        "type": "text",
        "value": "    >>> import tempfile\n    >>> with tempfile.NamedTemporaryFile(delete=False) as f:\n    ...     nx.write_sparse6(nx.path_graph(2), f.name)\n    ...     print(f.read())\n    b'>>sparse6<<:An\\n'"
      },
      {
        "type": "text",
        "value": "You can also write a sparse6 file by giving an open file-like object::"
      },
      {
        "type": "text",
        "value": "    >>> with tempfile.NamedTemporaryFile() as f:\n    ...     nx.write_sparse6(nx.path_graph(2), f)\n    ...     _ = f.seek(0)\n    ...     print(f.read())\n    b'>>sparse6<<:An\\n'"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/networkx/readwrite/sparse6.py",
  "item_line": 314,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Raises",
    "Examples",
    "See Also",
    "Notes",
    "References"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.readwrite.sparse6:read_sparse6",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "read_sparse6"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "networkx",
          "path": "networkx.readwrite.sparse6:from_sparse6_bytes",
          "type": "RefInfo",
          "version": "3.1"
        },
        "type": "Link",
        "value": "from_sparse6_bytes"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(G, path, nodes=None, header=True)"
  },
  "type": "DocBlob"
}