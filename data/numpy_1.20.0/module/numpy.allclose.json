{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Returns True if two arrays are element-wise equal within a tolerance."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The tolerance values are positive, typically very small numbers.  The relative difference ("
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "rtol"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " * abs("
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "b"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ")) and the absolute difference "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "atol"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " are added together to compare against the absolute difference between "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "a"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "b"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "NaNs are treated as equal if they are in the same place and if "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "equal",
                    "_",
                    "nan=True"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ".  Infs are treated as equal if they are in the same place and of the same sign in both arrays."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "a, b",
            "type_": "array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Input arrays to compare."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "rtol",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The relative tolerance parameter (see Notes)."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "atol",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The absolute tolerance parameter (see Notes)."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "equal_nan",
            "type_": "bool",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Whether to compare NaN's as equal.  If True, NaN's in "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "a"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " will be considered equal to NaN's in "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "b"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " in the output array."
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockDirective",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ".. versionadded:: 1.10.0",
                        "_number": 3,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": []
                  },
                  "ind": {
                    "_lines": []
                  },
                  "directive_name": "versionadded",
                  "args0": [
                    " 1.10.0"
                  ],
                  "inner": null
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "allclose",
            "type_": "bool",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Returns True if the two arrays are equal within the given tolerance; False otherwise."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "If the following equation is element-wise True, then allclose returns True."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": " absolute("
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "a"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " - "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "b"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ") <= ("
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "atol"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " + "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "rtol"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " * absolute("
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "b"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "))"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The above equation is not symmetric in "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "a"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "b"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", so that "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "allclose(a,",
                    " ",
                    "b)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " might be different from "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "allclose(b,",
                    " ",
                    "a)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " in some rare cases."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The comparison of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "a"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "b"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " uses standard broadcasting, which means that "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "a"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "b"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " need not have the same shape in order for "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "allclose(a,",
                    " ",
                    "b)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " to evaluate to True.  The same is true for "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "equal"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " but not "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "array",
                    "_",
                    "equal"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "allclose"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is not defined for non-numeric data types."
                }
              }
            ]
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    "all",
    "any",
    "builtins.float",
    "equal",
    "isclose",
    "numpy",
    "numpy.allclose"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "item_file": "<__array_function__ internals>",
  "item_line": 2186,
  "item_type": "<class 'function'>",
  "aliases": [
    "numpy.allclose"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "allclose",
              "numpy.allclose",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1e10",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1e-7",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1.00001e10",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1e-8",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "False",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "allclose",
              "numpy.allclose",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1e10",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1e-8",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1.00001e10",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1e-9",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "True",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "allclose",
              "numpy.allclose",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1e10",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1e-8",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1.0001e10",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1e-9",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "False",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "allclose",
              "numpy.allclose",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1.0",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "nan",
              "builtins.float",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1.0",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "nan",
              "builtins.float",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "False",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "allclose",
              "numpy.allclose",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1.0",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "nan",
              "builtins.float",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1.0",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "nan",
              "builtins.float",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "equal_nan",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "True",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "True",
          "ce_status": "execed"
        }
      }
    ]
  },
  "see_also": [
    {
      "name": {
        "name": "isclose",
        "ref": null,
        "exists": null
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "all",
        "ref": null,
        "exists": null
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "any",
        "ref": null,
        "exists": null
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "equal",
        "ref": null,
        "exists": null
      },
      "descriptions": [],
      "type": null
    }
  ],
  "signature": "allclose(a, b, rtol=1e-05, atol=1e-08, equal_nan=False)",
  "references": null
}