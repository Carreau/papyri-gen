{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "A decorator class for recursive nested functions. Naive recursive nested functions hold a reference to themselves:"
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "def outer(*args):",
                      "_number": 0,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    def stringify_leaky(arg0, *arg1):",
                      "_number": 1,
                      "_offset": 4
                    },
                    {
                      "_line": "        if len(arg1) > 0:",
                      "_number": 2,
                      "_offset": 4
                    },
                    {
                      "_line": "            return stringify_leaky(*arg1)  # <- HERE",
                      "_number": 3,
                      "_offset": 4
                    },
                    {
                      "_line": "        return str(arg0)",
                      "_number": 4,
                      "_offset": 4
                    },
                    {
                      "_line": "    stringify_leaky(*args)",
                      "_number": 5,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 6,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "def outer(*args):"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "def stringify_leaky(arg0, *arg1):     if len(arg1) > 0:         return stringify_leaky(*arg1)  # <- HERE     return str(arg0) stringify_leaky(*args) "
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "This design pattern creates a reference cycle that is difficult for a garbage collector to resolve. The decorator class prevents the cycle by passing the nested function in as an argument "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "self"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ":"
                }
              }
            ]
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "def outer(*args):",
                      "_number": 11,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    @recursive",
                      "_number": 12,
                      "_offset": 4
                    },
                    {
                      "_line": "    def stringify(self, arg0, *arg1):",
                      "_number": 13,
                      "_offset": 4
                    },
                    {
                      "_line": "        if len(arg1) > 0:",
                      "_number": 14,
                      "_offset": 4
                    },
                    {
                      "_line": "            return self(*arg1)",
                      "_number": 15,
                      "_offset": 4
                    },
                    {
                      "_line": "        return str(arg0)",
                      "_number": 16,
                      "_offset": 4
                    },
                    {
                      "_line": "    stringify(*args)",
                      "_number": 17,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "def outer(*args):"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "@recursive def stringify(self, arg0, *arg1):     if len(arg1) > 0:         return self(*arg1)     return str(arg0) stringify(*args)"
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": []
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/numpy/core/_internal.py",
  "item_line": 844,
  "item_type": "<class 'type'>",
  "aliases": [
    "numpy.core._internal.recursive"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "signature": "recursive(func)",
  "references": null
}