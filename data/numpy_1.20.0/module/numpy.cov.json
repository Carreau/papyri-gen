{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Estimate a covariance matrix, given data and weights."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Covariance indicates the level to which two variables vary together. If we examine N-dimensional samples, "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "X",
                    " ",
                    "=",
                    " ",
                    "[x",
                    "_",
                    "1,",
                    " ",
                    "x",
                    "_",
                    "2,",
                    " ",
                    "...",
                    " ",
                    "x",
                    "_",
                    "N]^T"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", then the covariance matrix element "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "C",
                    "_",
                    "{ij}"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is the covariance of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "x",
                    "_",
                    "i"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "x",
                    "_",
                    "j"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". The element "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "C",
                    "_",
                    "{ii}"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is the variance of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "x",
                    "_",
                    "i"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "See the notes for an outline of the algorithm."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "m",
            "type_": "array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A 1-D or 2-D array containing multiple variables and observations. Each row of "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "m"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " represents a variable, and each column a single observation of all those variables. Also see "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "rowvar"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " below."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "y",
            "type_": "array_like, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "An additional set of variables and observations. "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "y"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " has the same form as that of "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "m"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "rowvar",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "rowvar"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is True (default), then each row represents a variable, with observations in the columns. Otherwise, the relationship is transposed: each column represents a variable, while the rows contain observations."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "bias",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Default normalization (False) is by "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "(N",
                          " ",
                          "-",
                          " ",
                          "1)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", where "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "N"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is the number of observations given (unbiased estimate). If "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "bias"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is True, then normalization is by "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "N"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". These values can be overridden by using the keyword "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "ddof"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " in numpy versions >= 1.5."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "ddof",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If not "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "None"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " the default value implied by "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "bias"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is overridden. Note that "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "ddof=1"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " will return the unbiased estimate, even if both "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "fweights"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "aweights"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are specified, and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "ddof=0"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " will return the simple average. See the notes for the details. The default value is "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "None"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockDirective",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ".. versionadded:: 1.5",
                        "_number": 6,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": []
                  },
                  "ind": {
                    "_lines": []
                  },
                  "directive_name": "versionadded",
                  "args0": [
                    " 1.5"
                  ],
                  "inner": null
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "fweights",
            "type_": "array_like, int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "1-D array of integer frequency weights; the number of times each observation vector should be repeated."
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockDirective",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ".. versionadded:: 1.10",
                        "_number": 3,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": []
                  },
                  "ind": {
                    "_lines": []
                  },
                  "directive_name": "versionadded",
                  "args0": [
                    " 1.10"
                  ],
                  "inner": null
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "aweights",
            "type_": "array_like, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "1-D array of observation vector weights. These relative weights are typically large for observations considered \"important\" and smaller for observations considered less \"important\". If "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "ddof=0"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " the array of weights can be used to assign probabilities to observation vectors."
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockDirective",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ".. versionadded:: 1.10",
                        "_number": 5,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": []
                  },
                  "ind": {
                    "_lines": []
                  },
                  "directive_name": "versionadded",
                  "args0": [
                    " 1.10"
                  ],
                  "inner": null
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "dtype",
            "type_": "data-type, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Data-type of the result. By default, the return data-type will have at least "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "numpy.float64"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " precision."
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockDirective",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ".. versionadded:: 1.20",
                        "_number": 3,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": []
                  },
                  "ind": {
                    "_lines": []
                  },
                  "directive_name": "versionadded",
                  "args0": [
                    " 1.20"
                  ],
                  "inner": null
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "out",
            "type_": "ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The covariance matrix of the variables."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Assume that the observations are in the columns of the observation array "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "m"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and let "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "f",
                    " ",
                    "=",
                    " ",
                    "fweights"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "a",
                    " ",
                    "=",
                    " ",
                    "aweights"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " for brevity. The steps to compute the weighted covariance are as follows::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "    >>> m = np.arange(10, dtype=np.float64)",
                  "_number": 4,
                  "_offset": 4
                },
                {
                  "_line": "    >>> f = np.arange(10) * 2",
                  "_number": 5,
                  "_offset": 4
                },
                {
                  "_line": "    >>> a = np.arange(10) ** 2.",
                  "_number": 6,
                  "_offset": 4
                },
                {
                  "_line": "    >>> ddof = 1",
                  "_number": 7,
                  "_offset": 4
                },
                {
                  "_line": "    >>> w = f * a",
                  "_number": 8,
                  "_offset": 4
                },
                {
                  "_line": "    >>> v1 = np.sum(w)",
                  "_number": 9,
                  "_offset": 4
                },
                {
                  "_line": "    >>> v2 = np.sum(w * a)",
                  "_number": 10,
                  "_offset": 4
                },
                {
                  "_line": "    >>> m -= np.sum(m * w, axis=None, keepdims=True) / v1",
                  "_number": 11,
                  "_offset": 4
                },
                {
                  "_line": "    >>> cov = np.dot(m * w, m.T) * v1 / (v1**2 - ddof * v2)",
                  "_number": 12,
                  "_offset": 4
                },
                {
                  "_line": "",
                  "_number": 13,
                  "_offset": 4
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Note that when "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "a",
                    " ",
                    "==",
                    " ",
                    "1"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", the normalization factor "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "v1",
                    " ",
                    "/",
                    " ",
                    "(v1",
                    "*",
                    "*",
                    "2",
                    " ",
                    "-",
                    " ",
                    "ddof",
                    " ",
                    "*",
                    " ",
                    "v2)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " goes over to "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "1",
                    " ",
                    "/",
                    " ",
                    "(np.sum(f)",
                    " ",
                    "-",
                    " ",
                    "ddof)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " as it should."
                }
              }
            ]
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    "builtins.ellipsis",
    "builtins.list",
    "corrcoef",
    "numpy",
    "numpy._ArrayOrScalarCommon.T",
    "numpy.array",
    "numpy.cov",
    "numpy.stack"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "item_file": "<__array_function__ internals>",
  "item_line": 2275,
  "item_type": "<class 'function'>",
  "aliases": [
    "numpy.cov"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Consider two variables, "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "x",
                  "_",
                  "0"
                ],
                "domain": null,
                "role": "math"
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " and "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "x",
                  "_",
                  "1"
                ],
                "domain": null,
                "role": "math"
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ", which correlate perfectly, but in opposite directions:"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "x",
              "numpy._ArrayOrScalarCommon.T",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "T",
              "numpy._ArrayOrScalarCommon.T",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "x",
              "numpy._ArrayOrScalarCommon.T",
              ""
            ]
          ],
          "out": "array([[0, 1, 2],\n       [2, 1, 0]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Note how "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "x",
                  "_",
                  "0"
                ],
                "domain": null,
                "role": "math"
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " increases while "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "x",
                  "_",
                  "1"
                ],
                "domain": null,
                "role": "math"
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " decreases. The covariance matrix shows this clearly:"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "cov",
              "numpy.cov",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              "numpy._ArrayOrScalarCommon.T",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[ 1., -1.],\n       [-1.,  1.]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Note that element "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "C",
                  "_",
                  "{0,1}"
                ],
                "domain": null,
                "role": "math"
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ", which shows the correlation between "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "x",
                  "_",
                  "0"
                ],
                "domain": null,
                "role": "math"
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " and "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "x",
                  "_",
                  "1"
                ],
                "domain": null,
                "role": "math"
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ", is negative."
              }
            }
          ]
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Further, note how "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "x"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " and "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "y"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " are combined:"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "x",
              "builtins.list",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "2.1",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4.3",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "y",
              "builtins.list",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1.1",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0.12",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "X",
              "builtins.ellipsis",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "stack",
              "numpy.stack",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              "builtins.list",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "y",
              "builtins.list",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "axis",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "cov",
              "numpy.cov",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "X",
              "builtins.ellipsis",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[11.71      , -4.286     ], # may vary\n       [-4.286     ,  2.144133]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "cov",
              "numpy.cov",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              "builtins.list",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "y",
              "builtins.list",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[11.71      , -4.286     ], # may vary\n       [-4.286     ,  2.144133]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "cov",
              "numpy.cov",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              "builtins.list",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array(11.71)",
          "ce_status": "execed"
        }
      }
    ]
  },
  "see_also": [
    {
      "name": {
        "name": "corrcoef",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Normalized covariance matrix"
              }
            }
          ]
        }
      ],
      "type": null
    }
  ],
  "signature": "cov(m, y=None, rowvar=True, bias=False, ddof=None, fweights=None, aweights=None, *, dtype=None)",
  "references": null
}