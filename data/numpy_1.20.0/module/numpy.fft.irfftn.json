{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Computes the inverse of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "rfftn"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This function computes the inverse of the N-dimensional discrete Fourier Transform for real input over any number of axes in an M-dimensional array by means of the Fast Fourier Transform (FFT).  In other words, "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "irfftn(rfftn(a),",
                    " ",
                    "a.shape)",
                    " ",
                    "==",
                    " ",
                    "a"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " to within numerical accuracy. (The "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "a.shape"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is necessary like "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "len(a)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is for "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "irfft"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", and for the same reason.)"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The input should be ordered in the same way as is returned by "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "rfftn"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", i.e. as for "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "irfft"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " for the final transformation axis, and as for "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "ifftn"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " along all the other axes."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "a",
            "type_": "array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Input array."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "s",
            "type_": "sequence of ints, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Shape (length of each transformed axis) of the output ("
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "s[0]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " refers to axis 0, "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "s[1]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " to axis 1, etc.). "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "s"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is also the number of input points used along this axis, except for the last axis, where "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "s[-1]//2+1"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " points of the input are used. Along any axis, if the shape indicated by "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "s"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is smaller than that of the input, the input is cropped.  If it is larger, the input is padded with zeros. If "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "s"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is not given, the shape of the input along the axes specified by axes is used. Except for the last axis which is taken to be "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "2",
                          "*",
                          "(m-1)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " where "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "m"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is the length of the input along that axis."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "axes",
            "type_": "sequence of ints, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Axes over which to compute the inverse FFT. If not given, the last "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "len(s)"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " axes are used, or all axes if "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "s"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is also not specified. Repeated indices in "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "axes"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " means that the inverse transform over that axis is performed multiple times."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "norm",
            "type_": "{\"backward\", \"ortho\", \"forward\"}, optional",
            "desc": [
              {
                "type": "BlockDirective",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ".. versionadded:: 1.10.0",
                        "_number": 0,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": [
                      {
                        "_line": "",
                        "_number": 1,
                        "_offset": 0
                      }
                    ]
                  },
                  "ind": {
                    "_lines": []
                  },
                  "directive_name": "versionadded",
                  "args0": [
                    " 1.10.0"
                  ],
                  "inner": null
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Normalization mode (see "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "numpy.fft"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "). Default is \"backward\". Indicates which direction of the forward/backward pair of transforms is scaled and with what normalization factor."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockDirective",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ".. versionadded:: 1.20.0",
                        "_number": 6,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": [
                      {
                        "_line": "",
                        "_number": 7,
                        "_offset": 0
                      }
                    ]
                  },
                  "ind": {
                    "_lines": [
                      {
                        "_line": "    The \"backward\", \"forward\" values were added.",
                        "_number": 8,
                        "_offset": 0
                      }
                    ]
                  },
                  "directive_name": "versionadded",
                  "args0": [
                    " 1.20.0"
                  ],
                  "inner": {
                    "inline": [
                      {
                        "type": "Words",
                        "data": {
                          "value": "The \"backward\", \"forward\" values were added."
                        }
                      }
                    ],
                    "inner": []
                  }
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "out",
            "type_": "ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The truncated or zero-padded input, transformed along the axes indicated by "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "axes"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", or by a combination of "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "s"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "a"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", as explained in the parameters section above. The length of each transformed axis is as given by the corresponding element of "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "s"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", or the length of the input in every axis except for the last one if "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "s"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is not given.  In the final transformed axis the length of the output when "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "s"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is not given is "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "2",
                          "*",
                          "(m-1)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " where "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "m"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is the length of the final transformed axis of the input.  To get an odd number of output points in the final axis, "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "s"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " must be specified."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "ValueError",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "s"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "axes"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " have different length."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "IndexError",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If an element of "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "axes"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is larger than than the number of axes of "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "a"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "See "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "fft"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " for definitions and conventions used."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "See "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "rfft"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " for definitions and conventions used for real input."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The correct interpretation of the hermitian input depends on the shape of the original data, as given by "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "s"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". This is because each input shape could correspond to either an odd or even length signal. By default, "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "irfftn"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " assumes an even output length which puts the last entry at the Nyquist frequency; aliasing with its symmetric counterpart. When performing the final complex to real transform, the last value is thus treated as purely real. To avoid losing information, the correct shape of the real input **must** be given."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    "fft",
    "irfft",
    "irfft2",
    "numpy",
    "numpy.fft",
    "numpy.fft.irfftn",
    "numpy.ndarray",
    "numpy.zeros",
    "rfftn"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "See Also",
    "Notes",
    "Examples"
  ],
  "item_file": "<__array_function__ internals>",
  "item_line": 1249,
  "item_type": "<class 'function'>",
  "aliases": [
    "numpy.fft.irfftn"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "zeros",
              "numpy.zeros",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "fft",
              "numpy.fft",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "irfftn",
              "numpy.fft.irfftn",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[[1.,  1.],\n        [1.,  1.]],\n       [[1.,  1.],\n        [1.,  1.]],\n       [[1.,  1.],\n        [1.,  1.]]])",
          "ce_status": "execed"
        }
      }
    ],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "rfftn",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "The forward n-dimensional FFT of real input, of which "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "ifftn"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " is the inverse."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "fft",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "The one-dimensional FFT, with definitions and conventions used."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "irfft",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "The inverse of the one-dimensional FFT of real input."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "irfft2",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "The inverse of the two-dimensional FFT of real input."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    }
  ],
  "signature": "irfftn(a, s=None, axes=None, norm=None)",
  "references": null,
  "arbitrary": []
}