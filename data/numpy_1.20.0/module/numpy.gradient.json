{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Return the gradient of an N-dimensional array."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The gradient is computed using second order accurate central differences in the interior points and either first or second order accurate one-sides (forward or backwards) differences at the boundaries. The returned gradient hence has the same shape as the input array."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "f",
            "type_": "array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "An N-dimensional array containing samples of a scalar function."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "varargs",
            "type_": "list of scalar or array, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Spacing between f values. Default unitary spacing for all dimensions. Spacing can be specified using:"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "1. single scalar to specify a sample distance for all dimensions. 2. N scalars to specify a constant sample distance for each dimension."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "   i.e. "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "dx"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "dy"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "dz"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", ..."
                      }
                    }
                  ]
                }
              },
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "3. N arrays to specify the coordinates of the values along each",
                            "_number": 6,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "   dimension of F. The length of the array must match the size of",
                            "_number": 7,
                            "_offset": 3
                          },
                          {
                            "_line": "   the corresponding dimension",
                            "_number": 8,
                            "_offset": 3
                          }
                        ]
                      },
                      "dt": {
                        "children": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "3. N arrays to specify the coordinates of the values along each"
                            }
                          }
                        ]
                      },
                      "dd": {
                        "children": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "dimension of F. The length of the array must match the size of the corresponding dimension"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "4. Any combination of N scalars/arrays with the meaning of 2. and 3."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "axis"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is given, the number of varargs must equal the number of axes. Default: 1."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "edge_order",
            "type_": "{1, 2}, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Gradient is calculated using N-th order accurate differences at the boundaries. Default: 1."
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockDirective",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ".. versionadded:: 1.9.1",
                        "_number": 3,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": []
                  },
                  "ind": {
                    "_lines": []
                  },
                  "directive_name": "versionadded",
                  "args0": [
                    " 1.9.1"
                  ],
                  "inner": null
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "axis",
            "type_": "None or int or tuple of ints, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Gradient is calculated only along the given axis or axes The default (axis = None) is to calculate the gradient for all the axes of the input array. axis may be negative, in which case it counts from the last to the first axis."
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockDirective",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ".. versionadded:: 1.11.0",
                        "_number": 5,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": []
                  },
                  "ind": {
                    "_lines": []
                  },
                  "directive_name": "versionadded",
                  "args0": [
                    " 1.11.0"
                  ],
                  "inner": null
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "gradient",
            "type_": "ndarray or list of ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A set of ndarrays (or a single ndarray if there is only one dimension) corresponding to the derivatives of f with respect to each dimension. Each derivative has the same shape as f."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Assuming that "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "f\\in",
                    " ",
                    "C^{3}"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (i.e., "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "f"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " has at least 3 continuous derivatives) and let "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "h",
                    "_",
                    "{",
                    "*",
                    "}"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " be a non-homogeneous stepsize, we minimize the \"consistency error\" "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "\\eta",
                    "_",
                    "{i}"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " between the true gradient and its estimate from a linear combination of the neighboring grid-points:"
                }
              }
            ]
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. math::",
                  "_number": 5,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 6,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": [
                {
                  "_line": "    \\eta_{i} = f_{i}^{\\left(1\\right)} -",
                  "_number": 7,
                  "_offset": 0
                },
                {
                  "_line": "                \\left[ \\alpha f\\left(x_{i}\\right) +",
                  "_number": 8,
                  "_offset": 0
                },
                {
                  "_line": "                        \\beta f\\left(x_{i} + h_{d}\\right) +",
                  "_number": 9,
                  "_offset": 0
                },
                {
                  "_line": "                        \\gamma f\\left(x_{i}-h_{s}\\right)",
                  "_number": 10,
                  "_offset": 0
                },
                {
                  "_line": "                \\right]",
                  "_number": 11,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 12,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "math",
            "args0": [
              ""
            ],
            "inner": {
              "children": [
                {
                  "type": "Words",
                  "data": {
                    "value": "\\eta_{i} = f_{i}^{\\left(1\\right)} -             \\left[ \\alpha f\\left(x_{i}\\right) +                     \\beta f\\left(x_{i} + h_{d}\\right) +                     \\gamma f\\left(x_{i}-h_{s}\\right)             \\right] "
                  }
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "By substituting "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "f(x",
                    "_",
                    "{i}",
                    " ",
                    "+",
                    " ",
                    "h",
                    "_",
                    "{d})"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "f(x",
                    "_",
                    "{i}",
                    " ",
                    "-",
                    " ",
                    "h",
                    "_",
                    "{s})"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " with their Taylor series expansion, this translates into solving the following the linear system:"
                }
              }
            ]
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. math::",
                  "_number": 17,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 18,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": [
                {
                  "_line": "    \\left\\{",
                  "_number": 19,
                  "_offset": 0
                },
                {
                  "_line": "        \\begin{array}{r}",
                  "_number": 20,
                  "_offset": 0
                },
                {
                  "_line": "            \\alpha+\\beta+\\gamma=0 \\\\",
                  "_number": 21,
                  "_offset": 0
                },
                {
                  "_line": "            \\beta h_{d}-\\gamma h_{s}=1 \\\\",
                  "_number": 22,
                  "_offset": 0
                },
                {
                  "_line": "            \\beta h_{d}^{2}+\\gamma h_{s}^{2}=0",
                  "_number": 23,
                  "_offset": 0
                },
                {
                  "_line": "        \\end{array}",
                  "_number": 24,
                  "_offset": 0
                },
                {
                  "_line": "    \\right.",
                  "_number": 25,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 26,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "math",
            "args0": [
              ""
            ],
            "inner": {
              "children": [
                {
                  "type": "Words",
                  "data": {
                    "value": "\\left\\{     \\begin{array}{r}         \\alpha+\\beta+\\gamma=0 \\\\         \\beta h_{d}-\\gamma h_{s}=1 \\\\         \\beta h_{d}^{2}+\\gamma h_{s}^{2}=0     \\end{array} \\right. "
                  }
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The resulting approximation of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "f",
                    "_",
                    "{i}^{(1)}"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is the following:"
                }
              }
            ]
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. math::",
                  "_number": 29,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 30,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": [
                {
                  "_line": "    \\hat f_{i}^{(1)} =",
                  "_number": 31,
                  "_offset": 0
                },
                {
                  "_line": "        \\frac{",
                  "_number": 32,
                  "_offset": 0
                },
                {
                  "_line": "            h_{s}^{2}f\\left(x_{i} + h_{d}\\right)",
                  "_number": 33,
                  "_offset": 0
                },
                {
                  "_line": "            + \\left(h_{d}^{2} - h_{s}^{2}\\right)f\\left(x_{i}\\right)",
                  "_number": 34,
                  "_offset": 0
                },
                {
                  "_line": "            - h_{d}^{2}f\\left(x_{i}-h_{s}\\right)}",
                  "_number": 35,
                  "_offset": 0
                },
                {
                  "_line": "            { h_{s}h_{d}\\left(h_{d} + h_{s}\\right)}",
                  "_number": 36,
                  "_offset": 0
                },
                {
                  "_line": "        + \\mathcal{O}\\left(\\frac{h_{d}h_{s}^{2}",
                  "_number": 37,
                  "_offset": 0
                },
                {
                  "_line": "                            + h_{s}h_{d}^{2}}{h_{d}",
                  "_number": 38,
                  "_offset": 0
                },
                {
                  "_line": "                            + h_{s}}\\right)",
                  "_number": 39,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 40,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "math",
            "args0": [
              ""
            ],
            "inner": {
              "children": [
                {
                  "type": "Words",
                  "data": {
                    "value": "\\hat f_{i}^{(1)} =     \\frac{         h_{s}^{2}f\\left(x_{i} + h_{d}\\right)         + \\left(h_{d}^{2} - h_{s}^{2}\\right)f\\left(x_{i}\\right)         - h_{d}^{2}f\\left(x_{i}-h_{s}\\right)}         { h_{s}h_{d}\\left(h_{d} + h_{s}\\right)}     + \\mathcal{O}\\left(\\frac{h_{d}h_{s}^{2}                         + h_{s}h_{d}^{2}}{h_{d}                         + h_{s}}\\right) "
                  }
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "It is worth noting that if "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "h",
                    "_",
                    "{s}=h",
                    "_",
                    "{d}"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (i.e., data are evenly spaced) we find the standard second order approximation:"
                }
              }
            ]
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. math::",
                  "_number": 45,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 46,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": [
                {
                  "_line": "    \\hat f_{i}^{(1)}=",
                  "_number": 47,
                  "_offset": 0
                },
                {
                  "_line": "        \\frac{f\\left(x_{i+1}\\right) - f\\left(x_{i-1}\\right)}{2h}",
                  "_number": 48,
                  "_offset": 0
                },
                {
                  "_line": "        + \\mathcal{O}\\left(h^{2}\\right)",
                  "_number": 49,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 50,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "math",
            "args0": [
              ""
            ],
            "inner": {
              "children": [
                {
                  "type": "Words",
                  "data": {
                    "value": "\\hat f_{i}^{(1)}=     \\frac{f\\left(x_{i+1}\\right) - f\\left(x_{i-1}\\right)}{2h}     + \\mathcal{O}\\left(h^{2}\\right) "
                  }
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "With a similar procedure the forward/backward approximations used for boundaries can be derived."
                }
              }
            ]
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    "builtins.float",
    "builtins.int",
    "builtins.list",
    "numpy",
    "numpy.arange",
    "numpy.array",
    "numpy.gradient",
    "numpy.ndarray",
    "numpy.ndarray.size"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples",
    "Notes",
    "References"
  ],
  "item_file": "<__array_function__ internals>",
  "item_line": 803,
  "item_type": "<class 'function'>",
  "aliases": [
    "numpy.gradient"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "f",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "7",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "11",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "16",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "dtype",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "float",
              "builtins.float",
              "nb"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "gradient",
              "numpy.gradient",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "f",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([1. , 1.5, 2.5, 3.5, 4.5, 5. ])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "gradient",
              "numpy.gradient",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "f",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([0.5 ,  0.75,  1.25,  1.75,  2.25,  2.5 ])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Spacing can be also specified with an array that represents the coordinates of the values F along the dimensions. For instance a uniform spacing:"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "x",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "arange",
              "numpy.arange",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "f",
              "numpy.ndarray",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "size",
              "numpy.ndarray.size",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "gradient",
              "numpy.gradient",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "f",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "x",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([1. ,  1.5,  2.5,  3.5,  4.5,  5. ])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Or a non uniform one:"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "x",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0.0",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1.0",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1.5",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "3.5",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4.0",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "6.0",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "dtype",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "float",
              "builtins.float",
              "nb"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "gradient",
              "numpy.gradient",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "f",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "x",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([1. ,  3. ,  3.5,  6.7,  6.9,  2.5])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "For two dimensional arrays, the return will be two arrays ordered by axis. In this example the first array stands for the gradient in rows and the second one in columns direction:"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "gradient",
              "numpy.gradient",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "6",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "dtype",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "float",
              "builtins.float",
              "nb"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "[array([[ 2.,  2., -1.],\n       [ 2.,  2., -1.]]), array([[1. , 2.5, 4. ],\n       [1. , 1. , 1. ]])]",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "In this example the spacing is also specified: uniform for axis=0 and non uniform for axis=1"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "dx",
              "builtins.float",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2.0",
              "",
              "mf"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "y",
              "builtins.list",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1.0",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1.5",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "3.5",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "gradient",
              "numpy.gradient",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "6",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "dtype",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "float",
              "builtins.float",
              "nb"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "dx",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "y",
              "builtins.list",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "[array([[ 1. ,  1. , -0.5],\n       [ 1. ,  1. , -0.5]]), array([[2. , 2. , 2. ],\n       [2. , 1.7, 0.5]])]",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "It is possible to specify how boundaries are treated using "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "edge",
                  "_",
                  "order"
                ],
                "domain": null,
                "role": null
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "x",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "f",
              "builtins.int",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "x",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "gradient",
              "numpy.gradient",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "f",
              "builtins.int",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "edge_order",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([1.,  2.,  4.,  6.,  7.])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "gradient",
              "numpy.gradient",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "f",
              "builtins.int",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "edge_order",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([0., 2., 4., 6., 8.])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "The "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "axis"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " keyword can be used to specify a subset of axes of which the gradient is calculated"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "gradient",
              "numpy.gradient",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "6",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "dtype",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "float",
              "builtins.float",
              "nb"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "axis",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[ 2.,  2., -1.],\n       [ 2.,  2., -1.]])",
          "ce_status": "execed"
        }
      }
    ]
  },
  "see_also": [],
  "signature": "gradient(f, *varargs, axis=None, edge_order=1)",
  "references": [
    ".. [1]  Quarteroni A., Sacco R., Saleri F. (2007) Numerical Mathematics",
    "        (Texts in Applied Mathematics). New York: Springer.",
    ".. [2]  Durran D. R. (1999) Numerical Methods for Wave Equations",
    "        in Geophysical Fluid Dynamics. New York: Springer.",
    ".. [3]  Fornberg B. (1988) Generation of Finite Difference Formulas on",
    "        Arbitrarily Spaced Grids,",
    "        Mathematics of Computation 51, no. 184 : 699-706.",
    "        `PDF <http://www.ams.org/journals/mcom/1988-51-184/",
    "        S0025-5718-1988-0935077-0/S0025-5718-1988-0935077-0.pdf>`_."
  ]
}