{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Function to calculate only the edges of the bins used by the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "histogram"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " function."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "a",
            "type_": "array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Input data. The histogram is computed over the flattened array."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "bins",
            "type_": "int or sequence of scalars or str, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "bins"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is an int, it defines the number of equal-width bins in the given range (10, by default). If "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "bins"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is a sequence, it defines the bin edges, including the rightmost edge, allowing for non-uniform bin widths."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "bins"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is a string from the list below, "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "histogram",
                          "_",
                          "bin",
                          "_",
                          "edges"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " will use the method chosen to calculate the optimal bin width and consequently the number of bins (see "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "Notes"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " for more detail on the estimators) from the data that falls within the requested range. While the bin width will be optimal for the actual data in the range, the number of bins will be computed to fill the entire range, including the empty portions. For visualisation, using the 'auto' option is suggested. Weighted data is not supported for automated bin size selection."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "'auto'",
                            "_number": 15,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "    Maximum of the 'sturges' and 'fd' estimators. Provides good",
                            "_number": 16,
                            "_offset": 4
                          },
                          {
                            "_line": "    all around performance.",
                            "_number": 17,
                            "_offset": 4
                          },
                          {
                            "_line": "",
                            "_number": 18,
                            "_offset": 4
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'auto'"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Maximum of the 'sturges' and 'fd' estimators. Provides good all around performance. "
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "'fd' (Freedman Diaconis Estimator)",
                            "_number": 19,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "    Robust (resilient to outliers) estimator that takes into",
                            "_number": 20,
                            "_offset": 4
                          },
                          {
                            "_line": "    account data variability and data size.",
                            "_number": 21,
                            "_offset": 4
                          },
                          {
                            "_line": "",
                            "_number": 22,
                            "_offset": 4
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'fd' (Freedman Diaconis Estimator)"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Robust (resilient to outliers) estimator that takes into account data variability and data size. "
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "'doane'",
                            "_number": 23,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "    An improved version of Sturges' estimator that works better",
                            "_number": 24,
                            "_offset": 4
                          },
                          {
                            "_line": "    with non-normal datasets.",
                            "_number": 25,
                            "_offset": 4
                          },
                          {
                            "_line": "",
                            "_number": 26,
                            "_offset": 4
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'doane'"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "An improved version of Sturges' estimator that works better with non-normal datasets. "
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "'scott'",
                            "_number": 27,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "    Less robust estimator that that takes into account data",
                            "_number": 28,
                            "_offset": 4
                          },
                          {
                            "_line": "    variability and data size.",
                            "_number": 29,
                            "_offset": 4
                          },
                          {
                            "_line": "",
                            "_number": 30,
                            "_offset": 4
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'scott'"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Less robust estimator that that takes into account data variability and data size. "
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "'stone'",
                            "_number": 31,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "    Estimator based on leave-one-out cross-validation estimate of",
                            "_number": 32,
                            "_offset": 4
                          },
                          {
                            "_line": "    the integrated squared error. Can be regarded as a generalization",
                            "_number": 33,
                            "_offset": 4
                          },
                          {
                            "_line": "    of Scott's rule.",
                            "_number": 34,
                            "_offset": 4
                          },
                          {
                            "_line": "",
                            "_number": 35,
                            "_offset": 4
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'stone'"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Estimator based on leave-one-out cross-validation estimate of the integrated squared error. Can be regarded as a generalization of Scott's rule. "
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "'rice'",
                            "_number": 36,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "    Estimator does not take variability into account, only data",
                            "_number": 37,
                            "_offset": 4
                          },
                          {
                            "_line": "    size. Commonly overestimates number of bins required.",
                            "_number": 38,
                            "_offset": 4
                          },
                          {
                            "_line": "",
                            "_number": 39,
                            "_offset": 4
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'rice'"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Estimator does not take variability into account, only data size. Commonly overestimates number of bins required. "
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "'sturges'",
                            "_number": 40,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "    R's default method, only accounts for data size. Only",
                            "_number": 41,
                            "_offset": 4
                          },
                          {
                            "_line": "    optimal for gaussian data and underestimates number of bins",
                            "_number": 42,
                            "_offset": 4
                          },
                          {
                            "_line": "    for large non-gaussian datasets.",
                            "_number": 43,
                            "_offset": 4
                          },
                          {
                            "_line": "",
                            "_number": 44,
                            "_offset": 4
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'sturges'"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "R's default method, only accounts for data size. Only optimal for gaussian data and underestimates number of bins for large non-gaussian datasets. "
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "'sqrt'",
                            "_number": 45,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "    Square root (of data size) estimator, used by Excel and",
                            "_number": 46,
                            "_offset": 4
                          },
                          {
                            "_line": "    other programs for its speed and simplicity.",
                            "_number": 47,
                            "_offset": 4
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'sqrt'"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Square root (of data size) estimator, used by Excel and other programs for its speed and simplicity."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "range",
            "type_": "(float, float), optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The lower and upper range of the bins.  If not provided, range is simply "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "(a.min(),",
                          " ",
                          "a.max())"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ".  Values outside the range are ignored. The first element of the range must be less than or equal to the second. "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "range"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " affects the automatic bin computation as well. While bin width is computed to be optimal based on the actual data within "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "range"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", the bin count will fill the entire range including portions containing no data."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "weights",
            "type_": "array_like, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "An array of weights, of the same shape as "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "a"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ".  Each value in "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "a"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " only contributes its associated weight towards the bin count (instead of 1). This is currently not used by any of the bin estimators, but may be in the future."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "bin_edges",
            "type_": "array of dtype float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The edges to pass into "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "histogram"
                        ],
                        "domain": null,
                        "role": null
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The methods to estimate the optimal number of bins are well founded in literature, and are inspired by the choices R provides for histogram visualisation. Note that having the number of bins proportional to "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "n^{1/3}"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is asymptotically optimal, which is why it appears in most estimators. These are simply plug-in methods that give good starting points for number of bins. In the equations below, "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "h"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is the binwidth and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "n",
                    "_",
                    "h"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is the number of bins. All estimators that compute bin counts are recast to bin width using the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "ptp"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " of the data. The final bin count is obtained from "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "np.round(np.ceil(range",
                    " ",
                    "/",
                    " ",
                    "h))"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "'auto' (maximum of the 'sturges' and 'fd' estimators)",
                      "_number": 11,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    A compromise to get a good value. For small datasets the Sturges",
                      "_number": 12,
                      "_offset": 4
                    },
                    {
                      "_line": "    value will usually be chosen, while larger datasets will usually",
                      "_number": 13,
                      "_offset": 4
                    },
                    {
                      "_line": "    default to FD.  Avoids the overly conservative behaviour of FD",
                      "_number": 14,
                      "_offset": 4
                    },
                    {
                      "_line": "    and Sturges for small and large datasets respectively.",
                      "_number": 15,
                      "_offset": 4
                    },
                    {
                      "_line": "    Switchover point is usually :math:`a.size \\approx 1000`.",
                      "_number": 16,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 17,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "'auto' (maximum of the 'sturges' and 'fd' estimators)"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "A compromise to get a good value. For small datasets the Sturges value will usually be chosen, while larger datasets will usually default to FD.  Avoids the overly conservative behaviour of FD and Sturges for small and large datasets respectively. Switchover point is usually "
                          }
                        },
                        {
                          "type": "Directive",
                          "data": {
                            "value": [
                              "a.size",
                              " ",
                              "\\approx",
                              " ",
                              "1000"
                            ],
                            "domain": null,
                            "role": "math"
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": ". "
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "'fd' (Freedman Diaconis Estimator)",
                      "_number": 18,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    .. math:: h = 2 \\frac{IQR}{n^{1/3}}",
                      "_number": 19,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 20,
                      "_offset": 4
                    },
                    {
                      "_line": "    The binwidth is proportional to the interquartile range (IQR)",
                      "_number": 21,
                      "_offset": 4
                    },
                    {
                      "_line": "    and inversely proportional to cube root of a.size. Can be too",
                      "_number": 22,
                      "_offset": 4
                    },
                    {
                      "_line": "    conservative for small datasets, but is quite good for large",
                      "_number": 23,
                      "_offset": 4
                    },
                    {
                      "_line": "    datasets. The IQR is very robust to outliers.",
                      "_number": 24,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 25,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "'fd' (Freedman Diaconis Estimator)"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": ".. math:: h = 2 \\frac{IQR}{n^{1/3}}  The binwidth is proportional to the interquartile range (IQR) and inversely proportional to cube root of a.size. Can be too conservative for small datasets, but is quite good for large datasets. The IQR is very robust to outliers. "
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "'scott'",
                      "_number": 26,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    .. math:: h = \\sigma \\sqrt[3]{\\frac{24 * \\sqrt{\\pi}}{n}}",
                      "_number": 27,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 28,
                      "_offset": 4
                    },
                    {
                      "_line": "    The binwidth is proportional to the standard deviation of the",
                      "_number": 29,
                      "_offset": 4
                    },
                    {
                      "_line": "    data and inversely proportional to cube root of ``x.size``. Can",
                      "_number": 30,
                      "_offset": 4
                    },
                    {
                      "_line": "    be too conservative for small datasets, but is quite good for",
                      "_number": 31,
                      "_offset": 4
                    },
                    {
                      "_line": "    large datasets. The standard deviation is not very robust to",
                      "_number": 32,
                      "_offset": 4
                    },
                    {
                      "_line": "    outliers. Values are very similar to the Freedman-Diaconis",
                      "_number": 33,
                      "_offset": 4
                    },
                    {
                      "_line": "    estimator in the absence of outliers.",
                      "_number": 34,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 35,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "'scott'"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": ".. math:: h = \\sigma \\sqrt[3]{\\frac{24 * \\sqrt{\\pi}}{n}}  The binwidth is proportional to the standard deviation of the data and inversely proportional to cube root of "
                          }
                        },
                        {
                          "type": "Verbatim",
                          "data": {
                            "value": [
                              "x.size"
                            ]
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": ". Can be too conservative for small datasets, but is quite good for large datasets. The standard deviation is not very robust to outliers. Values are very similar to the Freedman-Diaconis estimator in the absence of outliers. "
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "'rice'",
                      "_number": 36,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    .. math:: n_h = 2n^{1/3}",
                      "_number": 37,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 38,
                      "_offset": 4
                    },
                    {
                      "_line": "    The number of bins is only proportional to cube root of",
                      "_number": 39,
                      "_offset": 4
                    },
                    {
                      "_line": "    ``a.size``. It tends to overestimate the number of bins and it",
                      "_number": 40,
                      "_offset": 4
                    },
                    {
                      "_line": "    does not take into account data variability.",
                      "_number": 41,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 42,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "'rice'"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": ".. math:: n_h = 2n^{1/3}  The number of bins is only proportional to cube root of "
                          }
                        },
                        {
                          "type": "Verbatim",
                          "data": {
                            "value": [
                              "a.size"
                            ]
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": ". It tends to overestimate the number of bins and it does not take into account data variability. "
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "'sturges'",
                      "_number": 43,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    .. math:: n_h = \\log _{2}n+1",
                      "_number": 44,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 45,
                      "_offset": 4
                    },
                    {
                      "_line": "    The number of bins is the base 2 log of ``a.size``.  This",
                      "_number": 46,
                      "_offset": 4
                    },
                    {
                      "_line": "    estimator assumes normality of data and is too conservative for",
                      "_number": 47,
                      "_offset": 4
                    },
                    {
                      "_line": "    larger, non-normal datasets. This is the default method in R's",
                      "_number": 48,
                      "_offset": 4
                    },
                    {
                      "_line": "    ``hist`` method.",
                      "_number": 49,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 50,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "'sturges'"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": ".. math:: n_h = \\log _{2}n+1  The number of bins is the base 2 log of "
                          }
                        },
                        {
                          "type": "Verbatim",
                          "data": {
                            "value": [
                              "a.size"
                            ]
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": ".  This estimator assumes normality of data and is too conservative for larger, non-normal datasets. This is the default method in R's "
                          }
                        },
                        {
                          "type": "Verbatim",
                          "data": {
                            "value": [
                              "hist"
                            ]
                          }
                        },
                        {
                          "type": "Words",
                          "data": {
                            "value": " method. "
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "'doane'",
                      "_number": 51,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    .. math:: n_h = 1 + \\log_{2}(n) +",
                      "_number": 52,
                      "_offset": 4
                    },
                    {
                      "_line": "                    \\log_{2}(1 + \\frac{|g_1|}{\\sigma_{g_1}})",
                      "_number": 53,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 54,
                      "_offset": 4
                    },
                    {
                      "_line": "        g_1 = mean[(\\frac{x - \\mu}{\\sigma})^3]",
                      "_number": 55,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 56,
                      "_offset": 4
                    },
                    {
                      "_line": "        \\sigma_{g_1} = \\sqrt{\\frac{6(n - 2)}{(n + 1)(n + 3)}}",
                      "_number": 57,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 58,
                      "_offset": 4
                    },
                    {
                      "_line": "    An improved version of Sturges' formula that produces better",
                      "_number": 59,
                      "_offset": 4
                    },
                    {
                      "_line": "    estimates for non-normal datasets. This estimator attempts to",
                      "_number": 60,
                      "_offset": 4
                    },
                    {
                      "_line": "    account for the skew of the data.",
                      "_number": 61,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 62,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "'doane'"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": ".. math:: n_h = 1 + \\log_{2}(n) +                 \\log_{2}(1 + \\frac{|g_1|}{\\sigma_{g_1}})      g_1 = mean[(\\frac{x - \\mu}{\\sigma})^3]      \\sigma_{g_1} = \\sqrt{\\frac{6(n - 2)}{(n + 1)(n + 3)}}  An improved version of Sturges' formula that produces better estimates for non-normal datasets. This estimator attempts to account for the skew of the data. "
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "'sqrt'",
                      "_number": 63,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    .. math:: n_h = \\sqrt n",
                      "_number": 64,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 65,
                      "_offset": 4
                    },
                    {
                      "_line": "    The simplest and fastest estimator. Only takes into account the",
                      "_number": 66,
                      "_offset": 4
                    },
                    {
                      "_line": "    data size.",
                      "_number": 67,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "'sqrt'"
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": ".. math:: n_h = \\sqrt n  The simplest and fastest estimator. Only takes into account the data size."
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    "builtins.NoneType",
    "builtins.range",
    "histogram",
    "numpy",
    "numpy.array",
    "numpy.histogram",
    "numpy.histogram_bin_edges",
    "numpy.ndarray"
  ],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "item_file": "<__array_function__ internals>",
  "item_line": 470,
  "item_type": "<class 'function'>",
  "aliases": [
    "numpy.histogram_bin_edges"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "arr",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "histogram_bin_edges",
              "numpy.histogram_bin_edges",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "arr",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "bins",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "auto",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "range",
              "builtins.range",
              "nb"
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([0.  , 0.25, 0.5 , 0.75, 1.  ])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "histogram_bin_edges",
              "numpy.histogram_bin_edges",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "arr",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "bins",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([0. , 2.5, 5. ])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "For consistency with histogram, an array of pre-computed bins is passed through unmodified:"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "histogram_bin_edges",
              "numpy.histogram_bin_edges",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "arr",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([1, 2])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "This function allows one set of bins to be computed, and reused across multiple histograms:"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "shared_bins",
              "builtins.NoneType",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "histogram_bin_edges",
              "numpy.histogram_bin_edges",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "arr",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "bins",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "auto",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "shared_bins",
              "builtins.NoneType",
              ""
            ]
          ],
          "out": "array([0., 1., 2., 3., 4., 5.])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "group_id",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "hist_0",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "_",
              "builtins.NoneType",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "histogram",
              "numpy.histogram",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "arr",
              "numpy.ndarray",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "group_id",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "==",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "bins",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "shared_bins",
              "builtins.NoneType",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "hist_1",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "_",
              "builtins.NoneType",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "histogram",
              "numpy.histogram",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "arr",
              "numpy.ndarray",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "group_id",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "==",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "bins",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "shared_bins",
              "builtins.NoneType",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "hist_0",
              "numpy.ndarray",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "hist_1",
              "numpy.ndarray",
              ""
            ]
          ],
          "out": "array([1, 1, 0, 1, 0])\narray([2, 0, 1, 1, 2])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Which gives more easily comparable results than using separate bins for each histogram:"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "hist_0",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "bins_0",
              "builtins.NoneType",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "histogram",
              "numpy.histogram",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "arr",
              "numpy.ndarray",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "group_id",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "==",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "bins",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "auto",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "hist_1",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "bins_1",
              "builtins.NoneType",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "histogram",
              "numpy.histogram",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "arr",
              "numpy.ndarray",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "group_id",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "==",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "bins",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "auto",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "hist_0",
              "numpy.ndarray",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "hist_1",
              "numpy.ndarray",
              ""
            ]
          ],
          "out": "array([1, 1, 1])\narray([2, 1, 1, 2])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "bins_0",
              "builtins.NoneType",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "bins_1",
              "builtins.NoneType",
              ""
            ]
          ],
          "out": "array([0., 1., 2., 3.])\narray([0.  , 1.25, 2.5 , 3.75, 5.  ])",
          "ce_status": "execed"
        }
      }
    ],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "histogram",
        "ref": null,
        "exists": null
      },
      "descriptions": [],
      "type": null
    }
  ],
  "signature": "histogram_bin_edges(a, bins=10, range=None, weights=None)",
  "references": null,
  "arbitrary": []
}