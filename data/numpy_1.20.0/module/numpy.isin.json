{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Calculates "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "element",
                    " ",
                    "in",
                    " ",
                    "test",
                    "_",
                    "elements"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", broadcasting over "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "element"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " only. Returns a boolean array of the same shape as "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "element"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " that is True where an element of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "element"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is in "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "test",
                    "_",
                    "elements"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and False otherwise."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": []
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "element",
            "type_": "array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Input array."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "test_elements",
            "type_": "array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The values against which to test each value of "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "element"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". This argument is flattened if it is an array or array_like. See notes for behavior with non-array-like parameters."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "assume_unique",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If True, the input arrays are both assumed to be unique, which can speed up the calculation.  Default is False."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "invert",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If True, the values in the returned array are inverted, as if calculating "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "element",
                          " ",
                          "not",
                          " ",
                          "in",
                          " ",
                          "test",
                          "_",
                          "elements"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". Default is False. "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "np.isin(a,",
                          " ",
                          "b,",
                          " ",
                          "invert=True)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is equivalent to (but faster than) "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "np.invert(np.isin(a,",
                          " ",
                          "b))"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "isin",
            "type_": "ndarray, bool",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Has the same shape as "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "element"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". The values "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "element[isin]"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are in "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "test",
                          "_",
                          "elements"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "isin"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is an element-wise function version of the python keyword "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "in"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "isin(a,",
                    " ",
                    "b)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is roughly equivalent to "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "np.array([item",
                    " ",
                    "in",
                    " ",
                    "b",
                    " ",
                    "for",
                    " ",
                    "item",
                    " ",
                    "in",
                    " ",
                    "a])"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " if "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "a"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "b"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " are 1-D sequences."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "element"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "test",
                    "_",
                    "elements"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " are converted to arrays if they are not already. If "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "test",
                    "_",
                    "elements"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is a set (or other non-sequence collection) it will be converted to an object array with one element, rather than an array of the values contained in "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "test",
                    "_",
                    "elements"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". This is a consequence of the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "array"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " constructor's way of handling non-sequence collections. Converting the set to a list usually gives the desired behavior."
                }
              }
            ]
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. versionadded:: 1.13.0",
                  "_number": 11,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": []
            },
            "directive_name": "versionadded",
            "args0": [
              " 1.13.0"
            ],
            "inner": null
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    "builtins.int",
    "builtins.list",
    "builtins.ndarray.reshape",
    "builtins.set",
    "in1d",
    "numpy",
    "numpy.arange",
    "numpy.isin",
    "numpy.lib.arraysetops",
    "numpy.ndarray",
    "numpy.nonzero"
  ],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "item_file": "<__array_function__ internals>",
  "item_line": 615,
  "item_type": "<class 'function'>",
  "aliases": [
    "numpy.isin"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "element",
              "builtins.int",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "arange",
              "numpy.arange",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "reshape",
              "builtins.ndarray.reshape",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "element",
              "builtins.int",
              ""
            ]
          ],
          "out": "array([[0, 2],\n       [4, 6]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "test_elements",
              "builtins.list",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "8",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "mask",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "isin",
              "numpy.isin",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "element",
              "builtins.int",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "test_elements",
              "builtins.list",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "mask",
              "numpy.ndarray",
              ""
            ]
          ],
          "out": "array([[False,  True],\n       [ True, False]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "element",
              "builtins.int",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "mask",
              "numpy.ndarray",
              ""
            ],
            [
              "]",
              "",
              ""
            ]
          ],
          "out": "array([2, 4])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "The indices of the matched values can be obtained with "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "nonzero"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ":"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "nonzero",
              "numpy.nonzero",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "mask",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "(array([0, 1]), array([1, 0]))",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "The test can also be inverted:"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "mask",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "isin",
              "numpy.isin",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "element",
              "builtins.int",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "test_elements",
              "builtins.list",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "invert",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "True",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "mask",
              "numpy.ndarray",
              ""
            ]
          ],
          "out": "array([[ True, False],\n       [False,  True]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "element",
              "builtins.int",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "mask",
              "numpy.ndarray",
              ""
            ],
            [
              "]",
              "",
              ""
            ]
          ],
          "out": "array([0, 6])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Because of how "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "array"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " handles sets, the following does not work as expected:"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "test_set",
              "builtins.set",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "{",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "8",
              "",
              "mi"
            ],
            [
              "}",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "isin",
              "numpy.isin",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "element",
              "builtins.int",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "test_set",
              "builtins.set",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[False, False],\n       [False, False]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Casting the set to a list gives the expected result:"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "isin",
              "numpy.isin",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "element",
              "builtins.int",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "list",
              "builtins.list",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "test_set",
              "builtins.set",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[False,  True],\n       [ True, False]])",
          "ce_status": "execed"
        }
      }
    ]
  },
  "see_also": [
    {
      "name": {
        "name": "in1d",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Flattened version of this function."
              }
            }
          ]
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "numpy.lib.arraysetops",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Module with a number of other functions for performing set operations on arrays."
              }
            }
          ]
        }
      ],
      "type": null
    }
  ],
  "signature": "isin(element, test_elements, assume_unique=False, invert=False)",
  "references": null
}