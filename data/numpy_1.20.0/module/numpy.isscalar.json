{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Returns True if the type of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "element"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is a scalar type."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "element",
            "type_": "any",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Input argument, can be of any type and shape."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "val",
            "type_": "bool",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "True if "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "element"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is a scalar type, False if it is not."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "If you need a stricter way to identify a *numerical* scalar, use "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "isinstance(x,",
                    " ",
                    "numbers.Number)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", as that returns "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "False"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " for most non-numerical elements such as strings."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "In most cases "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "np.ndim(x)",
                    " ",
                    "==",
                    " ",
                    "0"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " should be used instead of this function, as that will also return true for 0d arrays. This is how numpy overloads functions in the style of the "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "dx"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " arguments to "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "gradient"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and the "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "bins"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " argument to "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "histogram"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". Some key differences:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "+--------------------------------------+---------------+-------------------+ | x                                    |"
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "isscalar(x)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "|"
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "np.ndim(x)",
                    " ",
                    "==",
                    " ",
                    "0"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "| +======================================+===============+===================+ | PEP 3141 numeric objects (including  | "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "True"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "      | "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "True"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          | | builtins)                            |               |                   | +--------------------------------------+---------------+-------------------+ | builtin string and buffer objects    | "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "True"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "      | "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "True"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          | +--------------------------------------+---------------+-------------------+ | other builtin objects, like          | "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "False"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "     | "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "True"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          | | "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "pathlib.Path"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Exception"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ",         |               |                   | | the result of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "re.compile"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "           |               |                   | +--------------------------------------+---------------+-------------------+ | third-party objects like             | "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "False"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "     | "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "True"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          | | "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "matplotlib.figure.Figure"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "           |               |                   | +--------------------------------------+---------------+-------------------+ | zero-dimensional numpy arrays        | "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "False"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "     | "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "True"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "          | +--------------------------------------+---------------+-------------------+ | other numpy arrays                   | "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "False"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "     | "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "False"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "         | +--------------------------------------+---------------+-------------------+ | "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "list"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "tuple"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", and other sequence  | "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "False"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "     | "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "False"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "         | | objects                              |               |                   | +--------------------------------------+---------------+-------------------+"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    "builtins.bool",
    "fractions",
    "fractions.Fraction",
    "ndim",
    "numbers",
    "numbers.Number",
    "numpy",
    "numpy.array",
    "numpy.isscalar"
  ],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/numpy/core/numeric.py",
  "item_line": 1865,
  "item_type": "<class 'function'>",
  "aliases": [
    "numpy.isscalar"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "isscalar",
              "numpy.isscalar",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "3.1",
              "",
              "mf"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "True",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "isscalar",
              "numpy.isscalar",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "3.1",
              "",
              "mf"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "False",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "isscalar",
              "numpy.isscalar",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "3.1",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "False",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "isscalar",
              "numpy.isscalar",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "False",
              "builtins.bool",
              "kc"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "True",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "isscalar",
              "numpy.isscalar",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "numpy",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "True",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "NumPy supports PEP 3141 numbers:"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "fractions",
              "fractions",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "Fraction",
              "fractions.Fraction",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "isscalar",
              "numpy.isscalar",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "Fraction",
              "fractions.Fraction",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "17",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "True",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "numbers",
              "numbers",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "Number",
              "numbers.Number",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "isscalar",
              "numpy.isscalar",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "Number",
              "numbers.Number",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "True",
          "ce_status": "execed"
        }
      }
    ],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "ndim",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Get the number of dimensions of an array"
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    }
  ],
  "signature": "isscalar(element)",
  "references": null,
  "arbitrary": []
}