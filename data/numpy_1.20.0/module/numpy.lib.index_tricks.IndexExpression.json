{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "A nicer way to build up index tuples for arrays."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. note::",
                  "_number": 0,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": [
                {
                  "_line": "   Use one of the two predefined instances `index_exp` or `s_`",
                  "_number": 1,
                  "_offset": 0
                },
                {
                  "_line": "   rather than directly using `IndexExpression`.",
                  "_number": 2,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 3,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "note",
            "args0": [
              ""
            ],
            "inner": {
              "children": [
                {
                  "type": "Words",
                  "data": {
                    "value": "Use one of the two predefined instances "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "index",
                      "_",
                      "exp"
                    ],
                    "domain": null,
                    "role": null
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": " or "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "s",
                      "_"
                    ],
                    "domain": null,
                    "role": null
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": " rather than directly using "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "IndexExpression"
                    ],
                    "domain": null,
                    "role": null
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ". "
                  }
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "For any index combination, including slicing and axis insertion, "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "a[indices]"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is the same as "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "a[np.index",
                    "_",
                    "exp[indices]]"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " for any array "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "a"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". However, "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "np.index",
                    "_",
                    "exp[indices]"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " can be used anywhere in Python code and returns a tuple of slice objects that can be used in the construction of complex index expressions."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "maketuple",
            "type_": "bool",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If True, always returns a tuple."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "You can do all this with "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "slice()"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " plus a few special objects, but there's a lot to remember and this version is simpler because it uses the standard array indexing syntax."
                }
              }
            ]
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    "index_exp",
    "numpy",
    "numpy.array",
    "numpy.lib.index_tricks.IndexExpression",
    "s_"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "See Also",
    "Notes",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/numpy/lib/index_tricks.py",
  "item_line": 701,
  "item_type": "<class 'type'>",
  "aliases": [
    "numpy.lib.index_tricks.IndexExpression"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "s_",
              "numpy.lib.index_tricks.IndexExpression",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ]
          ],
          "out": "slice(2, None, 2)",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "index_exp",
              "numpy.lib.index_tricks.IndexExpression",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ]
          ],
          "out": "(slice(2, None, 2),)",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "s_",
              "numpy.lib.index_tricks.IndexExpression",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ]
          ],
          "out": "array([2, 4])",
          "ce_status": "execed"
        }
      }
    ]
  },
  "see_also": [
    {
      "name": {
        "name": "index_exp",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Predefined instance that always returns a tuple: "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "index",
                  "_",
                  "exp",
                  " ",
                  "=",
                  " ",
                  "IndexExpression(maketuple=True)"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": "."
              }
            }
          ]
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "s_",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Predefined instance without tuple conversion: "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "s",
                  "_",
                  " ",
                  "=",
                  " ",
                  "IndexExpression(maketuple=False)"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": "."
              }
            }
          ]
        }
      ],
      "type": null
    }
  ],
  "signature": "IndexExpression(maketuple)",
  "references": null
}