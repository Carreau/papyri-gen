{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Was not able to parse docstring for numpy.lib.scimath"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/numpy/lib/scimath.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "aliases": [
    "numpy.emath"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "signature": null,
  "references": null,
  "arbitrary": [
    {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Wrapper functions to more user - friendly calling of certain math functions whose output data - type is different than the input data - type in certain domains of the input. "
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "For example, for functions like "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "log"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " with branch cuts, the versions in this module provide the mathematically valid answers in the complex plane "
                }
              }
            ],
            "inner": [
              {
                "type": "BlockVerbatim",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ">>> import math",
                        "_number": 0,
                        "_offset": 0
                      },
                      {
                        "_line": ">>> from numpy.lib import scimath",
                        "_number": 1,
                        "_offset": 0
                      },
                      {
                        "_line": ">>> scimath.log(-math.exp(1)) == (1+1j*math.pi)",
                        "_number": 2,
                        "_offset": 0
                      },
                      {
                        "_line": "True",
                        "_number": 3,
                        "_offset": 0
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Similarly, "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "sqrt"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " , other base logarithms, "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "power"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and trig functions are correctly handled. See their respective docstrings for specific examples. "
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    {
      "children": [],
      "title": "Functions"
    }
  ]
}