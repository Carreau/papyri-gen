{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Cholesky decomposition."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Return the Cholesky decomposition, "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "L",
                    " ",
                    "*",
                    " ",
                    "L.H"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", of the square matrix "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "a"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", where "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "L"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is lower-triangular and .H is the conjugate transpose operator (which is the ordinary transpose if "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "a"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is real-valued).  "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "a"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " must be Hermitian (symmetric if real-valued) and positive-definite. No checking is performed to verify whether "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "a"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is Hermitian or not. In addition, only the lower-triangular and diagonal elements of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "a"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " are used. Only "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "L"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is actually returned."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "a",
            "type_": "(..., M, M) array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Hermitian (symmetric if all elements are real), positive-definite input matrix."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "L",
            "type_": "(..., M, M) array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Upper or lower-triangular Cholesky factor of "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "a"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ".  Returns a matrix object if "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "a"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is a matrix object."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "LinAlgError",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If the decomposition fails, for example, if "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "a"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is not positive-definite."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. versionadded:: 1.8.0",
                  "_number": 0,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 1,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": []
            },
            "directive_name": "versionadded",
            "args0": [
              " 1.8.0"
            ],
            "inner": null
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Broadcasting rules apply, see the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "numpy.linalg"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " documentation for details."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The Cholesky decomposition is often used as a fast way of solving"
                }
              }
            ]
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. math:: A \\mathbf{x} = \\mathbf{b}",
                  "_number": 7,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 8,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": []
            },
            "directive_name": "math",
            "args0": [
              " A \\mathbf{x} = \\mathbf{b}"
            ],
            "inner": null
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "(when "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "A"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is both Hermitian/symmetric and positive-definite)."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "First, we solve for "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "\\mathbf{y}"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " in"
                }
              }
            ]
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. math:: L \\mathbf{y} = \\mathbf{b},",
                  "_number": 13,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 14,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": []
            },
            "directive_name": "math",
            "args0": [
              " L \\mathbf{y} = \\mathbf{b},"
            ],
            "inner": null
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "and then for "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "\\mathbf{x}"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " in"
                }
              }
            ]
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. math:: L.H \\mathbf{x} = \\mathbf{y}.",
                  "_number": 17,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": []
            },
            "directive_name": "math",
            "args0": [
              " L.H \\mathbf{x} = \\mathbf{y}."
            ],
            "inner": null
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    "builtins.complex",
    "builtins.list",
    "builtins.ndarray.conj",
    "numpy",
    "numpy.array",
    "numpy.dot",
    "numpy.linalg",
    "numpy.linalg.cholesky",
    "numpy.matrix",
    "numpy.ndarray",
    "scipy.linalg.decomp_cholesky.cho_factor",
    "scipy.linalg.decomp_cholesky.cholesky",
    "scipy.linalg.decomp_cholesky.cholesky_banded"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "See Also",
    "Notes",
    "Examples"
  ],
  "item_file": "<__array_function__ internals>",
  "item_line": 672,
  "item_type": "<class 'function'>",
  "aliases": [
    "numpy.linalg.cholesky"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "A",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              "j",
              "builtins.complex",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              "j",
              "builtins.complex",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "A",
              "numpy.ndarray",
              ""
            ]
          ],
          "out": "array([[ 1.+0.j, -0.-2.j],\n       [ 0.+2.j,  5.+0.j]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "L",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "linalg",
              "numpy.linalg",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "cholesky",
              "numpy.linalg.cholesky",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "A",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "L",
              "numpy.ndarray",
              ""
            ]
          ],
          "out": "array([[1.+0.j, 0.+0.j],\n       [0.+2.j, 1.+0.j]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "dot",
              "numpy.dot",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "L",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "L",
              "numpy.ndarray",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "T",
              "numpy.ndarray",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "conj",
              "builtins.ndarray.conj",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# verify that L * L.H = A",
              "",
              "c1"
            ]
          ],
          "out": "array([[1.+0.j, 0.-2.j],\n       [0.+2.j, 5.+0.j]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "A",
              "builtins.list",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              "j",
              "builtins.complex",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              "j",
              "builtins.complex",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# what happens if A is only array_like?",
              "",
              "c1"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "linalg",
              "numpy.linalg",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "cholesky",
              "numpy.linalg.cholesky",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "A",
              "builtins.list",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# an ndarray object is returned",
              "",
              "c1"
            ]
          ],
          "out": "array([[1.+0.j, 0.+0.j],\n       [0.+2.j, 1.+0.j]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "# But a matrix object is returned if A is a matrix object",
              "",
              "c1"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "linalg",
              "numpy.linalg",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "cholesky",
              "numpy.linalg.cholesky",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "matrix",
              "numpy.matrix",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "A",
              "builtins.list",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "matrix([[ 1.+0.j,  0.+0.j],\n        [ 0.+2.j,  1.+0.j]])",
          "ce_status": "execed"
        }
      }
    ]
  },
  "see_also": [
    {
      "name": {
        "name": "scipy.linalg.cholesky",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Similar function in SciPy."
              }
            }
          ]
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "scipy.linalg.cholesky_banded",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Cholesky decompose a banded Hermitian positive-definite matrix."
              }
            }
          ]
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "scipy.linalg.cho_factor",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Cholesky decomposition of a matrix, to use in "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "scipy.linalg.cho",
                  "_",
                  "solve"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": "."
              }
            }
          ]
        }
      ],
      "type": null
    }
  ],
  "signature": "cholesky(a)",
  "references": null
}