{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Return a np.array that encodes the optimal order of mutiplications."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The optimal order array is then used by "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "_",
                    "multi",
                    "_",
                    "dot()"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " to do the multiplication."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Also return the cost matrix if "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "return",
                    "_",
                    "costs"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "True"
                  ],
                  "domain": null,
                  "role": null
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The implementation CLOSELY follows Cormen, \"Introduction to Algorithms\", Chapter 15.2, p. 370-378.  Note that Cormen uses 1-based indices."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "    cost[i, j] = min([",
                      "_number": 8,
                      "_offset": 4
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "        cost[prefix] + cost[suffix] + cost_mult(prefix, suffix)",
                      "_number": 9,
                      "_offset": 8
                    },
                    {
                      "_line": "        for k in range(i, j)])",
                      "_number": 10,
                      "_offset": 8
                    }
                  ]
                },
                "dt": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "cost[i, j] = min(["
                      }
                    }
                  ],
                  "inner": []
                },
                "dd": [
                  {
                    "type": "Paragraph",
                    "data": {
                      "inline": [
                        {
                          "type": "Words",
                          "data": {
                            "value": "cost[prefix] + cost[suffix] + cost_mult(prefix, suffix) for k in range(i, j)])"
                          }
                        }
                      ],
                      "inner": []
                    }
                  }
                ]
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/numpy/linalg/linalg.py",
  "item_line": 2762,
  "item_type": "<class 'function'>",
  "aliases": [
    "numpy.linalg.linalg._multi_dot_matrix_chain_order"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "signature": "_multi_dot_matrix_chain_order(arrays, return_costs=False)",
  "references": null,
  "arbitrary": []
}