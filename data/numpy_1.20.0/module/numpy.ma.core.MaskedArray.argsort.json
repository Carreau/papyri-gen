{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Return an ndarray of indices that sort the array along the specified axis.  Masked values are filled beforehand to "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "fill",
                    "_",
                    "value"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": []
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "axis",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Axis along which to sort. If None, the default, the flattened array is used."
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockDirective",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": "..  versionchanged:: 1.13.0",
                        "_number": 3,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": []
                  },
                  "ind": {
                    "_lines": [
                      {
                        "_line": "    Previously, the default was documented to be -1, but that was",
                        "_number": 4,
                        "_offset": 0
                      },
                      {
                        "_line": "    in error. At some future date, the default will change to -1, as",
                        "_number": 5,
                        "_offset": 0
                      },
                      {
                        "_line": "    originally intended.",
                        "_number": 6,
                        "_offset": 0
                      },
                      {
                        "_line": "    Until then, the axis should be given explicitly when",
                        "_number": 7,
                        "_offset": 0
                      },
                      {
                        "_line": "    ``arr.ndim > 1``, to avoid a FutureWarning.",
                        "_number": 8,
                        "_offset": 0
                      }
                    ]
                  },
                  "directive_name": "versionchanged",
                  "args0": [
                    " 1.13.0"
                  ],
                  "inner": {
                    "children": [
                      {
                        "type": "Words",
                        "data": {
                          "value": "Previously, the default was documented to be -1, but that was in error. At some future date, the default will change to -1, as originally intended. Until then, the axis should be given explicitly when "
                        }
                      },
                      {
                        "type": "Verbatim",
                        "data": {
                          "value": [
                            "arr.ndim",
                            " ",
                            ">",
                            " ",
                            "1"
                          ]
                        }
                      },
                      {
                        "type": "Words",
                        "data": {
                          "value": ", to avoid a FutureWarning."
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "kind",
            "type_": "{'quicksort', 'mergesort', 'heapsort', 'stable'}, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The sorting algorithm used."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "order",
            "type_": "list, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "When "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "a"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is an array with fields defined, this argument specifies which fields to compare first, second, etc.  Not all fields need be specified."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "endwith",
            "type_": "{True, False}, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Whether missing values (if any) should be treated as the largest values (True) or the smallest values (False) When the array contains unmasked values at the same extremes of the datatype, the ordering of these values and the masked values is undefined."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "fill_value",
            "type_": "{var}, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Value used internally for the masked values. If "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "fill",
                          "_",
                          "value"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is not None, it supersedes "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "endwith"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "index_array",
            "type_": "ndarray, int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Array of indices that sort "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "a"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " along the specified axis. In other words, "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "a[index",
                          "_",
                          "array]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " yields a sorted "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "a"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "See "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "sort"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " for notes on the different sorting algorithms."
                }
              }
            ]
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    "lexsort",
    "ma.MaskedArray.sort",
    "numpy",
    "numpy.ma",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.core.MaskedArray.argsort",
    "numpy.ma.core.array",
    "numpy.ndarray.sort"
  ],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/numpy/ma/core.py",
  "item_line": 5411,
  "item_type": "<class 'function'>",
  "aliases": [
    "numpy.ma.MaskedArray.argsort"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "a",
              "numpy.ma.core.MaskedArray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "ma",
              "numpy.ma",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.ma.core.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "mask",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "False",
              null,
              "kc"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "False",
              null,
              "kc"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "True",
              null,
              "kc"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "a",
              "numpy.ma.core.MaskedArray",
              ""
            ]
          ],
          "out": "masked_array(data=[3, 2, --],\n             mask=[False, False,  True],\n       fill_value=999999)",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "a",
              "numpy.ma.core.MaskedArray",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "argsort",
              "numpy.ma.core.MaskedArray.argsort",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([1, 0, 2])",
          "ce_status": "execed"
        }
      }
    ]
  },
  "see_also": [
    {
      "name": {
        "name": "ma.MaskedArray.sort",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Describes sorting algorithms used."
              }
            }
          ]
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "lexsort",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Indirect stable sort with multiple keys."
              }
            }
          ]
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "numpy.ndarray.sort",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Inplace sort."
              }
            }
          ]
        }
      ],
      "type": null
    }
  ],
  "signature": "argsort(self, axis=<no value>, kind=None, order=None, endwith=True, fill_value=None)",
  "references": null
}