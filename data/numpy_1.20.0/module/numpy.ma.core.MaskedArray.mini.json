{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Return the array minimum along the specified axis."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. deprecated:: 1.13.0",
                  "_number": 0,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": [
                {
                  "_line": "   This function is identical to both:",
                  "_number": 1,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 2,
                  "_offset": 0
                },
                {
                  "_line": "    * ``self.min(keepdims=True, axis=axis).squeeze(axis=axis)``",
                  "_number": 3,
                  "_offset": 0
                },
                {
                  "_line": "    * ``np.ma.minimum.reduce(self, axis=axis)``",
                  "_number": 4,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 5,
                  "_offset": 0
                },
                {
                  "_line": "   Typically though, ``self.min(axis=axis)`` is sufficient.",
                  "_number": 6,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "deprecated",
            "args0": [
              " 1.13.0"
            ],
            "inner": {
              "inline": [
                {
                  "type": "Words",
                  "data": {
                    "value": "This function is identical to both:   * "
                  }
                },
                {
                  "type": "Verbatim",
                  "data": {
                    "value": [
                      "self.min(keepdims=True,",
                      " ",
                      "axis=axis).squeeze(axis=axis)"
                    ]
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": "  * "
                  }
                },
                {
                  "type": "Verbatim",
                  "data": {
                    "value": [
                      "np.ma.minimum.reduce(self,",
                      " ",
                      "axis=axis)"
                    ]
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": "  Typically though, "
                  }
                },
                {
                  "type": "Verbatim",
                  "data": {
                    "value": [
                      "self.min(axis=axis)"
                    ]
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": " is sufficient."
                  }
                }
              ],
              "inner": []
            }
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "axis",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The axis along which to find the minima. Default is None, in which case the minimum value in the whole array is returned."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "min",
            "type_": "scalar or MaskedArray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "axis"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is None, the result is a scalar. Otherwise, if "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "axis"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is given and the array is at least 2-D, the result is a masked array with dimension one smaller than the array on which "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "mini"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is called."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    "numpy",
    "numpy.arange",
    "numpy.ma",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.core.MaskedArray.min",
    "numpy.ma.core.MaskedArray.mini",
    "numpy.ma.core.MaskedArray.reshape",
    "numpy.ma.core.array"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/numpy/ma/core.py",
  "item_line": 5723,
  "item_type": "<class 'function'>",
  "aliases": [
    "numpy.ma.MaskedArray.mini"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "x",
              "numpy.ma.core.MaskedArray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "ma",
              "numpy.ma",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.ma.core.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "arange",
              "numpy.arange",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "6",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "mask",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "reshape",
              "numpy.ma.core.MaskedArray.reshape",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "x",
              "numpy.ma.core.MaskedArray",
              ""
            ]
          ],
          "out": "masked_array(\n  data=[[0, --],\n        [2, 3],\n        [4, --]],\n  mask=[[False,  True],\n        [False, False],\n        [False,  True]],\n  fill_value=999999)",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "x",
              "numpy.ma.core.MaskedArray",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "mini",
              "numpy.ma.core.MaskedArray.mini",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "masked_array(data=0,\n             mask=False,\n       fill_value=999999)",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "x",
              "numpy.ma.core.MaskedArray",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "mini",
              "numpy.ma.core.MaskedArray.mini",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "axis",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "masked_array(data=[0, 3],\n             mask=[False, False],\n       fill_value=999999)",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "x",
              "numpy.ma.core.MaskedArray",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "mini",
              "numpy.ma.core.MaskedArray.mini",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "axis",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "masked_array(data=[0, 2, 4],\n             mask=[False, False, False],\n       fill_value=999999)",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "There is a small difference between "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "mini"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " and "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "min"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ":"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "x",
              "numpy.ma.core.MaskedArray",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "mini",
              "numpy.ma.core.MaskedArray.mini",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "axis",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "masked_array(data=3,\n             mask=False,\n       fill_value=999999)",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "x",
              "numpy.ma.core.MaskedArray",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "min",
              "numpy.ma.core.MaskedArray.min",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "axis",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "3",
          "ce_status": "compiled"
        }
      }
    ],
    "title": null
  },
  "see_also": [],
  "signature": "mini(self, axis=None)",
  "references": null,
  "arbitrary": []
}