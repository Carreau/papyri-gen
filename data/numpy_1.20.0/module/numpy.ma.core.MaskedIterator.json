{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Flat iterator object to iterate over masked arrays."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "A "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "MaskedIterator"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " iterator is returned by "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "x.flat"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " for any masked array "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "x"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". It allows iterating over the array as if it were a 1-D array, either in a for-loop or by calling its "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "next"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " method."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Iteration is done in C-contiguous style, with the last index varying the fastest. The iterator can also be indexed using basic slicing or advanced indexing."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": []
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "MaskedIterator"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is not exported by the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "ma"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " module. Instead of instantiating a "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "MaskedIterator"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " directly, use "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "MaskedArray.flat"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    "MaskedArray.flat",
    "MaskedArray.flatten",
    "builtins.print",
    "builtins.type",
    "numpy",
    "numpy.ma",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.core.MaskedArray.flat",
    "numpy.ma.core.array"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "See Also",
    "Notes",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/numpy/ma/core.py",
  "item_line": 2594,
  "item_type": "<class 'type'>",
  "aliases": [
    "numpy.ma.core.MaskedIterator"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "x",
              "numpy.ma.core.MaskedArray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "ma",
              "numpy.ma",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.ma.core.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "arange",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "6",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "reshape",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "fl",
              "numpy.ma.core.MaskedArray.flat",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "x",
              "numpy.ma.core.MaskedArray",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "flat",
              "numpy.ma.core.MaskedArray.flat",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "type",
              "builtins.type",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "fl",
              "numpy.ma.core.MaskedArray.flat",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "<class 'numpy.ma.core.MaskedIterator'>",
          "ce_status": "exception_in_exec"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "for",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "item",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "in",
              null,
              "ow"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "fl",
              "numpy.ma.core.MaskedArray.flat",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "print",
              "builtins.print",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "item",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "...\n0\n1\n2\n3\n4\n5",
          "ce_status": "exception_in_exec"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Extracting more than a single element b indexing the "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "MaskedIterator"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " returns a masked array:"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "fl",
              "numpy.ma.core.MaskedArray.flat",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ]
          ],
          "out": "masked_array(data = [2 3],\n             mask = False,\n       fill_value = 999999)",
          "ce_status": "exception_in_exec"
        }
      }
    ]
  },
  "see_also": [
    {
      "name": {
        "name": "MaskedArray.flat",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Return a flat iterator over an array."
              }
            }
          ]
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "MaskedArray.flatten",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Returns a flattened copy of an array."
              }
            }
          ]
        }
      ],
      "type": null
    }
  ],
  "signature": "MaskedIterator(ma)",
  "references": null
}