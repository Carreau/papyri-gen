{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Returns the (multiplicative) inverse of invertible "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "self"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "None",
            "type_": "",
            "desc": []
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "ret",
            "type_": "matrix object",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "self"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is non-singular, "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "ret"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is such that "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "ret",
                          " ",
                          "*",
                          " ",
                          "self"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " == "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "self",
                          " ",
                          "*",
                          " ",
                          "ret"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " == "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "np.matrix(np.eye(self[0,",
                          ":",
                          "].size))"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " all return "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "True"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "numpy.linalg.LinAlgError: Singular matrix",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "self"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is singular."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    "linalg.inv",
    "numpy",
    "numpy.matrix",
    "numpy.matrixlib.defmatrix.matrix.I"
  ],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Raises",
    "See Also",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/numpy/matrixlib/defmatrix.py",
  "item_line": 792,
  "item_type": "<class 'function'>",
  "aliases": [
    "numpy.matrix.getI"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "m",
              "numpy.matrix",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "matrix",
              "numpy.matrix",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "[1, 2; 3, 4]",
              "",
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "m",
              "numpy.matrix",
              ""
            ]
          ],
          "out": "matrix([[1, 2],\n        [3, 4]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "m",
              "numpy.matrix",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "getI",
              "numpy.matrixlib.defmatrix.matrix.I",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "matrix([[-2. ,  1. ],\n        [ 1.5, -0.5]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "m",
              "numpy.matrix",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "getI",
              "numpy.matrixlib.defmatrix.matrix.I",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "m",
              "numpy.matrix",
              ""
            ]
          ],
          "out": "matrix([[ 1.,  0.], # may vary\n        [ 0.,  1.]])",
          "ce_status": "execed"
        }
      }
    ],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "linalg.inv",
        "ref": null,
        "exists": null
      },
      "descriptions": [],
      "type": null
    }
  ],
  "signature": "I(self)",
  "references": null,
  "arbitrary": []
}