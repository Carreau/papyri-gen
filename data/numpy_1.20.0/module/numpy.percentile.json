{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Compute the q-th percentile of the data along the specified axis."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Returns the q-th percentile(s) of the array elements."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "a",
            "type_": "array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Input array or object that can be converted to an array."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "q",
            "type_": "array_like of float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Percentile or sequence of percentiles to compute, which must be between 0 and 100 inclusive."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "axis",
            "type_": "{int, tuple of int, None}, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Axis or axes along which the percentiles are computed. The default is to compute the percentile(s) along a flattened version of the array."
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockDirective",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ".. versionchanged:: 1.9.0",
                        "_number": 4,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": []
                  },
                  "ind": {
                    "_lines": [
                      {
                        "_line": "    A tuple of axes is supported",
                        "_number": 5,
                        "_offset": 0
                      }
                    ]
                  },
                  "directive_name": "versionchanged",
                  "args0": [
                    " 1.9.0"
                  ],
                  "inner": {
                    "children": [
                      {
                        "type": "Words",
                        "data": {
                          "value": "A tuple of axes is supported"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "out",
            "type_": "ndarray, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Alternative output array in which to place the result. It must have the same shape and buffer length as the expected output, but the type (of the output) will be cast if necessary."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "overwrite_input",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If True, then allow the input array "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "a"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " to be modified by intermediate calculations, to save memory. In this case, the contents of the input "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "a"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " after this function completes is undefined."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "interpolation",
            "type_": "{'linear', 'lower', 'higher', 'midpoint', 'nearest'}",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "This optional parameter specifies the interpolation method to use when the desired percentile lies between two data points "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "i",
                          " ",
                          "<",
                          " ",
                          "j"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ":"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "* 'linear': "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "i",
                          " ",
                          "+",
                          " ",
                          "(j",
                          " ",
                          "-",
                          " ",
                          "i)",
                          " ",
                          "*",
                          " ",
                          "fraction"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", where `"
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "fraction"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "`"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "  is the fractional part of the index surrounded by "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "i"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "   and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "j"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "* 'lower': "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "i"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". * 'higher': "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "j"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". * 'nearest': "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "i"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "j"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", whichever is nearest. * 'midpoint': "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "(i",
                          " ",
                          "+",
                          " ",
                          "j)",
                          " ",
                          "/",
                          " ",
                          "2"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockDirective",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ".. versionadded:: 1.9.0",
                        "_number": 12,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": []
                  },
                  "ind": {
                    "_lines": []
                  },
                  "directive_name": "versionadded",
                  "args0": [
                    " 1.9.0"
                  ],
                  "inner": null
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "keepdims",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If this is set to True, the axes which are reduced are left in the result as dimensions with size one. With this option, the result will broadcast correctly against the original array "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "a"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockDirective",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ".. versionadded:: 1.9.0",
                        "_number": 4,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": []
                  },
                  "ind": {
                    "_lines": []
                  },
                  "directive_name": "versionadded",
                  "args0": [
                    " 1.9.0"
                  ],
                  "inner": null
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "percentile",
            "type_": "scalar or ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "q"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is a single percentile and "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "axis=None"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", then the result is a scalar. If multiple percentiles are given, first axis of the result corresponds to the percentiles. The other axes are the axes that remain after the reduction of "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "a"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". If the input contains integers or floats smaller than "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "float64"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", the output data-type is "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "float64"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". Otherwise, the output data-type is the same as that of the input. If "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "out"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is specified, that array is returned instead."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Given a vector "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "V"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " of length "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "N"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", the q-th percentile of "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "V"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is the value "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "q/100"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " of the way from the minimum to the maximum in a sorted copy of "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "V"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". The values and distances of the two nearest neighbors as well as the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "interpolation"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " parameter will determine the percentile if the normalized ranking does not match the location of "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "q"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " exactly. This function is the same as the median if "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "q=50"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", the same as the minimum if "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "q=0"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and the same as the maximum if "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "q=100"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    "builtins.tuple",
    "mean",
    "median",
    "nanpercentile",
    "numpy",
    "numpy._ArrayOrScalarCommon.copy",
    "numpy.all",
    "numpy.array",
    "numpy.ndarray",
    "numpy.percentile",
    "numpy.zeros_like",
    "quantile"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "item_file": "<__array_function__ internals>",
  "item_line": 3675,
  "item_type": "<class 'function'>",
  "aliases": [
    "numpy.percentile"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "10",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "7",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "a",
              "numpy.ndarray",
              ""
            ]
          ],
          "out": "array([[10,  7,  4],\n       [ 3,  2,  1]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "percentile",
              "numpy.percentile",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "50",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "3.5",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "percentile",
              "numpy.percentile",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "50",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "axis",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([6.5, 4.5, 2.5])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "percentile",
              "numpy.percentile",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "50",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "axis",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([7.,  2.])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "percentile",
              "numpy.percentile",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "50",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "axis",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "keepdims",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "True",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[7.],\n       [2.]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "m",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "percentile",
              "numpy.percentile",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "50",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "axis",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "out",
              "builtins.tuple",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "zeros_like",
              "numpy.zeros_like",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "m",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "percentile",
              "numpy.percentile",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "50",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "axis",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "out",
              "builtins.tuple",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "out",
              "builtins.tuple",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([6.5, 4.5, 2.5])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "m",
              "numpy.ndarray",
              ""
            ]
          ],
          "out": "array([6.5, 4.5, 2.5])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "b",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "copy",
              "numpy._ArrayOrScalarCommon.copy",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "percentile",
              "numpy.percentile",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "b",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "50",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "axis",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "overwrite_input",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "True",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([7.,  2.])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "assert",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "not",
              null,
              "ow"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "all",
              "numpy.all",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "==",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "b",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "The different types of interpolation can be visualized graphically:"
              }
            }
          ]
        }
      },
      {
        "type": "BlockDirective",
        "data": {
          "lines": {
            "_lines": [
              {
                "_line": ".. plot::",
                "_number": 0,
                "_offset": 0
              }
            ]
          },
          "wh": {
            "_lines": []
          },
          "ind": {
            "_lines": []
          },
          "directive_name": "plot",
          "args0": [
            ""
          ],
          "inner": null
        }
      },
      {
        "type": "DefList",
        "data": {
          "children": [
            {
              "lines": {
                "_lines": [
                  {
                    "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                    "_number": 0,
                    "_offset": 0
                  }
                ]
              },
              "wh": {
                "_lines": []
              },
              "ind": {
                "_lines": [
                  {
                    "_line": "    import matplotlib.pyplot as plt",
                    "_number": 0,
                    "_offset": 4
                  }
                ]
              },
              "dt": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                    }
                  }
                ]
              },
              "dd": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "import matplotlib.pyplot as plt"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "type": "DefList",
        "data": {
          "children": [
            {
              "lines": {
                "_lines": [
                  {
                    "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                    "_number": 0,
                    "_offset": 0
                  }
                ]
              },
              "wh": {
                "_lines": []
              },
              "ind": {
                "_lines": [
                  {
                    "_line": "    a = np.arange(4)",
                    "_number": 0,
                    "_offset": 4
                  },
                  {
                    "_line": "    p = np.linspace(0, 100, 6001)",
                    "_number": 1,
                    "_offset": 4
                  },
                  {
                    "_line": "    ax = plt.gca()",
                    "_number": 2,
                    "_offset": 4
                  },
                  {
                    "_line": "    lines = [",
                    "_number": 3,
                    "_offset": 4
                  },
                  {
                    "_line": "        ('linear', None),",
                    "_number": 4,
                    "_offset": 4
                  },
                  {
                    "_line": "        ('higher', '--'),",
                    "_number": 5,
                    "_offset": 4
                  },
                  {
                    "_line": "        ('lower', '--'),",
                    "_number": 6,
                    "_offset": 4
                  },
                  {
                    "_line": "        ('nearest', '-.'),",
                    "_number": 7,
                    "_offset": 4
                  },
                  {
                    "_line": "        ('midpoint', '-.'),",
                    "_number": 8,
                    "_offset": 4
                  },
                  {
                    "_line": "    ]",
                    "_number": 9,
                    "_offset": 4
                  },
                  {
                    "_line": "    for interpolation, style in lines:",
                    "_number": 10,
                    "_offset": 4
                  },
                  {
                    "_line": "        ax.plot(",
                    "_number": 11,
                    "_offset": 4
                  },
                  {
                    "_line": "            p, np.percentile(a, p, interpolation=interpolation),",
                    "_number": 12,
                    "_offset": 4
                  },
                  {
                    "_line": "            label=interpolation, linestyle=style)",
                    "_number": 13,
                    "_offset": 4
                  },
                  {
                    "_line": "    ax.set(",
                    "_number": 14,
                    "_offset": 4
                  },
                  {
                    "_line": "        title='Interpolation methods for list: ' + str(a),",
                    "_number": 15,
                    "_offset": 4
                  },
                  {
                    "_line": "        xlabel='Percentile',",
                    "_number": 16,
                    "_offset": 4
                  },
                  {
                    "_line": "        ylabel='List item returned',",
                    "_number": 17,
                    "_offset": 4
                  },
                  {
                    "_line": "        yticks=a)",
                    "_number": 18,
                    "_offset": 4
                  },
                  {
                    "_line": "    ax.legend()",
                    "_number": 19,
                    "_offset": 4
                  },
                  {
                    "_line": "    plt.show()",
                    "_number": 20,
                    "_offset": 4
                  }
                ]
              },
              "dt": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                    }
                  }
                ]
              },
              "dd": {
                "children": [
                  {
                    "type": "Words",
                    "data": {
                      "value": "a = np.arange(4) p = np.linspace(0, 100, 6001) ax = plt.gca() lines = [     ('linear', None),     ('higher', '--'),     ('lower', '--'),     ('nearest', '-.'),     ('midpoint', '-.'), ] for interpolation, style in lines:     ax.plot(         p, np.percentile(a, p, interpolation=interpolation),         label=interpolation, linestyle=style) ax.set(     title='Interpolation methods for list: ' + str(a),     xlabel='Percentile',     ylabel='List item returned',     yticks=a) ax.legend() plt.show()"
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    ]
  },
  "see_also": [
    {
      "name": {
        "name": "mean",
        "ref": null,
        "exists": null
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "median",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "equivalent to `"
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "percentile(...,",
                  " ",
                  "50)"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": "`"
              }
            }
          ]
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "nanpercentile",
        "ref": null,
        "exists": null
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "quantile",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "equivalent to percentile, except with q in the range [0, 1]."
              }
            }
          ]
        }
      ],
      "type": null
    }
  ],
  "signature": "percentile(a, q, axis=None, out=None, overwrite_input=False, interpolation='linear', keepdims=False)",
  "references": null
}