{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "A generalization of the Vandermonde matrix for N dimensions"
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The result is built by combining the results of 1d Vandermonde matrices,"
                }
              }
            ]
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. math::",
                  "_number": 2,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": [
                {
                  "_line": "    W[i_0, \\ldots, i_M, j_0, \\ldots, j_N] = \\prod_{k=0}^N{V_k(x_k)[i_0, \\ldots, i_M, j_k]}",
                  "_number": 3,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 4,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "math",
            "args0": [
              ""
            ],
            "inner": {
              "children": [
                {
                  "type": "Words",
                  "data": {
                    "value": "W[i_0, \\ldots, i_M, j_0, \\ldots, j_N] = \\prod_{k=0}^N{V_k(x_k)[i_0, \\ldots, i_M, j_k]} "
                  }
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "where"
                }
              }
            ]
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. math::",
                  "_number": 7,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": [
                {
                  "_line": "    N &= \\texttt{len(points)} = \\texttt{len(degrees)} = \\texttt{len(vander\\_fs)} \\\\",
                  "_number": 8,
                  "_offset": 0
                },
                {
                  "_line": "    M &= \\texttt{points[k].ndim} \\\\",
                  "_number": 9,
                  "_offset": 0
                },
                {
                  "_line": "    V_k &= \\texttt{vander\\_fs[k]} \\\\",
                  "_number": 10,
                  "_offset": 0
                },
                {
                  "_line": "    x_k &= \\texttt{points[k]} \\\\",
                  "_number": 11,
                  "_offset": 0
                },
                {
                  "_line": "    0 \\le j_k &\\le \\texttt{degrees[k]}",
                  "_number": 12,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 13,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "math",
            "args0": [
              ""
            ],
            "inner": {
              "children": [
                {
                  "type": "Words",
                  "data": {
                    "value": "N &= \\texttt{len(points)} = \\texttt{len(degrees)} = \\texttt{len(vander\\_fs)} \\\\ M &= \\texttt{points[k].ndim} \\\\ V_k &= \\texttt{vander\\_fs[k]} \\\\ x_k &= \\texttt{points[k]} \\\\ 0 \\le j_k &\\le \\texttt{degrees[k]} "
                  }
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Expanding the one-dimensional "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "V",
                    "_",
                    "k"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " functions gives:"
                }
              }
            ]
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. math::",
                  "_number": 16,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": [
                {
                  "_line": "    W[i_0, \\ldots, i_M, j_0, \\ldots, j_N] = \\prod_{k=0}^N{B_{k, j_k}(x_k[i_0, \\ldots, i_M])}",
                  "_number": 17,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 18,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "math",
            "args0": [
              ""
            ],
            "inner": {
              "children": [
                {
                  "type": "Words",
                  "data": {
                    "value": "W[i_0, \\ldots, i_M, j_0, \\ldots, j_N] = \\prod_{k=0}^N{B_{k, j_k}(x_k[i_0, \\ldots, i_M])} "
                  }
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "where "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "B",
                    "_",
                    "{k,m}"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is the m'th basis of the polynomial construction used along dimension "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "k"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". For a regular polynomial, "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "B",
                    "_",
                    "{k,",
                    " ",
                    "m}(x)",
                    " ",
                    "=",
                    " ",
                    "P",
                    "_",
                    "m(x)",
                    " ",
                    "=",
                    " ",
                    "x^m"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "vander_fs",
            "type_": "Sequence[function(array_like, int) -> ndarray]",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The 1d vander function to use for each axis, such as `"
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "polyvander"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "`"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "points",
            "type_": "Sequence[array_like]",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Arrays of point coordinates, all of the same shape. The dtypes will be converted to either float64 or complex128 depending on whether any of the elements are complex. Scalars are converted to 1-D arrays. This must be the same length as "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "vander",
                          "_",
                          "fs"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "degrees",
            "type_": "Sequence[int]",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The maximum degree (inclusive) to use for each axis. This must be the same length as "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "vander",
                          "_",
                          "fs"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "vander_nd",
            "type_": "ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "An array of shape "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "points[0].shape",
                          " ",
                          "+",
                          " ",
                          "tuple(d",
                          " ",
                          "+",
                          " ",
                          "1",
                          " ",
                          "for",
                          " ",
                          "d",
                          " ",
                          "in",
                          " ",
                          "degrees)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/numpy/polynomial/polyutils.py",
  "item_line": 423,
  "item_type": "<class 'function'>",
  "aliases": [
    "numpy.polynomial.polyutils._vander_nd"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "signature": "_vander_nd(vander_fs, points, degrees)",
  "references": null
}