{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Save an array to a text file."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": []
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "fname",
            "type_": "filename or file handle",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If the filename ends in "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          ".gz"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", the file is automatically saved in compressed gzip format.  "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "loadtxt"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " understands gzipped files transparently."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "X",
            "type_": "1D or 2D array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Data to be saved to a text file."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "fmt",
            "type_": "str or sequence of strs, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A single format (%10.5f), a sequence of formats, or a multi-format string, e.g. 'Iteration %d -- %10.5f', in which case "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "delimiter"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is ignored. For complex "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "X"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", the legal options for "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "fmt"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are:"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "* a single specifier, "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "fmt='%.4e'"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", resulting in numbers formatted"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "  like "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "'",
                          " ",
                          "(%s+%sj)'",
                          " ",
                          "%",
                          " ",
                          "(fmt,",
                          " ",
                          "fmt)"
                        ],
                        "domain": null,
                        "role": null
                      }
                    }
                  ]
                }
              },
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "* a full string specifying every real and imaginary part, e.g.",
                            "_number": 7,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "  `' %.4e %+.4ej %.4e %+.4ej %.4e %+.4ej'` for 3 columns",
                            "_number": 8,
                            "_offset": 2
                          }
                        ]
                      },
                      "dt": {
                        "children": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "* a full string specifying every real and imaginary part, e.g."
                            }
                          }
                        ]
                      },
                      "dd": {
                        "children": [
                          {
                            "type": "Directive",
                            "data": {
                              "value": [
                                "'",
                                " ",
                                "%.4e",
                                " ",
                                "%+.4ej",
                                " ",
                                "%.4e",
                                " ",
                                "%+.4ej",
                                " ",
                                "%.4e",
                                " ",
                                "%+.4ej'"
                              ],
                              "domain": null,
                              "role": null
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " for 3 columns"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "* a list of specifiers, one per column - in this case, the real",
                            "_number": 9,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "  and imaginary part must have separate specifiers,",
                            "_number": 10,
                            "_offset": 2
                          },
                          {
                            "_line": "  e.g. `['%.3e + %.3ej', '(%.15e%+.15ej)']` for 2 columns",
                            "_number": 11,
                            "_offset": 2
                          }
                        ]
                      },
                      "dt": {
                        "children": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "* a list of specifiers, one per column - in this case, the real"
                            }
                          }
                        ]
                      },
                      "dd": {
                        "children": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "and imaginary part must have separate specifiers, e.g. "
                            }
                          },
                          {
                            "type": "Directive",
                            "data": {
                              "value": [
                                "['%.3e",
                                " ",
                                "+",
                                " ",
                                "%.3ej',",
                                " ",
                                "'(%.15e%+.15ej)']"
                              ],
                              "domain": null,
                              "role": null
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " for 2 columns"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "delimiter",
            "type_": "str, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "String or character separating columns."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "newline",
            "type_": "str, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "String or character separating lines."
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockDirective",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ".. versionadded:: 1.5.0",
                        "_number": 2,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": []
                  },
                  "ind": {
                    "_lines": []
                  },
                  "directive_name": "versionadded",
                  "args0": [
                    " 1.5.0"
                  ],
                  "inner": null
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "header",
            "type_": "str, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "String that will be written at the beginning of the file."
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockDirective",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ".. versionadded:: 1.7.0",
                        "_number": 2,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": []
                  },
                  "ind": {
                    "_lines": []
                  },
                  "directive_name": "versionadded",
                  "args0": [
                    " 1.7.0"
                  ],
                  "inner": null
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "footer",
            "type_": "str, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "String that will be written at the end of the file."
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockDirective",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ".. versionadded:: 1.7.0",
                        "_number": 2,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": []
                  },
                  "ind": {
                    "_lines": []
                  },
                  "directive_name": "versionadded",
                  "args0": [
                    " 1.7.0"
                  ],
                  "inner": null
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "comments",
            "type_": "str, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "String that will be prepended to the "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "header"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "footer"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " strings, to mark them as comments. Default: '# ',  as expected by e.g. "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "numpy.loadtxt"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockDirective",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ".. versionadded:: 1.7.0",
                        "_number": 4,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": []
                  },
                  "ind": {
                    "_lines": []
                  },
                  "directive_name": "versionadded",
                  "args0": [
                    " 1.7.0"
                  ],
                  "inner": null
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "encoding",
            "type_": "{None, str}, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Encoding used to encode the outputfile. Does not apply to output streams. If the encoding is something other than 'bytes' or 'latin1' you will not be able to load the file in NumPy versions < 1.14. Default is 'latin1'."
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockDirective",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ".. versionadded:: 1.14.0",
                        "_number": 5,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": []
                  },
                  "ind": {
                    "_lines": []
                  },
                  "directive_name": "versionadded",
                  "args0": [
                    " 1.14.0"
                  ],
                  "inner": null
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Further explanation of the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "fmt"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " parameter ("
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "%[flag]width[.precision]specifier"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "):"
                }
              }
            ]
          }
        },
        {
          "type": "DefList",
          "data": {
            "children": [
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "flags:",
                      "_number": 3,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    ``-`` : left justify",
                      "_number": 4,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 5,
                      "_offset": 4
                    },
                    {
                      "_line": "    ``+`` : Forces to precede result with + or -.",
                      "_number": 6,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 7,
                      "_offset": 4
                    },
                    {
                      "_line": "    ``0`` : Left pad the number with zeros instead of space (see width).",
                      "_number": 8,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 9,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "flags:"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "-"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " : left justify  "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "+"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " : Forces to precede result with + or -.  "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "0"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " : Left pad the number with zeros instead of space (see width). "
                      }
                    }
                  ]
                }
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "width:",
                      "_number": 10,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    Minimum number of characters to be printed. The value is not truncated",
                      "_number": 11,
                      "_offset": 4
                    },
                    {
                      "_line": "    if it has more characters.",
                      "_number": 12,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 13,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "width:"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Minimum number of characters to be printed. The value is not truncated if it has more characters. "
                      }
                    }
                  ]
                }
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "precision:",
                      "_number": 14,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    - For integer specifiers (eg. ``d,i,o,x``), the minimum number of",
                      "_number": 15,
                      "_offset": 4
                    },
                    {
                      "_line": "      digits.",
                      "_number": 16,
                      "_offset": 4
                    },
                    {
                      "_line": "    - For ``e, E`` and ``f`` specifiers, the number of digits to print",
                      "_number": 17,
                      "_offset": 4
                    },
                    {
                      "_line": "      after the decimal point.",
                      "_number": 18,
                      "_offset": 4
                    },
                    {
                      "_line": "    - For ``g`` and ``G``, the maximum number of significant digits.",
                      "_number": 19,
                      "_offset": 4
                    },
                    {
                      "_line": "    - For ``s``, the maximum number of characters.",
                      "_number": 20,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 21,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "precision:"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- For integer specifiers (eg. "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "d,i,o,x"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "), the minimum number of   digits. - For "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "e,",
                          " ",
                          "E"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "f"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " specifiers, the number of digits to print   after the decimal point. - For "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "g"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "G"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", the maximum number of significant digits. - For "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "s"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", the maximum number of characters. "
                      }
                    }
                  ]
                }
              },
              {
                "lines": {
                  "_lines": [
                    {
                      "_line": "specifiers:",
                      "_number": 22,
                      "_offset": 0
                    }
                  ]
                },
                "wh": {
                  "_lines": []
                },
                "ind": {
                  "_lines": [
                    {
                      "_line": "    ``c`` : character",
                      "_number": 23,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 24,
                      "_offset": 4
                    },
                    {
                      "_line": "    ``d`` or ``i`` : signed decimal integer",
                      "_number": 25,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 26,
                      "_offset": 4
                    },
                    {
                      "_line": "    ``e`` or ``E`` : scientific notation with ``e`` or ``E``.",
                      "_number": 27,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 28,
                      "_offset": 4
                    },
                    {
                      "_line": "    ``f`` : decimal floating point",
                      "_number": 29,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 30,
                      "_offset": 4
                    },
                    {
                      "_line": "    ``g,G`` : use the shorter of ``e,E`` or ``f``",
                      "_number": 31,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 32,
                      "_offset": 4
                    },
                    {
                      "_line": "    ``o`` : signed octal",
                      "_number": 33,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 34,
                      "_offset": 4
                    },
                    {
                      "_line": "    ``s`` : string of characters",
                      "_number": 35,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 36,
                      "_offset": 4
                    },
                    {
                      "_line": "    ``u`` : unsigned decimal integer",
                      "_number": 37,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 38,
                      "_offset": 4
                    },
                    {
                      "_line": "    ``x,X`` : unsigned hexadecimal integer",
                      "_number": 39,
                      "_offset": 4
                    },
                    {
                      "_line": "",
                      "_number": 40,
                      "_offset": 4
                    }
                  ]
                },
                "dt": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "specifiers:"
                      }
                    }
                  ]
                },
                "dd": {
                  "children": [
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "c"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " : character  "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "d"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "i"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " : signed decimal integer  "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "e"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "E"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " : scientific notation with "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "e"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "E"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ".  "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "f"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " : decimal floating point  "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "g,G"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " : use the shorter of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "e,E"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "f"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "  "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "o"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " : signed octal  "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "s"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " : string of characters  "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "u"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " : unsigned decimal integer  "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "x,X"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " : unsigned hexadecimal integer "
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "This explanation of "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "fmt"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is not complete, for an exhaustive specification see [1]_."
                }
              }
            ]
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    "numpy",
    "numpy.arange",
    "numpy.ndarray",
    "numpy.savetxt",
    "save",
    "savez",
    "savez_compressed"
  ],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "item_file": "<__array_function__ internals>",
  "item_line": 1200,
  "item_type": "<class 'function'>",
  "aliases": [
    "numpy.savetxt"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "x",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "y",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "z",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "arange",
              "numpy.arange",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "0.0",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "5.0",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1.0",
              "",
              "mf"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "savetxt",
              "numpy.savetxt",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "test.out",
              "",
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "x",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "delimiter",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ",",
              "",
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# X is an array",
              "",
              "c1"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "savetxt",
              "numpy.savetxt",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "test.out",
              "",
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "y",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "z",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# x,y,z equal sized 1D arrays",
              "",
              "c1"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "savetxt",
              "numpy.savetxt",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "test.out",
              "",
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "x",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "fmt",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "%1.4e",
              "",
              "si"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# use exponential notation",
              "",
              "c1"
            ]
          ],
          "out": "",
          "ce_status": "execed"
        }
      }
    ]
  },
  "see_also": [
    {
      "name": {
        "name": "save",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Save an array to a binary file in NumPy "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  ".npy"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " format"
              }
            }
          ]
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "savez",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Save several arrays into an uncompressed "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  ".npz"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " archive"
              }
            }
          ]
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "savez_compressed",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Save several arrays into a compressed "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  ".npz"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " archive"
              }
            }
          ]
        }
      ],
      "type": null
    }
  ],
  "signature": "savetxt(fname, X, fmt='%.18e', delimiter=' ', newline='\\n', header='', footer='', comments='# ', encoding=None)",
  "references": [
    ".. [1] `Format Specification Mini-Language",
    "       <https://docs.python.org/library/string.html#format-specification-mini-language>`_,",
    "       Python Documentation."
  ]
}