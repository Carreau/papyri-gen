{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Nose test runner."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "This class is made available as numpy.testing.Tester, and a test function is typically added to a package's __init__.py like so::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "  from numpy.testing import Tester",
                  "_number": 3,
                  "_offset": 2
                },
                {
                  "_line": "  test = Tester().test",
                  "_number": 4,
                  "_offset": 2
                },
                {
                  "_line": "",
                  "_number": 5,
                  "_offset": 2
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Calling this test function finds and runs all tests associated with the package and all its sub-packages."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "package",
            "type_": "module, str or None, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The package to test. If a string, this should be the full path to the package. If None (default), "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "package"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is set to the module from which "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "NoseTester"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is initialized."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "raise_warnings",
            "type_": "None, str or sequence of warnings, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "This specifies which warnings to configure as 'raise' instead of being shown once during the test execution.  Valid strings are:"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "  - \"develop\" : equals "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "(Warning,)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "   - \"release\" : equals "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "()"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", don't raise on any warnings."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Default is \"release\"."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "depth",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "package"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is None, then this can be used to initialize from the module of the caller of (the caller of (...)) the code that initializes "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "NoseTester"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". Default of 0 means the module of the immediate caller; higher values are useful for utility routines that want to initialize "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "NoseTester"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " objects on behalf of other code."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "package_path",
            "type_": "str",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Full path to the package to test."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "package_name",
            "type_": "str",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Name of the package to test."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Attributes",
    "Parameters"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/numpy/testing/_private/nosetester.py",
  "item_line": 112,
  "item_type": "<class 'type'>",
  "aliases": [
    "numpy.Tester"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "signature": "NoseTester(package=None, raise_warnings='release', depth=0, check_fpu_mode=False)",
  "references": null
}