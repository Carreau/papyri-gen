{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Run tests for module using nose."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": []
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "label",
            "type_": "{'fast', 'full', '', attribute identifier}, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Identifies the tests to run. This can be a string to pass to the nosetests executable with the '-A' option, or one of several special values.  Special values are:"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "* 'fast' - the default - which corresponds to the `"
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "nosetests",
                          " ",
                          "-A"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "`"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "  option of 'not slow'."
                      }
                    }
                  ]
                }
              },
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "* 'full' - fast (as above) and slow tests as in the",
                            "_number": 6,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "  'no -A' option to nosetests - this is the same as ''.",
                            "_number": 7,
                            "_offset": 2
                          }
                        ]
                      },
                      "dt": {
                        "children": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "* 'full' - fast (as above) and slow tests as in the"
                            }
                          }
                        ]
                      },
                      "dd": {
                        "children": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "'no -A' option to nosetests - this is the same as ''."
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "* None or '' - run all tests. * attribute_identifier - string passed directly to nosetests as '-A'."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "verbose",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Verbosity value for test outputs, in the range 1-10. Default is 1."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "extra_argv",
            "type_": "list, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "List with any extra arguments to pass to nosetests."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "doctests",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If True, run doctests in module. Default is False."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "coverage",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If True, report coverage of NumPy code. Default is False. (This requires the "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "coverage",
                          " ",
                          "module",
                          " ",
                          "<https",
                          ":",
                          "//pypi.org/project/coverage/>"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "_)."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "raise_warnings",
            "type_": "None, str or sequence of warnings, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "This specifies which warnings to configure as 'raise' instead of being shown once during the test execution. Valid strings are:"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "* \"develop\" : equals "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "(Warning,)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " * \"release\" : equals "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "()"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", do not raise on any warnings."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "timer",
            "type_": "bool or int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Timing of individual tests with "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "nose-timer"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (which needs to be installed).  If True, time tests and report on all of them. If an integer (say "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "N"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "), report timing results for "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "N"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " slowest tests."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "result",
            "type_": "object",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Returns the result of running the tests as a "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "nose.result.TextTestResult"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " object."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Each NumPy module exposes "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "test"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " in its namespace to run all tests for it. For example, to run all tests for numpy.lib:"
                }
              }
            ]
          }
        },
        {
          "type": "Example",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ">>> np.lib.test() #doctest: +SKIP",
                  "_number": 3,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": []
            }
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    "builtins.bool",
    "numpy",
    "numpy._pytesttester.PytestTester",
    "numpy.lib"
  ],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/numpy/testing/_private/nosetester.py",
  "item_line": 326,
  "item_type": "<class 'function'>",
  "aliases": [
    "numpy.Tester.test"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "result",
              "builtins.bool",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "lib",
              "numpy.lib",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "test",
              "numpy._pytesttester.PytestTester",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "#doctest: +SKIP",
              "",
              "c1"
            ]
          ],
          "out": "Running unit tests for numpy.lib\n...\nRan 976 tests in 3.933s",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "OK"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "result",
              "builtins.bool",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "errors",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "#doctest: +SKIP",
              "",
              "c1"
            ]
          ],
          "out": "[]",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "result",
              "builtins.bool",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "knownfail",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "#doctest: +SKIP",
              "",
              "c1"
            ]
          ],
          "out": "[]",
          "ce_status": "compiled"
        }
      }
    ]
  },
  "see_also": [],
  "signature": "test(self, label='fast', verbose=1, extra_argv=None, doctests=False, coverage=False, raise_warnings=None, timer=False)",
  "references": null
}