{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Raises an AssertionError if two items are not equal up to desired precision."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. note:: It is recommended to use one of `assert_allclose`,",
                  "_number": 0,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": [
                {
                  "_line": "          `assert_array_almost_equal_nulp` or `assert_array_max_ulp`",
                  "_number": 1,
                  "_offset": 0
                },
                {
                  "_line": "          instead of this function for more consistent floating point",
                  "_number": 2,
                  "_offset": 0
                },
                {
                  "_line": "          comparisons.",
                  "_number": 3,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 4,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "note",
            "args0": [
              " It is recommended to use one of `assert_allclose`,"
            ],
            "inner": {
              "children": [
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "assert",
                      "_",
                      "array",
                      "_",
                      "almost",
                      "_",
                      "equal",
                      "_",
                      "nulp"
                    ],
                    "domain": null,
                    "role": null
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": " or "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "assert",
                      "_",
                      "array",
                      "_",
                      "max",
                      "_",
                      "ulp"
                    ],
                    "domain": null,
                    "role": null
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": " instead of this function for more consistent floating point comparisons. "
                  }
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The test verifies that the elements of "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "actual"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "desired"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " satisfy."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "    `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "abs(desired-actual)",
                    " ",
                    "<",
                    " ",
                    "1.5",
                    " ",
                    "*",
                    " ",
                    "10",
                    "*",
                    "*",
                    "(-decimal)"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "That is a looser test than originally documented, but agrees with what the actual implementation in "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "assert",
                    "_",
                    "array",
                    "_",
                    "almost",
                    "_",
                    "equal"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " did up to rounding vagaries. An exception is raised at conflicting values. For ndarrays this delegates to assert_array_almost_equal"
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "actual",
            "type_": "array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The object to check."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "desired",
            "type_": "array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The expected object."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "decimal",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Desired precision, default is 7."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "err_msg",
            "type_": "str, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The error message to be printed in case of failure."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "verbose",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If True, the conflicting values are appended to the error message."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "AssertionError",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If actual and desired are not equal up to specified precision."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    "assert_allclose",
    "assert_array_almost_equal_nulp",
    "assert_array_max_ulp",
    "assert_equal",
    "numpy",
    "numpy.array",
    "numpy.testing"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Raises",
    "See Also",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/numpy/testing/_private/utils.py",
  "item_line": 474,
  "item_type": "<class 'function'>",
  "aliases": [
    "numpy.testing.assert_almost_equal"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "numpy",
              "numpy",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "testing",
              "numpy.testing",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "as",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "npt",
              "numpy.testing",
              "nn"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "npt",
              "numpy.testing",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "assert_almost_equal",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "2.3333333333333",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2.33333334",
              "",
              "mf"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "npt",
              "numpy.testing",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "assert_almost_equal",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "2.3333333333333",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2.33333334",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "decimal",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "10",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "Traceback (most recent call last):\n    ...\nAssertionError:\nArrays are not almost equal to 10 decimals\n ACTUAL: 2.3333333333333\n DESIRED: 2.33333334",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "npt",
              "numpy.testing",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "assert_almost_equal",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1.0",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2.3333333333333",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1.0",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2.33333334",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "decimal",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "9",
              "",
              "mi"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "Traceback (most recent call last):\n    ...\nAssertionError:\nArrays are not almost equal to 9 decimals\n<BLANKLINE>\nMismatched elements: 1 / 2 (50%)\nMax absolute difference: 6.66669964e-09\nMax relative difference: 2.85715698e-09\n x: array([1.         , 2.333333333])\n y: array([1.        , 2.33333334])",
          "ce_status": "compiled"
        }
      }
    ]
  },
  "see_also": [
    {
      "name": {
        "name": "assert_allclose",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Compare two array_like objects for equality with desired relative and/or absolute precision."
              }
            }
          ]
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "assert_array_almost_equal_nulp",
        "ref": null,
        "exists": null
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "assert_array_max_ulp",
        "ref": null,
        "exists": null
      },
      "descriptions": [],
      "type": null
    },
    {
      "name": {
        "name": "assert_equal",
        "ref": null,
        "exists": null
      },
      "descriptions": [],
      "type": null
    }
  ],
  "signature": "assert_almost_equal(actual, desired, decimal=7, err_msg='', verbose=True)",
  "references": null
}