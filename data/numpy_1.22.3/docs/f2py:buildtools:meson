{
  "_content": {},
  "aliases": [],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "placeholder": "target",
            "value": ".. _f2py-meson:"
          },
          "type": "Unimplemented"
        }
      ],
      "title": null
    },
    {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The key advantage gained by leveraging "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "meson"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " over the techniques described in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "f2py-distutils"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is that this feeds into existing systems and larger projects with ease. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "meson"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " has a rather pythonic syntax which makes it more comfortable and amenable to extension for "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "python"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " users."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "inline": [
                  {
                    "data": {
                      "value": "Meson needs to be at - least ``0.46.0`` in order to resolve the ``python`` include directories. "
                    },
                    "type": "Words"
                  }
                ],
                "inner": []
              }
            ],
            "kind": "note",
            "title": ""
          },
          "type": "Admonition"
        }
      ],
      "title": "Using via ``meson``"
    },
    {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "We will need the generated "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "C"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " wrapper before we can use a general purpose build system like "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "meson"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". We will acquire this by:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "args0": [
              "bash"
            ],
            "directive_name": "code-block",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "python - n numpy.f2py fib1.f - m fib2 "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Now, consider the following "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "meson.build"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " file for the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "fib"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "scalar"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " examples from "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "f2py-getting-started"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " section:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "args0": [
              "./../code/meson.build"
            ],
            "directive_name": "literalinclude",
            "inner": {
              "inline": [],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "At this point the build will complete, but the import will fail:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "args0": [
              "bash"
            ],
            "directive_name": "code-block",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "meson setup builddir meson compile - C builddir cd builddir python - c ' import fib2 ' Traceback ( most recent call last) : File \" < string> \" , line 1, in < module> ImportError : fib2.cpython - 39 - x86_64 - linux - gnu.so : undefined symbol : FIB_ # Check this isn ' t a false positive nm - A fib2.cpython - 39 - x86_64 - linux - gnu.so | grep FIB_ fib2.cpython - 39 - x86_64 - linux - gnu.so : U FIB_ "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Recall that the original example, as reproduced below, was in SCREAMCASE:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "args0": [
              "./../code/fib1.f"
            ],
            "directive_name": "literalinclude",
            "inner": {
              "inline": [],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "With the standard approach, the subroutine exposed to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "python"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "fib"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and not "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "FIB"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". This means we have a few options. One approach (where possible) is to lowercase the original Fortran file with say:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "args0": [
              "bash"
            ],
            "directive_name": "code-block",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "tr \" [ : upper : ] \" \" [ : lower : ] \" < fib1.f > fib1.f python - n numpy.f2py fib1.f - m fib2 meson - - wipe builddir meson compile - C builddir cd builddir python - c ' import fib2 ' "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "However this requires the ability to modify the source which is not always possible. The easiest way to solve this is to let "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "f2py"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " deal with it:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "args0": [
              "bash"
            ],
            "directive_name": "code-block",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "python - n numpy.f2py fib1.f - m fib2 - - lower meson - - wipe builddir meson compile - C builddir cd builddir python - c ' import fib2 ' "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        }
      ],
      "title": "Fibonacci Walkthrough (F77)"
    },
    {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "A major pain point in the workflow defined above, is the manual tracking of inputs. Although it would require more effort to figure out the actual outputs for reasons discussed in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "f2py-bldsys"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "However, we can augment our workflow in a straightforward to take into account files for which the outputs are known when the build system is set up."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "args0": [
              "./../code/meson_upd.build"
            ],
            "directive_name": "literalinclude",
            "inner": {
              "inline": [],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "This can be compiled and run as before."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "args0": [
              "bash"
            ],
            "directive_name": "code-block",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "rm - rf builddir meson setup builddir meson compile - C builddir cd builddir python - c \" import numpy as np; import fibby; a = np.zeros ( 9); fibby.fib ( a); print ( a) \" # [ 0. 1. 1. 2. 3. 5. 8. 13. 21.] "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        }
      ],
      "title": "Automating wrapper generation"
    },
    {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "It is worth keeping in mind the following:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": [
                              "meson"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " will default to passing "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "-fimplicit-none"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " under "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "gfortran"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " by   default, which differs from that of the standard "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "np.distutils"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " behaviour"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        },
        {
          "data": {
            "children": [
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "It is not possible to use SCREAMCASE in this context, so either the contents   of the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              ".f"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " file or the generated wrapper "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              ".c"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " needs to be lowered to   regular letters; which can be facilitated by the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "--lower"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " option of   "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "F2PY"
                            ]
                          },
                          "type": "Verbatim"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        }
      ],
      "title": "Salient points"
    }
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": null,
  "item_line": null,
  "item_type": null,
  "ordered_sections": [],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": null
  }
}