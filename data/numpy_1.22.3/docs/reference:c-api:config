{
  "_content": {},
  "aliases": [],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "args0": [],
            "directive_name": "sectionauthor",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "Travis E. Oliphant "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "When NumPy is built, information about system configuration is recorded, and is made available for extension modules using NumPy's C API.  These are mostly defined in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpyconfig.h"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " (included in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ndarrayobject.h"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "). The public symbols are prefixed by "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "NPY_*"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". NumPy also offers some functions for querying information about the platform in use."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "For private use, NumPy also constructs a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "config.h"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " in the NumPy include directory, which is not exported by NumPy (that is a python extension which use the numpy C API will not see those symbols), to avoid namespace pollution."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": "System configuration"
    },
    {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "NPY_SIZEOF_{CTYPE}"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " constants are defined so that sizeof information is available to the pre-processor."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "args0": [
              "NPY_SIZEOF_SHORT"
            ],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "sizeof ( short) "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [
              "NPY_SIZEOF_INT"
            ],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "sizeof ( int) "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [
              "NPY_SIZEOF_LONG"
            ],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "sizeof ( long) "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [
              "NPY_SIZEOF_LONGLONG"
            ],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "sizeof ( longlong) where longlong is defined appropriately on the platform. "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "NPY_SIZEOF_PY_LONG_LONG "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [
              "NPY_SIZEOF_FLOAT"
            ],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "sizeof ( float) "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [
              "NPY_SIZEOF_DOUBLE"
            ],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "sizeof ( double) "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "NPY_SIZEOF_LONG_DOUBLE "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [
              "NPY_SIZEOF_LONGDOUBLE"
            ],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "sizeof ( longdouble) "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "NPY_SIZEOF_PY_INTPTR_T "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [
              "NPY_SIZEOF_INTP"
            ],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "Size of a pointer on this platform ( sizeof ( void \\*)) "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        }
      ],
      "title": "Data type sizes"
    },
    {
      "children": [
        {
          "data": {
            "args0": [],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "NPY_CPU_X86 "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "NPY_CPU_AMD64 "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "NPY_CPU_IA64 "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "NPY_CPU_PPC "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "NPY_CPU_PPC64 "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "NPY_CPU_SPARC "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "NPY_CPU_SPARC64 "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "NPY_CPU_S390 "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [
              "NPY_CPU_PARISC"
            ],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": ".. versionadded : : 1.3.0 CPU architecture of the platform; only one of the above is defined. Defined in ``numpy / npy_cpu.h`` "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "NPY_LITTLE_ENDIAN "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "NPY_BIG_ENDIAN "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [
              "NPY_BYTE_ORDER"
            ],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": ".. versionadded : : 1.3.0 Portable alternatives to the ``endian.h`` macros of GNU Libc. If big endian, : c : data : `NPY_BYTE_ORDER` == : c : data : `NPY_BIG_ENDIAN`, and similarly for little endian architectures. Defined in ``numpy / npy_endian.h``. "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [
              "int PyArray_GetEndianness()"
            ],
            "directive_name": "c:function",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": ".. versionadded : : 1.3.0 Returns the endianness of the current platform. One of : c : data : `NPY_CPU_BIG`, : c : data : `NPY_CPU_LITTLE`, or : c : data : `NPY_CPU_UNKNOWN_ENDIAN`. .. c : macro : : NPY_CPU_BIG .. c : macro : : NPY_CPU_LITTLE .. c : macro : : NPY_CPU_UNKNOWN_ENDIAN "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        }
      ],
      "title": "Platform information"
    },
    {
      "children": [
        {
          "data": {
            "args0": [],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "NPY_LIKELY "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "NPY_UNLIKELY "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "NPY_UNUSED "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        }
      ],
      "title": "Compiler directives"
    },
    {
      "children": [
        {
          "data": {
            "args0": [],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "NPY_INTERRUPT_H "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "NPY_SIGSETJMP "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "NPY_SIGLONGJMP "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "NPY_SIGJMP_BUF "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "NPY_SIGINT_ON "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [],
            "directive_name": "c:macro",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "NPY_SIGINT_OFF "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        }
      ],
      "title": "Interrupt Handling"
    }
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": null,
  "item_line": null,
  "item_type": null,
  "ordered_sections": [],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": null
  }
}