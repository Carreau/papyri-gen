{
  "_content": {},
  "aliases": [],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "placeholder": "target",
            "value": ".. _new-or-different:"
          },
          "type": "Unimplemented"
        },
        {
          "data": {
            "args0": [],
            "directive_name": "currentmodule",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "numpy.random "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        }
      ],
      "title": null
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "inline": [
                  {
                    "data": {
                      "value": "The Box - Muller method used to produce NumPy ' s normals is no longer available in `Generator`. It is not possible to reproduce the exact random values using ``Generator`` for the normal distribution or any other distribution that relies on the normal such as the `Generator.gamma` or `Generator.standard_t`. If you require bitwise backward compatible streams, use `RandomState`, i.e., `RandomState.gamma` or `RandomState.standard_t`. "
                    },
                    "type": "Words"
                  }
                ],
                "inner": []
              }
            ],
            "kind": "warning",
            "title": ""
          },
          "type": "Admonition"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Quick comparison of legacy "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "mtrand <legacy>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " to the new "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "Generator"
                },
                "type": "Directive"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "================== ==================== ============= Feature            Older Equivalent     Notes ------------------ -------------------- ------------- "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "~.Generator"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": "      "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "~.RandomState"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": "      "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Generator"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " requires a stream                                         source, called a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "BitGenerator"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": "                                         A number of these are provided.                                         "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "RandomState"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " uses                                         the Mersenne Twister "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "~.MT19937"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " by                                         default, but can also be instantiated                                         with any BitGenerator. ------------------ -------------------- ------------- "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "random"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "         "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "random_sample"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ",   Access the values in a BitGenerator,                    "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "rand"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "             convert them to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "float64"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " in the                                         interval "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "[0.0.,"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " `` 1.0)``.                                         In addition to the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "size"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " kwarg, now                                         supports "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "dtype='d'"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "dtype='f'"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ",                                         and an "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "out"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " kwarg to fill a user-                                         supplied array."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": [
              "Many other distributions are also",
              "supported."
            ]
          },
          "type": "BlockQuote"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "------------------ -------------------- ------------- "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "integers"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "       "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "randint"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ",         Use the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "endpoint"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " kwarg to adjust                    "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "random_integers"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "  the inclusion or exclution of the                                         "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "high"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " interval endpoint ================== ==================== ============="
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "And in more detail:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "Simulate from the complex normal distribution   ("
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "~.Generator.complex_normal"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ")"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "The normal, exponential and gamma generators use 256-step Ziggurat   methods which are 2-10 times faster than NumPy's default implementation in   "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "~.Generator.standard_normal"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ", "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "~.Generator.standard_exponential"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " or   "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "~.Generator.standard_gamma"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        },
        {
          "data": {
            "args0": [
              "python"
            ],
            "directive_name": "ipython",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "from numpy.random import Generator, PCG64 import numpy.random rng = Generator ( PCG64 ( )) %timeit - n 1 rng.standard_normal ( 100000) %timeit - n 1 numpy.random.standard_normal ( 100000) "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [
              "python"
            ],
            "directive_name": "ipython",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "%timeit - n 1 rng.standard_exponential ( 100000) %timeit - n 1 numpy.random.standard_exponential ( 100000) "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [
              "python"
            ],
            "directive_name": "ipython",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "%timeit - n 1 rng.standard_gamma ( 3.0, 100000) %timeit - n 1 numpy.random.standard_gamma ( 3.0, 100000) "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "~.Generator.integers"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " is now the canonical way to generate integer   random numbers from a discrete uniform distribution. The "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "rand"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " and   "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "randn"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " methods are only available through the legacy "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "~.RandomState"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ".   This replaces both "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "randint"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " and the deprecated "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "random_integers"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "The Box-Muller method used to produce NumPy's normals is no longer available."
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "All bit generators can produce doubles, uint64s and   uint32s via CTypes ("
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "~PCG64.ctypes"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ") and CFFI ("
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "~PCG64.cffi"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ").   This allows these bit generators to be used in numba."
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "The bit generators can be used in downstream projects via   Cython."
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "Optional "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "dtype"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " argument that accepts "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "np.float32"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "np.float64"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "   to produce either single or double precision uniform random variables for   select distributions"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "value": [
                            {
                              "data": {
                                "inline": [
                                  {
                                    "data": {
                                      "value": "Uniforms ("
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "domain": null,
                                      "role": null,
                                      "value": "~.Generator.random"
                                    },
                                    "type": "Directive"
                                  },
                                  {
                                    "data": {
                                      "value": " and "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "domain": null,
                                      "role": null,
                                      "value": "~.Generator.integers"
                                    },
                                    "type": "Directive"
                                  },
                                  {
                                    "data": {
                                      "value": ")"
                                    },
                                    "type": "Words"
                                  }
                                ],
                                "inner": []
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "value": [
                            {
                              "data": {
                                "inline": [
                                  {
                                    "data": {
                                      "value": "Normals ("
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "domain": null,
                                      "role": null,
                                      "value": "~.Generator.standard_normal"
                                    },
                                    "type": "Directive"
                                  },
                                  {
                                    "data": {
                                      "value": ")"
                                    },
                                    "type": "Words"
                                  }
                                ],
                                "inner": []
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "value": [
                            {
                              "data": {
                                "inline": [
                                  {
                                    "data": {
                                      "value": "Standard Gammas ("
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "domain": null,
                                      "role": null,
                                      "value": "~.Generator.standard_gamma"
                                    },
                                    "type": "Directive"
                                  },
                                  {
                                    "data": {
                                      "value": ")"
                                    },
                                    "type": "Words"
                                  }
                                ],
                                "inner": []
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "value": [
                            {
                              "data": {
                                "inline": [
                                  {
                                    "data": {
                                      "value": "Standard Exponentials ("
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "domain": null,
                                      "role": null,
                                      "value": "~.Generator.standard_exponential"
                                    },
                                    "type": "Directive"
                                  },
                                  {
                                    "data": {
                                      "value": ")"
                                    },
                                    "type": "Words"
                                  }
                                ],
                                "inner": []
                              },
                              "type": "Paragraph"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "BulletList"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        },
        {
          "data": {
            "args0": [
              "python"
            ],
            "directive_name": "ipython",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "rng = Generator ( PCG64 ( 0)) rng.random ( 3, dtype= ' d ' ) rng.random ( 3, dtype= ' f ' ) "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "Optional "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "out"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " argument that allows existing arrays to be filled for   select distributions"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "value": [
                            {
                              "data": {
                                "inline": [
                                  {
                                    "data": {
                                      "value": "Uniforms ("
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "domain": null,
                                      "role": null,
                                      "value": "~.Generator.random"
                                    },
                                    "type": "Directive"
                                  },
                                  {
                                    "data": {
                                      "value": ")"
                                    },
                                    "type": "Words"
                                  }
                                ],
                                "inner": []
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "value": [
                            {
                              "data": {
                                "inline": [
                                  {
                                    "data": {
                                      "value": "Normals ("
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "domain": null,
                                      "role": null,
                                      "value": "~.Generator.standard_normal"
                                    },
                                    "type": "Directive"
                                  },
                                  {
                                    "data": {
                                      "value": ")"
                                    },
                                    "type": "Words"
                                  }
                                ],
                                "inner": []
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "value": [
                            {
                              "data": {
                                "inline": [
                                  {
                                    "data": {
                                      "value": "Standard Gammas ("
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "domain": null,
                                      "role": null,
                                      "value": "~.Generator.standard_gamma"
                                    },
                                    "type": "Directive"
                                  },
                                  {
                                    "data": {
                                      "value": ")"
                                    },
                                    "type": "Words"
                                  }
                                ],
                                "inner": []
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "value": [
                            {
                              "data": {
                                "inline": [
                                  {
                                    "data": {
                                      "value": "Standard Exponentials ("
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "domain": null,
                                      "role": null,
                                      "value": "~.Generator.standard_exponential"
                                    },
                                    "type": "Directive"
                                  },
                                  {
                                    "data": {
                                      "value": ")"
                                    },
                                    "type": "Words"
                                  }
                                ],
                                "inner": []
                              },
                              "type": "Paragraph"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "BulletList"
                  },
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "This allows multithreading to fill large arrays in chunks using suitable   BitGenerators in parallel."
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        },
        {
          "data": {
            "args0": [
              "python"
            ],
            "directive_name": "ipython",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "existing = np.zeros ( 4) rng.random ( out=existing [ : 2]) print ( existing) "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "Optional "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "axis"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " argument for methods like "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "~.Generator.choice"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ",   "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "~.Generator.permutation"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "~.Generator.shuffle"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " that controls which   axis an operation is performed over for multi-dimensional arrays."
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        },
        {
          "data": {
            "args0": [
              "python"
            ],
            "directive_name": "ipython",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "rng = Generator ( PCG64 ( 123456789)) a = np.arange ( 12).reshape ( ( 3, 4)) a rng.choice ( a, axis=1, size=5) rng.shuffle ( a, axis=1) # Shuffle in - place a "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        }
      ],
      "title": "What's New or Different"
    }
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": null,
  "item_line": null,
  "item_type": null,
  "ordered_sections": [],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": null
  }
}