{
  "_content": {},
  "aliases": [],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "argument": "numpy",
            "content": "",
            "name": "currentmodule",
            "options": []
          },
          "type": "BlockDirective"
        }
      ],
      "title": "Mathematical functions"
    },
    {
      "children": [
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    sin\n    cos\n    tan\n    arcsin\n    arccos\n    arctan\n    hypot\n    arctan2\n    degrees\n    radians\n    unwrap\n    deg2rad\n    rad2deg"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": "Trigonometric functions"
    },
    {
      "children": [
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    sinh\n    cosh\n    tanh\n    arcsinh\n    arccosh\n    arctanh"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": "Hyperbolic functions"
    },
    {
      "children": [
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    around\n    round_\n    rint\n    fix\n    floor\n    ceil\n    trunc"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": "Rounding"
    },
    {
      "children": [
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    prod\n    sum\n    nanprod\n    nansum\n    cumprod\n    cumsum\n    nancumprod\n    nancumsum\n    diff\n    ediff1d\n    gradient\n    cross\n    trapz"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": "Sums, products, differences"
    },
    {
      "children": [
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    exp\n    expm1\n    exp2\n    log\n    log10\n    log2\n    log1p\n    logaddexp\n    logaddexp2"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": "Exponents and logarithms"
    },
    {
      "children": [
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    i0\n    sinc"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": "Other special functions"
    },
    {
      "children": [
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    signbit\n    copysign\n    frexp\n    ldexp\n    nextafter\n    spacing"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": "Floating point routines"
    },
    {
      "children": [
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    lcm\n    gcd"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": "Rational routines"
    },
    {
      "children": [
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    add\n    reciprocal\n    positive\n    negative\n    multiply\n    divide\n    power\n    subtract\n    true_divide\n    floor_divide\n    float_power\n\n    fmod\n    mod\n    modf\n    remainder\n    divmod"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": "Arithmetic operations"
    },
    {
      "children": [
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    angle\n    real\n    imag\n    conj\n    conjugate"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": "Handling complex numbers"
    },
    {
      "children": [
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    maximum\n    fmax\n    amax\n    nanmax\n\n    minimum\n    fmin\n    amin\n    nanmin"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": "Extrema Finding"
    },
    {
      "children": [
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    convolve\n    clip\n\n    sqrt\n    cbrt\n    square\n\n    absolute\n    fabs\n    sign\n    heaviside\n\n    nan_to_num\n    real_if_close\n\n    interp"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": "Miscellaneous"
    }
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": null,
  "item_line": null,
  "item_type": null,
  "ordered_sections": [],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}