{
  "_content": {},
  "aliases": [],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "argument": "numpy",
            "content": "",
            "name": "currentmodule",
            "options": []
          },
          "type": "BlockDirective"
        }
      ],
      "title": null
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The NumPy 1.21.0 release highlights are"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "continued SIMD work covering more functions and platforms,"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "initial work on the new dtype infrastructure and casting,"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "universal2 wheels for Python 3.8 and Python 3.9 on Mac,"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "improved documentation,"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "improved annotations,"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "new "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "PCG64DXSM"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " bitgenerator for random numbers."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "In addition there are the usual large number of bug fixes and other improvements."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The Python versions supported for this release are 3.7-3.9. Official support for Python 3.10 will be added when it is released."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "There are unresolved problems compiling NumPy 1.20.0 with gcc-11.1."
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "Optimization level "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "domain": null,
                                  "role": null,
                                  "value": "-O3"
                                },
                                "type": "Directive"
                              },
                              {
                                "data": {
                                  "value": " results in many incorrect warnings when   running the tests."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "On some hardware NumPY will hang in an infinite loop."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ],
            "kind": "warning",
            "title": ""
          },
          "type": "Admonition"
        }
      ],
      "title": "NumPy 1.21.0 Release Notes"
    },
    {
      "children": [
        {
          "data": {
            "argument": "numpy.random",
            "content": "",
            "name": "currentmodule",
            "options": []
          },
          "type": "BlockDirective"
        }
      ],
      "title": "New functions"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Uses of the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "PCG64"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "BitGenerator"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " in a massively-parallel context have been shown to have statistical weaknesses that were not apparent at the first release in numpy 1.17. Most users will never observe this weakness and are safe to continue to use "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "PCG64"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". We have introduced a new "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "PCG64DXSM"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "BitGenerator"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " that will eventually become the new default "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "BitGenerator"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " implementation used by "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "default_rng"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " in future releases. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "PCG64DXSM"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " solves the statistical weakness while preserving the performance and the features of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "PCG64"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "See "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "upgrading-pcg64"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for more details."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "numpy",
            "content": "",
            "name": "currentmodule",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/18906",
                  "value": "gh-18906"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Add `PCG64DXSM` `BitGenerator`"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "shape"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " argument "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "api",
                              "module": "numpy",
                              "path": "numpy.unravel_index",
                              "version": "*"
                            },
                            "value": "unravel_index"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " cannot be passed   as "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "dims"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " keyword argument anymore. (Was deprecated in NumPy 1.16.)"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "("
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "target": "https://github.com/numpy/numpy/pull/17900",
                            "value": "gh-17900"
                          },
                          "type": "ExternalLink"
                        },
                        {
                          "data": {
                            "value": ")"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The function "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "PyUFunc_GenericFunction"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " has been disabled.   It was deprecated in NumPy 1.19.  Users should call the ufunc   directly using the Python API."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "("
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "target": "https://github.com/numpy/numpy/pull/18697",
                            "value": "gh-18697"
                          },
                          "type": "ExternalLink"
                        },
                        {
                          "data": {
                            "value": ")"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The function "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "PyUFunc_SetUsesArraysAsData"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " has been disabled.   It was deprecated in NumPy 1.19."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "("
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "target": "https://github.com/numpy/numpy/pull/18697",
                            "value": "gh-18697"
                          },
                          "type": "ExternalLink"
                        },
                        {
                          "data": {
                            "value": ")"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The class "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "PolyBase"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " has been removed (deprecated in numpy 1.9.0). Please   use the abstract "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "ABCPolyBase"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " class instead."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "("
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "target": "https://github.com/numpy/numpy/pull/18963",
                            "value": "gh-18963"
                          },
                          "type": "ExternalLink"
                        },
                        {
                          "data": {
                            "value": ")"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The unused "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "PolyError"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "PolyDomainError"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " exceptions are   removed."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "("
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "target": "https://github.com/numpy/numpy/pull/18963",
                            "value": "gh-18963"
                          },
                          "type": "ExternalLink"
                        },
                        {
                          "data": {
                            "value": ")"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        }
      ],
      "title": "Expired deprecations"
    },
    {
      "children": [],
      "title": "Deprecations"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "A "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "DeprecationWarning"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is now given if the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    ".dtype"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " attribute of an object passed into "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.dtype"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " or as a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "dtype=obj"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " argument is not a dtype. NumPy will stop attempting to recursively coerce the result of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    ".dtype"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/13578",
                  "value": "gh-13578"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "The ``.dtype`` attribute must return a ``dtype``"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "api",
                    "module": "numpy",
                    "path": "numpy.convolve",
                    "version": "*"
                  },
                  "value": "convolve"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "api",
                    "module": "numpy",
                    "path": "numpy.correlate",
                    "version": "*"
                  },
                  "value": "correlate"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " now emit a warning when there are case insensitive and/or inexact matches found for "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "mode"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " argument in the functions. Pass full "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "\"same\""
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "\"valid\""
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "\"full\""
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " strings instead of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "\"s\""
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "\"v\""
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "\"f\""
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "mode"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " argument."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/17492",
                  "value": "gh-17492"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Inexact matches for ``numpy.convolve`` and ``numpy.correlate`` are deprecated"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": [
                    "np.typeDict"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is a deprecated alias for "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.sctypeDict"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and has been so for over 14 years ("
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "6689502_"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": "). A deprecation warning will now be issued whenever getting "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.typeDict"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _6689502: https://github.com/numpy/numpy/commit/668950285c407593a368336ff2e737c5da84af7d"
          },
          "type": "Unimplemented"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/17586",
                  "value": "gh-17586"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "``np.typeDict`` has been formally deprecated"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "When an object raised an exception during access of the special attributes "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "__array__"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "__array_interface__"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", this exception was usually ignored. A warning is now given when the exception is anything but AttributeError. To silence the warning, the type raising the exception has to be adapted to raise an "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "AttributeError"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19001",
                  "value": "gh-19001"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Exceptions will be raised during array-like creation"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Four methods of the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "ndarray.ctypes"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " object have been deprecated, as they are (undocumentated) implementation artifacts of their respective properties."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The methods in question are:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": [
                              "_ctypes.get_data"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " (use "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "_ctypes.data"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " instead)"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": [
                              "_ctypes.get_shape"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " (use "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "_ctypes.shape"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " instead)"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": [
                              "_ctypes.get_strides"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " (use "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "_ctypes.strides"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " instead)"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": [
                              "_ctypes.get_as_parameter"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " (use "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "_ctypes._as_parameter_"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " instead)"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19031",
                  "value": "gh-19031"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Four ``ndarray.ctypes`` methods have been deprecated"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "shape"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " argument "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "api",
                              "module": "numpy",
                              "path": "numpy.unravel_index",
                              "version": "*"
                            },
                            "value": "numpy.unravel_index"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " cannot be passed   as "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "dims"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " keyword argument anymore. (Was deprecated in NumPy 1.16.)"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "("
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "target": "https://github.com/numpy/numpy/pull/17900",
                            "value": "gh-17900"
                          },
                          "type": "ExternalLink"
                        },
                        {
                          "data": {
                            "value": ")"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The function "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "PyUFunc_GenericFunction"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " has been disabled.   It was deprecated in NumPy 1.19.  Users should call the ufunc   directly using the Python API."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "("
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "target": "https://github.com/numpy/numpy/pull/18697",
                            "value": "gh-18697"
                          },
                          "type": "ExternalLink"
                        },
                        {
                          "data": {
                            "value": ")"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The function "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "PyUFunc_SetUsesArraysAsData"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " has been disabled.   It was deprecated in NumPy 1.19."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "("
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "target": "https://github.com/numpy/numpy/pull/18697",
                            "value": "gh-18697"
                          },
                          "type": "ExternalLink"
                        },
                        {
                          "data": {
                            "value": ")"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        }
      ],
      "title": "Expired deprecations"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The class "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "PolyBase"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " has been removed (deprecated in numpy 1.9.0). Please use the abstract "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ABCPolyBase"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " class instead."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Furthermore, the unused "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "PolyError"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "PolyDomainError"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " exceptions are removed from the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "api",
                    "module": "numpy",
                    "path": "numpy.polynomial",
                    "version": "*"
                  },
                  "value": "numpy.polynomial"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/18963",
                  "value": "gh-18963"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Remove deprecated ``PolyBase`` and unused ``PolyError`` and ``PolyDomainError``"
    },
    {
      "children": [],
      "title": "Compatibility notes"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The universal functions may now raise different errors on invalid input in some cases.  The main changes should be that a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "RuntimeError"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " was replaced with a more fitting "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "TypeError"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ".  When multiple errors were present in the same call, NumPy may now raise a different one."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/15271",
                  "value": "gh-15271"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Error type changes in universal functions"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "NumPy will now partially validate arguments before calling "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "__array_ufunc__"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". Previously, it was possible to pass on invalid arguments (such as a non-existing keyword argument) when dispatch was known to occur."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/15271",
                  "value": "gh-15271"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "``__array_ufunc__`` argument validation"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Previously, all positionally passed arguments were checked for "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "__array_ufunc__"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " support.  In the case of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "reduce"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "accumulate"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "reduceat"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " all arguments may be passed by position.  This means that when they were passed by position, they could previously have been asked to handle the ufunc call via "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "__array_ufunc__"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ".  Since this depended on the way the arguments were passed (by position or by keyword), NumPy will now only dispatch on the input and output array.  For example, NumPy will never dispatch on the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "where"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " array in a reduction such as "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.add.reduce"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/15271",
                  "value": "gh-15271"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "``__array_ufunc__`` and additional positional arguments"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Checked that "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "high - low >= 0"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.random.Generator.uniform"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". Raises "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ValueError"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " if "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "low > high"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". Previously out-of-order inputs were accepted and silently swapped, so that if "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "low > high"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", the value generated was "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "high + (low - high) * random()"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/17921",
                  "value": "gh-17921"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Validate input values in ``Generator.uniform``"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The default include paths when building a package with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.distutils"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " no longer include "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "/usr/include"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". This path is normally added by the compiler, and hardcoding it can be problematic. In case this causes a problem, please open an issue. A workaround is documented in PR 18658."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/18658",
                  "value": "gh-18658"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "``/usr/include`` removed from default include paths"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "When the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "dtype="
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " (or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "signature"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ") arguments to comparison ufuncs ("
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "equal"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "less"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", etc.) is used, this will denote the desired output dtype in the future. This means that:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "np.equal(2, 3, dtype=object)"
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              }
            ]
          },
          "type": "BlockQuote"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "will give a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "FutureWarning"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " that it will return an "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "object"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " array in the future, which currently happens for:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "np.equal(None, None, dtype=object)"
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              }
            ]
          },
          "type": "BlockQuote"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "due to the fact that "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.array(None)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is already an object array. (This also happens for some other dtypes.)"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Since comparisons normally only return boolean arrays, providing any other dtype will always raise an error in the future and give a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "DeprecationWarning"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " now."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/18718",
                  "value": "gh-18718"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Changes to comparisons with ``dtype=...``"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The universal function arguments "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "dtype"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "signature"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " which are also valid for reduction such as "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.add.reduce"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " (which is the implementation for "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.sum"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ") will now issue a warning when the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "dtype"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " provided is not a \"basic\" dtype."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "NumPy almost always ignored metadata, byteorder or time units on these inputs.  NumPy will now always ignore it and raise an error if byteorder or time unit changed. The following are the most important examples of changes which will give the error.  In some cases previously the information stored was not ignored, in all of these an error is now raised::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "# Previously ignored the byte-order (affect if non-native)\nnp.add(3, 5, dtype=\">i32\")\n\n# The biggest impact is for timedelta or datetimes:\narr = np.arange(10, dtype=\"m8[s]\")\n# The examples always ignored the time unit \"ns\":\nnp.add(arr, arr, dtype=\"m8[ns]\")\nnp.maximum.reduce(arr, dtype=\"m8[ns]\")\n\n# The following previously did use \"ns\" (as opposed to `arr.dtype`)\nnp.add(3, 5, dtype=\"m8[ns]\")  # Now return generic time units\nnp.maximum(arr, arr, dtype=\"m8[ns]\")  # Now returns \"s\" (from `arr`)"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The same applies for functions like "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.sum"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " which use these internally. This change is necessary to achieve consistent handling within NumPy."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If you run into these, in most cases pass for example "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "dtype=np.timedelta64"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " which clearly denotes a general "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "timedelta64"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " without any unit or byte-order defined.  If you need to specify the output dtype precisely, you may do so by either casting the inputs or providing an output array using "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "out="
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "NumPy may choose to allow providing an exact output "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "dtype"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " here in the future, which would be preceded by a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "FutureWarning"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/18718",
                  "value": "gh-18718"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Changes to ``dtype`` and ``signature`` arguments in ufuncs"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The behaviour for "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.ufunc(1.0, 1.0, signature=...)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.ufunc(1.0, 1.0, dtype=...)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " can now yield different loops in 1.21 compared to 1.20 because of changes in promotion. When "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "signature"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " was previously used, the casting check on inputs was relaxed, which could lead to downcasting inputs unsafely especially if combined with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "casting=\"unsafe\""
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Casting is now guaranteed to be safe.  If a signature is only partially provided, for example using "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "signature=(\"float64\", None, None)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", this could lead to no loop being found (an error). In that case, it is necessary to provide the complete signature to enforce casting the inputs. If "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "dtype=\"float64\""
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is used or only outputs are set (e.g. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "signature=(None, None, \"float64\")"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " the is unchanged. We expect that very few users are affected by this change."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Further, the meaning of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "dtype=\"float64\""
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " has been slightly modified and now strictly enforces only the correct output (and not input) DTypes. This means it is now always equivalent to::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "signature=(None, None, \"float64\")"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "(If the ufunc has two inputs and one output).  Since this could lead to no loop being found in some cases, NumPy will normally also search for the loop::      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "signature=(\"float64\", \"float64\", \"float64\")"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "if the first search failed. In the future, this behaviour may be customized to achieve the expected results for more complex ufuncs.  (For some universal functions such as "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.ldexp"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " inputs can have different DTypes.)"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/18880",
                  "value": "gh-18880"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Ufunc ``signature=...`` and ``dtype=`` generalization and ``casting``"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "NumPy distutils will now always add the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "-ffp-exception-behavior=strict"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " compiler flag when compiling with clang.  Clang defaults to a non-strict version, which allows the compiler to generate code that does not set floating point warnings/errors correctly."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19049",
                  "value": "gh-19049"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Distutils forces strict floating point model on clang"
    },
    {
      "children": [],
      "title": "C API changes"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "NumPy now normalizes the \"type tuple\" argument to the type resolver functions before calling it.  Note that in the use of this type resolver is legacy behaviour and NumPy will not do so when possible.  Calling "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ufunc->type_resolver"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "PyUFunc_DefaultTypeResolver"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is strongly discouraged and will now enforce a normalized type tuple if done.  Note that this does not affect providing a type resolver, which is expected to keep working in most circumstances.  If you have an unexpected use-case for calling the type resolver, please inform the NumPy developers so that a solution can be found."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/18718",
                  "value": "gh-18718"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Use of ``ufunc->type_resolver`` and \"type tuple\""
    },
    {
      "children": [],
      "title": "New Features"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "A "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "mypy_"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " plugin is now available for automatically assigning the (platform-dependent) precisions of certain "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "api",
                    "module": "numpy",
                    "path": "numpy.number",
                    "version": "*"
                  },
                  "value": "number"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " subclasses, including the likes of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "api",
                    "module": "numpy",
                    "path": "numpy.int64",
                    "version": "*"
                  },
                  "value": "int_"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "api",
                    "module": "numpy",
                    "path": "numpy.int64",
                    "version": "*"
                  },
                  "value": "intp"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "api",
                    "module": "numpy",
                    "path": "numpy.longlong",
                    "version": "*"
                  },
                  "value": "longlong"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ". See the documentation on "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "scalar types <arrays.scalars.built-in>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for a comprehensive overview of the affected classes."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Note that while usage of the plugin is completely optional, without it the precision of above-mentioned classes will be inferred as "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "~typing.Any"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "To enable the plugin, one must add it to their mypy "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "configuration file"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": ":"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "ini",
            "content": "[mypy]\nplugins = numpy.typing.mypy_plugin",
            "name": "code-block",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _mypy: http://mypy-lang.org/"
          },
          "type": "Unimplemented"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _configuration file: https://mypy.readthedocs.io/en/stable/config_file.html"
          },
          "type": "Unimplemented"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/17843",
                  "value": "gh-17843"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Added a mypy plugin for handling platform-specific ``numpy.number`` precisions"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "mypy_"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " plugin, introduced in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "numpy/numpy#17843"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": ", has been expanded: the plugin now removes annotations for platform-specific extended-precision types that are not available to the platform in question. For example, it will remove "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "~numpy.float128"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " when not available."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Without the plugin "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "all"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " extended-precision types will, as far as mypy is concerned, be available on all platforms."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "To enable the plugin, one must add it to their mypy "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "configuration file"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": ":"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "ini",
            "content": "[mypy]\nplugins = numpy.typing.mypy_plugin",
            "name": "code-block",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _mypy: http://mypy-lang.org/"
          },
          "type": "Unimplemented"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _configuration file: https://mypy.readthedocs.io/en/stable/config_file.html"
          },
          "type": "Unimplemented"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _`numpy/numpy#17843`: https://github.com/numpy/numpy/pull/17843"
          },
          "type": "Unimplemented"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/18322",
                  "value": "gh-18322"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Let the mypy plugin manage extended-precision ``numpy.number`` subclasses"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "A new "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "min_digits"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " argument has been added to the dragon4 float printing functions "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "api",
                    "module": "numpy",
                    "path": "numpy.format_float_positional",
                    "version": "*"
                  },
                  "value": "format_float_positional"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "api",
                    "module": "numpy",
                    "path": "numpy.format_float_scientific",
                    "version": "*"
                  },
                  "value": "format_float_scientific"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " . This kwd guarantees that at least the given number of digits will be printed when printing in unique=True mode, even if the extra digits are unnecessary to uniquely specify the value. It is the counterpart to the precision argument which sets the maximum number of digits to be printed. When unique=False in fixed precision mode, it has no effect and the precision argument fixes the number of digits."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/18629",
                  "value": "gh-18629"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "New ``min_digits`` argument for printing float values"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "api",
                    "module": "numpy",
                    "path": "numpy.f2py",
                    "version": "*"
                  },
                  "value": "f2py"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " can now parse abstract interface blocks."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/18695",
                  "value": "gh-18695"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "f2py now recognizes Fortran abstract interface blocks"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Autodetection of installed BLAS and LAPACK libraries can be bypassed by using the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "NPY_BLAS_LIBS"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "NPY_LAPACK_LIBS"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " environment variables. Instead, the link flags in these environment variables will be used directly, and the language is assumed to be F77.  This is especially useful in automated builds where the BLAS and LAPACK that are installed are known exactly.  A use case is replacing the actual implementation at runtime via stub library links."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "NPY_CBLAS_LIBS"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is set (optional in addition to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "NPY_BLAS_LIBS"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "), this will be used as well, by defining "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "HAVE_CBLAS"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and appending the environment variable content to the link flags."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/18737",
                  "value": "gh-18737"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "BLAS and LAPACK configuration via environment variables"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": [
                    "numpy.typing.NDArray"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " has been added, a runtime-subscriptable alias for "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.ndarray[Any, np.dtype[~Scalar]]"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". The new type alias can be used for annotating arrays with a given dtype and unspecified shape. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "1"
                  ]
                },
                "type": "Verbatim"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": [
                    "1"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " NumPy does not support the annotating of array shapes as of 1.21, this is expected to change in the future though (see "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://peps.python.org/pep-0646/",
                  "value": "Pep 646"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "A runtime-subcriptable alias has been added for ``ndarray``"
    },
    {
      "children": [
        {
          "data": {
            "argument": "python",
            "content": ">>> import numpy as np\n>>> import numpy.typing as npt\n\n>>> print(npt.NDArray)\nnumpy.ndarray[typing.Any, numpy.dtype[~ScalarType]]\n\n>>> print(npt.NDArray[np.float64])\nnumpy.ndarray[typing.Any, numpy.dtype[numpy.float64]]\n\n>>> NDArrayInt = npt.NDArray[np.int_]\n>>> a: NDArrayInt = np.arange(10)\n\n>>> def func(a: npt.ArrayLike) -> npt.NDArray[Any]:\n...     return np.array(a)",
            "name": "code-block",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/18935",
                  "value": "gh-18935"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Examples"
    },
    {
      "children": [],
      "title": "Improvements"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The size of the interval over which phases are unwrapped is no longer restricted to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "2 * pi"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". This is especially useful for unwrapping degrees, but can also be used for other intervals."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ">>> phase_deg = np.mod(np.linspace(0,720,19), 360) - 180\n>>> phase_deg\narray([-180., -140., -100.,  -60.,  -20.,   20.,   60.,  100.,  140.,\n       -180., -140., -100.,  -60.,  -20.,   20.,   60.,  100.,  140.,\n       -180.])\n\n>>> unwrap(phase_deg, period=360)\narray([-180., -140., -100.,  -60.,  -20.,   20.,   60.,  100.,  140.,\n        180.,  220.,  260.,  300.,  340.,  380.,  420.,  460.,  500.,\n        540.])"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/16987",
                  "value": "gh-16987"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Arbitrary ``period`` option for ``numpy.unwrap``"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "When "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.unique"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " operated on an array with multiple "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "NaN"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " entries, its return included a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "NaN"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for each entry that was "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "NaN"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " in the original array. This is now improved such that the returned array contains just one "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "NaN"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " as the last element."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Also for complex arrays all "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "NaN"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " values are considered equivalent (no matter whether the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "NaN"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is in the real or imaginary part). As the representant for the returned array the smallest one in the lexicographical order is chosen - see "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.sort"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for how the lexicographical order is defined for complex arrays."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/18070",
                  "value": "gh-18070"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "``np.unique`` now returns single ``NaN``"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The performance of Rayleigh and geometric random variate generation in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Generator"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " has improved. These are both transformation of exponential random variables and the slow log-based inverse cdf transformation has been replaced with the Ziggurat-based exponential variate generator."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This change breaks the stream of variates generated  when variates from either of these distributions are produced."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/18666",
                  "value": "gh-18666"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "``Generator.rayleigh`` and ``Generator.geometric`` performance improved"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "All placeholder annotations, that were previously annotated as "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "typing.Any"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", have been improved. Where appropriate they have been replaced with explicit function definitions, classes or other miscellaneous objects."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/18934",
                  "value": "gh-18934"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Placeholder annotations have been improved"
    },
    {
      "children": [],
      "title": "Performance improvements"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Integer division of NumPy arrays now uses "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://libdivide.com/",
                  "value": "libdivide"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": " when the divisor is a constant. With the usage of libdivide and other minor optimizations, there is a large speedup. The "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "//"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " operator and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.floor_divide"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " makes use of the new changes."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/17727",
                  "value": "gh-17727"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Improved performance in integer division of NumPy arrays"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": [
                    "np.save"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is now a lot faster for small arrays."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": [
                    "np.load"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is also faster for small arrays, but only when serializing with a version >= "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "(3, 0)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Both are done by removing checks that are only relevant for Python 2, while still maintaining compatibility with arrays which might have been created by Python 2."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/18657",
                  "value": "gh-18657"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Improve performance of ``np.save`` and ``np.load`` for small arrays"
    },
    {
      "children": [],
      "title": "Changes"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "When "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "api",
                    "module": "numpy",
                    "path": "numpy.ndarray",
                    "version": "*"
                  },
                  "value": "ndarray"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " subclasses are used on input to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "api",
                    "module": "numpy",
                    "path": "numpy.piecewise",
                    "version": "*"
                  },
                  "value": "piecewise"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ", they are passed on to the functions. The output will now be of the same subclass as well."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/18110",
                  "value": "gh-18110"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "`numpy.piecewise` output class now matches the input class"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "With the release of macOS 11.3, several different issues that numpy was encountering when using Accelerate Framework's implementation of BLAS and LAPACK should be resolved.  This change enables the Accelerate Framework as an option on macOS.  If additional issues are found, please file a bug report against Accelerate using the developer feedback assistant tool (https://developer.apple.com/bug-reporting/). We intend to address issues promptly and plan to continue supporting and updating our BLAS and LAPACK libraries."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/18874",
                  "value": "gh-18874"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Enable Accelerate Framework"
    }
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": null,
  "item_line": null,
  "item_type": null,
  "ordered_sections": [],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}