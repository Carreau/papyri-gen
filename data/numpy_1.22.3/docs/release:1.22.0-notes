{
  "_content": {},
  "aliases": [],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "argument": "numpy",
            "content": "",
            "name": "currentmodule",
            "options": []
          },
          "type": "BlockDirective"
        }
      ],
      "title": null
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "NumPy 1.22.0 is a big release featuring the work of 153 contributors spread over 609 pull requests. There have been many improvements, highlights are:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Annotations of the main namespace are essentially complete. Upstream is a   moving target, so there will likely be further improvements, but the major   work is done. This is probably the most user visible enhancement in this   release."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A preliminary version of the proposed Array-API is provided. This is a step   in creating a standard collection of functions that can be used across   applications such as CuPy and JAX."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "NumPy now has a DLPack backend. DLPack provides a common interchange format   for array (tensor) data."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "New methods for "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "quantile"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "percentile"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", and related functions. The new   methods provide a complete set of the methods commonly found in the   literature."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The universal functions have been refactored to implement most of   "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "NEP 43 <NEP43>"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ".  This also unlocks the ability to experiment with the   future DType API."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A new configurable allocator for use by downstream projects."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "These are in addition to the ongoing work to provide SIMD support for commonly used functions, improvements to F2PY, and better documentation."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The Python versions supported in this release are 3.8-3.10, Python 3.7 has been dropped. Note that the Mac wheels are now based on OS X 10.14 rather than 10.9 that was used in previous NumPy release cycles. 10.14 is the oldest release supported by Apple. Also note that 32 bit wheels are only provided for Python 3.8 and 3.9 on Windows, all other wheels are 64 bits on account of Ubuntu, Fedora, and other Linux distributions dropping 32 bit support. All 64 bit wheels are also linked with 64 bit integer OpenBLAS, which should fix the occasional problems encountered by folks using truly huge arrays."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "NumPy 1.22.0 Release Notes"
    },
    {
      "children": [],
      "title": "Expired deprecations"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Using the strings "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "\"Bytes0\""
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "\"Datetime64\""
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "\"Str0\""
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "\"Uint32\""
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "\"Uint64\""
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " as a dtype will now raise a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "TypeError"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19539",
                  "value": "gh-19539"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Deprecated numeric style dtype strings have been removed"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": [
                    "numpy.loads"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " was deprecated in v1.15, with the recommendation that users use "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "pickle.loads"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " instead.  "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ndfromtxt"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "mafromtxt"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " were both deprecated in v1.17 - users should use "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.genfromtxt"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " instead with the appropriate value for the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "usemask"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " parameter."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19615",
                  "value": "gh-19615"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Expired deprecations for ``loads``, ``ndfromtxt``, and ``mafromtxt`` in npyio"
    },
    {
      "children": [],
      "title": "Deprecations"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The misspelled keyword argument "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "delimitor"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.ma.mrecords.fromtextfile()"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " has been changed to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "delimiter"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", using it will emit a deprecation warning."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19921",
                  "value": "gh-19921"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Use delimiter rather than delimitor as kwarg in mrecords"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": [
                    "numpy.partition"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.argpartition"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " would previously accept boolean values for the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "kth"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " parameter, which would subsequently be converted into integers. This behavior has now been deprecated."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/20000",
                  "value": "gh-20000"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Passing boolean ``kth`` values to (arg-)partition has been deprecated"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.MachAr"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " class and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "finfo.machar <numpy.finfo>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " attribute have been deprecated. Users are encouraged to access the property if interest directly from the corresponding "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.finfo"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " attribute."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/20201",
                  "value": "gh-20201"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "The ``np.MachAr`` class has been deprecated"
    },
    {
      "children": [],
      "title": "Compatibility notes"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "NumPy now sets the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "-ftrapping-math"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " option on clang to enforce correct floating point error handling for universal functions.  Clang defaults to non-IEEE and C99 conform behaviour otherwise.  This change (using the equivalent but newer "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "-ffp-exception-behavior=strict"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ") was attempted in NumPy 1.21, but was effectively never used."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19479",
                  "value": "gh-19479"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Distutils forces strict floating point model on clang"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Floor division of complex types will now result in a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "TypeError"
                  ]
                },
                "type": "Verbatim"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "python",
            "content": ">>> a = np.arange(10) + 1j* np.arange(10)\n>>> a // 1\nTypeError: ufunc 'floor_divide' not supported for the input types...",
            "name": "code-block",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19135",
                  "value": "gh-19135"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Removed floor division support for complex types"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "When a function that respects "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.ndarray"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " subclasses is vectorized using "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.vectorize"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", the vectorized function will now be subclass-safe also for cases that a signature is given (i.e., when creating a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "gufunc"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "): the output class will be the same as that returned by the first call to the underlying function."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19356",
                  "value": "gh-19356"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "``numpy.vectorize`` functions now produce the same output class as the base function"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Python support has been dropped. This is rather strict, there are changes that require Python >= 3.8."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19665",
                  "value": "gh-19665"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Python 3.7 is no longer supported"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The repr of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.dtype({\"names\": [\"a\"], \"formats\": [int], \"offsets\": [2]})"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is now "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "dtype({'names': ['a'], 'formats': ['<i8'], 'offsets': [2], 'itemsize':\n10})"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", whereas spaces where previously omitted after colons and between fields."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The old behavior can be restored via "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.set_printoptions(legacy=\"1.21\")"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19687",
                  "value": "gh-19687"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "str/repr of complex dtypes now include space after punctuation"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Fixed a bug in the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "advance"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " method of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "PCG64DSXM"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "PCG64"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". The bug only affects results when the step was larger than "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "2^{64}"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " on platforms that do not support 128-bit integers(e.g., Windows and 32-bit Linux)."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/20049",
                  "value": "gh-20049"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Corrected ``advance`` in ``PCG64DSXM`` and ``PCG64``"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "There was bug in the generation of 32 bit floating point values from the uniform distribution that would result in the least significant bit of the random variate always being 0.  This has been fixed."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This change affects the variates produced by the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "random.Generator"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " methods "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "random"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "standard_normal"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "standard_exponential"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "standard_gamma"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", but only when the dtype is specified as "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.float32"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/20314",
                  "value": "gh-20314"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Change in generation of random 32 bit floating point variates"
    },
    {
      "children": [],
      "title": "C API changes"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The masked inner-loop selector is now never used.  A warning will be given in the unlikely event that it was customized."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We do not expect that any code uses this.  If you do use it, you must unset the selector on newer NumPy version.  Please also contact the NumPy developers, we do anticipate providing a new, more specific, mechanism."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The customization was part of a never-implemented feature to allow for faster masked operations."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19259",
                  "value": "gh-19259"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Masked inner-loops cannot be customized anymore"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The new header "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "experimental_public_dtype_api.h"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " allows to experiment with future API for improved universal function and especially user DType support. At this time it is advisable to experiment using the development version of NumPy since some changes are expected and new features will be unlocked."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19919",
                  "value": "gh-19919"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Experimental exposure of future DType and UFunc API"
    },
    {
      "children": [],
      "title": "New Features"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "As detailed in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "NEP 49"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": ", the function used for allocation of the data segment of a ndarray can be changed. The policy can be set globally or in a context. For more information see the NEP and the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "data_memory"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " reference docs. Also add a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "NUMPY_WARN_IF_NO_MEM_POLICY"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " override to warn on dangerous use of transfering ownership by setting "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "NPY_ARRAY_OWNDATA"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _`NEP 49`: https://numpy.org/neps/nep-0049.html"
          },
          "type": "Unimplemented"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/17582",
                  "value": "gh-17582"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "NEP 49 configurable allocators"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "An initial implementation of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "NEP 47"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " (adoption the array API standard) has been added as "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.array_api"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". The implementation is experimental and will issue a UserWarning on import, as the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "array API standard\n<https://data-apis.org/array-api/latest/index.html>"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " is still in draft state. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.array_api"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is a conforming implementation of the array API standard, which is also minimal, meaning that only those functions and behaviors that are required by the standard are implemented (see the NEP for more info). Libraries wishing to make use of the array API standard are encouraged to use "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.array_api"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " to check that they are only using functionality that is guaranteed to be present in standard conforming implementations."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _`NEP 47`: https://numpy.org/neps/nep-0047-array-api-standard.html"
          },
          "type": "Unimplemented"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/18585",
                  "value": "gh-18585"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Implementation of the NEP 47 (adopting the array API standard)"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This feature depends on "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "Doxygen_"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " in the generation process and on "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "Breathe_"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " to integrate it with Sphinx."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _`Doxygen`: https://www.doxygen.nl/index.html"
          },
          "type": "Unimplemented"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _`Breathe`: https://breathe.readthedocs.io/en/latest/"
          },
          "type": "Unimplemented"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/18884",
                  "value": "gh-18884"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Generate C/C++ API reference documentation from comments blocks is now possible"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "mypy_"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " plugin, introduced in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "numpy/numpy#17843"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": ", has again been expanded: the plugin now is now responsible for setting the platform-specific precision of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.ctypeslib.c_intp"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", the latter being used as data type for various "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.ndarray.ctypes"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " attributes."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Without the plugin, aforementioned type will default to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ctypes.c_int64"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "To enable the plugin, one must add it to their mypy "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "configuration file"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": ":"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "ini",
            "content": "[mypy]\nplugins = numpy.typing.mypy_plugin",
            "name": "code-block",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _mypy: http://mypy-lang.org/"
          },
          "type": "Unimplemented"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _configuration file: https://mypy.readthedocs.io/en/stable/config_file.html"
          },
          "type": "Unimplemented"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _`numpy/numpy#17843`: https://github.com/numpy/numpy/pull/17843"
          },
          "type": "Unimplemented"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19062",
                  "value": "gh-19062"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Assign the platform-specific ``c_intp`` precision via a mypy plugin"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Add a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ndarray.__dlpack__()"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " method which returns a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "dlpack"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " C structure wrapped in a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "PyCapsule"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". Also add a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np._from_dlpack(obj)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " function, where "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "obj"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " supports "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "__dlpack__()"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", and returns an "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ndarray"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19083",
                  "value": "gh-19083"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Add NEP 47-compatible dlpack support"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": [
                    "keepdims"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " argument is added to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.argmin"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.argmax"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ".  If set to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "True"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", the axes which are reduced are left in the result as dimensions with size one.  The resulting array has the same number of dimensions and will broadcast with the input array."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19211",
                  "value": "gh-19211"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "``keepdims`` optional argument added to ``numpy.argmin``, ``numpy.argmax``"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Computes the number of 1-bits in the absolute value of the input. This works on all the numpy integer types. Analogous to the builtin "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "int.bit_count"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "popcount"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " in C++."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "python",
            "content": ">>> np.uint32(1023).bit_count()\n10\n>>> np.int32(-127).bit_count()\n7",
            "name": "code-block",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19355",
                  "value": "gh-19355"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "``bit_count`` to compute the number of 1-bits in an integer"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ndim"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "axis"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " parameters are now also stored as attributes within each "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.AxisError"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " instance."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19459",
                  "value": "gh-19459"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "The ``ndim`` and ``axis`` attributes have been added to ``numpy.AxisError``"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": [
                    "numpy"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " added support for windows/arm64 target. Please note "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "OpenBLAS"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " support is not yet available for windows/arm64 target."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19513",
                  "value": "gh-19513"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Preliminary support for ``windows/arm64`` target"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "LoongArch is a new instruction set, numpy compilation failure on LoongArch architecture, so add the commit."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19527",
                  "value": "gh-19527"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Added support for LoongArch"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Clang-format is a C/C++ code formatter, together with the added "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    ".clang-format"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " file, it produces code close enough to the NumPy C_STYLE_GUIDE for general use. Clang-format version 12+ is required due to the use of several new features, it is available in Fedora 34 and Ubuntu Focal among other distributions."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19754",
                  "value": "gh-19754"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "A ``.clang-format`` file has been added"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Based on its counterpart in Python "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "float"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "int"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", the numpy floating point and integer types now support "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "float.is_integer"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". Returns "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "True"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " if the number is finite with integral value, and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "False"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " otherwise."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "python",
            "content": ">>> np.float32(-2.0).is_integer()\nTrue\n>>> np.float64(3.2).is_integer()\nFalse\n>>> np.int32(-2).is_integer()\nTrue",
            "name": "code-block",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19803",
                  "value": "gh-19803"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "``is_integer`` is now available to ``numpy.floating`` and ``numpy.integer``"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "A new symbolic parser has been added to f2py in order to correctly parse dimension specifications. The parser is the basis for future improvements and provides compatibility with Draft Fortran 202x."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19805",
                  "value": "gh-19805"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Symbolic parser for Fortran dimension specifications"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Mimicking "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://peps.python.org/pep-0585/",
                  "value": "Pep 585"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ", the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.ndarray"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.dtype"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.number"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " classes are now subscriptable for python 3.9 and later. Consequently, expressions that were previously only allowed in .pyi stub files or with the help of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "from __future__ import annotations"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " are now also legal during runtime."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "python",
            "content": ">>> import numpy as np\n>>> from typing import Any\n\n>>> np.ndarray[Any, np.dtype[np.float64]]\nnumpy.ndarray[typing.Any, numpy.dtype[numpy.float64]]",
            "name": "code-block",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19879",
                  "value": "gh-19879"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "``ndarray``, ``dtype`` and ``number`` are now runtime-subscriptable"
    },
    {
      "children": [],
      "title": "Improvements"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "All parameters in the can now take any "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "python:path-like object"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". This includes the likes of strings, bytes and objects implementing the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "__fspath__<os.PathLike.__fspath__>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " protocol."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/17530",
                  "value": "gh-17530"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "``ctypeslib.load_library`` can now take any path-like object"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The attributes "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "smallest_normal"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "smallest_subnormal"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " are available as an extension of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "finfo"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " class for any floating-point data type. To use these new attributes, write "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.finfo(np.float64).smallest_normal"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.finfo(np.float64).smallest_subnormal"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/18536",
                  "value": "gh-18536"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Add ``smallest_normal`` and ``smallest_subnormal`` attributes to ``finfo``"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": [
                    "numpy.linalg.qr"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is able to produce results for stacked matrices as inputs. Moreover, the implementation of QR decomposition has been shifted to C from Python."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19151",
                  "value": "gh-19151"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "``numpy.linalg.qr`` accepts stacked matrices as inputs"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": [
                    "numpy.fromregex"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " now accepts objects implementing the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "__fspath__<os.PathLike>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " protocol, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "e.g."
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "pathlib.Path"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19680",
                  "value": "gh-19680"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "``numpy.fromregex`` now accepts ``os.PathLike`` implementations"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": [
                    "quantile"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "percentile"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " now have have a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "method="
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " keyword argument supporting 13 different methods.  This replaces the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "interpolation="
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " keyword argument."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The methods are now aligned with nine methods which can be found in scientific literature and the R language.  The remaining methods are the previous discontinuous variations of the default \"linear\" one."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Please see the documentation of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.percentile"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for more information."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19857",
                  "value": "gh-19857"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Add new methods for ``quantile`` and ``percentile``"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "A number of the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "nan<x>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " functions previously lacked parameters that were present in their "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "<x>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "-based counterpart, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "e.g."
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "where"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " parameter was present in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.mean"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " but absent from "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.nanmean"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The following parameters have now been added to the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "nan<x>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " functions:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "nanmin: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "initial"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " & "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "where"
                            ]
                          },
                          "type": "Verbatim"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "nanmax: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "initial"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " & "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "where"
                            ]
                          },
                          "type": "Verbatim"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "nanargmin: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "keepdims"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " & "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "out"
                            ]
                          },
                          "type": "Verbatim"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "nanargmax: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "keepdims"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " & "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "out"
                            ]
                          },
                          "type": "Verbatim"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "nansum: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "initial"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " & "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "where"
                            ]
                          },
                          "type": "Verbatim"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "nanprod: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "initial"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " & "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "where"
                            ]
                          },
                          "type": "Verbatim"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "nanmean: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "where"
                            ]
                          },
                          "type": "Verbatim"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "nanvar: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "where"
                            ]
                          },
                          "type": "Verbatim"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "nanstd: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "where"
                            ]
                          },
                          "type": "Verbatim"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/20027",
                  "value": "gh-20027"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Missing parameters have been added to the ``nan<x>`` functions"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Starting from the 1.20 release, PEP 484 type annotations have been included for parts of the NumPy library; annotating the remaining functions being a work in progress. With the release of 1.22 this process has been completed for the main NumPy namespace, which is now fully annotated."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Besides the main namespace, a limited number of sub-packages contain annotations as well. This includes, among others, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.testing"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.linalg"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.random"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " (available since 1.21)."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/20217",
                  "value": "gh-20217"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Annotating the main Numpy namespace"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "By leveraging Intel Short Vector Math Library (SVML), 18 umath functions ("
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "exp2"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "log2"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "log10"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "expm1"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "log1p"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "cbrt"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "sin"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "cos"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "tan"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "arcsin"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "arccos"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "arctan"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "sinh"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "cosh"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "tanh"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "arcsinh"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "arccosh"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "arctanh"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ") are vectorized using AVX-512 instruction set for both single and double precision implementations.  This change is currently enabled only for Linux users and on processors with AVX-512 instruction set.  It provides an average speed up of 32x and 14x for single and double precision functions respectively."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/19478",
                  "value": "gh-19478"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "Vectorize umath module using AVX-512"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Update the OpenBLAS used in testing and in wheels to v0.3.18"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "("
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpy/pull/20058",
                  "value": "gh-20058"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ")"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": "OpenBLAS v0.3.18"
    }
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": null,
  "item_line": null,
  "item_type": null,
  "ordered_sections": [],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": null
  }
}