{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Covariance indicates the level to which two variables vary together. If we examine N-dimensional samples, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "X = [x_1, x_2, ... x_N]^T"
                  ]
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": ", then the covariance matrix element "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "C_{ij}"
                  ]
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " is the covariance of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "x_i"
                  ]
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "x_j"
                  ]
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": ". The element "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "C_{ii}"
                  ]
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " is the variance of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "x_i"
                  ]
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "See the notes for an outline of the algorithm."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Assume that the observations are in the columns of the observation array "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "m",
                    "version": null
                  },
                  "value": "m"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " and let "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "f = fweights"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "a = aweights"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for brevity. The steps to compute the weighted covariance are as follows::      "
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ">>> m = np.arange(10, dtype=np.float64)\n>>> f = np.arange(10) * 2\n>>> a = np.arange(10) ** 2.\n>>> ddof = 1\n>>> w = f * a\n>>> v1 = np.sum(w)\n>>> v2 = np.sum(w * a)\n>>> m -= np.sum(m * w, axis=None, keepdims=True) / v1\n>>> cov = np.dot(m * w, m.T) * v1 / (v1**2 - ddof * v2)"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Note that when "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "a == 1"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", the normalization factor "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "v1 / (v1**2 - ddof * v2)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " goes over to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "1 / (np.sum(f) - ddof)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " as it should."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "A 1-D or 2-D array containing multiple variables and observations. Each row of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "m",
                          "version": null
                        },
                        "value": "m"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " represents a variable, and each column a single observation of all those variables. Also see "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "rowvar",
                          "version": null
                        },
                        "value": "rowvar"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " below."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "m",
            "type_": "array_like"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "An additional set of variables and observations. "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "y",
                          "version": null
                        },
                        "value": "y"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " has the same form as that of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "m",
                          "version": null
                        },
                        "value": "m"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "y",
            "type_": "array_like, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "rowvar",
                          "version": null
                        },
                        "value": "rowvar"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is True (default), then each row represents a variable, with observations in the columns. Otherwise, the relationship is transposed: each column represents a variable, while the rows contain observations."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "rowvar",
            "type_": "bool, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Default normalization (False) is by "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "(N - 1)"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", where "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "N"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " is the number of observations given (unbiased estimate). If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "bias",
                          "version": null
                        },
                        "value": "bias"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is True, then normalization is by "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "N"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ". These values can be overridden by using the keyword "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "ddof"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " in numpy versions >= 1.5."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "bias",
            "type_": "bool, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If not "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "None"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " the default value implied by "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "bias",
                          "version": null
                        },
                        "value": "bias"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is overridden. Note that "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "ddof=1"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " will return the unbiased estimate, even if both "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "fweights",
                          "version": null
                        },
                        "value": "fweights"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "aweights",
                          "version": null
                        },
                        "value": "aweights"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " are specified, and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "ddof=0"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " will return the simple average. See the notes for the details. The default value is "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "None"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "inline": [
                        {
                          "data": {
                            "value": "1.5 "
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    }
                  ],
                  "kind": "versionadded",
                  "title": "TODO"
                },
                "type": "Admonition"
              }
            ],
            "param": "ddof",
            "type_": "int, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "1-D array of integer frequency weights; the number of times each observation vector should be repeated."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "inline": [
                        {
                          "data": {
                            "value": "1.10 "
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    }
                  ],
                  "kind": "versionadded",
                  "title": "TODO"
                },
                "type": "Admonition"
              }
            ],
            "param": "fweights",
            "type_": "array_like, int, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "1-D array of observation vector weights. These relative weights are typically large for observations considered \"important\" and smaller for observations considered less \"important\". If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "ddof=0"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " the array of weights can be used to assign probabilities to observation vectors."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "inline": [
                        {
                          "data": {
                            "value": "1.10 "
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    }
                  ],
                  "kind": "versionadded",
                  "title": "TODO"
                },
                "type": "Admonition"
              }
            ],
            "param": "aweights",
            "type_": "array_like, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Data-type of the result. By default, the return data-type will have at least "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "numpy",
                          "path": "numpy.float64",
                          "version": "1.22.3"
                        },
                        "value": "numpy.float64"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " precision."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "inline": [
                        {
                          "data": {
                            "value": "1.20 "
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    }
                  ],
                  "kind": "versionadded",
                  "title": "TODO"
                },
                "type": "Admonition"
              }
            ],
            "param": "dtype",
            "type_": "data-type, optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The covariance matrix of the variables."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "out",
            "type_": "ndarray"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Estimate a covariance matrix, given data and weights."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "numpy.cov"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Consider two variables, "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "x_0"
                ]
              },
              "type": "Math"
            },
            {
              "data": {
                "value": " and "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "x_1"
                ]
              },
              "type": "Math"
            },
            {
              "data": {
                "value": ", which correlate perfectly, but in opposite directions:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "x",
              "numpy._ArrayOrScalarCommon.T",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "T",
              "numpy._ArrayOrScalarCommon.T",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "x",
              "numpy._ArrayOrScalarCommon.T",
              ""
            ]
          ],
          "out": "array([[0, 1, 2],\n       [2, 1, 0]])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Note how "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "x_0"
                ]
              },
              "type": "Math"
            },
            {
              "data": {
                "value": " increases while "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "x_1"
                ]
              },
              "type": "Math"
            },
            {
              "data": {
                "value": " decreases. The covariance matrix shows this clearly:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "cov",
              "numpy.cov",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              "numpy._ArrayOrScalarCommon.T",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[ 1., -1.],\n       [-1.,  1.]])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Note that element "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "C_{0,1}"
                ]
              },
              "type": "Math"
            },
            {
              "data": {
                "value": ", which shows the correlation between "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "x_0"
                ]
              },
              "type": "Math"
            },
            {
              "data": {
                "value": " and "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "x_1"
                ]
              },
              "type": "Math"
            },
            {
              "data": {
                "value": ", is negative."
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Further, note how "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "x"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": " and "
              },
              "type": "Words"
            },
            {
              "data": {
                "exists": true,
                "kind": "local",
                "reference": {
                  "kind": "local",
                  "module": null,
                  "path": "y",
                  "version": null
                },
                "value": "y"
              },
              "type": "Link"
            },
            {
              "data": {
                "value": " are combined:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "x",
              "builtins.list",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "2.1",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "4.3",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "y",
              "builtins.list",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "1.1",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "0.12",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "X",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "stack",
              "numpy.stack",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              "builtins.list",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "y",
              "builtins.list",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "axis",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "cov",
              "numpy.cov",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "X",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[11.71      , -4.286     ], # may vary\n       [-4.286     ,  2.144133]])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "cov",
              "numpy.cov",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              "builtins.list",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "y",
              "builtins.list",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[11.71      , -4.286     ], # may vary\n       [-4.286     ,  2.144133]])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "cov",
              "numpy.cov",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              "builtins.list",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array(11.71)"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/numpy/lib/function_base.py",
  "item_line": 2462,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "refs": [
    "builtins.list",
    "corrcoef",
    "numpy",
    "numpy._ArrayOrScalarCommon.T",
    "numpy.array",
    "numpy.cov",
    "numpy.ndarray",
    "numpy.stack"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Normalized covariance matrix"
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "corrcoef",
        "ref": "numpy.corrcoef"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "cov(m, y=None, rowvar=True, bias=False, ddof=None, fweights=None, aweights=None, *, dtype=None)"
  }
}