{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.fft.hfft",
                    "version": "1.22.3"
                  },
                  "value": "hfft"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "/"
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.fft.ihfft",
                    "version": "1.22.3"
                  },
                  "value": "ihfft"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " are a pair analogous to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.fft.rfft",
                    "version": "1.22.3"
                  },
                  "value": "rfft"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "/"
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.fft.irfft",
                    "version": "1.22.3"
                  },
                  "value": "irfft"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ", but for the opposite case: here the signal has Hermitian symmetry in the time domain and is real in the frequency domain. So here it's "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.fft.hfft",
                    "version": "1.22.3"
                  },
                  "value": "hfft"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " for which you must supply the length of the result if it is to be odd:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "even: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "ihfft(hfft(a, 2*len(a) - 2)) == a"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", within roundoff error,"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "odd: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "ihfft(hfft(a, 2*len(a) - 1)) == a"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", within roundoff error."
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Input array."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "a",
            "type_": "array_like"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Length of the inverse FFT, the number of points along transformation axis in the input to use.  If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "n",
                          "version": null
                        },
                        "value": "n"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is smaller than the length of the input, the input is cropped.  If it is larger, the input is padded with zeros. If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "n",
                          "version": null
                        },
                        "value": "n"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is not given, the length of the input along the axis specified by "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "axis",
                          "version": null
                        },
                        "value": "axis"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is used."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "n",
            "type_": "int, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Axis over which to compute the inverse FFT. If not given, the last axis is used."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "axis",
            "type_": "int, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "children": [
                    {
                      "inline": [
                        {
                          "data": {
                            "value": "1.10.0 "
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    }
                  ],
                  "kind": "versionadded",
                  "title": "TODO"
                },
                "type": "Admonition"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Normalization mode (see "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "numpy",
                          "path": "numpy.fft",
                          "version": "1.22.3"
                        },
                        "value": "numpy.fft"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": "). Default is \"backward\". Indicates which direction of the forward/backward pair of transforms is scaled and with what normalization factor."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "inline": [
                        {
                          "data": {
                            "value": "The \" backward \" , \" forward \" values were added. "
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    }
                  ],
                  "kind": "versionadded",
                  "title": "1.20.0"
                },
                "type": "Admonition"
              }
            ],
            "param": "norm",
            "type_": "{\"backward\", \"ortho\", \"forward\"}, optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The truncated or zero-padded input, transformed along the axis indicated by "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "axis",
                          "version": null
                        },
                        "value": "axis"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ", or the last one if "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "axis",
                          "version": null
                        },
                        "value": "axis"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is not specified. The length of the transformed axis is "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "n//2 + 1"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "out",
            "type_": "complex ndarray"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Compute the inverse FFT of a signal that has Hermitian symmetry."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "numpy.fft.ihfft"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "spectrum",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "15",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "fft",
              "numpy.fft",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "ifft",
              "numpy.fft.ifft",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "spectrum",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([1.+0.j,  2.+0.j,  3.+0.j,  4.+0.j,  3.+0.j,  2.+0.j]) # may vary"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "fft",
              "numpy.fft",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "ihfft",
              "numpy.fft.ihfft",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "spectrum",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([ 1.-0.j,  2.-0.j,  3.-0.j,  4.-0.j]) # may vary"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/numpy/fft/_pocketfft.py",
  "item_line": 615,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "refs": [
    "hfft",
    "irfft",
    "numpy",
    "numpy.array",
    "numpy.fft",
    "numpy.fft.ifft",
    "numpy.fft.ihfft",
    "numpy.ndarray"
  ],
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "hfft",
        "ref": "numpy.fft.hfft"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "irfft",
        "ref": "numpy.fft.irfft"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "ihfft(a, n=None, axis=-1, norm=None)"
  }
}