{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "If you need a stricter way to identify a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "numerical"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " scalar, use "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "isinstance(x, numbers.Number)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", as that returns "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "False"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for most non-numerical elements such as strings."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "In most cases "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.ndim(x) == 0"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " should be used instead of this function, as that will also return true for 0d arrays. This is how numpy overloads functions in the style of the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "dx"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " arguments to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.gradient",
                    "version": "1.22.3"
                  },
                  "value": "gradient"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " and the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "bins"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " argument to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.histogram",
                    "version": "1.22.3"
                  },
                  "value": "histogram"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ". Some key differences:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "+--------------------------------------+---------------+-------------------+ | x                                    "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "|``isscalar(x)``|``np.ndim(x) == 0``|"
                },
                "type": "SubstitutionRef"
              },
              {
                "data": {
                  "value": " +======================================+===============+===================+ | PEP 3141 numeric objects (including  | "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "True"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "      | "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "True"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "          | | builtins)                            |               |                   | +--------------------------------------+---------------+-------------------+ | builtin string and buffer objects    | "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "True"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "      | "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "True"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "          | +--------------------------------------+---------------+-------------------+ | other builtin objects, like          | "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "False"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "     | "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "True"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "          | | "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "api",
                    "module": "pathlib",
                    "path": "pathlib.Path",
                    "version": "*"
                  },
                  "value": "pathlib.Path"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "Exception"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": ",         |               |                   | | the result of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "api",
                    "module": "re",
                    "path": "re.compile",
                    "version": "*"
                  },
                  "value": "re.compile"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "           |               |                   | +--------------------------------------+---------------+-------------------+ | third-party objects like             | "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "False"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "     | "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "True"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "          | | "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "api",
                    "module": "matplotlib",
                    "path": "matplotlib.figure.Figure",
                    "version": "*"
                  },
                  "value": "matplotlib.figure.Figure"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "           |               |                   | +--------------------------------------+---------------+-------------------+ | zero-dimensional numpy arrays        | "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "False"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "     | "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "True"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "          | +--------------------------------------+---------------+-------------------+ | other numpy arrays                   | "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "False"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "     | "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "False"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "         | +--------------------------------------+---------------+-------------------+ | "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "list"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "tuple"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": ", and other sequence  | "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "False"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "     | "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "False"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "         | | objects                              |               |                   | +--------------------------------------+---------------+-------------------+"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Input argument, can be of any type and shape."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "element",
            "type_": "any"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "True if "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "element",
                          "version": null
                        },
                        "value": "element"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is a scalar type, False if it is not."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "val",
            "type_": "bool"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Returns True if the type of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "element",
                    "version": null
                  },
                  "value": "element"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is a scalar type."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "numpy.isscalar"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "isscalar",
              "numpy.isscalar",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "3.1",
              "",
              "mf"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "True"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "isscalar",
              "numpy.isscalar",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "3.1",
              "",
              "mf"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "False"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "isscalar",
              "numpy.isscalar",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "3.1",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "False"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "isscalar",
              "numpy.isscalar",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "False",
              "builtins.bool",
              "kc"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "True"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "isscalar",
              "numpy.isscalar",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "numpy",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "True"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "NumPy supports PEP 3141 numbers:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "fractions",
              "fractions",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "Fraction",
              "fractions.Fraction",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "isscalar",
              "numpy.isscalar",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "Fraction",
              "fractions.Fraction",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "17",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "True"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "numbers",
              "numbers",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "Number",
              "numbers.Number",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "isscalar",
              "numpy.isscalar",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "Number",
              "numbers.Number",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "True"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/numpy/core/numeric.py",
  "item_line": 1859,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "refs": [
    "builtins.bool",
    "fractions",
    "fractions.Fraction",
    "ndim",
    "numbers",
    "numbers.Number",
    "numpy",
    "numpy.array",
    "numpy.isscalar"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Get the number of dimensions of an array"
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "ndim",
        "ref": "numpy.ndim"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "isscalar(element)"
  }
}