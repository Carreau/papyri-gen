{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Message to display."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "mesg",
            "type_": "str"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Device to write message. If None, defaults to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "sys.stdout"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " which is very similar to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "print"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ". "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "device",
                          "version": null
                        },
                        "value": "device"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " needs to have "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "write()"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "flush()"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " methods."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "device",
            "type_": "object"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Option whether to print a line feed or not. Defaults to True."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "linefeed",
            "type_": "bool, optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "device",
                          "version": null
                        },
                        "value": "device"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " does not have a "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "write()"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " or "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "flush()"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " method."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "AttributeError"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Display a message on a device."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "numpy.disp"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Besides "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "sys.stdout"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": ", a file-like object can also be used as it has both required methods:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "io",
              "io",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "StringIO",
              "io.StringIO",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "buf",
              "io.StringIO",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "StringIO",
              "io.StringIO",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "disp",
              "numpy.lib.function_base.disp",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "u",
              "builtins.str",
              "sa"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "\"",
              "",
              "s1"
            ],
            [
              "Display",
              null,
              "s1"
            ],
            [
              "\"",
              "",
              "s1"
            ],
            [
              " in a file",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "device",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "buf",
              "io.StringIO",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "buf",
              "io.StringIO",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "getvalue",
              "builtins.StringIO.getvalue",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "'\"Display\" in a file\\n'"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/numpy/lib/function_base.py",
  "item_line": 1932,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Raises",
    "Examples"
  ],
  "references": null,
  "refs": [
    "builtins.StringIO.getvalue",
    "builtins.str",
    "io",
    "_io.StringIO",
    "numpy",
    "numpy.lib.function_base.disp"
  ],
  "see_also": [],
  "signature": {
    "value": "disp(mesg, device=None, linefeed=True)"
  }
}