{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "An instance of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.lib.index_tricks.nd_grid",
                    "version": "1.22.3"
                  },
                  "value": "numpy.lib.index_tricks.nd_grid"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " which returns an open (i.e. not fleshed out) mesh-grid when indexed, so that only one dimension of each returned array is greater than 1.  The dimension and number of the output arrays are equal to the number of indexing dimensions.  If the step length is not a complex number, then the stop is not inclusive."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "However, if the step length is a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "content": {
                    "value": "complex number"
                  }
                },
                "type": "Strong"
              },
              {
                "data": {
                  "value": " (e.g. 5j), then the integer part of its magnitude is interpreted as specifying the number of points to create between the start and stop values, where the stop value "
                },
                "type": "Words"
              },
              {
                "data": {
                  "content": {
                    "value": "is inclusive"
                  }
                },
                "type": "Strong"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "ndarrays"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " with only one dimension not equal to 1"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "mesh-grid"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.lib.index_tricks.nd_grid",
                    "version": "1.22.3"
                  },
                  "value": "nd_grid"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " instance which returns an open multi-dimensional \"meshgrid\"."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "numpy.lib.index_tricks.OGridClass"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "numpy",
              "numpy",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "ogrid",
              "numpy.lib.index_tricks.OGridClass",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "ogrid",
              "numpy.lib.index_tricks.OGridClass",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              "j",
              "builtins.complex",
              ""
            ],
            [
              "]",
              "",
              ""
            ]
          ],
          "out": "array([-1. , -0.5,  0. ,  0.5,  1. ])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "ogrid",
              "numpy.lib.index_tricks.OGridClass",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ]
          ],
          "out": "[array([[0],\n        [1],\n        [2],\n        [3],\n        [4]]), array([[0, 1, 2, 3, 4]])]"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/numpy/lib/index_tricks.py",
  "item_line": 259,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Returns",
    "See Also",
    "Examples"
  ],
  "references": null,
  "refs": [
    "builtins.complex",
    "mgrid",
    "np.lib.index_tricks.nd_grid",
    "numpy",
    "numpy.lib.index_tricks.OGridClass",
    "r_"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "class of "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "ogrid"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": " and "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "mgrid"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": " objects"
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "np.lib.index_tricks.nd_grid",
        "ref": null
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "like "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "ogrid"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": " but returns dense (or fleshed out) mesh grids"
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "mgrid",
        "ref": null
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "array concatenator"
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "r_",
        "ref": null
      },
      "type": null
    }
  ],
  "signature": {
    "value": null
  }
}