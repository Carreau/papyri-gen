{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Calculate the generalized inverse of a matrix using its singular-value decomposition (SVD) and including all "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "large"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " singular values."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "inline": [
                  {
                    "data": {
                      "value": "Can now operate on stacks of matrices "
                    },
                    "type": "Words"
                  }
                ],
                "inner": []
              }
            ],
            "kind": "versionchanged",
            "title": "1.14"
          },
          "type": "Admonition"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The pseudo-inverse of a matrix A, denoted "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "A^+"
                  ]
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": ", is defined as: \"the matrix that 'solves' [the least-squares problem] "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Ax = b"
                  ]
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": ",\" i.e., if "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "\\bar{x}"
                  ]
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " is said solution, then "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "A^+"
                  ]
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " is that matrix such that "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "\\bar{x} = A^+b"
                  ]
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "It can be shown that if "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Q_1 \\Sigma Q_2^T = A"
                  ]
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " is the singular value decomposition of A, then "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "A^+ = Q_2 \\Sigma^+ Q_1^T"
                  ]
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": ", where "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Q_{1,2}"
                  ]
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " are orthogonal matrices, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "\\Sigma"
                  ]
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " is a diagonal matrix consisting of A's so-called singular values, (followed, typically, by zeros), and then "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "\\Sigma^+"
                  ]
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " is simply the diagonal matrix consisting of the reciprocals of A's singular values (again, followed by zeros)."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Matrix or stack of matrices to be pseudo-inverted."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "a",
            "type_": "(..., M, N) array_like"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Cutoff for small singular values. Singular values less than or equal to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "rcond * largest_singular_value"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " are set to zero. Broadcasts against the stack of matrices."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "rcond",
            "type_": "(...) array_like of float"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If True, "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "a",
                          "version": null
                        },
                        "value": "a"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is assumed to be Hermitian (symmetric if real-valued), enabling a more efficient method for finding singular values. Defaults to False."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "inline": [
                        {
                          "data": {
                            "value": "1.17.0 "
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    }
                  ],
                  "kind": "versionadded",
                  "title": "TODO"
                },
                "type": "Admonition"
              }
            ],
            "param": "hermitian",
            "type_": "bool, optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If the SVD computation does not converge."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "LinAlgError"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The pseudo-inverse of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "a",
                          "version": null
                        },
                        "value": "a"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ". If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "a",
                          "version": null
                        },
                        "value": "a"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is a "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "numpy",
                          "path": "numpy.matrix",
                          "version": "1.22.3"
                        },
                        "value": "matrix"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " instance, then so is "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "B",
                          "version": null
                        },
                        "value": "B"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "B",
            "type_": "(..., N, M) ndarray"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Compute the (Moore-Penrose) pseudo-inverse of a matrix."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "numpy.dual.pinv"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "The following example checks that "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "a * a+ * a == a"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " and "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "a+ * a * a+ == a+"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": ":"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "a",
              "builtins.float",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "numpy.random",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "randn",
              "builtins.RandomState.randn",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "9",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "6",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "B",
              "numpy.typing._generic_alias._GenericAlias.__origin__",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "linalg",
              "numpy.linalg",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "pinv",
              "numpy.linalg.pinv",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              "builtins.float",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "allclose",
              "numpy.allclose",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "dot",
              "numpy.dot",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "dot",
              "numpy.dot",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "B",
              "numpy.typing._generic_alias._GenericAlias.__origin__",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "a",
              "builtins.float",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "True"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "allclose",
              "numpy.allclose",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "B",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "dot",
              "numpy.dot",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "B",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "dot",
              "numpy.dot",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "B",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "True"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/numpy/linalg/linalg.py",
  "item_line": 1903,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "refs": [
    "builtins.RandomState.randn",
    "builtins.float",
    "numpy",
    "numpy.allclose",
    "numpy.dot",
    "numpy.linalg",
    "numpy.linalg.pinv",
    "numpy.ndarray",
    "numpy.random",
    "numpy.typing._generic_alias._GenericAlias.__origin__",
    "scipy.linalg._basic.pinv",
    "scipy.linalg._basic.pinv2",
    "scipy.linalg._basic.pinvh"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Similar function in SciPy."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "scipy.linalg.pinv",
        "ref": "scipy.linalg._basic.pinv"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Similar function in SciPy (SVD-based)."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "scipy.linalg.pinv2",
        "ref": "scipy.linalg._basic.pinv2"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Compute the (Moore-Penrose) pseudo-inverse of a Hermitian matrix."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "scipy.linalg.pinvh",
        "ref": "scipy.linalg._basic.pinvh"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "pinv(a, rcond=1e-15, hermitian=False)"
  }
}