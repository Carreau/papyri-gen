{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": [
                    "a.view()"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is used two different ways:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": [
                    "a.view(some_dtype)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "a.view(dtype=some_dtype)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " constructs a view of the array's memory with a different data-type.  This can cause a reinterpretation of the bytes of memory."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": [
                    "a.view(ndarray_subclass)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "a.view(type=ndarray_subclass)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " just returns an instance of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "ndarray_subclass"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " that looks at the same array (same shape, dtype, etc.)  This does not cause a reinterpretation of the memory."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.ma.core.MaskedArray.fill_value",
                    "version": "1.22.3"
                  },
                  "value": "fill_value"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is not specified, but "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.dtype",
                    "version": "1.22.3"
                  },
                  "value": "dtype"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is specified (and is not an ndarray sub-class), the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.ma.core.MaskedArray.fill_value",
                    "version": "1.22.3"
                  },
                  "value": "fill_value"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " of the MaskedArray will be reset. If neither "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.ma.core.MaskedArray.fill_value",
                    "version": "1.22.3"
                  },
                  "value": "fill_value"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " nor "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.dtype",
                    "version": "1.22.3"
                  },
                  "value": "dtype"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " are specified (or if "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.dtype",
                    "version": "1.22.3"
                  },
                  "value": "dtype"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is an ndarray sub-class), then the fill value is preserved. Finally, if "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.ma.core.MaskedArray.fill_value",
                    "version": "1.22.3"
                  },
                  "value": "fill_value"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is specified, but "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.dtype",
                    "version": "1.22.3"
                  },
                  "value": "dtype"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is not, the fill value is set to the specified value."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "For "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "a.view(some_dtype)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", if "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "some_dtype"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " has a different number of bytes per entry than the previous dtype (for example, converting a regular array to a structured array), then the behavior of the view cannot be predicted just from the superficial appearance of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "a"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " (shown by "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "print(a)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "). It also depends on exactly how "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "a"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is stored in memory. Therefore if "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "a"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is C-ordered versus fortran-ordered, versus defined as a slice or transpose, etc., the view may give different results."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Data-type descriptor of the returned view, e.g., float32 or int16. The default, None, results in the view having the same data-type as "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "a",
                              "version": null
                            },
                            "value": "a"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ". As with "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "ndarray.view"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", dtype can also be specified as an ndarray sub-class, which then specifies the type of the returned object (this is equivalent to setting the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "type"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " parameter)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "dtype",
                "type_": "data-type or ndarray sub-class, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Type of the returned view, either ndarray or a subclass.  The default None results in type preservation."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "type",
                "type_": "Python type, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The value to use for invalid entries (None by default). If None, then this argument is inferred from the passed "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "numpy",
                              "path": "numpy.dtype",
                              "version": "1.22.3"
                            },
                            "value": "dtype"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ", or in its absence the original array, as discussed in the notes below."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "fill_value",
                "type_": "scalar, optional"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Return a view of the MaskedArray data."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "numpy.ma.MaskedArray.view"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/numpy/ma/core.py",
  "item_line": 3121,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "See Also",
    "Notes"
  ],
  "references": null,
  "refs": [
    "numpy.ndarray.view"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "Equivalent method on ndarray object."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": null,
        "name": "numpy.ndarray.view",
        "ref": null
      },
      "type": null
    }
  ],
  "signature": {
    "value": "view(self, dtype=None, type=None, fill_value=None)"
  }
}