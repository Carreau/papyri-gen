{
  "_content": {
    "Attributes": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The data types of the values provided in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "value",
                          "version": null
                        },
                        "value": "value"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ". This may be different from the operand data types if buffering is enabled. Valid only before the iterator is closed."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "dtypes",
            "type_": "tuple of dtype(s)"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Whether the iteration over the operands is finished or not."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "finished",
            "type_": "bool"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If True, the iterator was created with the "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "delay_bufalloc"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " flag, and no reset() function was called on it yet."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "has_delayed_bufalloc",
            "type_": "bool"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If True, the iterator was created with either the "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "c_index"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " or the "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "f_index"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " flag, and the property "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "index",
                          "version": null
                        },
                        "value": "index"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " can be used to retrieve it."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "has_index",
            "type_": "bool"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If True, the iterator was created with the "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "multi_index"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " flag, and the property "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "multi_index",
                          "version": null
                        },
                        "value": "multi_index"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " can be used to retrieve it."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "has_multi_index",
            "type_": "bool"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "When the "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "c_index"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " or "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "f_index"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " flag was used, this property provides access to the index. Raises a ValueError if accessed and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "has_index"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " is False."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "index",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Whether iteration requires access to the Python API, for example if one of the operands is an object array."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "iterationneedsapi",
            "type_": "bool"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "An index which matches the order of iteration."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "iterindex",
            "type_": "int"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Size of the iterator."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "itersize",
            "type_": "int"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Structured view(s) of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "operands",
                          "version": null
                        },
                        "value": "operands"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " in memory, matching the reordered and optimized iterator access pattern. Valid only before the iterator is closed."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "itviews",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "When the "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "multi_index"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " flag was used, this property provides access to the index. Raises a ValueError if accessed accessed and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "has_multi_index"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " is False."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "multi_index",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The dimensions of the iterator."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "ndim",
            "type_": "int"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The number of iterator operands."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "nop",
            "type_": "int"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The array(s) to be iterated over. Valid only before the iterator is closed."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "operands",
            "type_": "tuple of operand(s)"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Shape tuple, the shape of the iterator."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "shape",
            "type_": "tuple of ints"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Value of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "operands"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " at current iteration. Normally, this is a tuple of array scalars, but if the flag "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "external_loop"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " is used, it is a tuple of one dimensional arrays."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "value",
            "type_": ""
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.nditer",
                    "version": "1.22.3"
                  },
                  "value": "nditer"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " supersedes "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.flatiter",
                    "version": "1.22.3"
                  },
                  "value": "flatiter"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ".  The iterator implementation behind "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.nditer",
                    "version": "1.22.3"
                  },
                  "value": "nditer"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is also exposed by the NumPy C API."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The Python exposure supplies two iteration interfaces, one which follows the Python iterator protocol, and another which mirrors the C-style do-while pattern.  The native Python approach is better in most cases, but if you need the coordinates or index of an iterator, use the C-style pattern."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The array(s) to iterate over."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "op",
            "type_": "ndarray or sequence of array_like"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Flags to control the behavior of the iterator."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "buffered"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " enables buffering when required."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "c_index"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " causes a C-order index to be tracked."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "f_index"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " causes a Fortran-order index to be tracked."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "multi_index"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " causes a multi-index, or a tuple of indices   with one per iteration dimension, to be tracked."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "common_dtype"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " causes all the operands to be converted to   a common data type, with copying or buffering as necessary."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "copy_if_overlap"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " causes the iterator to determine if read   operands have overlap with write operands, and make temporary   copies as necessary to avoid overlap. False positives (needless   copying) are possible in some cases."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "delay_bufalloc"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " delays allocation of the buffers until   a reset() call is made. Allows "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "allocate"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " operands to   be initialized before their values are copied into the buffers."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "external_loop"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " causes the "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "values"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " given to be   one-dimensional arrays with multiple values instead of   zero-dimensional arrays."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "grow_inner"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " allows the "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "value"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " array sizes to be made   larger than the buffer size when both "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "buffered"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " and   "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "external_loop"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " is used."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "ranged"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " allows the iterator to be restricted to a sub-range   of the iterindex values."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "refs_ok"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " enables iteration of reference types, such as   object arrays."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "reduce_ok"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " enables iteration of "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "readwrite"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " operands   which are broadcasted, also known as reduction operands."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "zerosize_ok"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " allows "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "exists": true,
                                  "kind": "local",
                                  "reference": {
                                    "kind": "local",
                                    "module": null,
                                    "path": "itersize",
                                    "version": null
                                  },
                                  "value": "itersize"
                                },
                                "type": "Link"
                              },
                              {
                                "data": {
                                  "value": " to be zero."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ],
            "param": "flags",
            "type_": "sequence of str, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "This is a list of flags for each operand. At minimum, one of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "readonly"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "readwrite"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", or "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "writeonly"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " must be specified."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "readonly"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " indicates the operand will only be read from."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "readwrite"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " indicates the operand will be read from and written to."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "writeonly"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " indicates the operand will only be written to."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "no_broadcast"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " prevents the operand from being broadcasted."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "contig"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " forces the operand data to be contiguous."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "aligned"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " forces the operand data to be aligned."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "nbo"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " forces the operand data to be in native byte order."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "copy"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " allows a temporary read-only copy if required."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "updateifcopy"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " allows a temporary read-write copy if required."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "allocate"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " causes the array to be allocated if it is None   in the "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "op"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " parameter."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "no_subtype"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " prevents an "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "allocate"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " operand from using a subtype."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "arraymask"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " indicates that this operand is the mask to use   for selecting elements when writing to operands with the   'writemasked' flag set. The iterator does not enforce this,   but when writing from a buffer back to the array, it only   copies those elements indicated by this mask."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "writemasked"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " indicates that only elements where the chosen   "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "arraymask"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " operand is True will be written to."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": [
                                    "overlap_assume_elementwise"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " can be used to mark operands that are   accessed only in the iterator order, to allow less conservative   copying when "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "copy_if_overlap"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " is present."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ],
            "param": "op_flags",
            "type_": "list of list of str, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The required data type(s) of the operands. If copying or buffering is enabled, the data will be converted to/from their original types."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "op_dtypes",
            "type_": "dtype or tuple of dtype(s), optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Controls the iteration order. 'C' means C order, 'F' means Fortran order, 'A' means 'F' order if all the arrays are Fortran contiguous, 'C' order otherwise, and 'K' means as close to the order the array elements appear in memory as possible. This also affects the element memory order of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "allocate"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " operands, as they are allocated to be compatible with iteration order. Default is 'K'."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "order",
            "type_": "{'C', 'F', 'A', 'K'}, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Controls what kind of data casting may occur when making a copy or buffering.  Setting this to 'unsafe' is not recommended, as it can adversely affect accumulations."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'no' means the data types should not be cast at all."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'equiv' means only byte-order changes are allowed."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'safe' means only casts which can preserve values are allowed."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'same_kind' means only safe casts or casts within a kind,   like float64 to float32, are allowed."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'unsafe' means any data conversions may be done."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ],
            "param": "casting",
            "type_": "{'no', 'equiv', 'safe', 'same_kind', 'unsafe'}, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If provided, is a list of ints or None for each operands. The list of axes for an operand is a mapping from the dimensions of the iterator to the dimensions of the operand. A value of -1 can be placed for entries, causing that dimension to be treated as "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "newaxis"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "op_axes",
            "type_": "list of list of ints, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The desired shape of the iterator. This allows "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "allocate"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " operands with a dimension mapped by op_axes not corresponding to a dimension of a different operand to get a value not equal to 1 for that dimension."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "itershape",
            "type_": "tuple of ints, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "When buffering is enabled, controls the size of the temporary buffers. Set to 0 for the default value."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "buffersize",
            "type_": "int, optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Efficient multi-dimensional iterator object to iterate over arrays. To get started using this object, see the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "introductory guide to array iteration <arrays.nditer>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "numpy.nditer"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Here is how we might write an "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "iter_add"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " function, using the Python iterator protocol:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "def",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "iter_add_py",
              "__main__.iter_add_py",
              "nf"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "y",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "out",
              "builtins.NoneType",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "None",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "addop",
              "numpy.ufunc",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "add",
              "numpy.ufunc",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "it",
              "numpy.nditer",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "nditer",
              "numpy.nditer",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "x",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "y",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "out",
              "builtins.NoneType",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "                ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "readonly",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "readonly",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "writeonly",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "allocate",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "with",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "it",
              "numpy.nditer",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "        ",
              "",
              ""
            ],
            [
              "for",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "b",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "c",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "in",
              null,
              "ow"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "it",
              "numpy.nditer",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "            ",
              "",
              ""
            ],
            [
              "addop",
              "numpy.ufunc",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "b",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "out",
              "builtins.NoneType",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "c",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "        ",
              "",
              ""
            ],
            [
              "return",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "it",
              "numpy.nditer",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "operands",
              "numpy.nditer.operands",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ]
          ],
          "out": ""
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Here is the same function, but following the C-style pattern:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "def",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "iter_add",
              "__main__.iter_add",
              "nf"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "y",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "out",
              "builtins.NoneType",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "None",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "   ",
              "",
              ""
            ],
            [
              "addop",
              "numpy.ufunc",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "add",
              "numpy.ufunc",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "   ",
              "",
              ""
            ],
            [
              "it",
              "numpy.nditer",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "nditer",
              "numpy.nditer",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "x",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "y",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "out",
              "builtins.NoneType",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "               ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "readonly",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "readonly",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "writeonly",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "allocate",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "   ",
              "",
              ""
            ],
            [
              "with",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "it",
              "numpy.nditer",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "       ",
              "",
              ""
            ],
            [
              "while",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "not",
              null,
              "ow"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "it",
              "numpy.nditer",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "finished",
              "numpy.nditer.finished",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "           ",
              "",
              ""
            ],
            [
              "addop",
              "numpy.ufunc",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "it",
              "numpy.nditer",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "it",
              "numpy.nditer",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "out",
              "builtins.NoneType",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "it",
              "numpy.nditer",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "           ",
              "",
              ""
            ],
            [
              "it",
              "numpy.nditer",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "iternext",
              "numpy.nditer.iternext",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "       ",
              "",
              ""
            ],
            [
              "return",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "it",
              "numpy.nditer",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "operands",
              "numpy.nditer.operands",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ]
          ],
          "out": ""
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Here is an example outer product function:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "def",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "outer_it",
              "__main__.outer_it",
              "nf"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "y",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "out",
              "builtins.NoneType",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "None",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "mulop",
              "numpy.ufunc",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "multiply",
              "numpy.ufunc",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "it",
              "numpy.nditer",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "nditer",
              "numpy.nditer",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "x",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "y",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "out",
              "builtins.NoneType",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "external_loop",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "            ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "readonly",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "readonly",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "writeonly",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "allocate",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "            ",
              "",
              ""
            ],
            [
              "op_axes",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "list",
              "builtins.list",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "range",
              "builtins.range",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "ndim",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "+",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "y",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "ndim",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "                     ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "x",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "ndim",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "+",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "list",
              "builtins.list",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "range",
              "builtins.range",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "y",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "ndim",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "                     ",
              "",
              ""
            ],
            [
              "None",
              null,
              "kc"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "with",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "it",
              "numpy.nditer",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "        ",
              "",
              ""
            ],
            [
              "for",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "b",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "c",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "in",
              null,
              "ow"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "it",
              "numpy.nditer",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "            ",
              "",
              ""
            ],
            [
              "mulop",
              "numpy.ufunc",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "b",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "out",
              "builtins.NoneType",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "c",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "        ",
              "",
              ""
            ],
            [
              "return",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "it",
              "numpy.nditer",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "operands",
              "numpy.nditer.operands",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ]
          ],
          "out": ""
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "a",
              "builtins.int",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "arange",
              "numpy.arange",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "+",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "b",
              "builtins.int",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "arange",
              "numpy.arange",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "+",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "outer_it",
              "__main__.outer_it",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              "builtins.int",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "b",
              "builtins.int",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[1, 2, 3],\n       [2, 4, 6]])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Here is an example function which operates like a \"lambda\" ufunc:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "def",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "luf",
              "__main__.luf",
              "nf"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "lamdaexpr",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "args",
              "builtins.tuple",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "kwargs",
              "builtins.dict",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "   ",
              "",
              ""
            ],
            [
              "'''luf(lambdaexpr, op1, ..., opn, out=None, order='K', casting='safe', buffersize=0)'''",
              "",
              "sd"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "   ",
              "",
              ""
            ],
            [
              "nargs",
              "builtins.int",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "len",
              "builtins.len",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "args",
              "builtins.tuple",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "   ",
              "",
              ""
            ],
            [
              "op",
              "builtins.tuple",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "kwargs",
              "builtins.dict",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "get",
              "typing.Mapping.get",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "out",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "None",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "+",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "args",
              "builtins.tuple",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "   ",
              "",
              ""
            ],
            [
              "it",
              "numpy.nditer",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "nditer",
              "numpy.nditer",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "op",
              "builtins.tuple",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "buffered",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "external_loop",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "           ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "writeonly",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "allocate",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "no_broadcast",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "+",
              "",
              "o"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "                           ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "readonly",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "nbo",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "aligned",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "nargs",
              "builtins.int",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "           ",
              "",
              ""
            ],
            [
              "order",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "kwargs",
              "builtins.dict",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "get",
              "typing.Mapping.get",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "order",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "K",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "           ",
              "",
              ""
            ],
            [
              "casting",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "kwargs",
              "builtins.dict",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "get",
              "typing.Mapping.get",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "casting",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "safe",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "           ",
              "",
              ""
            ],
            [
              "buffersize",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "kwargs",
              "builtins.dict",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "get",
              "typing.Mapping.get",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "buffersize",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "   ",
              "",
              ""
            ],
            [
              "while",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "not",
              null,
              "ow"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "it",
              "numpy.nditer",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "finished",
              "numpy.nditer.finished",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "       ",
              "",
              ""
            ],
            [
              "it",
              "numpy.nditer",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "lamdaexpr",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "it",
              "numpy.nditer",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "       ",
              "",
              ""
            ],
            [
              "it",
              "numpy.nditer",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "iternext",
              "numpy.nditer.iternext",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "   ",
              "",
              ""
            ],
            [
              "return",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "it",
              "numpy.nditer",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "operands",
              "numpy.nditer.operands",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ]
          ],
          "out": ""
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "arange",
              "numpy.arange",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "b",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "ones",
              "numpy.ones",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "luf",
              "__main__.luf",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "lambda",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "i",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "j",
              null,
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "i",
              null,
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "i",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "+",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "j",
              null,
              ""
            ],
            [
              "/",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "b",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([  0.5,   1.5,   4.5,   9.5,  16.5])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "If operand flags "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "\"writeonly\""
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": " or "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "\"readwrite\""
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": " are used the operands may be views into the original data with the "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "WRITEBACKIFCOPY"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": " flag. In this case "
              },
              "type": "Words"
            },
            {
              "data": {
                "exists": true,
                "kind": "module",
                "reference": {
                  "kind": "module",
                  "module": "numpy",
                  "path": "numpy.nditer",
                  "version": "1.22.3"
                },
                "value": "nditer"
              },
              "type": "Link"
            },
            {
              "data": {
                "value": " must be used as a context manager or the "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "nditer.close"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": " method must be called before using the result. The temporary data will be written back to the original data when the "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "__exit__"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": " function is called but not before:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "arange",
              "numpy.arange",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "6",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "dtype",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "i4",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "with",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "nditer",
              "numpy.nditer",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "       ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "writeonly",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "updateifcopy",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "       ",
              "",
              ""
            ],
            [
              "casting",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "unsafe",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "       ",
              "",
              ""
            ],
            [
              "op_dtypes",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "dtype",
              "numpy.dtype",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "f4",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "as",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "i",
              "numpy.nditer",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "   ",
              "",
              ""
            ],
            [
              "x",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "i",
              "numpy.nditer",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "operands",
              "numpy.nditer.operands",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "   ",
              "",
              ""
            ],
            [
              "x",
              "numpy.ndarray",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "   ",
              "",
              ""
            ],
            [
              "# a still unchanged here",
              "",
              "c1"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "a",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "x",
              "numpy.ndarray",
              ""
            ]
          ],
          "out": "(array([-1, -2, -3], dtype=int32), array([-1., -2., -3.], dtype=float32))"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "It is important to note that once the iterator is exited, dangling references (like "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "x"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": " in the example) may or may not share data with the original data "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "a"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": ". If writeback semantics were active, i.e. if "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "x.base.flags.writebackifcopy"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": " is "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "True"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": ", then exiting the iterator will sever the connection between "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "x"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": " and "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "a"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": ", writing to "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "x"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": " will no longer write to "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "a"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": ". If writeback semantics are not active, then "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "x.data"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": " will still point at some part of "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "a.data"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": ", and writing to one will affect the other."
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Context management and the "
              },
              "type": "Words"
            },
            {
              "data": {
                "exists": true,
                "kind": "module",
                "reference": {
                  "kind": "module",
                  "module": "numpy",
                  "path": "numpy.lib.npyio.NpzFile.close",
                  "version": "1.22.3"
                },
                "value": "close"
              },
              "type": "Link"
            },
            {
              "data": {
                "value": " method appeared in version 1.15.0."
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      }
    ],
    "title": null
  },
  "item_file": "/numpy/__init__.py",
  "item_line": null,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Signature",
    "Summary",
    "Parameters",
    "Attributes",
    "Notes",
    "Examples"
  ],
  "references": null,
  "refs": [
    "__main__.iter_add",
    "__main__.iter_add_py",
    "__main__.luf",
    "__main__.outer_it",
    "builtins.NoneType",
    "builtins.dict",
    "builtins.int",
    "builtins.len",
    "builtins.list",
    "builtins.range",
    "builtins.tuple",
    "numpy",
    "numpy.arange",
    "numpy.dtype",
    "numpy.ndarray",
    "numpy.nditer",
    "numpy.nditer.finished",
    "numpy.nditer.iternext",
    "numpy.nditer.operands",
    "numpy.ones",
    "numpy.ufunc",
    "typing.Mapping.get"
  ],
  "see_also": [],
  "signature": {
    "value": "nditer(op, flags=None, op_flags=None, op_dtypes=None, order='K', casting='safe', op_axes=None, itershape=None, buffersize=0)"
  }
}