{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "inline": [
                  {
                    "data": {
                      "value": "This forms part of the old polynomial API. Since version 1.4, the new polynomial API defined in `numpy.polynomial` is preferred. A summary of the differences can be found in the : doc : `transition guide < / reference / routines.polynomials>`. "
                    },
                    "type": "Words"
                  }
                ],
                "inner": []
              }
            ],
            "kind": "note",
            "title": ""
          },
          "type": "Admonition"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Returns the coefficients of the polynomial whose leading coefficient is one for the given sequence of zeros (multiple roots must be included in the sequence as many times as their multiplicity; see Examples). A square matrix (or array, which will be treated as a matrix) can also be given, in which case the coefficients of the characteristic polynomial of the matrix are returned."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Specifying the roots of a polynomial still leaves one degree of freedom, typically represented by an undetermined leading coefficient.  In the case of this function, that coefficient - the first one in the returned array - is always taken as one. (If for some reason you have one other point, the only automatic way presently to leverage that information is to use "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "polyfit"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ".)"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The characteristic polynomial, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "p_a(t)"
                  ]
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": ", of an "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "n"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": "-by-"
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "n"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " matrix "
                },
                "type": "Words"
              },
              {
                "data": {
                  "content": {
                    "value": "A"
                  }
                },
                "type": "Strong"
              },
              {
                "data": {
                  "value": " is given by"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": [
              ":math:`p_a(t) = \\mathrm{det}(t\\, \\mathbf{I} - \\mathbf{A})`,"
            ]
          },
          "type": "BlockQuote"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "where "
                },
                "type": "Words"
              },
              {
                "data": {
                  "content": {
                    "value": "I"
                  }
                },
                "type": "Strong"
              },
              {
                "data": {
                  "value": " is the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "n"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": "-by-"
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "n"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " identity matrix."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "A sequence of polynomial roots, or a square array or matrix object."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "seq_of_zeros",
            "type_": "array_like, shape (N,) or (N, N)"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If input is the wrong shape (the input must be a 1-D or square 2-D array)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "ValueError"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "1D array of polynomial coefficients from highest to lowest degree:"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": [
                          "c[0] * x**(N) + c[1] * x**(N-1) + ... + c[N-1] * x + c[N]"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " where c[0] always equals 1."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "c",
            "type_": "ndarray"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Find the coefficients of a polynomial with the given sequence of roots."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "numpy.poly"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Given a sequence of a polynomial's zeros:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "poly",
              "numpy.poly",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "# Multiple root example",
              "",
              "c1"
            ]
          ],
          "out": "array([1., 0., 0., 0.])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "The line above represents z**3 + 0*z**2 + 0*z + 0."
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "poly",
              "numpy.poly",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "1.",
              "",
              "mf"
            ],
            [
              "/",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1.",
              "",
              "mf"
            ],
            [
              "/",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([ 1.  ,  0.  , -0.25,  0.  ])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "The line above represents z**3 - z/4"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "poly",
              "numpy.poly",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "numpy.random",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "builtins.RandomState.random",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "numpy.random",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "builtins.RandomState.random",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([ 1.        , -0.77086955,  0.08618131,  0.        ]) # random"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Given a square array object:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "P",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1.",
              "",
              "mf"
            ],
            [
              "/",
              "",
              "o"
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "1.",
              "",
              "mf"
            ],
            [
              "/",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "poly",
              "numpy.poly",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "P",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([1.        , 0.        , 0.16666667])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Note how in all cases the leading coefficient is always 1."
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      }
    ],
    "title": null
  },
  "item_file": "/numpy/lib/polynomial.py",
  "item_line": 44,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "refs": [
    "builtins.RandomState.random",
    "numpy",
    "numpy.array",
    "numpy.ndarray",
    "numpy.poly",
    "numpy.random",
    "poly1d",
    "polyfit",
    "polyval",
    "roots"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Compute polynomial values."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "polyval",
        "ref": "numpy.polyval"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Return the roots of a polynomial."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "roots",
        "ref": "numpy.roots"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Least squares polynomial fit."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "polyfit",
        "ref": "numpy.polyfit"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "A one-dimensional polynomial class."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "poly1d",
        "ref": "numpy.poly1d"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "poly(seq_of_zeros)"
  }
}