{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Return the coefficients of a polynomial of degree "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "deg",
                    "version": null
                  },
                  "value": "deg"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " that is the least squares fit to the data values "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "y",
                    "version": null
                  },
                  "value": "y"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " given at points "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "x",
                    "version": null
                  },
                  "value": "x"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ". If "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "y",
                    "version": null
                  },
                  "value": "y"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is 1-D the returned coefficients will also be 1-D. If "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "y",
                    "version": null
                  },
                  "value": "y"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is 2-D multiple fits are done, one for each column of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "y",
                    "version": null
                  },
                  "value": "y"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ", and the resulting coefficients are stored in the corresponding columns of a 2-D return. The fitted polynomial(s) are in the form"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "p ( x) = c_0 + c_1 * x + ... + c_n * x^n, "
          },
          "type": "BlockMath"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "where "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "n"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " is "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "deg",
                    "version": null
                  },
                  "value": "deg"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The solution is the coefficients of the polynomial "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "p"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " that minimizes the sum of the weighted squared errors"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "E = \\sum_j w_j^2 * |y_j - p ( x_j)|^2, "
          },
          "type": "BlockMath"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "where the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "w_j"
                  ]
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " are the weights. This problem is solved by setting up the (typically) over-determined matrix equation:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "V ( x) * c = w * y, "
          },
          "type": "BlockMath"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "where "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "V"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " is the weighted pseudo Vandermonde matrix of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "x",
                    "version": null
                  },
                  "value": "x"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "c"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " are the coefficients to be solved for, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "w",
                    "version": null
                  },
                  "value": "w"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " are the weights, and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "y",
                    "version": null
                  },
                  "value": "y"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " are the observed values.  This equation is then solved using the singular value decomposition of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "V"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "If some of the singular values of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "V"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " are so small that they are neglected (and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "full",
                    "version": null
                  },
                  "value": "full"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " == "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "False"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "), a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.RankWarning",
                    "version": "1.22.3"
                  },
                  "value": "RankWarning"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " will be raised. This means that the coefficient values may be poorly determined. Fitting to a lower order polynomial will usually get rid of the warning (but may not be what you want, of course; if you have independent reason(s) for choosing the degree which isn't working, you may have to: a) reconsider those reasons, and/or b) reconsider the quality of your data).  The "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "rcond",
                    "version": null
                  },
                  "value": "rcond"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " parameter can also be set to a value smaller than its default, but the resulting fit may be spurious and have large contributions from roundoff error."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Polynomial fits using double precision tend to \"fail\" at about (polynomial) degree 20. Fits using Chebyshev or Legendre series are generally better conditioned, but much can still depend on the distribution of the sample points and the smoothness of the data.  If the quality of the fit is inadequate, splines may be a good alternative."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "x-coordinates of the "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "M"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " sample (data) points "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "(x[i], y[i])"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "x",
            "type_": "array_like, shape (`M`,)"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "y-coordinates of the sample points.  Several sets of sample points sharing the same x-coordinates can be (independently) fit with one call to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "numpy",
                          "path": "numpy.polyfit",
                          "version": "1.22.3"
                        },
                        "value": "polyfit"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " by passing in for "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "y",
                          "version": null
                        },
                        "value": "y"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " a 2-D array that contains one data set per column."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "y",
            "type_": "array_like, shape (`M`,) or (`M`, `K`)"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Degree(s) of the fitting polynomials. If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "deg",
                          "version": null
                        },
                        "value": "deg"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is a single integer all terms up to and including the "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "deg",
                          "version": null
                        },
                        "value": "deg"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": "'th term are included in the fit. For NumPy versions >= 1.11.0 a list of integers specifying the degrees of the terms to include may be used instead."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "deg",
            "type_": "int or 1-D array_like"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Relative condition number of the fit.  Singular values smaller than "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "rcond",
                          "version": null
                        },
                        "value": "rcond"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ", relative to the largest singular value, will be ignored.  The default value is "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "len(x)*eps"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", where "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "eps"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " is the relative precision of the platform's float type, about 2e-16 in most cases."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "rcond",
            "type_": "float, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Switch determining the nature of the return value.  When "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "False"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " (the default) just the coefficients are returned; when "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "True"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", diagnostic information from the singular value decomposition (used to solve the fit's matrix equation) is also returned."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "full",
            "type_": "bool, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Weights. If not None, the weight "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "w[i]"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " applies to the unsquared residual "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "y[i] - y_hat[i]"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " at "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "x[i]"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ". Ideally the weights are chosen so that the errors of the products "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "w[i]*y[i]"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " all have the same variance.  When using inverse-variance weighting, use "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "w[i] = 1/sigma(y[i])"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ".  The default value is None."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "inline": [
                        {
                          "data": {
                            "value": "1.5.0 "
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    }
                  ],
                  "kind": "versionadded",
                  "title": "TODO"
                },
                "type": "Admonition"
              }
            ],
            "param": "w",
            "type_": "array_like, shape (`M`,), optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Raised if the matrix in the least-squares fit is rank deficient. The warning is only raised if "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "full == False"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ".  The warnings can be turned off by:"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "value": ">>> import warnings\n>>> warnings.simplefilter('ignore', np.RankWarning)"
                },
                "type": "BlockVerbatim"
              }
            ],
            "param": "",
            "type_": "RankWarning"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Polynomial coefficients ordered from low to high.  If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "y",
                          "version": null
                        },
                        "value": "y"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " was 2-D, the coefficients in column "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "k"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "coef",
                          "version": null
                        },
                        "value": "coef"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " represent the polynomial fit to the data in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "y",
                          "version": null
                        },
                        "value": "y"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": "'s "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "k"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": "-th column."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "coef",
            "type_": "ndarray, shape (`deg` + 1,) or (`deg` + 1, `K`)"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "These values are only returned if "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "full == True"
                        ]
                      },
                      "type": "Verbatim"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "residuals -- sum of squared residuals of the least squares fit"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "rank -- the numerical rank of the scaled Vandermonde matrix"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "singular_values -- singular values of the scaled Vandermonde matrix"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "rcond -- value of "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "exists": true,
                                  "kind": "local",
                                  "reference": {
                                    "kind": "local",
                                    "module": null,
                                    "path": "rcond",
                                    "version": null
                                  },
                                  "value": "rcond"
                                },
                                "type": "Link"
                              },
                              {
                                "data": {
                                  "value": "."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "For more details, see "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "numpy",
                          "path": "numpy.linalg.lstsq",
                          "version": "1.22.3"
                        },
                        "value": "numpy.linalg.lstsq"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "[residuals, rank, singular_values, rcond]",
            "type_": "list"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Least-squares fit of a polynomial to data."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "numpy.polynomial.polynomial.polyfit"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "numpy.random",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "seed",
              "builtins.RandomState.seed",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "123",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "numpy",
              "numpy",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "polynomial",
              "numpy.polynomial",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "polynomial",
              "numpy.polynomial.polynomial",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "as",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "P",
              "numpy.polynomial.polynomial",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "x",
              "builtins.tuple",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "linspace",
              "numpy.linspace",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "51",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "# x \"data\": [-1, -0.96, ..., 0.96, 1]",
              "",
              "c1"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "y",
              "builtins.float",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "x",
              "builtins.tuple",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "x",
              "builtins.tuple",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "+",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "numpy.random",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "randn",
              "builtins.RandomState.randn",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "len",
              "builtins.len",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              "builtins.tuple",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "# x^3 - x + N(0,1) \"noise\"",
              "",
              "c1"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "c",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "stats",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "P",
              "numpy.polynomial.polynomial",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "polyfit",
              "numpy.polynomial.polynomial.polyfit",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              "builtins.tuple",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "y",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "full",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "True",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "numpy.random",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "seed",
              "builtins.RandomState.seed",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "123",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "c",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "# c[0], c[2] should be approx. 0, c[1] approx. -1, c[3] approx. 1",
              "",
              "c1"
            ]
          ],
          "out": "array([ 0.01909725, -1.30598256, -0.00577963,  1.02644286]) # may vary"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "stats",
              "builtins.list",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "# note the large SSR, explaining the rather poor results",
              "",
              "c1"
            ]
          ],
          "out": " [array([ 38.06116253]), 4, array([ 1.38446749,  1.32119158,  0.50443316, # may vary\n          0.28853036]), 1.1324274851176597e-014]"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Same thing without the added noise"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "y",
              "builtins.int",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "x",
              "builtins.tuple",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "x",
              "builtins.tuple",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "c",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "stats",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "P",
              "numpy.polynomial.polynomial",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "polyfit",
              "numpy.polynomial.polynomial.polyfit",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              "builtins.tuple",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "y",
              "builtins.int",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "full",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "True",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "c",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "# c[0], c[2] should be \"very close to 0\", c[1] ~= -1, c[3] ~= 1",
              "",
              "c1"
            ]
          ],
          "out": "array([-6.36925336e-18, -1.00000000e+00, -4.08053781e-16,  1.00000000e+00])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "stats",
              "builtins.list",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "# note the minuscule SSR",
              "",
              "c1"
            ]
          ],
          "out": "[array([  7.46346754e-31]), 4, array([ 1.38446749,  1.32119158, # may vary\n           0.50443316,  0.28853036]), 1.1324274851176597e-014]"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/numpy/polynomial/polynomial.py",
  "item_line": 1214,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "refs": [
    "builtins.RandomState.randn",
    "builtins.RandomState.seed",
    "builtins.float",
    "builtins.int",
    "builtins.len",
    "builtins.list",
    "builtins.tuple",
    "numpy",
    "numpy.linalg.lstsq",
    "numpy.linspace",
    "numpy.ndarray",
    "numpy.polynomial",
    "numpy.polynomial.chebyshev.chebfit",
    "numpy.polynomial.hermite.hermfit",
    "numpy.polynomial.hermite_e.hermefit",
    "numpy.polynomial.laguerre.lagfit",
    "numpy.polynomial.legendre.legfit",
    "numpy.polynomial.polynomial",
    "numpy.polynomial.polynomial.polyfit",
    "numpy.random",
    "polyval",
    "polyvander",
    "scipy.interpolate._fitpack2.UnivariateSpline"
  ],
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "numpy.polynomial.chebyshev.chebfit",
        "ref": "numpy.polynomial.chebyshev.chebfit"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "numpy.polynomial.legendre.legfit",
        "ref": "numpy.polynomial.legendre.legfit"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "numpy.polynomial.laguerre.lagfit",
        "ref": "numpy.polynomial.laguerre.lagfit"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "numpy.polynomial.hermite.hermfit",
        "ref": "numpy.polynomial.hermite.hermfit"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "numpy.polynomial.hermite_e.hermefit",
        "ref": "numpy.polynomial.hermite_e.hermefit"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Evaluates a polynomial."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "polyval",
        "ref": "numpy.polyval"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Vandermonde matrix for powers."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "polyvander",
        "ref": "numpy.polynomial.polynomial.polyvander"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Computes a least-squares fit from the matrix."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "numpy.linalg.lstsq",
        "ref": "numpy.linalg.lstsq"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Computes spline fits."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "scipy.interpolate.UnivariateSpline",
        "ref": "scipy.interpolate._fitpack2.UnivariateSpline"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "polyfit(x, y, deg, rcond=None, full=False, w=None)"
  }
}