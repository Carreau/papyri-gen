{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "data in the same field may be heterogeneous - they will be promoted to the highest data type."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "recList",
            "type_": "sequence"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "valid dtype for all arrays"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "dtype",
            "type_": "data-type, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "shape of each array."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "shape",
            "type_": "int or tuple of ints, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "dtype",
                          "version": null
                        },
                        "value": "dtype"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "None"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", these arguments are passed to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "numpy",
                          "path": "numpy.format_parser",
                          "version": "1.22.3"
                        },
                        "value": "numpy.format_parser"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " to construct a dtype. See that function for detailed documentation."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If both "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "formats",
                          "version": null
                        },
                        "value": "formats"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "dtype",
                          "version": null
                        },
                        "value": "dtype"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " are None, then this will auto-detect formats. Use list of tuples rather than list of lists for faster processing."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "formats, names, titles, aligned, byteorder",
            "type_": ""
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "record array consisting of given recList rows."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "np.recarray"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Create a recarray from a list of records in text form."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "numpy.rec.fromrecords"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "core",
              "numpy.core",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "records",
              "numpy.core.records",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "fromrecords",
              "numpy.core.records.fromrecords",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "456",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "dbe",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "1.2",
              "",
              "mf"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "de",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "1.3",
              "",
              "mf"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "names",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "col1,col2,col3",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "print",
              "builtins.print",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "r",
              "numpy.recarray",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "(456, 'dbe', 1.2)"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r",
              "numpy.recarray",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "col1",
              "numpy.ndarray",
              ""
            ]
          ],
          "out": "array([456,   2])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r",
              "numpy.recarray",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "col2",
              "numpy.ndarray",
              ""
            ]
          ],
          "out": "array(['dbe', 'de'], dtype='<U3')"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "pickle",
              "pickle",
              "nn"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "pickle",
              "pickle",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "loads",
              "_pickle.loads",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "pickle",
              "pickle",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "dumps",
              "_pickle.dumps",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "r",
              "numpy.recarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "rec.array([(456, 'dbe', 1.2), (  2, 'de', 1.3)],\n          dtype=[('col1', '<i8'), ('col2', '<U3'), ('col3', '<f8')])"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/numpy/core/records.py",
  "item_line": 683,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "references": null,
  "refs": [
    "_pickle.dumps",
    "_pickle.loads",
    "builtins.print",
    "numpy",
    "numpy.core",
    "numpy.core.records",
    "numpy.rec.fromrecords",
    "numpy.ndarray",
    "numpy.recarray",
    "pickle"
  ],
  "see_also": [],
  "signature": {
    "value": "fromrecords(recList, dtype=None, shape=None, formats=None, names=None, titles=None, aligned=False, byteorder=None)"
  }
}