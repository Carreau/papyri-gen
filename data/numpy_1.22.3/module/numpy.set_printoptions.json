{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "These options determine the way floating point numbers, arrays and other NumPy objects are displayed."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "formatter",
                    "version": null
                  },
                  "value": "formatter"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is always reset with a call to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.set_printoptions",
                    "version": "1.22.3"
                  },
                  "value": "set_printoptions"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Use "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.printoptions",
                    "version": "1.22.3"
                  },
                  "value": "printoptions"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " as a context manager to set the values temporarily."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Number of digits of precision for floating point output (default 8). May be None if "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "floatmode",
                          "version": null
                        },
                        "value": "floatmode"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is not "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "numpy",
                          "path": "numpy.lib._iotools.LineSplitter._fixedwidth_splitter",
                          "version": "1.22.3"
                        },
                        "value": "fixed"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ", to print as many digits as necessary to uniquely specify the value."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "precision",
            "type_": "int or None, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Total number of array elements which trigger summarization rather than full repr (default 1000). To always use the full repr without summarization, pass "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "sys.maxsize"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "threshold",
            "type_": "int, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Number of array items in summary at beginning and end of each dimension (default 3)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "edgeitems",
            "type_": "int, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The number of characters per line for the purpose of inserting line breaks (default 75)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "linewidth",
            "type_": "int, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If True, always print floating point numbers using fixed point notation, in which case numbers equal to zero in the current precision will print as zero.  If False, then scientific notation is used when absolute value of the smallest number is < 1e-4 or the ratio of the maximum absolute value to the minimum is > 1e3. The default is False."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "suppress",
            "type_": "bool, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "String representation of floating point not-a-number (default nan)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "nanstr",
            "type_": "str, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "String representation of floating point infinity (default inf)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "infstr",
            "type_": "str, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Controls printing of the sign of floating-point types. If '+', always print the sign of positive values. If ' ', always prints a space (whitespace character) in the sign position of positive values.  If '-', omit the sign character of positive values. (default '-')"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "sign",
            "type_": "string, either '-', '+', or ' ', optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If not None, the keys should indicate the type(s) that the respective formatting function applies to.  Callables should return a string. Types that are not specified (by their corresponding keys) are handled by the default formatters.  Individual types for which a formatter can be set are:"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "formatter",
            "type_": "dict of callables, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Controls the interpretation of the "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "precision",
                          "version": null
                        },
                        "value": "precision"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " option for floating-point types. Can take the following values (default maxprec_equal):"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "children": [
                              {
                                "dd": [
                                  {
                                    "data": {
                                      "inline": [
                                        {
                                          "data": {
                                            "value": "even if this would print more or fewer digits than         necessary to specify the value uniquely."
                                          },
                                          "type": "Words"
                                        }
                                      ],
                                      "inner": []
                                    },
                                    "type": "Paragraph"
                                  }
                                ],
                                "dt": {
                                  "inline": [
                                    {
                                      "data": {
                                        "value": "'fixed': Always print exactly "
                                      },
                                      "type": "Words"
                                    },
                                    {
                                      "data": {
                                        "exists": true,
                                        "kind": "local",
                                        "reference": {
                                          "kind": "local",
                                          "module": null,
                                          "path": "precision",
                                          "version": null
                                        },
                                        "value": "precision"
                                      },
                                      "type": "Link"
                                    },
                                    {
                                      "data": {
                                        "value": " fractional digits,"
                                      },
                                      "type": "Words"
                                    }
                                  ],
                                  "inner": []
                                }
                              }
                            ]
                          },
                          "type": "DefList"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "children": [
                              {
                                "dd": [
                                  {
                                    "data": {
                                      "inline": [
                                        {
                                          "data": {
                                            "value": "to represent each value uniquely. Different elements may         have a different number of digits. The value of the         "
                                          },
                                          "type": "Words"
                                        },
                                        {
                                          "data": {
                                            "exists": true,
                                            "kind": "local",
                                            "reference": {
                                              "kind": "local",
                                              "module": null,
                                              "path": "precision",
                                              "version": null
                                            },
                                            "value": "precision"
                                          },
                                          "type": "Link"
                                        },
                                        {
                                          "data": {
                                            "value": " option is ignored."
                                          },
                                          "type": "Words"
                                        }
                                      ],
                                      "inner": []
                                    },
                                    "type": "Paragraph"
                                  }
                                ],
                                "dt": {
                                  "inline": [
                                    {
                                      "data": {
                                        "value": "'unique': Print the minimum number of fractional digits necessary"
                                      },
                                      "type": "Words"
                                    }
                                  ],
                                  "inner": []
                                }
                              }
                            ]
                          },
                          "type": "DefList"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "children": [
                              {
                                "dd": [
                                  {
                                    "data": {
                                      "inline": [
                                        {
                                          "data": {
                                            "value": "an element can be uniquely represented with fewer digits         only print it with that many."
                                          },
                                          "type": "Words"
                                        }
                                      ],
                                      "inner": []
                                    },
                                    "type": "Paragraph"
                                  }
                                ],
                                "dt": {
                                  "inline": [
                                    {
                                      "data": {
                                        "value": "'maxprec': Print at most "
                                      },
                                      "type": "Words"
                                    },
                                    {
                                      "data": {
                                        "exists": true,
                                        "kind": "local",
                                        "reference": {
                                          "kind": "local",
                                          "module": null,
                                          "path": "precision",
                                          "version": null
                                        },
                                        "value": "precision"
                                      },
                                      "type": "Link"
                                    },
                                    {
                                      "data": {
                                        "value": " fractional digits, but if"
                                      },
                                      "type": "Words"
                                    }
                                  ],
                                  "inner": []
                                }
                              }
                            ]
                          },
                          "type": "DefList"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "children": [
                              {
                                "dd": [
                                  {
                                    "data": {
                                      "inline": [
                                        {
                                          "data": {
                                            "value": "but if every element in the array can be uniquely         represented with an equal number of fewer digits, use that         many digits for all elements."
                                          },
                                          "type": "Words"
                                        }
                                      ],
                                      "inner": []
                                    },
                                    "type": "Paragraph"
                                  }
                                ],
                                "dt": {
                                  "inline": [
                                    {
                                      "data": {
                                        "value": "'maxprec_equal': Print at most "
                                      },
                                      "type": "Words"
                                    },
                                    {
                                      "data": {
                                        "exists": true,
                                        "kind": "local",
                                        "reference": {
                                          "kind": "local",
                                          "module": null,
                                          "path": "precision",
                                          "version": null
                                        },
                                        "value": "precision"
                                      },
                                      "type": "Link"
                                    },
                                    {
                                      "data": {
                                        "value": " fractional digits,"
                                      },
                                      "type": "Words"
                                    }
                                  ],
                                  "inner": []
                                }
                              }
                            ]
                          },
                          "type": "DefList"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ],
            "param": "floatmode",
            "type_": "str, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If set to the string "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "'1.13'"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " enables 1.13 legacy printing mode. This approximates numpy 1.13 print output by including a space in the sign position of floats and different behavior for 0d arrays. This also enables 1.21 legacy printing mode (described below)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If set to the string "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "'1.21'"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " enables 1.21 legacy printing mode. This approximates numpy 1.21 print output of complex structured dtypes by not inserting spaces after commas that separate fields and after colons."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If set to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "False"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", disables legacy mode."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Unrecognized strings will be ignored with a warning for forward compatibility."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "inline": [
                        {
                          "data": {
                            "value": "1.14.0 "
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    }
                  ],
                  "kind": "versionadded",
                  "title": "TODO"
                },
                "type": "Admonition"
              },
              {
                "data": {
                  "children": [
                    {
                      "inline": [
                        {
                          "data": {
                            "value": "1.22.0 "
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    }
                  ],
                  "kind": "versionchanged",
                  "title": "TODO"
                },
                "type": "Admonition"
              }
            ],
            "param": "legacy",
            "type_": "string or `False`, optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Set printing options."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "numpy.set_printoptions"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Floating point precision can be set:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "set_printoptions",
              "numpy.set_printoptions",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "precision",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1.123456789",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "[1.1235]"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Long arrays can be summarised:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "set_printoptions",
              "numpy.set_printoptions",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "threshold",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "arange",
              "numpy.arange",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "10",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([0, 1, 2, ..., 7, 8, 9])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Small results can be suppressed:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "eps",
              "numpy.floating",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "finfo",
              "numpy.finfo",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "float",
              "builtins.float",
              "nb"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "eps",
              "numpy.floating",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "x",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "arange",
              "numpy.arange",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "4.",
              "",
              "mf"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "x",
              "numpy.ndarray",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "+",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "eps",
              "numpy.floating",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ]
          ],
          "out": "array([-4.9304e-32, -4.4409e-16,  0.0000e+00,  0.0000e+00])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "set_printoptions",
              "numpy.set_printoptions",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "suppress",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "True",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "x",
              "numpy.ndarray",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "+",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "eps",
              "numpy.floating",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ]
          ],
          "out": "array([-0., -0.,  0.,  0.])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "A custom formatter can be used to display array elements as desired:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "set_printoptions",
              "numpy.set_printoptions",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "formatter",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "{",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "all",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "lambda",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "x",
              null,
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "int: ",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "+",
              "",
              "o"
            ],
            [
              "str",
              "builtins.str",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "x",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "}",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "x",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "arange",
              "numpy.arange",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "x",
              "numpy.ndarray",
              ""
            ]
          ],
          "out": "array([int: 0, int: -1, int: -2])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "set_printoptions",
              "numpy.set_printoptions",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# formatter gets reset",
              "",
              "c1"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "x",
              "numpy.ndarray",
              ""
            ]
          ],
          "out": "array([0, 1, 2])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "To put back the default options, you can use:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "set_printoptions",
              "numpy.set_printoptions",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "edgeitems",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "infstr",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "inf",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "linewidth",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "75",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "nanstr",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "nan",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "precision",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "8",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "suppress",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "False",
              null,
              "kc"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "threshold",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "1000",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "formatter",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "None",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": ""
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Also to temporarily override options, use "
              },
              "type": "Words"
            },
            {
              "data": {
                "exists": true,
                "kind": "module",
                "reference": {
                  "kind": "module",
                  "module": "numpy",
                  "path": "numpy.printoptions",
                  "version": "1.22.3"
                },
                "value": "printoptions"
              },
              "type": "Link"
            },
            {
              "data": {
                "value": " as a context manager:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "with",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "printoptions",
              "numpy.printoptions",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "precision",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "suppress",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "True",
              null,
              "kc"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "threshold",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "linspace",
              "numpy.linspace",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "10",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "10",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([ 0.  ,  1.11,  2.22, ...,  7.78,  8.89, 10.  ])"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/numpy/core/arrayprint.py",
  "item_line": 116,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "refs": [
    "array2string",
    "builtins.float",
    "builtins.str",
    "get_printoptions",
    "numpy",
    "numpy.arange",
    "numpy.array",
    "numpy.finfo",
    "numpy.floating",
    "numpy.linspace",
    "numpy.ndarray",
    "numpy.printoptions",
    "numpy.set_printoptions",
    "printoptions",
    "set_string_function"
  ],
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "get_printoptions",
        "ref": "numpy.get_printoptions"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "printoptions",
        "ref": "numpy.printoptions"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": null,
        "name": "set_string_function",
        "ref": null
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "array2string",
        "ref": "numpy.array2string"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "set_printoptions(precision=None, threshold=None, edgeitems=None, linewidth=None, suppress=None, nanstr=None, infstr=None, formatter=None, sign=None, floatmode=None, *, legacy=None)"
  }
}