{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Each fragment is a sequence of func_name, calling convention, snippet."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "functions",
            "type_": "list of fragments"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Code to preceed the rest, usually extra "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "#include"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " or "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "#define"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " macros."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "prologue",
            "type_": "string"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Where to build the module, usually a temporary directory"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "build_dir",
            "type_": "pathlib.Path"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Extra directories to find include files when compiling"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "include_dirs",
            "type_": "list"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Code to appear in the module PyMODINIT_FUNC"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "more_init",
            "type_": "string"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The module will have been loaded and is ready for use"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "out: module"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Build and imports a c-extension module "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "modname"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " from a list of function fragments "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "functions",
                    "version": null
                  },
                  "value": "functions"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "numpy.testing.extbuild.build_and_import_extension"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "syntax_error",
          "entries": [
            [
              "functions",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "test_bytes",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "METH_O",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "\"\"\"",
              "",
              "s2"
            ]
          ],
          "out": "    if ( !PyBytesCheck(args)) {\n        Py_RETURN_FALSE;\n    }\n    Py_RETURN_TRUE;\n\"\"\")]"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "mod",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "build_and_import_extension",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "testme",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "functions",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "assert",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "not",
              null,
              "ow"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "mod",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "test_bytes",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "u",
              null,
              "sa"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "abc",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "assert",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "mod",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "test_bytes",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "b",
              null,
              "sa"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "abc",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": ""
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/numpy/testing/_private/extbuild.py",
  "item_line": 15,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "build_and_import_extension(modname, functions, *, prologue='', build_dir=None, include_dirs=[], more_init='')"
  }
}