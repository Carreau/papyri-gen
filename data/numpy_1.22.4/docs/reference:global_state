{
  "aliases": [],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "placeholder": "target",
            "value": ".. _global_state:"
          },
          "type": "Unimplemented"
        }
      ],
      "level": 0,
      "title": null
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "NumPy has a few import-time, compile-time, or runtime options which change the global behaviour. Most of these are related to performance or for debugging purposes and will not be interesting to the vast majority of users."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": "Global State"
    },
    {
      "children": [],
      "level": 1,
      "title": "Performance-Related Options"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "NumPy itself is normally intentionally limited to a single thread during function calls, however it does support multiple Python threads running at the same time. Note that for performant linear algebra NumPy uses a BLAS backend such as OpenBLAS or MKL, which may use multiple threads that may be controlled by environment variables such as "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "OMP_NUM_THREADS"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " depending on what is used. One way to control the number of threads is the package "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://pypi.org/project/threadpoolctl/",
                  "value": "threadpoolctl"
                },
                "type": "ExternalLink"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 2,
      "title": "Number of Threads used for Linear Algebra"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "When working with very large arrays on modern Linux kernels, you can experience a significant speedup when "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html",
                  "value": "transparent hugepage"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": " is used. The current system policy for transparent hugepages can be seen by:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "cat /sys/kernel/mm/transparent_hugepage/enabled"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "When set to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "madvise"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " NumPy will typically use hugepages for a performance boost. This behaviour can be modified by setting the environment variable:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "NUMPY_MADVISE_HUGEPAGE=0"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "or setting it to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "1"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " to always enable it. When not set, the default is to use madvise on Kernels 4.6 and newer. These kernels presumably experience a large speedup with hugepage support. This flag is checked at import time."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 2,
      "title": "Madvise Hugepage on Linux"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The array function protocol which allows array-like objects to hook into the NumPy API is currently enabled by default. This option exists since NumPy 1.16 and is enabled by default since NumPy 1.17. It can be disabled using:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "NUMPY_EXPERIMENTAL_ARRAY_FUNCTION=0"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "See also "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.class.__array_function__"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for more information. This flag is checked at import time."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "title": "Interoperability-Related Options"
    },
    {
      "children": [],
      "level": 1,
      "title": "Debugging-Related Options"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "compile-time"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " environment variable:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "NPY_RELAXED_STRIDES_DEBUG=0"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "can be set to help debug code written in C which iteraters through arrays manually.  When an array is contiguous and iterated in a contiguous manner, its "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "strides"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " should not be queried.  This option can help find errors where the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "strides"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " are incorrectly used. For details see the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "memory layout <memory-layout>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " documentation."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 2,
      "title": "Relaxed Strides Checking"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Some users might pass ownership of the data pointer to the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ndarray"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " by setting the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "OWNDATA"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " flag. If they do this without setting (manually) a memory allocation policy, the default will be to call "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "free"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". If "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "NUMPY_WARN_IF_NO_MEM_POLICY"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is set to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "\"1\""
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "RuntimeWarning"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " will be emitted. A better alternative is to use a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "PyCapsule"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " with a deallocator and set the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ndarray.base"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 2,
      "title": "Warn if no memory allocation policy when deallocating data"
    }
  ],
  "content": {},
  "example_section_data": {
    "children": [],
    "level": 0,
    "title": null
  },
  "item_file": null,
  "item_line": null,
  "item_type": null,
  "ordered_sections": [],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}