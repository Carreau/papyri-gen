{
  "aliases": [],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "argument": "numpy.char",
            "content": "",
            "name": "currentmodule",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "argument": "numpy.char",
            "content": "",
            "name": "module",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "api",
                    "module": "numpy",
                    "path": "numpy.core.defchararray",
                    "version": "*"
                  },
                  "value": "numpy.char"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " module provides a set of vectorized string operations for arrays of type "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "api",
                    "module": "numpy",
                    "path": "numpy.str_",
                    "version": "*"
                  },
                  "value": "numpy.str_"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "api",
                    "module": "numpy",
                    "path": "numpy.bytes_",
                    "version": "*"
                  },
                  "value": "numpy.bytes_"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ". All of them are based on the string methods in the Python standard library."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": "String operations"
    },
    {
      "children": [
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    add\n    multiply\n    mod\n    capitalize\n    center\n    decode\n    encode\n    expandtabs\n    join\n    ljust\n    lower\n    lstrip\n    partition\n    replace\n    rjust\n    rpartition\n    rsplit\n    rstrip\n    split\n    splitlines\n    strip\n    swapcase\n    title\n    translate\n    upper\n    zfill"
          },
          "type": "BlockVerbatim"
        }
      ],
      "level": 1,
      "target": null,
      "title": "String operations"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Unlike the standard numpy comparison operators, the ones in the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "char"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " module strip trailing whitespace characters before performing the comparison."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    equal\n    not_equal\n    greater_equal\n    less_equal\n    greater\n    less\n    compare_chararrays"
          },
          "type": "BlockVerbatim"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Comparison"
    },
    {
      "children": [
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    count\n    endswith\n    find\n    index\n    isalpha\n    isalnum\n    isdecimal\n    isdigit\n    islower\n    isnumeric\n    isspace\n    istitle\n    isupper\n    rfind\n    rindex\n    startswith\n    str_len"
          },
          "type": "BlockVerbatim"
        }
      ],
      "level": 1,
      "target": null,
      "title": "String information"
    },
    {
      "children": [
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    array\n    asarray\n    chararray"
          },
          "type": "BlockVerbatim"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Convenience class"
    }
  ],
  "content": {},
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": null,
  "item_line": null,
  "item_type": null,
  "ordered_sections": [],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}