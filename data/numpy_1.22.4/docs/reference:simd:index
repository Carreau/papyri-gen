{
  "aliases": [],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "placeholder": "target",
            "value": ".. _numpysimd:"
          },
          "type": "Unimplemented"
        },
        {
          "data": {
            "argument": "numpysimd",
            "content": "",
            "name": "currentmodule",
            "options": []
          },
          "type": "BlockDirective"
        }
      ],
      "level": 0,
      "title": null
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "NumPy comes with a flexible working mechanism that allows it to harness the SIMD features that CPUs own, in order to provide faster and more stable performance on all popular platforms. Currently, NumPy supports the X86, IBM/Power, ARM7 and ARM8 architectures."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The optimization process in NumPy is carried out in three layers:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Code is "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "written"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " using the universal intrinsics which is a set of types, macros and   functions that are mapped to each supported instruction-sets by using guards that   will enable use of the them only when the compiler recognizes them.   This allow us to generate multiple kernels for the same functionality,   in which each generated kernel represents a set of instructions that related one   or multiple certain CPU features. The first kernel represents the minimum (baseline)   CPU features, and the other kernels represent the additional (dispatched) CPU features."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "At "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "compile"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": " time, CPU build options are used to define the minimum and   additional features to support, based on user choice and compiler support. The   appropriate intrinsics are overlaid with the platform / architecture intrinsics,   and multiple kernels are compiled."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "At "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": {
                              "value": "runtime import"
                            }
                          },
                          "type": "Emph"
                        },
                        {
                          "data": {
                            "value": ", the CPU is probed for the set of supported CPU   features. A mechanism is used to grab the pointer to the most appropriate   kernel, and this will be the one called for the function."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "NumPy community had a deep discussion before implementing this work, please check "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "NEP-38"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " for more clarification."
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              }
            ],
            "kind": "note",
            "title": ""
          },
          "type": "Admonition"
        },
        {
          "data": {
            "argument": "",
            "content": "build-options\nhow-it-works",
            "name": "toctree",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _`NEP-38`: https://numpy.org/neps/nep-0038-SIMD-optimizations.html"
          },
          "type": "Unimplemented"
        }
      ],
      "level": 0,
      "title": "CPU/SIMD Optimizations"
    }
  ],
  "content": {},
  "example_section_data": {
    "children": [],
    "level": 0,
    "title": null
  },
  "item_file": null,
  "item_line": null,
  "item_type": null,
  "ordered_sections": [],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}