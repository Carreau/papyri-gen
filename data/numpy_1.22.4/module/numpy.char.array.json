{
  "aliases": [
    "numpy.char.array"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "This class is provided for numarray backward-compatibility. New code (not concerned with numarray compatibility) should use arrays of type "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "string_"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " or "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "unicode_"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " and use the free functions in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": "mod",
                        "value": "numpy.char <numpy.core.defchararray>"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " for fast vectorized string operations instead."
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              }
            ],
            "kind": "note",
            "title": ""
          },
          "type": "Admonition"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Versus a regular NumPy array of type "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "str"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "unicode",
                    "version": null
                  },
                  "value": "unicode"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ", this class adds the following functionality:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "values automatically have whitespace removed from the end      when indexed"
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "comparison operators automatically remove whitespace from the      end when comparing values"
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "vectorized string operations are provided as methods      (e.g. "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "domain": null,
                                  "role": null,
                                  "value": "str.endswith"
                                },
                                "type": "Directive"
                              },
                              {
                                "data": {
                                  "value": ") and infix operators (e.g. "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "+, *, %"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": ")"
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "EnumeratedList"
              }
            ]
          },
          "type": "BlockQuote"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [],
                "param": "obj",
                "type_": "array of str or unicode-like"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "itemsize",
                              "version": null
                            },
                            "value": "itemsize"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is the number of characters per scalar in the resulting array.  If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "itemsize",
                              "version": null
                            },
                            "value": "itemsize"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is None, and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "obj",
                              "version": null
                            },
                            "value": "obj"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is an object array or a Python list, the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "itemsize",
                              "version": null
                            },
                            "value": "itemsize"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " will be automatically determined.  If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "itemsize",
                              "version": null
                            },
                            "value": "itemsize"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is provided and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "obj",
                              "version": null
                            },
                            "value": "obj"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is of type str or unicode, then the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "obj",
                              "version": null
                            },
                            "value": "obj"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " string will be chunked into "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "itemsize",
                              "version": null
                            },
                            "value": "itemsize"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " pieces."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "itemsize",
                "type_": "int, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If true (default), then the object is copied.  Otherwise, a copy will only be made if __array__ returns a copy, if obj is a nested sequence, or if a copy is needed to satisfy any of the other requirements ("
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "itemsize",
                              "version": null
                            },
                            "value": "itemsize"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ", unicode, "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "order",
                              "version": null
                            },
                            "value": "order"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ", etc.)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "copy",
                "type_": "bool, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "When true, the resulting "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "numpy",
                              "path": "numpy.chararray",
                              "version": "1.22.4"
                            },
                            "value": "chararray"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " can contain Unicode characters, when false only 8-bit characters.  If unicode is None and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "obj",
                              "version": null
                            },
                            "value": "obj"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is one of the following:"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "children": [
                                  {
                                    "data": {
                                      "children": [
                                        {
                                          "data": {
                                            "value": "a "
                                          },
                                          "type": "Words"
                                        },
                                        {
                                          "data": {
                                            "anchor": null,
                                            "exists": true,
                                            "kind": "module",
                                            "reference": {
                                              "kind": "module",
                                              "module": "numpy",
                                              "path": "numpy.chararray",
                                              "version": "1.22.4"
                                            },
                                            "value": "chararray"
                                          },
                                          "type": "Link"
                                        },
                                        {
                                          "data": {
                                            "value": ","
                                          },
                                          "type": "Words"
                                        }
                                      ]
                                    },
                                    "type": "Paragraph"
                                  }
                                ]
                              },
                              {
                                "children": [
                                  {
                                    "data": {
                                      "children": [
                                        {
                                          "data": {
                                            "value": "an ndarray of type "
                                          },
                                          "type": "Words"
                                        },
                                        {
                                          "data": {
                                            "domain": null,
                                            "role": null,
                                            "value": "str"
                                          },
                                          "type": "Directive"
                                        },
                                        {
                                          "data": {
                                            "value": " or "
                                          },
                                          "type": "Words"
                                        },
                                        {
                                          "data": {
                                            "anchor": null,
                                            "exists": true,
                                            "kind": "local",
                                            "reference": {
                                              "kind": "local",
                                              "module": null,
                                              "path": "unicode",
                                              "version": null
                                            },
                                            "value": "unicode"
                                          },
                                          "type": "Link"
                                        }
                                      ]
                                    },
                                    "type": "Paragraph"
                                  }
                                ]
                              },
                              {
                                "children": [
                                  {
                                    "data": {
                                      "children": [
                                        {
                                          "data": {
                                            "value": "a Python str or unicode object,"
                                          },
                                          "type": "Words"
                                        }
                                      ]
                                    },
                                    "type": "Paragraph"
                                  }
                                ]
                              }
                            ]
                          },
                          "type": "BulletList"
                        }
                      ]
                    },
                    "type": "BlockQuote"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "then the unicode setting of the output array will be automatically determined."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "unicode",
                "type_": "bool, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Specify the order of the array.  If order is 'C' (default), then the array will be in C-contiguous order (last-index varies the fastest).  If order is 'F', then the returned array will be in Fortran-contiguous order (first-index varies the fastest).  If order is 'A', then the returned array may be in any order (either C-, Fortran-contiguous, or even discontiguous)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "order",
                "type_": "{'C', 'F', 'A'}, optional"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Create a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.chararray",
                    "version": "1.22.4"
                  },
                  "value": "chararray"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/numpy/core/defchararray.py",
  "item_line": 2612,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "array(obj, itemsize=None, copy=True, unicode=None, order=None)"
  }
}