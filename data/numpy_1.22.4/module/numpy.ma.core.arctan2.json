{
  "aliases": [
    "numpy.ma.arctan2"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The quadrant (i.e., branch) is chosen so that "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "arctan2(x1, x2)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is the signed angle in radians between the ray ending at the origin and passing through the point (1,0), and the ray ending at the origin and passing through the point ("
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "x2"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.complex128",
                    "version": "1.22.4"
                  },
                  "value": "x1"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ").  (Note the role reversal: the \""
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "y"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": "-coordinate\" is the first function parameter, the \""
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "x",
                    "version": null
                  },
                  "value": "x"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "-coordinate\" is the second.)  By IEEE convention, this function is defined for "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "x2"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " = +/-0 and for either or both of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.complex128",
                    "version": "1.22.4"
                  },
                  "value": "x1"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "x2"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " = +/-inf (see Notes for specific values)."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This function is not defined for complex-valued arguments; for the so-called argument of complex values, use "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.angle",
                    "version": "1.22.4"
                  },
                  "value": "angle"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": {
                    "value": "arctan2"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " is identical to the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "atan2"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " function of the underlying C library.  The following special values are defined in the C standard:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "====== ====== ================ "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.complex128",
                    "version": "1.22.4"
                  },
                  "value": "x1"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "   "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "x2"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": "   "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "arctan2(x1,x2)"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " ====== ====== ================ +/- 0  +0     +/- 0 +/- 0  -0     +/- pi  > 0   +/-inf +0 / +pi  < 0   +/-inf -0 / -pi +/-inf +inf   +/- (pi/4) +/-inf -inf   +/- (3*pi/4) ====== ====== ================"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Note that +0 and -0 are distinct floating point numbers, as are +inf and -inf."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "y"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": "-coordinates."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "x1",
                "type_": "array_like, real-valued"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "x",
                              "version": null
                            },
                            "value": "x"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": "-coordinates. If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "x1.shape != x2.shape"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", they must be broadcastable to a common shape (which becomes the shape of the output)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "x2",
                "type_": "array_like, real-valued"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A location into which the result is stored. If provided, it must have a shape that the inputs broadcast to. If not provided or None, a freshly-allocated array is returned. A tuple (possible only as a keyword argument) must have length equal to the number of outputs."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "out",
                "type_": "ndarray, None, or tuple of ndarray and None, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "This condition is broadcast over the input. At locations where the condition is True, the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "out"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " array will be set to the ufunc result. Elsewhere, the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "out"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " array will retain its original value. Note that if an uninitialized "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "out"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " array is created via the default "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "out=None"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", locations within it where the condition is False will remain uninitialized."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "where",
                "type_": "array_like, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "For other keyword-only arguments, see the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "ufunc docs <ufuncs.kwargs>"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "**kwargs",
                "type_": ""
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Array of angles in radians, in the range "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "[-pi, pi]"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". This is a scalar if both "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "numpy",
                              "path": "numpy.complex128",
                              "version": "1.22.4"
                            },
                            "value": "x1"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "x2"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " are scalars."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "angle",
                "type_": "ndarray"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Element-wise arc tangent of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "x1/x2"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " choosing the quadrant correctly."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "title": null
    }
  },
  "example_section_data": {
    "children": [
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "Consider four points in different quadrants:"
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            {
              "link": {
                "data": "x",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "np",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "array",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "[",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "-",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "1",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "+",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "1",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "+",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "1",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "-",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "1",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": "]",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "y",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "np",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "array",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "[",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "-",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "1",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "-",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "1",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "+",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "1",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "+",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "1",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": "]",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "np",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "arctan2",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "y",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "x",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "*",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "180",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "/",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "np",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "pi",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "array([-135.,  -45.,   45.,  135.])"
        },
        "type": "Code2"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "Note the order of the parameters. "
              },
              "type": "Words"
            },
            {
              "data": {
                "exists": true,
                "kind": "module",
                "reference": {
                  "kind": "module",
                  "module": "numpy",
                  "path": "numpy.ma.core.arctan2",
                  "version": "1.22.4"
                },
                "value": "arctan2"
              },
              "type": "Link"
            },
            {
              "data": {
                "value": " is defined also when "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "x2"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": " = 0 and at several other special points, obtaining values in the range "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "[-pi, pi]"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": ":"
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            {
              "link": {
                "data": "np",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "arctan2",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "[",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "1.",
                "type": "str"
              },
              "type": "mf"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "-",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "1.",
                "type": "str"
              },
              "type": "mf"
            },
            {
              "link": {
                "data": "]",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "[",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "0.",
                "type": "str"
              },
              "type": "mf"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "0.",
                "type": "str"
              },
              "type": "mf"
            },
            {
              "link": {
                "data": "]",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "array([ 1.57079633, -1.57079633])"
        },
        "type": "Code2"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            {
              "link": {
                "data": "np",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "arctan2",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "[",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "0.",
                "type": "str"
              },
              "type": "mf"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "0.",
                "type": "str"
              },
              "type": "mf"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "np",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "inf",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "]",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "[",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "+",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "0.",
                "type": "str"
              },
              "type": "mf"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "-",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "0.",
                "type": "str"
              },
              "type": "mf"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "np",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "inf",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "]",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "array([ 0.        ,  3.14159265,  0.78539816])"
        },
        "type": "Code2"
      }
    ],
    "level": 0,
    "title": null
  },
  "item_file": "/numpy/ma/core.py",
  "item_line": null,
  "item_type": "<class 'numpy.ma.core._MaskedBinaryOperation'>",
  "ordered_sections": [
    "Signature",
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy.ma.core.arctan",
          "version": "1.22.4"
        },
        "value": "arctan"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy.ma.core.tan",
          "version": "1.22.4"
        },
        "value": "tan"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy.angle",
          "version": "1.22.4"
        },
        "value": "angle"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "arctan2(x1, x2, /, out=None, *, where=True, casting='same_kind', order='K', dtype=None, subok=True[, signature, extobj])"
  }
}