{
  "aliases": [
    "numpy.ma"
  ],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Arrays sometimes contain invalid or missing data.  When doing operations on such arrays, we wish to suppress invalid values, which is the purpose masked arrays fulfill (an example of typical use is given below)."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "For example, examine the following array:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ">>> x = np.array([2, 1, 3, np.nan, 5, 2, 3, np.nan])"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "When we try to calculate the mean of the data, the result is undetermined:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ">>> np.mean(x)\nnan"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The mean is calculated using roughly "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.sum(x)/len(x)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", but since any number added to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "NaN"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "  produces "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "NaN"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", this doesn't work.  Enter masked arrays:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ">>> m = np.ma.masked_array(x, np.isnan(x))\n>>> m\nmasked_array(data = [2.0 1.0 3.0 -- 5.0 2.0 3.0 --],\n      mask = [False False False  True False False False  True],\n      fill_value=1e+20)"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Here, we construct a masked array that suppress all "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "NaN"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " values.  We may now proceed to calculate the mean of the other values:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ">>> np.mean(m)\n2.6666666666666665"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "placeholder": "footnote",
            "value": ".. [1] Not-a-Number, a floating point value that is the result of an\n       invalid operation."
          },
          "type": "Unimplemented"
        },
        {
          "data": {
            "argument": "Pierre Gerard-Marchant",
            "content": "",
            "name": "moduleauthor",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "argument": "Jarrod Millman",
            "content": "",
            "name": "moduleauthor",
            "options": []
          },
          "type": "BlockDirective"
        }
      ],
      "level": 0,
      "target": null,
      "title": "Masked Arrays"
    }
  ],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Arrays sometimes contain invalid or missing data.  When doing operations on such arrays, we wish to suppress invalid values, which is the purpose masked arrays fulfill (an example of typical use is given below)."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "For example, examine the following array:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ">>> x = np.array([2, 1, 3, np.nan, 5, 2, 3, np.nan])"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "When we try to calculate the mean of the data, the result is undetermined:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ">>> np.mean(x)\nnan"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The mean is calculated using roughly "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.sum(x)/len(x)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", but since any number added to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "NaN"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "  produces "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "NaN"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", this doesn't work.  Enter masked arrays:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ">>> m = np.ma.masked_array(x, np.isnan(x))\n>>> m\nmasked_array(data = [2.0 1.0 3.0 -- 5.0 2.0 3.0 --],\n      mask = [False False False  True False False False  True],\n      fill_value=1e+20)"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Here, we construct a masked array that suppress all "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "NaN"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " values.  We may now proceed to calculate the mean of the other values:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ">>> np.mean(m)\n2.6666666666666665"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "placeholder": "footnote",
            "value": ".. [1] Not-a-Number, a floating point value that is the result of an\n       invalid operation."
          },
          "type": "Unimplemented"
        },
        {
          "data": {
            "argument": "Pierre Gerard-Marchant",
            "content": "",
            "name": "moduleauthor",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "argument": "Jarrod Millman",
            "content": "",
            "name": "moduleauthor",
            "options": []
          },
          "type": "BlockDirective"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": "Masked Arrays"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/numpy/ma/__init__.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}