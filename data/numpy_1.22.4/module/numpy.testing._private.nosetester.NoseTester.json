{
  "aliases": [
    "numpy.Tester"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Full path to the package to test."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "package_path",
                "type_": "str"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Name of the package to test."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "package_name",
                "type_": "str"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This class is made available as numpy.testing.Tester, and a test function is typically added to a package's __init__.py like so:    "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "from numpy.testing import Tester\ntest = Tester().test"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Calling this test function finds and runs all tests associated with the package and all its sub-packages."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The package to test. If a string, this should be the full path to the package. If None (default), "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "package"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " is set to the module from which "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "numpy",
                              "path": "numpy.testing._private.nosetester.NoseTester",
                              "version": "1.22.4"
                            },
                            "value": "NoseTester"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is initialized."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "package",
                "type_": "module, str or None, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "This specifies which warnings to configure as 'raise' instead of being shown once during the test execution.  Valid strings are:"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "raise_warnings",
                "type_": "None, str or sequence of warnings, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "package"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " is None, then this can be used to initialize from the module of the caller of (the caller of (...)) the code that initializes "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "numpy",
                              "path": "numpy.testing._private.nosetester.NoseTester",
                              "version": "1.22.4"
                            },
                            "value": "NoseTester"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ". Default of 0 means the module of the immediate caller; higher values are useful for utility routines that want to initialize "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "numpy",
                              "path": "numpy.testing._private.nosetester.NoseTester",
                              "version": "1.22.4"
                            },
                            "value": "NoseTester"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " objects on behalf of other code."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "depth",
                "type_": "int, optional"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Nose test runner."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "title": null
  },
  "item_file": "/numpy/testing/_private/nosetester.py",
  "item_line": 112,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Attributes",
    "Parameters"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}