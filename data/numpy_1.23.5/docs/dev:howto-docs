{
  "aliases": [],
  "arbitrary": [
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This guide will help you decide what to contribute and how to submit it to the official NumPy documentation."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": "howto-docs",
      "title": "How to contribute to the NumPy documentation",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The NumPy community has set a firm goal of improving its documentation. We hold regular documentation meetings on Zoom (dates are announced on the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "numpy-discussion mailing list"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://mail.python.org/mailman/listinfo/numpy-discussion"
            },
            {
              "type": "text",
              "value": "), and everyone is welcome. Reach out if you have questions or need someone to guide you through your first steps -- we're happy to help. Minutes are taken "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "on hackmd.io"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://hackmd.io/oB_boakvRqKR-_2jRV-Qjg"
            },
            {
              "type": "text",
              "value": " and stored in the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "NumPy Archive repository"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/archive"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Documentation team meetings",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The "
            },
            {
              "type": "inlineCode",
              "value": "NumPy Documentation <numpy_docs_mainpage>"
            },
            {
              "type": "text",
              "value": " has the details covered. API reference documentation is generated directly from "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "docstrings"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://www.python.org/dev/peps/pep-0257/"
            },
            {
              "type": "text",
              "value": " in the code when the documentation is "
            },
            {
              "type": "inlineCode",
              "value": "built<howto-build-docs>"
            },
            {
              "type": "text",
              "value": ". Although we have mostly complete reference documentation for each function and class exposed to users, there is a lack of usage examples for some of them."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "What we lack are docs with broader scope -- tutorials, how-tos, and explanations. Reporting defects is another way to contribute. We discuss both."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "What's needed",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "We're eager to hear about and fix doc defects. But to attack the biggest problems we end up having to defer or overlook some bug reports. Here are the best defects to go after."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Top priority goes to "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "technical inaccuracies"
                }
              ],
              "type": "strong"
            },
            {
              "type": "text",
              "value": " -- a docstring missing a parameter, a faulty description of a function/parameter/method, and so on. Other \"structural\" defects like broken links also get priority. All these fixes are easy to confirm and put in place. You can submit a "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "pull request (PR)"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://numpy.org/devdocs/dev/index.html#devindex"
            },
            {
              "type": "text",
              "value": " with the fix, if you know how to do that; otherwise please "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "open an issue"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/issues"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "Typos and misspellings"
                }
              ],
              "type": "strong"
            },
            {
              "type": "text",
              "value": " fall on a lower rung; we welcome hearing about them but may not be able to fix them promptly. These too can be handled as pull requests or issues."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Obvious "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "wording"
                }
              ],
              "type": "strong"
            },
            {
              "type": "text",
              "value": " mistakes (like leaving out a \"not\") fall into the typo category, but other rewordings -- even for grammar -- require a judgment call, which raises the bar. Test the waters by first presenting the fix as an issue."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Some functions/objects like numpy.ndarray.transpose, numpy.array etc. defined in C-extension modules have their docstrings defined separately in "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "_add_newdocs.py"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/blob/main/numpy/core/_add_newdocs.py"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Contributing fixes",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Your frustrations using our documents are our best guide to what needs fixing."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "If you write a missing doc you join the front line of open source, but it's a meaningful contribution just to let us know what's missing. If you want to compose a doc, run your thoughts by the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "mailing list"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://mail.python.org/mailman/listinfo/numpy-discussion"
            },
            {
              "type": "text",
              "value": " for further ideas and feedback. If you want to alert us to a gap, "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "open an issue"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/issues"
            },
            {
              "type": "text",
              "value": ". See "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "this issue"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/issues/15760"
            },
            {
              "type": "text",
              "value": " for an example."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "If you're looking for subjects, our formal roadmap for documentation is a "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "NumPy Enhancement Proposal (NEP)"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "NEP 44 - Restructuring the NumPy Documentation"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://www.numpy.org/neps/nep-0044-restructuring-numpy-docs"
            },
            {
              "type": "text",
              "value": ". It identifies areas where our docs need help and lists several additions we'd like to see, including "
            },
            {
              "type": "inlineCode",
              "value": "Jupyter notebooks <numpy_tutorials>"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Contributing new pages",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "There are formulas for writing useful documents, and four formulas cover nearly everything. There are four formulas because there are four categories of document -- "
            },
            {
              "type": "inlineCode",
              "value": "tutorial"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "how-to guide"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "explanation"
            },
            {
              "type": "text",
              "value": ", and "
            },
            {
              "type": "inlineCode",
              "value": "reference"
            },
            {
              "type": "text",
              "value": ". The insight that docs divide up this way belongs to Daniele Procida and his "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "Di\u00e1taxis Framework"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://diataxis.fr/"
            },
            {
              "type": "text",
              "value": ". When you begin a document or propose one, have in mind which of these types it will be."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": "tutorials_howtos_explanations",
      "title": "Documentation framework",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "In addition to the documentation that is part of the NumPy source tree, you can submit content in Jupyter Notebook format to the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "NumPy Tutorials"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://numpy.org/numpy-tutorials"
            },
            {
              "type": "text",
              "value": " page. This set of tutorials and educational materials is meant to provide high-quality resources by the NumPy project, both for self-learning and for teaching classes with. These resources are developed in a separate GitHub repository, "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "numpy-tutorials"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy-tutorials"
            },
            {
              "type": "text",
              "value": ", where you can check out existing notebooks, open issues to suggest new topics or submit your own tutorials as pull requests."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": "numpy_tutorials",
      "title": "NumPy tutorials",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Don't worry if English is not your first language, or if you can only come up with a rough draft. Open source is a community effort. Do your best -- we'll help fix issues."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Images and real-life data make text more engaging and powerful, but be sure what you use is appropriately licensed and available. Here again, even a rough idea for artwork can be polished by others."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For now, the only data formats accepted by NumPy are those also used by other Python scientific libraries like pandas, SciPy, or Matplotlib. We're developing a package to accept more formats; contact us for details."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "NumPy documentation is kept in the source code tree. To get your document into the docbase you must download the tree, "
            },
            {
              "type": "inlineCode",
              "value": "build it\n<howto-build-docs>"
            },
            {
              "type": "text",
              "value": ", and submit a pull request. If GitHub and pull requests are new to you, check our "
            },
            {
              "type": "inlineCode",
              "value": "Contributor Guide <devindex>"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Our markup language is reStructuredText (rST), which is more elaborate than Markdown. Sphinx, the tool many Python projects use to build and link project documentation, converts the rST into HTML and other formats. For more on rST, see the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "Quick reStructuredText Guide"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://docutils.sourceforge.io/docs/user/rst/quickref.html"
            },
            {
              "type": "text",
              "value": " or the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "reStructuredText Primer"
                }
              ],
              "title": "",
              "type": "link",
              "url": "http://www.sphinx-doc.org/en/stable/usage/restructuredtext/basics.html"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": "contributing",
      "title": "More on contributing",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "If you run across outside material that would be a useful addition to the NumPy docs, let us know by "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "opening an issue"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/issues"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "You don't have to contribute here to contribute to NumPy. You've contributed if you write a tutorial on your blog, create a YouTube video, or answer questions on Stack Overflow and other sites."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Contributing indirectly",
      "type": "Section"
    },
    {
      "children": [],
      "level": 1,
      "target": "howto-document",
      "title": "Documentation style",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "In general, we follow the   "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "Google developer documentation style guide"
                        }
                      ],
                      "title": "",
                      "type": "link",
                      "url": "https://developers.google.com/style"
                    },
                    {
                      "type": "text",
                      "value": "   for the User Guide."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "NumPy style governs cases where:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "Google has no guidance, or"
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "We prefer not to use the Google style"
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        }
                      ],
                      "ordered": false,
                      "spread": false,
                      "start": 1,
                      "type": "list"
                    }
                  ],
                  "type": "blockquote"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Our current rules:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "We pluralize "
                                },
                                {
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "index"
                                    }
                                  ],
                                  "type": "emphasis"
                                },
                                {
                                  "type": "text",
                                  "value": " as "
                                },
                                {
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "indices"
                                    }
                                  ],
                                  "type": "emphasis"
                                },
                                {
                                  "type": "text",
                                  "value": " rather than         "
                                },
                                {
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "indexes"
                                    }
                                  ],
                                  "title": "",
                                  "type": "link",
                                  "url": "https://developers.google.com/style/word-list#letter-i"
                                },
                                {
                                  "type": "text",
                                  "value": ",         following the precedent of "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "numpy.indices"
                                },
                                {
                                  "type": "text",
                                  "value": "."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "For consistency we also pluralize "
                                },
                                {
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "matrix"
                                    }
                                  ],
                                  "type": "emphasis"
                                },
                                {
                                  "type": "text",
                                  "value": " as "
                                },
                                {
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "matrices"
                                    }
                                  ],
                                  "type": "emphasis"
                                },
                                {
                                  "type": "text",
                                  "value": "."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        }
                      ],
                      "ordered": false,
                      "spread": false,
                      "start": 1,
                      "type": "list"
                    }
                  ],
                  "type": "blockquote"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Grammatical issues inadequately addressed by the NumPy or Google rules are   decided by the section on \"Grammar and Usage\" in the most recent edition of   the "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "Chicago Manual of Style"
                        }
                      ],
                      "title": "",
                      "type": "link",
                      "url": "https://en.wikipedia.org/wiki/The_Chicago_Manual_of_Style"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "We welcome being   "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "alerted"
                        }
                      ],
                      "title": "",
                      "type": "link",
                      "url": "https://github.com/numpy/numpy/issues"
                    },
                    {
                      "type": "text",
                      "value": " to cases   we should add to the NumPy style rules."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": false,
          "spread": false,
          "start": 1,
          "type": "list"
        }
      ],
      "level": 2,
      "target": "userdoc_guide",
      "title": "User documentation",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "When using "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "Sphinx"
                }
              ],
              "title": "",
              "type": "link",
              "url": "http://www.sphinx-doc.org/"
            },
            {
              "type": "text",
              "value": " in combination with the NumPy conventions, you should use the "
            },
            {
              "type": "inlineCode",
              "value": "numpydoc"
            },
            {
              "type": "text",
              "value": " extension so that your docstrings will be handled correctly. For example, Sphinx will extract the "
            },
            {
              "type": "inlineCode",
              "value": "Parameters"
            },
            {
              "type": "text",
              "value": " section from your docstring and convert it into a field list.  Using "
            },
            {
              "type": "inlineCode",
              "value": "numpydoc"
            },
            {
              "type": "text",
              "value": " will also avoid the reStructuredText errors produced by plain Sphinx when it encounters NumPy docstring conventions like section headers (e.g. "
            },
            {
              "type": "inlineCode",
              "value": "-------------"
            },
            {
              "type": "text",
              "value": ") that sphinx does not expect to find in docstrings."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "It is available from:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "numpydoc on PyPI"
                        }
                      ],
                      "title": "",
                      "type": "link",
                      "url": "https://pypi.python.org/pypi/numpydoc"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "numpydoc on GitHub"
                        }
                      ],
                      "title": "",
                      "type": "link",
                      "url": "https://github.com/numpy/numpydoc/"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": false,
          "spread": false,
          "start": 1,
          "type": "list"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Note that for documentation within NumPy, it is not necessary to do "
            },
            {
              "type": "inlineCode",
              "value": "import numpy as np"
            },
            {
              "type": "text",
              "value": " at the beginning of an example."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Please use the "
            },
            {
              "type": "inlineCode",
              "value": "numpydoc"
            },
            {
              "type": "text",
              "value": " "
            },
            {
              "type": "inlineCode",
              "value": "formatting standard <numpydoc:format>"
            },
            {
              "type": "text",
              "value": " as shown in their "
            },
            {
              "type": "inlineCode",
              "value": "example <numpydoc:example>"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": "docstring_intro",
      "title": "Docstrings",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "NumPy uses "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "Doxygen_"
            },
            {
              "type": "text",
              "value": " to parse specially-formatted C/C++ comment blocks. This generates XML files, which are  converted by "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "Breathe_"
            },
            {
              "type": "text",
              "value": " into RST, which is used by Sphinx."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "It takes three steps to complete the documentation process"
                }
              ],
              "type": "strong"
            },
            {
              "type": "text",
              "value": ":"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": "doc_c_code",
      "title": "Documenting C/C++ Code",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Although there is still no commenting style set to follow, the Javadoc is more preferable than the others due to the similarities with the current existing non-indexed comment blocks."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "note "
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "Please see "
                },
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "\"Documenting the code\" <https://www.doxygen.nl/manual/docblocks.html>"
                },
                {
                  "type": "text",
                  "value": "."
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "This is what Javadoc style looks like"
                }
              ],
              "type": "strong"
            },
            {
              "type": "text",
              "value": ":"
            }
          ],
          "type": "paragraph"
        },
        {
          "args": "examples/doxy_func.h",
          "children": [],
          "name": "literalinclude",
          "options": {},
          "type": "mystDirective",
          "value": ""
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "And here is how it is rendered"
                }
              ],
              "type": "strong"
            },
            {
              "type": "text",
              "value": ":"
            }
          ],
          "type": "paragraph"
        },
        {
          "args": "doxy_javadoc_example",
          "children": [],
          "name": "doxygenfunction",
          "options": {},
          "type": "mystDirective",
          "value": ""
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "For line comment, you can use a triple forward slash. For example"
                }
              ],
              "type": "strong"
            },
            {
              "type": "text",
              "value": ":"
            }
          ],
          "type": "paragraph"
        },
        {
          "args": "examples/doxy_class.hpp",
          "children": [],
          "name": "literalinclude",
          "options": {},
          "type": "mystDirective",
          "value": ""
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "And here is how it is rendered"
                }
              ],
              "type": "strong"
            },
            {
              "type": "text",
              "value": ":"
            }
          ],
          "type": "paragraph"
        },
        {
          "args": "DoxyLimbo",
          "children": [],
          "name": "doxygenclass",
          "options": {},
          "type": "mystDirective",
          "value": ""
        }
      ],
      "level": 3,
      "target": null,
      "title": "1. Writing the comment blocks",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "note "
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "For more tags/commands, please take a look at https://www.doxygen.nl/manual/commands.html"
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        },
        {
          "children": [
            {
              "type": "inlineCode",
              "value": "@brief"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Starts a paragraph that serves as a brief description. By default the first sentence of the documentation block is automatically treated as a brief description, since option "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "JAVADOC_AUTOBRIEF"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://www.doxygen.nl/manual/config.html#cfg_javadoc_autobrief"
            },
            {
              "type": "text",
              "value": " is enabled within doxygen configurations."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "inlineCode",
              "value": "@details"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Just like "
            },
            {
              "type": "inlineCode",
              "value": "@brief"
            },
            {
              "type": "text",
              "value": " starts a brief description, "
            },
            {
              "type": "inlineCode",
              "value": "@details"
            },
            {
              "type": "text",
              "value": " starts the detailed description. You can also start a new paragraph (blank line) then the "
            },
            {
              "type": "inlineCode",
              "value": "@details"
            },
            {
              "type": "text",
              "value": " command is not needed."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "inlineCode",
              "value": "@param"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Starts a parameter description for a function parameter with name <parameter-name>, followed by a description of the parameter. The existence of the parameter is checked and a warning is given if the documentation of this (or any other) parameter is missing or not present in the function declaration or definition."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "inlineCode",
              "value": "@return"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Starts a return value description for a function. Multiple adjacent "
            },
            {
              "type": "inlineCode",
              "value": "@return"
            },
            {
              "type": "text",
              "value": " commands will be joined into a single paragraph. The "
            },
            {
              "type": "inlineCode",
              "value": "@return"
            },
            {
              "type": "text",
              "value": " description ends when a blank line or some other sectioning command is encountered."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "inlineCode",
              "value": "@code/@endcode"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Starts/Ends a block of code. A code block is treated differently from ordinary text. It is interpreted as source code."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "inlineCode",
              "value": "@rst/@endrst"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Starts/Ends a block of reST markup."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 4,
      "target": null,
      "title": "Common Doxygen Tags:",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "Take a look at the following example"
                }
              ],
              "type": "strong"
            },
            {
              "type": "text",
              "value": ":"
            }
          ],
          "type": "paragraph"
        },
        {
          "args": "examples/doxy_rst.h",
          "children": [],
          "name": "literalinclude",
          "options": {},
          "type": "mystDirective",
          "value": ""
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "And here is how it is rendered"
                }
              ],
              "type": "strong"
            },
            {
              "type": "text",
              "value": ":"
            }
          ],
          "type": "paragraph"
        },
        {
          "args": "doxy_reST_example",
          "children": [],
          "name": "doxygenfunction",
          "options": {},
          "type": "mystDirective",
          "value": ""
        }
      ],
      "level": 4,
      "target": null,
      "title": "Example",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Not all headers files are collected automatically. You have to add the desired C/C++ header paths within the sub-config files of Doxygen."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Sub-config files have the unique name "
            },
            {
              "type": "inlineCode",
              "value": ".doxyfile"
            },
            {
              "type": "text",
              "value": ", which you can usually find near directories that contain documented headers. You need to create a new config file if there's not one located in a path close(2-depth) to the headers you want to add."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Sub-config files can accept any of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "Doxygen_"
            },
            {
              "type": "text",
              "value": " "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "configuration options"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://www.doxygen.nl/manual/config.html"
            },
            {
              "type": "text",
              "value": ", but do not override or re-initialize any configuration option, rather only use the concatenation operator \"+=\". For example     "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "# to specify certain headers\nINPUT += @CUR_DIR/header1.h \\\n         @CUR_DIR/header2.h\n# to add all headers in certain path\nINPUT += @CUR_DIR/to/headers\n# to define certain macros\nPREDEFINED += C_MACRO(X)=X\n# to enable certain branches\nPREDEFINED += NPY_HAVE_FEATURE \\\n              NPY_HAVE_FEATURE2"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "note "
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "@CUR_DIR is a template constant returns the current dir path of the sub-config file."
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 3,
      "target": null,
      "title": "2. Feeding Doxygen",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "Breathe_"
            },
            {
              "type": "text",
              "value": " provides a wide range of custom directives to allow converting the documents generated by "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "Doxygen_"
            },
            {
              "type": "text",
              "value": " into reST files."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "note "
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "For more information, please check out \""
                },
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "Directives & Config Variables <https://breathe.readthedocs.io/en/latest/directives.html>"
                },
                {
                  "type": "text",
                  "value": "\""
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 3,
      "target": null,
      "title": "3. Inclusion directives",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "inlineCode",
              "value": "doxygenfunction"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "This directive generates the appropriate output for a single function. The function name is required to be unique in the project."
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": ".. doxygenfunction:: <function name>\n    :outline:\n    :no-link:"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Checkout the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "example"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://breathe.readthedocs.io/en/latest/function.html#function-example"
            },
            {
              "type": "text",
              "value": " to see it in action."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "inlineCode",
              "value": "doxygenclass"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "This directive generates the appropriate output for a single class. It takes the standard project, path, outline and no-link options and additionally the members, protected-members, private-members, undoc-members, membergroups and members-only options:"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": ".. doxygenclass:: <class name>\n   :members: [...]\n   :protected-members:\n   :private-members:\n   :undoc-members:\n   :membergroups: ...\n   :members-only:\n   :outline:\n   :no-link:"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Checkout the "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "doxygenclass documentation <https://breathe.readthedocs.io/en/latest/class.html#class-example>_"
            },
            {
              "type": "text",
              "value": " for more details and to see it in action."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "inlineCode",
              "value": "doxygennamespace"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "This directive generates the appropriate output for the contents of a namespace. It takes the standard project, path, outline and no-link options and additionally the content-only, members, protected-members, private-members and undoc-members options. To reference a nested namespace, the full namespaced path must be provided, e.g. foobar for the bar namespace inside the foo namespace."
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": ".. doxygennamespace:: <namespace>\n   :content-only:\n   :outline:\n   :members:\n   :protected-members:\n   :private-members:\n   :undoc-members:\n   :no-link:"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Checkout the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "doxygennamespace documentation"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://breathe.readthedocs.io/en/latest/namespace.html#namespace-example"
            },
            {
              "type": "text",
              "value": " for more details and to see it in action."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "inlineCode",
              "value": "doxygengroup"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "This directive generates the appropriate output for the contents of a doxygen group. A doxygen group can be declared with specific doxygen markup in the source comments as covered in the doxygen "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "grouping documentation"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://www.doxygen.nl/manual/grouping.html"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "It takes the standard project, path, outline and no-link options and additionally the content-only, members, protected-members, private-members and undoc-members options."
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": ".. doxygengroup:: <group name>\n   :content-only:\n   :outline:\n   :members:\n   :protected-members:\n   :private-members:\n   :undoc-members:\n   :no-link:\n   :inner:"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Checkout the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "doxygengroup documentation"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://breathe.readthedocs.io/en/latest/group.html#group-example"
            },
            {
              "type": "text",
              "value": " for more details and to see it in action."
            }
          ],
          "type": "paragraph"
        },
        {
          "placeholder": "target",
          "type": "Unimplemented",
          "value": ".. _`Doxygen`: https://www.doxygen.nl/index.html"
        },
        {
          "placeholder": "target",
          "type": "Unimplemented",
          "value": ".. _`Breathe`: https://breathe.readthedocs.io/en/latest/"
        }
      ],
      "level": 4,
      "target": null,
      "title": "Common directives:",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The leading organization of technical writers,   "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "Write the Docs"
                        }
                      ],
                      "title": "",
                      "type": "link",
                      "url": "https://www.writethedocs.org/"
                    },
                    {
                      "type": "text",
                      "value": ",   holds conferences, hosts learning resources, and runs a Slack channel."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "\"Every engineer is also a writer,\" says Google's   "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "collection of technical writing resources"
                        }
                      ],
                      "title": "",
                      "type": "link",
                      "url": "https://developers.google.com/tech-writing"
                    },
                    {
                      "type": "text",
                      "value": ",   which includes free online courses for developers in planning and writing   documents."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "Software Carpentry's"
                        }
                      ],
                      "title": "",
                      "type": "link",
                      "url": "https://software-carpentry.org/lessons"
                    },
                    {
                      "type": "text",
                      "value": " mission is   teaching software to researchers. In addition to hosting the curriculum, the   website explains how to present ideas effectively."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": false,
          "spread": false,
          "start": 1,
          "type": "list"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Documentation reading",
      "type": "Section"
    }
  ],
  "content": {},
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": null,
  "item_line": null,
  "item_type": null,
  "ordered_sections": [],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}