{
  "aliases": [],
  "arbitrary": [
    {
      "children": [
        {
          "args": "Travis E. Oliphant",
          "children": [],
          "name": "sectionauthor",
          "options": {},
          "type": "mystDirective",
          "value": ""
        },
        {
          "children": [
            {
              "type": "text",
              "value": "When NumPy is built, information about system configuration is recorded, and is made available for extension modules using NumPy's C API.  These are mostly defined in "
            },
            {
              "type": "inlineCode",
              "value": "numpyconfig.h"
            },
            {
              "type": "text",
              "value": " (included in "
            },
            {
              "type": "inlineCode",
              "value": "ndarrayobject.h"
            },
            {
              "type": "text",
              "value": "). The public symbols are prefixed by "
            },
            {
              "type": "inlineCode",
              "value": "NPY_*"
            },
            {
              "type": "text",
              "value": ". NumPy also offers some functions for querying information about the platform in use."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For private use, NumPy also constructs a "
            },
            {
              "type": "inlineCode",
              "value": "config.h"
            },
            {
              "type": "text",
              "value": " in the NumPy include directory, which is not exported by NumPy (that is a python extension which use the numpy C API will not see those symbols), to avoid namespace pollution."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": "System configuration",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The "
            },
            {
              "type": "inlineCode",
              "value": "NPY_SIZEOF_{CTYPE}"
            },
            {
              "type": "text",
              "value": " constants are defined so that sizeof information is available to the pre-processor."
            }
          ],
          "type": "paragraph"
        },
        {
          "args": "NPY_SIZEOF_SHORT",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": "sizeof(short)"
        },
        {
          "args": "NPY_SIZEOF_INT",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": "sizeof(int)"
        },
        {
          "args": "NPY_SIZEOF_LONG",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": "sizeof(long)"
        },
        {
          "args": "NPY_SIZEOF_LONGLONG",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": "sizeof(longlong) where longlong is defined appropriately on the\nplatform."
        },
        {
          "args": "NPY_SIZEOF_PY_LONG_LONG",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": ""
        },
        {
          "args": "NPY_SIZEOF_FLOAT",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": "sizeof(float)"
        },
        {
          "args": "NPY_SIZEOF_DOUBLE",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": "sizeof(double)"
        },
        {
          "args": "NPY_SIZEOF_LONG_DOUBLE",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": ""
        },
        {
          "args": "NPY_SIZEOF_LONGDOUBLE",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": "sizeof(longdouble)"
        },
        {
          "args": "NPY_SIZEOF_PY_INTPTR_T",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": ""
        },
        {
          "args": "NPY_SIZEOF_INTP",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": "Size of a pointer on this platform (sizeof(void \\*))"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Data type sizes",
      "type": "Section"
    },
    {
      "children": [
        {
          "args": "NPY_CPU_X86",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": ""
        },
        {
          "args": "NPY_CPU_AMD64",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": ""
        },
        {
          "args": "NPY_CPU_IA64",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": ""
        },
        {
          "args": "NPY_CPU_PPC",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": ""
        },
        {
          "args": "NPY_CPU_PPC64",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": ""
        },
        {
          "args": "NPY_CPU_SPARC",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": ""
        },
        {
          "args": "NPY_CPU_SPARC64",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": ""
        },
        {
          "args": "NPY_CPU_S390",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": ""
        },
        {
          "args": "NPY_CPU_PARISC",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": ".. versionadded:: 1.3.0\n\nCPU architecture of the platform; only one of the above is\ndefined.\n\nDefined in ``numpy/npy_cpu.h``"
        },
        {
          "args": "NPY_LITTLE_ENDIAN",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": ""
        },
        {
          "args": "NPY_BIG_ENDIAN",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": ""
        },
        {
          "args": "NPY_BYTE_ORDER",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": ".. versionadded:: 1.3.0\n\nPortable alternatives to the ``endian.h`` macros of GNU Libc.\nIf big endian, :c:data:`NPY_BYTE_ORDER` == :c:data:`NPY_BIG_ENDIAN`, and\nsimilarly for little endian architectures.\n\nDefined in ``numpy/npy_endian.h``."
        },
        {
          "args": "int PyArray_GetEndianness()",
          "children": [],
          "name": "c:function",
          "options": {},
          "type": "mystDirective",
          "value": ".. versionadded:: 1.3.0\n\nReturns the endianness of the current platform.\nOne of :c:data:`NPY_CPU_BIG`, :c:data:`NPY_CPU_LITTLE`,\nor :c:data:`NPY_CPU_UNKNOWN_ENDIAN`.\n\n.. c:macro:: NPY_CPU_BIG\n\n.. c:macro:: NPY_CPU_LITTLE\n\n.. c:macro:: NPY_CPU_UNKNOWN_ENDIAN"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Platform information",
      "type": "Section"
    },
    {
      "children": [
        {
          "args": "NPY_LIKELY",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": ""
        },
        {
          "args": "NPY_UNLIKELY",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": ""
        },
        {
          "args": "NPY_UNUSED",
          "children": [],
          "name": "c:macro",
          "options": {},
          "type": "mystDirective",
          "value": ""
        }
      ],
      "level": 1,
      "target": null,
      "title": "Compiler directives",
      "type": "Section"
    }
  ],
  "content": {},
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": null,
  "item_line": null,
  "item_type": null,
  "ordered_sections": [],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}