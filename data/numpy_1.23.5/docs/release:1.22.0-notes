{
  "aliases": [],
  "arbitrary": [
    {
      "children": [
        {
          "args": "numpy",
          "children": [],
          "name": "currentmodule",
          "options": {},
          "type": "mystDirective",
          "value": ""
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "NumPy 1.22.0 is a big release featuring the work of 153 contributors spread over 609 pull requests. There have been many improvements, highlights are:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Annotations of the main namespace are essentially complete. Upstream is a   moving target, so there will likely be further improvements, but the major   work is done. This is probably the most user visible enhancement in this   release."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A preliminary version of the proposed Array-API is provided. This is a step   in creating a standard collection of functions that can be used across   applications such as CuPy and JAX."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "NumPy now has a DLPack backend. DLPack provides a common interchange format   for array (tensor) data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "New methods for "
                    },
                    {
                      "type": "inlineCode",
                      "value": "quantile"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "inlineCode",
                      "value": "percentile"
                    },
                    {
                      "type": "text",
                      "value": ", and related functions. The new   methods provide a complete set of the methods commonly found in the   literature."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The universal functions have been refactored to implement most of   "
                    },
                    {
                      "type": "inlineCode",
                      "value": "NEP 43 <NEP43>"
                    },
                    {
                      "type": "text",
                      "value": ".  This also unlocks the ability to experiment with the   future DType API."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A new configurable allocator for use by downstream projects."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": false,
          "spread": false,
          "start": 1,
          "type": "list"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "These are in addition to the ongoing work to provide SIMD support for commonly used functions, improvements to F2PY, and better documentation."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The Python versions supported in this release are 3.8-3.10, Python 3.7 has been dropped. Note that the Mac wheels are now based on OS X 10.14 rather than 10.9 that was used in previous NumPy release cycles. 10.14 is the oldest release supported by Apple. Also note that 32 bit wheels are only provided for Python 3.8 and 3.9 on Windows, all other wheels are 64 bits on account of Ubuntu, Fedora, and other Linux distributions dropping 32 bit support. All 64 bit wheels are also linked with 64 bit integer OpenBLAS, which should fix the occasional problems encountered by folks using truly huge arrays."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": "NumPy 1.22.0 Release Notes",
      "type": "Section"
    },
    {
      "children": [],
      "level": 1,
      "target": null,
      "title": "Expired deprecations",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Using the strings "
            },
            {
              "type": "inlineCode",
              "value": "\"Bytes0\""
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "\"Datetime64\""
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "\"Str0\""
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "\"Uint32\""
            },
            {
              "type": "text",
              "value": ", and "
            },
            {
              "type": "inlineCode",
              "value": "\"Uint64\""
            },
            {
              "type": "text",
              "value": " as a dtype will now raise a "
            },
            {
              "type": "inlineCode",
              "value": "TypeError"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19539"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19539"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Deprecated numeric style dtype strings have been removed",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "inlineCode",
              "value": "numpy.loads"
            },
            {
              "type": "text",
              "value": " was deprecated in v1.15, with the recommendation that users use "
            },
            {
              "type": "inlineCode",
              "value": "pickle.loads"
            },
            {
              "type": "text",
              "value": " instead.  "
            },
            {
              "type": "inlineCode",
              "value": "ndfromtxt"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineCode",
              "value": "mafromtxt"
            },
            {
              "type": "text",
              "value": " were both deprecated in v1.17 - users should use "
            },
            {
              "type": "inlineCode",
              "value": "numpy.genfromtxt"
            },
            {
              "type": "text",
              "value": " instead with the appropriate value for the "
            },
            {
              "type": "inlineCode",
              "value": "usemask"
            },
            {
              "type": "text",
              "value": " parameter."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19615"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19615"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Expired deprecations for ``loads``, ``ndfromtxt``, and ``mafromtxt`` in npyio",
      "type": "Section"
    },
    {
      "children": [],
      "level": 1,
      "target": null,
      "title": "Deprecations",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The misspelled keyword argument "
            },
            {
              "type": "inlineCode",
              "value": "delimitor"
            },
            {
              "type": "text",
              "value": " of "
            },
            {
              "type": "inlineCode",
              "value": "numpy.ma.mrecords.fromtextfile()"
            },
            {
              "type": "text",
              "value": " has been changed to "
            },
            {
              "type": "inlineCode",
              "value": "delimiter"
            },
            {
              "type": "text",
              "value": ", using it will emit a deprecation warning."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19921"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19921"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Use delimiter rather than delimitor as kwarg in mrecords",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "inlineCode",
              "value": "numpy.partition"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineCode",
              "value": "numpy.argpartition"
            },
            {
              "type": "text",
              "value": " would previously accept boolean values for the "
            },
            {
              "type": "inlineCode",
              "value": "kth"
            },
            {
              "type": "text",
              "value": " parameter, which would subsequently be converted into integers. This behavior has now been deprecated."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-20000"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/20000"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Passing boolean ``kth`` values to (arg-)partition has been deprecated",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The "
            },
            {
              "type": "inlineCode",
              "value": "numpy.MachAr"
            },
            {
              "type": "text",
              "value": " class and "
            },
            {
              "type": "inlineCode",
              "value": "finfo.machar <numpy.finfo>"
            },
            {
              "type": "text",
              "value": " attribute have been deprecated. Users are encouraged to access the property if interest directly from the corresponding "
            },
            {
              "type": "inlineCode",
              "value": "numpy.finfo"
            },
            {
              "type": "text",
              "value": " attribute."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-20201"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/20201"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "The ``np.MachAr`` class has been deprecated",
      "type": "Section"
    },
    {
      "children": [],
      "level": 1,
      "target": null,
      "title": "Compatibility notes",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "NumPy now sets the "
            },
            {
              "type": "inlineCode",
              "value": "-ftrapping-math"
            },
            {
              "type": "text",
              "value": " option on clang to enforce correct floating point error handling for universal functions.  Clang defaults to non-IEEE and C99 conform behaviour otherwise.  This change (using the equivalent but newer "
            },
            {
              "type": "inlineCode",
              "value": "-ffp-exception-behavior=strict"
            },
            {
              "type": "text",
              "value": ") was attempted in NumPy 1.21, but was effectively never used."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19479"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19479"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Distutils forces strict floating point model on clang",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Floor division of complex types will now result in a "
            },
            {
              "type": "inlineCode",
              "value": "TypeError"
            }
          ],
          "type": "paragraph"
        },
        {
          "args": "python",
          "children": [],
          "name": "code-block",
          "options": {},
          "type": "mystDirective",
          "value": ">>> a = np.arange(10) + 1j* np.arange(10)\n>>> a // 1\nTypeError: ufunc 'floor_divide' not supported for the input types..."
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19135"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19135"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Removed floor division support for complex types",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "When a function that respects "
            },
            {
              "type": "inlineCode",
              "value": "numpy.ndarray"
            },
            {
              "type": "text",
              "value": " subclasses is vectorized using "
            },
            {
              "type": "inlineCode",
              "value": "numpy.vectorize"
            },
            {
              "type": "text",
              "value": ", the vectorized function will now be subclass-safe also for cases that a signature is given (i.e., when creating a "
            },
            {
              "type": "inlineCode",
              "value": "gufunc"
            },
            {
              "type": "text",
              "value": "): the output class will be the same as that returned by the first call to the underlying function."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19356"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19356"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "``numpy.vectorize`` functions now produce the same output class as the base function",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Python support has been dropped. This is rather strict, there are changes that require Python >= 3.8."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19665"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19665"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Python 3.7 is no longer supported",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The repr of "
            },
            {
              "type": "inlineCode",
              "value": "np.dtype({\"names\": [\"a\"], \"formats\": [int], \"offsets\": [2]})"
            },
            {
              "type": "text",
              "value": " is now "
            },
            {
              "type": "inlineCode",
              "value": "dtype({'names': ['a'], 'formats': ['<i8'], 'offsets': [2], 'itemsize':\n10})"
            },
            {
              "type": "text",
              "value": ", whereas spaces where previously omitted after colons and between fields."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The old behavior can be restored via "
            },
            {
              "type": "inlineCode",
              "value": "np.set_printoptions(legacy=\"1.21\")"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19687"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19687"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "str/repr of complex dtypes now include space after punctuation",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Fixed a bug in the "
            },
            {
              "type": "inlineCode",
              "value": "advance"
            },
            {
              "type": "text",
              "value": " method of "
            },
            {
              "type": "inlineCode",
              "value": "PCG64DSXM"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineCode",
              "value": "PCG64"
            },
            {
              "type": "text",
              "value": ". The bug only affects results when the step was larger than "
            },
            {
              "type": "inlineMath",
              "value": "2^{64}"
            },
            {
              "type": "text",
              "value": " on platforms that do not support 128-bit integers(e.g., Windows and 32-bit Linux)."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-20049"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/20049"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Corrected ``advance`` in ``PCG64DSXM`` and ``PCG64``",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "There was bug in the generation of 32 bit floating point values from the uniform distribution that would result in the least significant bit of the random variate always being 0.  This has been fixed."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "This change affects the variates produced by the "
            },
            {
              "type": "inlineCode",
              "value": "random.Generator"
            },
            {
              "type": "text",
              "value": " methods "
            },
            {
              "type": "inlineCode",
              "value": "random"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "standard_normal"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "standard_exponential"
            },
            {
              "type": "text",
              "value": ", and "
            },
            {
              "type": "inlineCode",
              "value": "standard_gamma"
            },
            {
              "type": "text",
              "value": ", but only when the dtype is specified as "
            },
            {
              "type": "inlineCode",
              "value": "numpy.float32"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-20314"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/20314"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Change in generation of random 32 bit floating point variates",
      "type": "Section"
    },
    {
      "children": [],
      "level": 1,
      "target": null,
      "title": "C API changes",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The masked inner-loop selector is now never used.  A warning will be given in the unlikely event that it was customized."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "We do not expect that any code uses this.  If you do use it, you must unset the selector on newer NumPy version.  Please also contact the NumPy developers, we do anticipate providing a new, more specific, mechanism."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The customization was part of a never-implemented feature to allow for faster masked operations."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19259"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19259"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Masked inner-loops cannot be customized anymore",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The new header "
            },
            {
              "type": "inlineCode",
              "value": "experimental_public_dtype_api.h"
            },
            {
              "type": "text",
              "value": " allows to experiment with future API for improved universal function and especially user DType support. At this time it is advisable to experiment using the development version of NumPy since some changes are expected and new features will be unlocked."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19919"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19919"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Experimental exposure of future DType and UFunc API",
      "type": "Section"
    },
    {
      "children": [],
      "level": 1,
      "target": null,
      "title": "New Features",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "As detailed in "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "NEP 49"
            },
            {
              "type": "text",
              "value": ", the function used for allocation of the data segment of a ndarray can be changed. The policy can be set globally or in a context. For more information see the NEP and the "
            },
            {
              "type": "inlineCode",
              "value": "data_memory"
            },
            {
              "type": "text",
              "value": " reference docs. Also add a "
            },
            {
              "type": "inlineCode",
              "value": "NUMPY_WARN_IF_NO_MEM_POLICY"
            },
            {
              "type": "text",
              "value": " override to warn on dangerous use of transfering ownership by setting "
            },
            {
              "type": "inlineCode",
              "value": "NPY_ARRAY_OWNDATA"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "placeholder": "target",
          "type": "Unimplemented",
          "value": ".. _`NEP 49`: https://numpy.org/neps/nep-0049.html"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-17582"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/17582"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "NEP 49 configurable allocators",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "An initial implementation of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "NEP 47"
            },
            {
              "type": "text",
              "value": " (adoption the array API standard) has been added as "
            },
            {
              "type": "inlineCode",
              "value": "numpy.array_api"
            },
            {
              "type": "text",
              "value": ". The implementation is experimental and will issue a UserWarning on import, as the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "array API standard"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://data-apis.org/array-api/latest/index.html"
            },
            {
              "type": "text",
              "value": " is still in draft state. "
            },
            {
              "type": "inlineCode",
              "value": "numpy.array_api"
            },
            {
              "type": "text",
              "value": " is a conforming implementation of the array API standard, which is also minimal, meaning that only those functions and behaviors that are required by the standard are implemented (see the NEP for more info). Libraries wishing to make use of the array API standard are encouraged to use "
            },
            {
              "type": "inlineCode",
              "value": "numpy.array_api"
            },
            {
              "type": "text",
              "value": " to check that they are only using functionality that is guaranteed to be present in standard conforming implementations."
            }
          ],
          "type": "paragraph"
        },
        {
          "placeholder": "target",
          "type": "Unimplemented",
          "value": ".. _`NEP 47`: https://numpy.org/neps/nep-0047-array-api-standard.html"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-18585"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/18585"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Implementation of the NEP 47 (adopting the array API standard)",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This feature depends on "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "Doxygen_"
            },
            {
              "type": "text",
              "value": " in the generation process and on "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "Breathe_"
            },
            {
              "type": "text",
              "value": " to integrate it with Sphinx."
            }
          ],
          "type": "paragraph"
        },
        {
          "placeholder": "target",
          "type": "Unimplemented",
          "value": ".. _`Doxygen`: https://www.doxygen.nl/index.html"
        },
        {
          "placeholder": "target",
          "type": "Unimplemented",
          "value": ".. _`Breathe`: https://breathe.readthedocs.io/en/latest/"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-18884"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/18884"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Generate C/C++ API reference documentation from comments blocks is now possible",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "mypy_"
            },
            {
              "type": "text",
              "value": " plugin, introduced in "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "numpy/numpy#17843"
            },
            {
              "type": "text",
              "value": ", has again been expanded: the plugin now is now responsible for setting the platform-specific precision of "
            },
            {
              "type": "inlineCode",
              "value": "numpy.ctypeslib.c_intp"
            },
            {
              "type": "text",
              "value": ", the latter being used as data type for various "
            },
            {
              "type": "inlineCode",
              "value": "numpy.ndarray.ctypes"
            },
            {
              "type": "text",
              "value": " attributes."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Without the plugin, aforementioned type will default to "
            },
            {
              "type": "inlineCode",
              "value": "ctypes.c_int64"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "To enable the plugin, one must add it to their mypy "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "configuration file"
            },
            {
              "type": "text",
              "value": ":"
            }
          ],
          "type": "paragraph"
        },
        {
          "args": "ini",
          "children": [],
          "name": "code-block",
          "options": {},
          "type": "mystDirective",
          "value": "[mypy]\nplugins = numpy.typing.mypy_plugin"
        },
        {
          "placeholder": "target",
          "type": "Unimplemented",
          "value": ".. _mypy: http://mypy-lang.org/"
        },
        {
          "placeholder": "target",
          "type": "Unimplemented",
          "value": ".. _configuration file: https://mypy.readthedocs.io/en/stable/config_file.html"
        },
        {
          "placeholder": "target",
          "type": "Unimplemented",
          "value": ".. _`numpy/numpy#17843`: https://github.com/numpy/numpy/pull/17843"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19062"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19062"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Assign the platform-specific ``c_intp`` precision via a mypy plugin",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Add a "
            },
            {
              "type": "inlineCode",
              "value": "ndarray.__dlpack__()"
            },
            {
              "type": "text",
              "value": " method which returns a "
            },
            {
              "type": "inlineCode",
              "value": "dlpack"
            },
            {
              "type": "text",
              "value": " C structure wrapped in a "
            },
            {
              "type": "inlineCode",
              "value": "PyCapsule"
            },
            {
              "type": "text",
              "value": ". Also add a "
            },
            {
              "type": "inlineCode",
              "value": "np._from_dlpack(obj)"
            },
            {
              "type": "text",
              "value": " function, where "
            },
            {
              "type": "inlineCode",
              "value": "obj"
            },
            {
              "type": "text",
              "value": " supports "
            },
            {
              "type": "inlineCode",
              "value": "__dlpack__()"
            },
            {
              "type": "text",
              "value": ", and returns an "
            },
            {
              "type": "inlineCode",
              "value": "ndarray"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19083"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19083"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Add NEP 47-compatible dlpack support",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "inlineCode",
              "value": "keepdims"
            },
            {
              "type": "text",
              "value": " argument is added to "
            },
            {
              "type": "inlineCode",
              "value": "numpy.argmin"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "numpy.argmax"
            },
            {
              "type": "text",
              "value": ".  If set to "
            },
            {
              "type": "inlineCode",
              "value": "True"
            },
            {
              "type": "text",
              "value": ", the axes which are reduced are left in the result as dimensions with size one.  The resulting array has the same number of dimensions and will broadcast with the input array."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19211"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19211"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "``keepdims`` optional argument added to ``numpy.argmin``, ``numpy.argmax``",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Computes the number of 1-bits in the absolute value of the input. This works on all the numpy integer types. Analogous to the builtin "
            },
            {
              "type": "inlineCode",
              "value": "int.bit_count"
            },
            {
              "type": "text",
              "value": " or "
            },
            {
              "type": "inlineCode",
              "value": "popcount"
            },
            {
              "type": "text",
              "value": " in C++."
            }
          ],
          "type": "paragraph"
        },
        {
          "args": "python",
          "children": [],
          "name": "code-block",
          "options": {},
          "type": "mystDirective",
          "value": ">>> np.uint32(1023).bit_count()\n10\n>>> np.int32(-127).bit_count()\n7"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19355"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19355"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "``bit_count`` to compute the number of 1-bits in an integer",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The "
            },
            {
              "type": "inlineCode",
              "value": "ndim"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineCode",
              "value": "axis"
            },
            {
              "type": "text",
              "value": " parameters are now also stored as attributes within each "
            },
            {
              "type": "inlineCode",
              "value": "numpy.AxisError"
            },
            {
              "type": "text",
              "value": " instance."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19459"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19459"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "The ``ndim`` and ``axis`` attributes have been added to ``numpy.AxisError``",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "inlineCode",
              "value": "numpy"
            },
            {
              "type": "text",
              "value": " added support for windows/arm64 target. Please note "
            },
            {
              "type": "inlineCode",
              "value": "OpenBLAS"
            },
            {
              "type": "text",
              "value": " support is not yet available for windows/arm64 target."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19513"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19513"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Preliminary support for ``windows/arm64`` target",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "LoongArch is a new instruction set, numpy compilation failure on LoongArch architecture, so add the commit."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19527"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19527"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Added support for LoongArch",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Clang-format is a C/C++ code formatter, together with the added "
            },
            {
              "type": "inlineCode",
              "value": ".clang-format"
            },
            {
              "type": "text",
              "value": " file, it produces code close enough to the NumPy C_STYLE_GUIDE for general use. Clang-format version 12+ is required due to the use of several new features, it is available in Fedora 34 and Ubuntu Focal among other distributions."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19754"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19754"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "A ``.clang-format`` file has been added",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Based on its counterpart in Python "
            },
            {
              "type": "inlineCode",
              "value": "float"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineCode",
              "value": "int"
            },
            {
              "type": "text",
              "value": ", the numpy floating point and integer types now support "
            },
            {
              "type": "inlineCode",
              "value": "float.is_integer"
            },
            {
              "type": "text",
              "value": ". Returns "
            },
            {
              "type": "inlineCode",
              "value": "True"
            },
            {
              "type": "text",
              "value": " if the number is finite with integral value, and "
            },
            {
              "type": "inlineCode",
              "value": "False"
            },
            {
              "type": "text",
              "value": " otherwise."
            }
          ],
          "type": "paragraph"
        },
        {
          "args": "python",
          "children": [],
          "name": "code-block",
          "options": {},
          "type": "mystDirective",
          "value": ">>> np.float32(-2.0).is_integer()\nTrue\n>>> np.float64(3.2).is_integer()\nFalse\n>>> np.int32(-2).is_integer()\nTrue"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19803"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19803"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "``is_integer`` is now available to ``numpy.floating`` and ``numpy.integer``",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A new symbolic parser has been added to f2py in order to correctly parse dimension specifications. The parser is the basis for future improvements and provides compatibility with Draft Fortran 202x."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19805"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19805"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Symbolic parser for Fortran dimension specifications",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Mimicking "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "Pep 585"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://peps.python.org/pep-0585/"
            },
            {
              "type": "text",
              "value": ", the "
            },
            {
              "type": "inlineCode",
              "value": "numpy.ndarray"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "numpy.dtype"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineCode",
              "value": "numpy.number"
            },
            {
              "type": "text",
              "value": " classes are now subscriptable for python 3.9 and later. Consequently, expressions that were previously only allowed in .pyi stub files or with the help of "
            },
            {
              "type": "inlineCode",
              "value": "from __future__ import annotations"
            },
            {
              "type": "text",
              "value": " are now also legal during runtime."
            }
          ],
          "type": "paragraph"
        },
        {
          "args": "python",
          "children": [],
          "name": "code-block",
          "options": {},
          "type": "mystDirective",
          "value": ">>> import numpy as np\n>>> from typing import Any\n\n>>> np.ndarray[Any, np.dtype[np.float64]]\nnumpy.ndarray[typing.Any, numpy.dtype[numpy.float64]]"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19879"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19879"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "``ndarray``, ``dtype`` and ``number`` are now runtime-subscriptable",
      "type": "Section"
    },
    {
      "children": [],
      "level": 1,
      "target": null,
      "title": "Improvements",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "All parameters in the can now take any "
            },
            {
              "type": "inlineCode",
              "value": "python:path-like object"
            },
            {
              "type": "text",
              "value": ". This includes the likes of strings, bytes and objects implementing the "
            },
            {
              "type": "inlineCode",
              "value": "__fspath__<os.PathLike.__fspath__>"
            },
            {
              "type": "text",
              "value": " protocol."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-17530"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/17530"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "``ctypeslib.load_library`` can now take any path-like object",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The attributes "
            },
            {
              "type": "inlineCode",
              "value": "smallest_normal"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineCode",
              "value": "smallest_subnormal"
            },
            {
              "type": "text",
              "value": " are available as an extension of "
            },
            {
              "type": "inlineCode",
              "value": "finfo"
            },
            {
              "type": "text",
              "value": " class for any floating-point data type. To use these new attributes, write "
            },
            {
              "type": "inlineCode",
              "value": "np.finfo(np.float64).smallest_normal"
            },
            {
              "type": "text",
              "value": " or "
            },
            {
              "type": "inlineCode",
              "value": "np.finfo(np.float64).smallest_subnormal"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-18536"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/18536"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Add ``smallest_normal`` and ``smallest_subnormal`` attributes to ``finfo``",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "inlineCode",
              "value": "numpy.linalg.qr"
            },
            {
              "type": "text",
              "value": " is able to produce results for stacked matrices as inputs. Moreover, the implementation of QR decomposition has been shifted to C from Python."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19151"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19151"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "``numpy.linalg.qr`` accepts stacked matrices as inputs",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "inlineCode",
              "value": "numpy.fromregex"
            },
            {
              "type": "text",
              "value": " now accepts objects implementing the "
            },
            {
              "type": "inlineCode",
              "value": "__fspath__<os.PathLike>"
            },
            {
              "type": "text",
              "value": " protocol, "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "e.g."
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " "
            },
            {
              "type": "inlineCode",
              "value": "pathlib.Path"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19680"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19680"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "``numpy.fromregex`` now accepts ``os.PathLike`` implementations",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "inlineCode",
              "value": "quantile"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineCode",
              "value": "percentile"
            },
            {
              "type": "text",
              "value": " now have have a "
            },
            {
              "type": "inlineCode",
              "value": "method="
            },
            {
              "type": "text",
              "value": " keyword argument supporting 13 different methods.  This replaces the "
            },
            {
              "type": "inlineCode",
              "value": "interpolation="
            },
            {
              "type": "text",
              "value": " keyword argument."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The methods are now aligned with nine methods which can be found in scientific literature and the R language.  The remaining methods are the previous discontinuous variations of the default \"linear\" one."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Please see the documentation of "
            },
            {
              "type": "inlineCode",
              "value": "numpy.percentile"
            },
            {
              "type": "text",
              "value": " for more information."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19857"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19857"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Add new methods for ``quantile`` and ``percentile``",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A number of the "
            },
            {
              "type": "inlineCode",
              "value": "nan<x>"
            },
            {
              "type": "text",
              "value": " functions previously lacked parameters that were present in their "
            },
            {
              "type": "inlineCode",
              "value": "<x>"
            },
            {
              "type": "text",
              "value": "-based counterpart, "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "e.g."
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " the "
            },
            {
              "type": "inlineCode",
              "value": "where"
            },
            {
              "type": "text",
              "value": " parameter was present in "
            },
            {
              "type": "inlineCode",
              "value": "numpy.mean"
            },
            {
              "type": "text",
              "value": " but absent from "
            },
            {
              "type": "inlineCode",
              "value": "numpy.nanmean"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The following parameters have now been added to the "
            },
            {
              "type": "inlineCode",
              "value": "nan<x>"
            },
            {
              "type": "text",
              "value": " functions:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "nanmin: "
                    },
                    {
                      "type": "inlineCode",
                      "value": "initial"
                    },
                    {
                      "type": "text",
                      "value": " & "
                    },
                    {
                      "type": "inlineCode",
                      "value": "where"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "nanmax: "
                    },
                    {
                      "type": "inlineCode",
                      "value": "initial"
                    },
                    {
                      "type": "text",
                      "value": " & "
                    },
                    {
                      "type": "inlineCode",
                      "value": "where"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "nanargmin: "
                    },
                    {
                      "type": "inlineCode",
                      "value": "keepdims"
                    },
                    {
                      "type": "text",
                      "value": " & "
                    },
                    {
                      "type": "inlineCode",
                      "value": "out"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "nanargmax: "
                    },
                    {
                      "type": "inlineCode",
                      "value": "keepdims"
                    },
                    {
                      "type": "text",
                      "value": " & "
                    },
                    {
                      "type": "inlineCode",
                      "value": "out"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "nansum: "
                    },
                    {
                      "type": "inlineCode",
                      "value": "initial"
                    },
                    {
                      "type": "text",
                      "value": " & "
                    },
                    {
                      "type": "inlineCode",
                      "value": "where"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "nanprod: "
                    },
                    {
                      "type": "inlineCode",
                      "value": "initial"
                    },
                    {
                      "type": "text",
                      "value": " & "
                    },
                    {
                      "type": "inlineCode",
                      "value": "where"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "nanmean: "
                    },
                    {
                      "type": "inlineCode",
                      "value": "where"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "nanvar: "
                    },
                    {
                      "type": "inlineCode",
                      "value": "where"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "nanstd: "
                    },
                    {
                      "type": "inlineCode",
                      "value": "where"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": false,
          "spread": false,
          "start": 1,
          "type": "list"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-20027"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/20027"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Missing parameters have been added to the ``nan<x>`` functions",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Starting from the 1.20 release, PEP 484 type annotations have been included for parts of the NumPy library; annotating the remaining functions being a work in progress. With the release of 1.22 this process has been completed for the main NumPy namespace, which is now fully annotated."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Besides the main namespace, a limited number of sub-packages contain annotations as well. This includes, among others, "
            },
            {
              "type": "inlineCode",
              "value": "numpy.testing"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "numpy.linalg"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineCode",
              "value": "numpy.random"
            },
            {
              "type": "text",
              "value": " (available since 1.21)."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-20217"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/20217"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Annotating the main Numpy namespace",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "By leveraging Intel Short Vector Math Library (SVML), 18 umath functions ("
            },
            {
              "type": "inlineCode",
              "value": "exp2"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "log2"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "log10"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "expm1"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "log1p"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "cbrt"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "sin"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "cos"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "tan"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "arcsin"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "arccos"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "arctan"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "sinh"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "cosh"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "tanh"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "arcsinh"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "arccosh"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "arctanh"
            },
            {
              "type": "text",
              "value": ") are vectorized using AVX-512 instruction set for both single and double precision implementations.  This change is currently enabled only for Linux users and on processors with AVX-512 instruction set.  It provides an average speed up of 32x and 14x for single and double precision functions respectively."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-19478"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/19478"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Vectorize umath module using AVX-512",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Update the OpenBLAS used in testing and in wheels to v0.3.18"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "("
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "gh-20058"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://github.com/numpy/numpy/pull/20058"
            },
            {
              "type": "text",
              "value": ")"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "OpenBLAS v0.3.18",
      "type": "Section"
    }
  ],
  "content": {},
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": null,
  "item_line": null,
  "item_type": null,
  "ordered_sections": [],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}