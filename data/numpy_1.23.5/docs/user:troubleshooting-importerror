{
  "aliases": [],
  "arbitrary": [
    {
      "children": [
        {
          "type": "mystComment",
          "value": ".. Reason for orphan: This page is referenced by the installation\n   instructions, which have moved from Sphinx to https://numpy.org/install.\n   All install links in Sphinx now point there, leaving no Sphinx references\n   to this page."
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "note "
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "Since this information may be updated regularly, please ensure you are viewing the most "
                },
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "up-to-date version <https://numpy.org/devdocs/user/troubleshooting-importerror.html>"
                },
                {
                  "type": "text",
                  "value": "."
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": "Troubleshooting",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "In certain cases a failed installation or setup issue can cause you to see the following error message      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "IMPORTANT: PLEASE READ THIS FOR ADVICE ON HOW TO SOLVE THIS ISSUE!\n\nImporting the numpy c-extensions failed. This error can happen for\ndifferent reasons, often due to issues with your setup."
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The error also has additional information to help you troubleshoot:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Your Python version"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Your NumPy version"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": false,
          "spread": false,
          "start": 1,
          "type": "list"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Please check both of these carefully to see if they are what you expect. You may need to check your "
            },
            {
              "type": "inlineCode",
              "value": "PATH"
            },
            {
              "type": "text",
              "value": " or "
            },
            {
              "type": "inlineCode",
              "value": "PYTHONPATH"
            },
            {
              "type": "text",
              "value": " environment variables (see "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "Check Environment Variables"
            },
            {
              "type": "text",
              "value": " below)."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The following sections list commonly reported issues depending on your setup. If you have an issue/solution that you think should appear please open a NumPy issue so that it will be added."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "There are a few commonly reported issues depending on your system/setup. If none of the following tips help you, please be sure to note the following:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "how you installed Python"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "how you installed NumPy"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "your operating system"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "whether or not you have multiple versions of Python installed"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "if you built from source, your compiler versions and ideally a build log"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": false,
          "spread": false,
          "start": 1,
          "type": "list"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "when investigating further and asking for support."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "ImportError",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Please make sure that you have activated your conda environment. See also the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "conda user-guide"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#activating-an-environment"
            },
            {
              "type": "text",
              "value": ". If you use an external editor/development environment it will have to be set up correctly.  See below for solutions for some common setups."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Using Python from ``conda`` (Anaconda)",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "There are fairly common issues when using PyCharm together with Anaconda, please see the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "PyCharm support"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://www.jetbrains.com/help/pycharm/conda-support-creating-conda-virtual-environment.html"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Using PyCharm with Anaconda/conda Python",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A commonly reported issue is related to the environment activation within VSCode. Please see the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "VSCode support"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://code.visualstudio.com/docs/python/environments"
            },
            {
              "type": "text",
              "value": " for information on how to correctly set up VSCode with virtual environments or conda."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Using VSCode with Anaconda/conda Python (or environments)",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Please see the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "Anaconda Documentation"
                }
              ],
              "title": "",
              "type": "link",
              "url": "https://docs.anaconda.com/anaconda/user-guide/tasks/integration/eclipse-pydev/"
            },
            {
              "type": "text",
              "value": " on how to properly configure Eclipse/PyDev to use Anaconda Python with specific conda environments."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Using Eclipse/PyDev with Anaconda/conda Python (or environments)",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "There are sometimes issues reported on Raspberry Pi setups when installing using "
            },
            {
              "type": "inlineCode",
              "value": "pip3 install"
            },
            {
              "type": "text",
              "value": " (or "
            },
            {
              "type": "inlineCode",
              "value": "pip"
            },
            {
              "type": "text",
              "value": " install). These will typically mention      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "libf77blas.so.3: cannot open shared object file: No such file or directory"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The solution will be to either      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "sudo apt-get install libatlas-base-dev"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "to install the missing libraries expected by the self-compiled NumPy (ATLAS is a possible provider of linear algebra)."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "Alternatively"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " use the NumPy provided by Raspbian. In which case run      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "pip3 uninstall numpy  # remove previously installed version\napt install python3-numpy"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Raspberry Pi",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Rather than building your project in "
            },
            {
              "type": "inlineCode",
              "value": "DEBUG"
            },
            {
              "type": "text",
              "value": " mode on windows, try building in "
            },
            {
              "type": "inlineCode",
              "value": "RELEASE"
            },
            {
              "type": "text",
              "value": " mode with debug symbols and no optimization. Full "
            },
            {
              "type": "inlineCode",
              "value": "DEBUG"
            },
            {
              "type": "text",
              "value": " mode on windows changes the names of the DLLs python expects to find, so if you wish to truly work in "
            },
            {
              "type": "inlineCode",
              "value": "DEBUG"
            },
            {
              "type": "text",
              "value": " mode you will need to recompile the entire stack of python modules you work with including NumPy"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Debug build on Windows",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Occasionally there may be simple issues with old or bad installations of NumPy. In this case you may just try to uninstall and reinstall NumPy. Make sure that NumPy is not found after uninstalling."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "All Setups",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "If you are using a development setup, make sure to run "
            },
            {
              "type": "inlineCode",
              "value": "git clean -xdf"
            },
            {
              "type": "text",
              "value": " to delete all files not under version control (be careful not to lose any modifications you made, e.g. "
            },
            {
              "type": "inlineCode",
              "value": "site.cfg"
            },
            {
              "type": "text",
              "value": "). In many cases files from old builds may lead to incorrect builds."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Development Setup",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "In general how to set and check your environment variables depends on your system. If you can open a correct python shell, you can also run the following in python      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "import os\nprint(\"PYTHONPATH:\", os.environ.get('PYTHONPATH'))\nprint(\"PATH:\", os.environ.get('PATH'))"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "This may mainly help you if you are not running the python and/or NumPy version you are expecting to run."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Check Environment Variables",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "If you see an error like:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "RuntimeError: module compiled against API version v1 but this version of numpy is v2"
                }
              ],
              "type": "paragraph"
            }
          ],
          "type": "blockquote"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "You may have:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A bad extension \"wheel\" (binary install) that should use   "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "oldest-support-numpy"
                        }
                      ],
                      "title": "",
                      "type": "link",
                      "url": "https://pypi.org/project/oldest-supported-numpy/"
                    },
                    {
                      "type": "text",
                      "value": " (   with manual constraints if necessary) to build their binary packages."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An environment issue messing with package versions."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Incompatible package versions somehow enforced manually."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An extension module compiled locally against a very recent version   followed by a NumPy downgrade."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A compiled extension copied to a different computer with an   older NumPy version."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": false,
          "spread": false,
          "start": 1,
          "type": "list"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The best thing to do if you see this error is to contact the maintainers of the package that is causing problem so that they can solve the problem properly."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "However, while you wait for a solution, a work around that usually works is to upgrade the NumPy version       "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "pip install numpy --upgrade"
        }
      ],
      "level": 2,
      "target": null,
      "title": "C-API incompatibility",
      "type": "Section"
    },
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "NumPy tries to use advanced CPU features (SIMD) to speed up operations. If you are getting an \"illegal instruction\" error or a segfault, one cause could be that the environment claims it can support one or more of these features but actually cannot. This can happen inside a docker image or a VM (qemu, VMWare, ...)"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "You can use the output of "
            },
            {
              "type": "inlineCode",
              "value": "np.show_runtime()"
            },
            {
              "type": "text",
              "value": " to show which SIMD features are detected. For instance      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": ">>> np.show_runtime()\nWARNING: `threadpoolctl` not found in system! Install it by `pip install \\\nthreadpoolctl`. Once installed, try `np.show_runtime` again for more detailed\nbuild information\n[{'simd_extensions': {'baseline': ['SSE', 'SSE2', 'SSE3'],\n                      'found': ['SSSE3',\n                                'SSE41',\n                                'POPCNT',\n                                'SSE42',\n                                'AVX',\n                                'F16C',\n                                'FMA3',\n                                'AVX2'],\n                      'not_found': ['AVX512F',\n                                    'AVX512CD',\n                                    'AVX512_KNL',\n                                    'AVX512_KNM',\n                                    'AVX512_SKX',\n                                    'AVX512_CLX',\n                                    'AVX512_CNL',\n                                    'AVX512_ICL']}}]"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "In this case, it shows AVX2 and FMA3 under the "
            },
            {
              "type": "inlineCode",
              "value": "found"
            },
            {
              "type": "text",
              "value": " section, so you can try disabling them by setting "
            },
            {
              "type": "inlineCode",
              "value": "NPY_DISABLE_CPU_FEATURES=\"AVX2,FMA3\""
            },
            {
              "type": "text",
              "value": " in your environment before running python (for cmd.exe on windows)      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": ">SET NPY_DISABLE_CPU_FEATURES=\"AVX2,FMA3\"\n>python <myprogram.py>"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "By installing threadpoolctl "
            },
            {
              "type": "inlineCode",
              "value": "np.show_runtime()"
            },
            {
              "type": "text",
              "value": " will show additional information      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "...\n{'architecture': 'Zen',\n  'filepath': '/tmp/venv3/lib/python3.9/site-packages/numpy.libs/libopenblas64_p-r0-15028c96.3.21.so',\n  'internal_api': 'openblas',\n  'num_threads': 24,\n  'prefix': 'libopenblas',\n  'threading_layer': 'pthreads',\n  'user_api': 'blas',\n  'version': '0.3.21'}]"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "If you use the wheel from PyPI, it contains code from the OpenBLAS project to speed up matrix operations. This code too can try to use SIMD instructions. It has a different mechanism for choosing which to use, based on a CPU architecture, You can override this architecture by setting "
            },
            {
              "type": "inlineCode",
              "value": "OPENBLAS_CORETYPE"
            },
            {
              "type": "text",
              "value": ": a minimal value for "
            },
            {
              "type": "inlineCode",
              "value": "x86_64"
            },
            {
              "type": "text",
              "value": " is "
            },
            {
              "type": "inlineCode",
              "value": "OPENBLAS_CORETYPE=Haswell"
            },
            {
              "type": "text",
              "value": ".  This too needs to be set before running your python (this time for posix)      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "$ OPENBLAS_CORETYPE=Haswell python <myprogram.py>"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Segfaults or crashes",
      "type": "Section"
    }
  ],
  "content": {},
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": null,
  "item_line": null,
  "item_type": null,
  "ordered_sections": [],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}