{
  "aliases": [
    "numpy.core._dtype_ctypes"
  ],
  "arbitrary": [
    {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Conversion from ctypes to dtype."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "In an ideal world, we could achieve this through the PEP3118 buffer protocol, something like      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "def dtype_from_ctypes_type(t):\n    # needed to ensure that the shape of `t` is within memoryview.format\n    class DummyStruct(ctypes.Structure):\n        _fields_ = [('a', t)]\n\n    # empty to avoid memory allocation\n    ctype_0 = (DummyStruct * 0)()\n    mv = memoryview(ctype_0)\n\n    # convert the struct, and slice back out the field\n    return _dtype_from_pep3118(mv.format)['a']"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Unfortunately, this fails because:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "ctypes cannot handle length-0 arrays with PEP3118 (bpo-32782)"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "PEP3118 cannot represent unions, but both numpy and ctypes can"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "ctypes cannot handle big-endian structs with PEP3118 (bpo-32780)"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": false,
          "spread": false,
          "start": 1,
          "type": "list"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  ],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "In an ideal world, we could achieve this through the PEP3118 buffer protocol, something like      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "def dtype_from_ctypes_type(t):\n    # needed to ensure that the shape of `t` is within memoryview.format\n    class DummyStruct(ctypes.Structure):\n        _fields_ = [('a', t)]\n\n    # empty to avoid memory allocation\n    ctype_0 = (DummyStruct * 0)()\n    mv = memoryview(ctype_0)\n\n    # convert the struct, and slice back out the field\n    return _dtype_from_pep3118(mv.format)['a']"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Unfortunately, this fails because:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "ctypes cannot handle length-0 arrays with PEP3118 (bpo-32782)"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "PEP3118 cannot represent unions, but both numpy and ctypes can"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "ctypes cannot handle big-endian structs with PEP3118 (bpo-32780)"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": false,
          "spread": false,
          "start": 1,
          "type": "list"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Conversion from ctypes to dtype."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/core/_dtype_ctypes.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}