{
  "aliases": [
    "numpy.core._multiarray_umath.can_cast"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionchanged 1.17.0"
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "Casting between a simple data type and a structured one is possible only for \"unsafe\" casting.  Casting to multiple fields is allowed, but casting from multiple fields is not."
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionchanged 1.9.0"
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "Casting from numeric to string types in 'safe' casting mode requires that the string dtype length is long enough to store the maximum integer/float value converted."
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Data type, scalar, or array to cast from."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "from_",
              "type": "Param",
              "type_": "dtype, dtype specifier, scalar, or array"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Data type to cast to."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "to",
              "type": "Param",
              "type_": "dtype or dtype specifier"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Controls what kind of data casting may occur."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'no' means the data types should not be cast at all."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'equiv' means only byte-order changes are allowed."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'safe' means only casts which can preserve values are allowed."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'same_kind' means only safe casts or casts within a kind,     like float64 to float32, are allowed."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'unsafe' means any data conversions may be done."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        }
                      ],
                      "ordered": false,
                      "spread": false,
                      "start": 1,
                      "type": "list"
                    }
                  ],
                  "type": "blockquote"
                }
              ],
              "param": "casting",
              "type": "Param",
              "type_": "{'no', 'equiv', 'safe', 'same_kind', 'unsafe'}, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "True if cast can occur according to the casting rule."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "bool"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns True if cast between data types can occur according to the casting rule.  If from is a scalar or array scalar, also returns True if the scalar value can be cast without overflow or truncation to an integer."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Basic examples"
      },
      {
        "type": "code",
        "value": "np.can_cast(np.int32, np.int64)"
      },
      {
        "type": "code",
        "value": "np.can_cast(np.float64, complex)"
      },
      {
        "type": "code",
        "value": "np.can_cast(complex, float)"
      },
      {
        "type": "code",
        "value": "np.can_cast('i8', 'f8')"
      },
      {
        "type": "code",
        "value": "np.can_cast('i8', 'f4')"
      },
      {
        "type": "code",
        "value": "np.can_cast('i4', 'S4')"
      },
      {
        "type": "text",
        "value": "Casting scalars"
      },
      {
        "type": "code",
        "value": "np.can_cast(100, 'i1')"
      },
      {
        "type": "code",
        "value": "np.can_cast(150, 'i1')"
      },
      {
        "type": "code",
        "value": "np.can_cast(150, 'u1')"
      },
      {
        "type": "code",
        "value": "np.can_cast(3.5e100, np.float32)"
      },
      {
        "type": "code",
        "value": "np.can_cast(1000.0, np.float32)"
      },
      {
        "type": "text",
        "value": "Array scalar checks the value, array does not"
      },
      {
        "type": "code",
        "value": "np.can_cast(np.array(1000.0), np.float32)"
      },
      {
        "type": "code",
        "value": "np.can_cast(np.array([1000.0]), np.float32)"
      },
      {
        "type": "text",
        "value": "Using the casting rules"
      },
      {
        "type": "code",
        "value": "np.can_cast('i8', 'i8', 'no')"
      },
      {
        "type": "code",
        "value": "np.can_cast('<i8', '>i8', 'no')"
      },
      {
        "type": "code",
        "value": "np.can_cast('<i8', '>i8', 'equiv')"
      },
      {
        "type": "code",
        "value": "np.can_cast('<i4', '>i8', 'equiv')"
      },
      {
        "type": "code",
        "value": "np.can_cast('<i4', '>i8', 'safe')"
      },
      {
        "type": "code",
        "value": "np.can_cast('<i8', '>i4', 'safe')"
      },
      {
        "type": "code",
        "value": "np.can_cast('<i8', '>i4', 'same_kind')"
      },
      {
        "type": "code",
        "value": "np.can_cast('<i8', '>u4', 'same_kind')"
      },
      {
        "type": "code",
        "value": "np.can_cast('<i8', '>u4', 'unsafe')"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": null,
  "item_line": null,
  "item_type": "<class 'builtin_function_or_method'>",
  "ordered_sections": [
    "Signature",
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "dtype",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "dtype"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "result_type",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "result_type"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "can_cast(from_, to, casting='safe')"
  },
  "type": "DocBlob"
}