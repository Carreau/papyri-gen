{
  "aliases": [
    "numpy.dual.lstsq"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Computes the vector "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "x",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "x"
            },
            {
              "type": "text",
              "value": " that approximately solves the equation "
            },
            {
              "type": "inlineCode",
              "value": "a @ x = b"
            },
            {
              "type": "text",
              "value": ". The equation may be under-, well-, or over-determined (i.e., the number of linearly independent rows of "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "a",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "a"
            },
            {
              "type": "text",
              "value": " can be less than, equal to, or greater than its number of linearly independent columns). If "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "a",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "a"
            },
            {
              "type": "text",
              "value": " is square and of full rank, then "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "x",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "x"
            },
            {
              "type": "text",
              "value": " (but for round-off error) is the \"exact\" solution of the equation. Else, "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "x",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "x"
            },
            {
              "type": "text",
              "value": " minimizes the Euclidean 2-norm "
            },
            {
              "type": "inlineMath",
              "value": "||b - ax||"
            },
            {
              "type": "text",
              "value": ". If there are multiple minimizing solutions, the one with the smallest 2-norm "
            },
            {
              "type": "inlineMath",
              "value": "||x||"
            },
            {
              "type": "text",
              "value": " is returned."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "If "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "b",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "b"
            },
            {
              "type": "text",
              "value": " is a matrix, then all array results are returned as matrices."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "\"Coefficient\" matrix."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "a",
              "type": "Param",
              "type_": "(M, N) array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Ordinate or \"dependent variable\" values. If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "b",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "b"
                    },
                    {
                      "type": "text",
                      "value": " is two-dimensional, the least-squares solution is calculated for each of the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "numpy",
                        "path": "numpy.testing._private.utils:KnownFailureException",
                        "type": "RefInfo",
                        "version": "1.23.5"
                      },
                      "type": "Link",
                      "value": "K"
                    },
                    {
                      "type": "text",
                      "value": " columns of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "b",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "b"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "b",
              "type": "Param",
              "type_": "{(M,), (M, K)} array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Cut-off ratio for small singular values of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": ". For the purposes of rank determination, singular values are treated as zero if they are smaller than "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "rcond",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "rcond"
                    },
                    {
                      "type": "text",
                      "value": " times the largest singular value of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionchanged 1.14.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "If not set, a FutureWarning is given. The previous default of "
                        },
                        {
                          "type": "inlineCode",
                          "value": "-1"
                        },
                        {
                          "type": "text",
                          "value": " will use the machine precision as "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "rcond"
                        },
                        {
                          "type": "text",
                          "value": " parameter, the new default will use the machine precision times "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "max(M, N)"
                        },
                        {
                          "type": "text",
                          "value": ". To silence the warning and use the new default, use "
                        },
                        {
                          "type": "inlineCode",
                          "value": "rcond=None"
                        },
                        {
                          "type": "text",
                          "value": ", to keep using the old behavior, use "
                        },
                        {
                          "type": "inlineCode",
                          "value": "rcond=-1"
                        },
                        {
                          "type": "text",
                          "value": "."
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "rcond",
              "type": "Param",
              "type_": "float, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If computation does not converge."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "LinAlgError"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Least-squares solution. If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "b",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "b"
                    },
                    {
                      "type": "text",
                      "value": " is two-dimensional, the solutions are in the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "numpy",
                        "path": "numpy.testing._private.utils:KnownFailureException",
                        "type": "RefInfo",
                        "version": "1.23.5"
                      },
                      "type": "Link",
                      "value": "K"
                    },
                    {
                      "type": "text",
                      "value": " columns of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x",
              "type": "Param",
              "type_": "{(N,), (N, K)} ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Sums of squared residuals: Squared Euclidean 2-norm for each column in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "b - a @ x"
                    },
                    {
                      "type": "text",
                      "value": ". If the rank of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": " is < N or M <= N, this is an empty array. If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "b",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "b"
                    },
                    {
                      "type": "text",
                      "value": " is 1-dimensional, this is a (1,) shape array. Otherwise the shape is (K,)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "residuals",
              "type": "Param",
              "type_": "{(1,), (K,), (0,)} ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Rank of matrix "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "rank",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Singular values of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "s",
              "type": "Param",
              "type_": "(min(M, N),) ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return the least-squares solution to a linear matrix equation."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Fit a line, ``y = mx + c``, through some noisy data-points:"
      },
      {
        "type": "code",
        "value": "x = np.array([0, 1, 2, 3])\ny = np.array([-1, 0.2, 0.9, 2.1])"
      },
      {
        "type": "text",
        "value": "By examining the coefficients, we see that the line should have a\ngradient of roughly 1 and cut the y-axis at, more or less, -1."
      },
      {
        "type": "text",
        "value": "We can rewrite the line equation as ``y = Ap``, where ``A = [[x 1]]``\nand ``p = [[m], [c]]``.  Now use `lstsq` to solve for `p`:"
      },
      {
        "type": "code",
        "value": "A = np.vstack([x, np.ones(len(x))]).T\nA"
      },
      {
        "type": "code",
        "value": "m, c = np.linalg.lstsq(A, y, rcond=None)[0]\nm, c"
      },
      {
        "type": "text",
        "value": "Plot the data along with the fitted line:"
      },
      {
        "type": "code",
        "value": "import matplotlib.pyplot as plt\n_ = plt.plot(x, y, 'o', label='Original data', markersize=10)\n_ = plt.plot(x, m*x + c, 'r', label='Fitted line')\n_ = plt.legend()\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "numpy",
          "path": "fig-numpy.linalg:lstsq-0-fc751b4c.png",
          "type": "RefInfo",
          "version": "1.23.5"
        }
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/linalg/linalg.py",
  "item_line": 2165,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Similar function in SciPy."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "scipy.linalg.lstsq",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "scipy.linalg.lstsq"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(a, b, rcond='warn')"
  },
  "type": "DocBlob"
}