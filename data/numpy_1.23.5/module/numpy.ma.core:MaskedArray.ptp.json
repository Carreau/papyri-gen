{
  "aliases": [
    "numpy.ma.MaskedArray.ptp"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "warning "
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "ptp"
                },
                {
                  "type": "text",
                  "value": " preserves the data type of the array. This means the return value for an input of signed integers with n bits (e.g. "
                },
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "np.int8"
                },
                {
                  "type": "text",
                  "value": ", "
                },
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "np.int16"
                },
                {
                  "type": "text",
                  "value": ", etc) is also a signed integer with n bits.  In that case, peak-to-peak values greater than "
                },
                {
                  "type": "inlineCode",
                  "value": "2**(n-1)-1"
                },
                {
                  "type": "text",
                  "value": " will be returned as negative values. An example with a work-around is shown below."
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Axis along which to find the peaks.  If None (default) the flattened array is used."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axis",
              "type": "Param",
              "type_": "{None, int}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Alternative output array in which to place the result. It must have the same shape and buffer length as the expected output but the type will be cast if necessary."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "{None, array_like}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Value used to fill in the masked values."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "fill_value",
              "type": "Param",
              "type_": "scalar or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If this is set to True, the axes which are reduced are left in the result as dimensions with size one. With this option, the result will broadcast correctly against the array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "keepdims",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A new array holding the result, unless "
                    },
                    {
                      "type": "inlineCode",
                      "value": "out"
                    },
                    {
                      "type": "text",
                      "value": " was specified, in which case a reference to "
                    },
                    {
                      "type": "inlineCode",
                      "value": "out"
                    },
                    {
                      "type": "text",
                      "value": " is returned."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "ptp",
              "type": "Param",
              "type_": "ndarray."
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return (maximum - minimum) along the given dimension (i.e. peak-to-peak value)."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "x = np.ma.MaskedArray([[4, 9, 2, 10],\n                       [6, 9, 7, 12]])"
      },
      {
        "type": "code",
        "value": "x.ptp(axis=1)"
      },
      {
        "type": "code",
        "value": "x.ptp(axis=0)"
      },
      {
        "type": "code",
        "value": "x.ptp()"
      },
      {
        "type": "text",
        "value": "This example shows that a negative value can be returned when\nthe input is an array of signed integers."
      },
      {
        "type": "code",
        "value": "y = np.ma.MaskedArray([[1, 127],\n                       [0, 127],\n                       [-1, 127],\n                       [-2, 127]], dtype=np.int8)\ny.ptp(axis=1)"
      },
      {
        "type": "text",
        "value": "A work-around is to use the `view()` method to view the result as\nunsigned integers with the same bit width:"
      },
      {
        "type": "code",
        "value": "y.ptp(axis=1).view(np.uint8)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/ma/core.py",
  "item_line": 5912,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self, axis=None, out=None, fill_value=None, keepdims=False)"
  },
  "type": "DocBlob"
}