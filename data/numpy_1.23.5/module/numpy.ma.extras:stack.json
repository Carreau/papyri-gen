{
  "aliases": [
    "numpy.ma.stack"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The "
            },
            {
              "type": "inlineCode",
              "value": "axis"
            },
            {
              "type": "text",
              "value": " parameter specifies the index of the new axis in the dimensions of the result. For example, if "
            },
            {
              "type": "inlineCode",
              "value": "axis=0"
            },
            {
              "type": "text",
              "value": " it will be the first dimension and if "
            },
            {
              "type": "inlineCode",
              "value": "axis=-1"
            },
            {
              "type": "text",
              "value": " it will be the last dimension."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionadded 1.10.0"
                }
              ],
              "type": "admonitionTitle"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The function is applied to both the _data and the _mask, if any."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Each array must have the same shape."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "arrays",
              "type": "Param",
              "type_": "sequence of array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The axis in the result array along which the input arrays are stacked."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axis",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If provided, the destination to place the result. The shape must be correct, matching that of what stack would have returned if no out argument were specified."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "ndarray, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The stacked array has one more dimension than the input arrays."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "stacked",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Join a sequence of arrays along a new axis."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "arrays = [np.random.randn(3, 4) for _ in range(10)]\nnp.stack(arrays, axis=0).shape"
      },
      {
        "type": "code",
        "value": "np.stack(arrays, axis=1).shape"
      },
      {
        "type": "code",
        "value": "np.stack(arrays, axis=2).shape"
      },
      {
        "type": "code",
        "value": "a = np.array([1, 2, 3])\nb = np.array([4, 5, 6])\nnp.stack((a, b))"
      },
      {
        "type": "code",
        "value": "np.stack((a, b), axis=-1)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/ma/extras.py",
  "item_line": null,
  "item_type": "<class 'numpy.ma.extras._fromnxfunction_seq'>",
  "ordered_sections": [
    "Signature",
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Examples",
    "Notes"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Join a sequence of arrays along an existing axis."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "concatenate",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "concatenate"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Assemble an nd-array from nested lists of blocks."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "block",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "block"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Split array into a list of multiple sub-arrays of equal size."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "split",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "split"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "stack(*args, **kwargs)"
  },
  "type": "DocBlob"
}