{
  "aliases": [
    "numpy.polynomial.laguerre.lagval"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "If "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "c",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "c"
            },
            {
              "type": "text",
              "value": " is of length "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "n + 1"
            },
            {
              "type": "text",
              "value": ", this function returns the value:"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "p(x) = c_0 * L_0(x) + c_1 * L_1(x) + ... + c_n * L_n(x)"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The parameter "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "x",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "x"
            },
            {
              "type": "text",
              "value": " is converted to an array only if it is a tuple or a list, otherwise it is treated as a scalar. In either case, either "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "x",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "x"
            },
            {
              "type": "text",
              "value": " or its elements must support multiplication and addition both with themselves and with the elements of "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "c",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "c"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "If "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "c",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "c"
            },
            {
              "type": "text",
              "value": " is a 1-D array, then "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "p(x)"
            },
            {
              "type": "text",
              "value": " will have the same shape as "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "x",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "x"
            },
            {
              "type": "text",
              "value": ".  If "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "c",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "c"
            },
            {
              "type": "text",
              "value": " is multidimensional, then the shape of the result depends on the value of "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "tensor",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "tensor"
            },
            {
              "type": "text",
              "value": ". If "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "tensor",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "tensor"
            },
            {
              "type": "text",
              "value": " is true the shape will be c.shape[1:] + x.shape. If "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "tensor",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "tensor"
            },
            {
              "type": "text",
              "value": " is false the shape will be c.shape[1:]. Note that scalars have shape (,)."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Trailing zeros in the coefficients will be used in the evaluation, so they should be avoided if efficiency is a concern."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The evaluation uses Clenshaw recursion, aka synthetic division."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": " is a list or tuple, it is converted to an ndarray, otherwise it is left unchanged and treated as a scalar. In either case, "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": " or its elements must support addition and multiplication with themselves and with the elements of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "c",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "c"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x",
              "type": "Param",
              "type_": "array_like, compatible object"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Array of coefficients ordered so that the coefficients for terms of degree n are contained in c[n]. If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "c",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "c"
                    },
                    {
                      "type": "text",
                      "value": " is multidimensional the remaining indices enumerate multiple polynomials. In the two dimensional case the coefficients may be thought of as stored in the columns of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "c",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "c"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "c",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, the shape of the coefficient array is extended with ones on the right, one for each dimension of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": ". Scalars have dimension 0 for this action. The result is that every column of coefficients in "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "c",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "c"
                    },
                    {
                      "type": "text",
                      "value": " is evaluated for every element of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": ". If False, "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": " is broadcast over the columns of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "c",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "c"
                    },
                    {
                      "type": "text",
                      "value": " for the evaluation.  This keyword is useful when "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "c",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "c"
                    },
                    {
                      "type": "text",
                      "value": " is multidimensional. The default value is True."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.7.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "tensor",
              "type": "Param",
              "type_": "boolean, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The shape of the return value is described above."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "values",
              "type": "Param",
              "type_": "ndarray, algebra_like"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Evaluate a Laguerre series at points x."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from numpy.polynomial.laguerre import lagval\ncoef = [1,2,3]\nlagval(1, coef)"
      },
      {
        "type": "code",
        "value": "lagval([[1,2],[3,4]], coef)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/polynomial/laguerre.py",
  "item_line": 801,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy.polynomial.laguerre:lagval2d",
          "type": "RefInfo",
          "version": "1.23.5"
        },
        "type": "Link",
        "value": "lagval2d"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy.polynomial.laguerre:laggrid2d",
          "type": "RefInfo",
          "version": "1.23.5"
        },
        "type": "Link",
        "value": "laggrid2d"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy.polynomial.laguerre:lagval3d",
          "type": "RefInfo",
          "version": "1.23.5"
        },
        "type": "Link",
        "value": "lagval3d"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy.polynomial.laguerre:laggrid3d",
          "type": "RefInfo",
          "version": "1.23.5"
        },
        "type": "Link",
        "value": "laggrid3d"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(x, c, tensor=True)"
  },
  "type": "DocBlob"
}