{
  "aliases": [
    "numpy.polynomial.polyutils._vander_nd"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The result is built by combining the results of 1d Vandermonde matrices,"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "W[i_0, \\ldots, i_M, j_0, \\ldots, j_N] = \\prod_{k=0}^N{V_k(x_k)[i_0, \\ldots, i_M, j_k]}"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "where"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "N &= \\texttt{len(points)} = \\texttt{len(degrees)} = \\texttt{len(vander\\_fs)} \\\\\nM &= \\texttt{points[k].ndim} \\\\\nV_k &= \\texttt{vander\\_fs[k]} \\\\\nx_k &= \\texttt{points[k]} \\\\\n0 \\le j_k &\\le \\texttt{degrees[k]}"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Expanding the one-dimensional "
            },
            {
              "type": "inlineMath",
              "value": "V_k"
            },
            {
              "type": "text",
              "value": " functions gives:"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "W[i_0, \\ldots, i_M, j_0, \\ldots, j_N] = \\prod_{k=0}^N{B_{k, j_k}(x_k[i_0, \\ldots, i_M])}"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "where "
            },
            {
              "type": "inlineMath",
              "value": "B_{k,m}"
            },
            {
              "type": "text",
              "value": " is the m'th basis of the polynomial construction used along dimension "
            },
            {
              "type": "inlineMath",
              "value": "k"
            },
            {
              "type": "text",
              "value": ". For a regular polynomial, "
            },
            {
              "type": "inlineMath",
              "value": "B_{k, m}(x) = P_m(x) = x^m"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The 1d vander function to use for each axis, such as "
                    },
                    {
                      "type": "inlineCode",
                      "value": "polyvander"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "vander_fs",
              "type": "Param",
              "type_": "Sequence[function(array_like, int) -> ndarray]"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Arrays of point coordinates, all of the same shape. The dtypes will be converted to either float64 or complex128 depending on whether any of the elements are complex. Scalars are converted to 1-D arrays. This must be the same length as "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "vander_fs",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "vander_fs"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "points",
              "type": "Param",
              "type_": "Sequence[array_like]"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The maximum degree (inclusive) to use for each axis. This must be the same length as "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "vander_fs",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "vander_fs"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "degrees",
              "type": "Param",
              "type_": "Sequence[int]"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An array of shape "
                    },
                    {
                      "type": "inlineCode",
                      "value": "points[0].shape + tuple(d + 1 for d in degrees)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "vander_nd",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A generalization of the Vandermonde matrix for N dimensions"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/polynomial/polyutils.py",
  "item_line": 377,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(vander_fs, points, degrees)"
  },
  "type": "DocBlob"
}