{
  "aliases": [
    "numpy.random.default_rng"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "If "
            },
            {
              "type": "inlineCode",
              "value": "seed"
            },
            {
              "type": "text",
              "value": " is not a "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "numpy",
                "path": "numpy.random.bit_generator:BitGenerator",
                "type": "RefInfo",
                "version": "1.23.5"
              },
              "type": "Link",
              "value": "BitGenerator"
            },
            {
              "type": "text",
              "value": " or a "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "Generator"
            },
            {
              "type": "text",
              "value": ", a new "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "numpy",
                "path": "numpy.random.bit_generator:BitGenerator",
                "type": "RefInfo",
                "version": "1.23.5"
              },
              "type": "Link",
              "value": "BitGenerator"
            },
            {
              "type": "text",
              "value": " is instantiated. This function does not manage a default global instance."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A seed to initialize the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "numpy",
                        "path": "numpy.random.bit_generator:BitGenerator",
                        "type": "RefInfo",
                        "version": "1.23.5"
                      },
                      "type": "Link",
                      "value": "BitGenerator"
                    },
                    {
                      "type": "text",
                      "value": ". If None, then fresh, unpredictable entropy will be pulled from the OS. If an "
                    },
                    {
                      "type": "inlineCode",
                      "value": "int"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "type": "inlineCode",
                      "value": "array_like[ints]"
                    },
                    {
                      "type": "text",
                      "value": " is passed, then it will be passed to "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "SeedSequence"
                    },
                    {
                      "type": "text",
                      "value": " to derive the initial "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "numpy",
                        "path": "numpy.random.bit_generator:BitGenerator",
                        "type": "RefInfo",
                        "version": "1.23.5"
                      },
                      "type": "Link",
                      "value": "BitGenerator"
                    },
                    {
                      "type": "text",
                      "value": " state. One may also pass in a "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "SeedSequence"
                    },
                    {
                      "type": "text",
                      "value": " instance. Additionally, when passed a "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "numpy",
                        "path": "numpy.random.bit_generator:BitGenerator",
                        "type": "RefInfo",
                        "version": "1.23.5"
                      },
                      "type": "Link",
                      "value": "BitGenerator"
                    },
                    {
                      "type": "text",
                      "value": ", it will be wrapped by "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "Generator"
                    },
                    {
                      "type": "text",
                      "value": ". If passed a "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "Generator"
                    },
                    {
                      "type": "text",
                      "value": ", it will be returned unaltered."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "seed",
              "type": "Param",
              "type_": "{None, int, array_like[ints], SeedSequence, BitGenerator, Generator}, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The initialized generator object."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "Generator"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Construct a new Generator with the default BitGenerator (PCG64)."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "``default_rng`` is the recommended constructor for the random number class\n``Generator``. Here are several ways we can construct a random \nnumber generator using ``default_rng`` and the ``Generator`` class. "
      },
      {
        "type": "text",
        "value": "Here we use ``default_rng`` to generate a random float:"
      },
      {
        "type": "code",
        "value": "import numpy as np\nrng = np.random.default_rng(12345)\nprint(rng)"
      },
      {
        "type": "code",
        "value": "rfloat = rng.random()\nrfloat"
      },
      {
        "type": "code",
        "value": "type(rfloat)"
      },
      {
        "type": "text",
        "value": "Here we use ``default_rng`` to generate 3 random integers between 0 \n(inclusive) and 10 (exclusive):"
      },
      {
        "type": "code",
        "value": "import numpy as np\nrng = np.random.default_rng(12345)\nrints = rng.integers(low=0, high=10, size=3)\nrints"
      },
      {
        "type": "code",
        "value": "type(rints[0])"
      },
      {
        "type": "text",
        "value": "Here we specify a seed so that we have reproducible results:"
      },
      {
        "type": "code",
        "value": "import numpy as np\nrng = np.random.default_rng(seed=42)\nprint(rng)"
      },
      {
        "type": "code",
        "value": "arr1 = rng.random((3, 3))\narr1"
      },
      {
        "type": "text",
        "value": "If we exit and restart our Python interpreter, we'll see that we\ngenerate the same random numbers again:"
      },
      {
        "type": "code",
        "value": "import numpy as np\nrng = np.random.default_rng(seed=42)\narr2 = rng.random((3, 3))\narr2"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": null,
  "item_line": null,
  "item_type": "<class 'builtin_function_or_method'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}