{
  "aliases": [
    "numpy.random.RandomState"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "RandomState"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "Generator"
            },
            {
              "type": "text",
              "value": " expose a number of methods for generating random numbers drawn from a variety of probability distributions. In addition to the distribution-specific arguments, each method takes a keyword argument "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "size"
            },
            {
              "type": "text",
              "value": " that defaults to "
            },
            {
              "type": "inlineCode",
              "value": "None"
            },
            {
              "type": "text",
              "value": ". If "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "size"
            },
            {
              "type": "text",
              "value": " is "
            },
            {
              "type": "inlineCode",
              "value": "None"
            },
            {
              "type": "text",
              "value": ", then a single value is generated and returned. If "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "size"
            },
            {
              "type": "text",
              "value": " is an integer, then a 1-D array filled with generated values is returned. If "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "size"
            },
            {
              "type": "text",
              "value": " is a tuple, then an array with that shape is filled and returned."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "Compatibility Guarantee"
                }
              ],
              "type": "strong"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "A fixed bit generator using a fixed seed and a fixed series of calls to 'RandomState' methods using the same parameters will always produce the same results up to roundoff error except when the values were incorrect. "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "RandomState"
            },
            {
              "type": "text",
              "value": " is effectively frozen and will only receive updates that are required by changes in the the internals of Numpy. More substantial changes, including algorithmic improvements, are reserved for "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "Generator"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The Python stdlib module \"random\" also contains a Mersenne Twister pseudo-random number generator with a number of methods that are similar to the ones available in "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "RandomState"
            },
            {
              "type": "text",
              "value": ". "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "RandomState"
            },
            {
              "type": "text",
              "value": ", besides being NumPy-aware, has the advantage that it provides a much larger number of probability distributions to choose from."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Random seed used to initialize the pseudo-random number generator or an instantized BitGenerator.  If an integer or array, used as a seed for the MT19937 BitGenerator. Values can be any integer between 0 and 2**32 - 1 inclusive, an array (or other sequence) of such integers, or "
                    },
                    {
                      "type": "inlineCode",
                      "value": "None"
                    },
                    {
                      "type": "text",
                      "value": " (the default).  If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "seed",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "seed"
                    },
                    {
                      "type": "text",
                      "value": " is "
                    },
                    {
                      "type": "inlineCode",
                      "value": "None"
                    },
                    {
                      "type": "text",
                      "value": ", then the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "numpy",
                        "path": "numpy.random._mt19937:MT19937",
                        "type": "RefInfo",
                        "version": "1.23.5"
                      },
                      "type": "Link",
                      "value": "MT19937"
                    },
                    {
                      "type": "text",
                      "value": " BitGenerator is initialized by reading data from "
                    },
                    {
                      "type": "inlineCode",
                      "value": "/dev/urandom"
                    },
                    {
                      "type": "text",
                      "value": " (or the Windows analogue) if available or seed from the clock otherwise."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "seed",
              "type": "Param",
              "type_": "{None, int, array_like, BitGenerator}, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Container for the slow Mersenne Twister pseudo-random number generator. Consider using a different BitGenerator with the Generator container instead."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/random/mtrand.cpython-39-darwin.so",
  "item_line": null,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Signature",
    "Summary",
    "Extended Summary",
    "Parameters",
    "Notes",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "Generator",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "Generator"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy.random._mt19937:MT19937",
          "type": "RefInfo",
          "version": "1.23.5"
        },
        "type": "Link",
        "value": "MT19937"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy.random.bit_generator:BitGenerator",
          "type": "RefInfo",
          "version": "1.23.5"
        },
        "type": "Link",
        "value": "numpy.random.BitGenerator"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "RandomState(seed=None)"
  },
  "type": "DocBlob"
}