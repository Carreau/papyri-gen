{
  "aliases": [
    "numpy.typing.NBitBase"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Used exclusively for the purpose static type checking, "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "numpy",
                "path": "numpy.typing:NBitBase",
                "type": "RefInfo",
                "version": "1.23.5"
              },
              "type": "Link",
              "value": "NBitBase"
            },
            {
              "type": "text",
              "value": " represents the base of a hierarchical set of subclasses. Each subsequent subclass is herein used for representing a lower level of precision, "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "e.g."
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " "
            },
            {
              "type": "inlineCode",
              "value": "64Bit > 32Bit > 16Bit"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionadded 1.20"
                }
              ],
              "type": "admonitionTitle"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A type representing "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "api",
                "module": "numpy:number",
                "path": "numpy:number",
                "type": "RefInfo",
                "version": "*"
              },
              "type": "Link",
              "value": "numpy.number"
            },
            {
              "type": "text",
              "value": " precision during static type checking."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Below is a typical usage example: `NBitBase` is herein used for annotating\na function that takes a float and integer of arbitrary precision\nas arguments and returns a new float of whichever precision is largest\n(*e.g.* ``np.float16 + np.int64 -> np.float64``)."
      },
      {
        "type": "text",
        "value": ".. code-block:: python"
      },
      {
        "type": "text",
        "value": "    >>> from __future__ import annotations\n    >>> from typing import TypeVar, TYPE_CHECKING\n    >>> import numpy as np\n    >>> import numpy.typing as npt"
      },
      {
        "type": "text",
        "value": "    >>> T1 = TypeVar(\"T1\", bound=npt.NBitBase)\n    >>> T2 = TypeVar(\"T2\", bound=npt.NBitBase)"
      },
      {
        "type": "text",
        "value": "    >>> def add(a: np.floating[T1], b: np.integer[T2]) -> np.floating[T1 | T2]:\n    ...     return a + b"
      },
      {
        "type": "text",
        "value": "    >>> a = np.float16()\n    >>> b = np.int64()\n    >>> out = add(a, b)"
      },
      {
        "type": "text",
        "value": "    >>> if TYPE_CHECKING:\n    ...     reveal_locals()\n    ...     # note: Revealed local types are:\n    ...     # note:     a: numpy.floating[numpy.typing._16Bit*]\n    ...     # note:     b: numpy.signedinteger[numpy.typing._64Bit*]\n    ...     # note:     out: numpy.floating[numpy.typing._64Bit*]"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/typing/__init__.py",
  "item_line": null,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}