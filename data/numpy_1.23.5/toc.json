{
  "tree": {
    "user:index": {
      "user:whatisnumpy": {},
      "user:quickstart": {},
      "user:absolute_beginners": {},
      "user:basics": {
        "user:basics.creation": {},
        "user:basics.indexing": {},
        "user:basics.io": {
          "user:basics.io.genfromtxt": {}
        },
        "user:basics.types": {},
        "user:basics.broadcasting": {},
        "user:basics.copies": {},
        "user:basics.rec": {},
        "user:basics.ufuncs": {}
      },
      "user:numpy-for-matlab-users": {},
      "user:howtos_index": {
        "user:how-to-io": {},
        "user:how-to-index": {},
        "user:how-to-verify-bug": {},
        "user:how-to-partition": {}
      },
      "user:building": {},
      "user:c-info": {
        "user:c-info.how-to-extend": {},
        "user:c-info.python-as-glue": {},
        "user:c-info.ufunc-tutorial": {},
        "user:c-info.beyond-basics": {}
      },
      "f2py:index": {
        "f2py:f2py.getting-started": {},
        "f2py:f2py-user": {
          "f2py:f2py.getting-started": {},
          "f2py:f2py-examples": {}
        },
        "f2py:f2py-reference": {
          "f2py:signature-file": {},
          "f2py:python-usage": {},
          "f2py:buildtools:index": {
            "f2py:buildtools:distutils": {},
            "f2py:buildtools:meson": {},
            "f2py:buildtools:cmake": {},
            "f2py:buildtools:skbuild": {}
          },
          "f2py:advanced": {},
          "f2py:f2py-testing": {}
        },
        "f2py:python-usage": {},
        "f2py:signature-file": {},
        "f2py:buildtools:index": {
          "f2py:buildtools:distutils": {},
          "f2py:buildtools:meson": {},
          "f2py:buildtools:cmake": {},
          "f2py:buildtools:skbuild": {}
        },
        "f2py:advanced": {},
        "f2py:windows:index": {
          "f2py:windows:intel": {},
          "f2py:windows:msys2": {},
          "f2py:windows:conda": {},
          "f2py:windows:pgi": {}
        }
      },
      "dev:underthehood": {
        "dev:internals": {},
        "dev:internals.code-explanations": {},
        "dev:alignment": {},
        "user:byteswapping": {},
        "user:basics.dispatch": {},
        "user:basics.subclassing": {}
      },
      "user:basics.interoperability": {},
      "glossary": {},
      "release": {
        "release:2.0.0-notes": {},
        "release:1.25.0-notes": {},
        "release:1.24.3-notes": {},
        "release:1.24.2-notes": {},
        "release:1.24.1-notes": {},
        "release:1.24.0-notes": {},
        "release:1.23.5-notes": {},
        "release:1.23.4-notes": {},
        "release:1.23.3-notes": {},
        "release:1.23.2-notes": {},
        "release:1.23.1-notes": {},
        "release:1.23.0-notes": {},
        "release:1.22.4-notes": {},
        "release:1.22.3-notes": {},
        "release:1.22.2-notes": {},
        "release:1.22.1-notes": {},
        "release:1.22.0-notes": {},
        "release:1.21.6-notes": {},
        "release:1.21.5-notes": {},
        "release:1.21.4-notes": {},
        "release:1.21.3-notes": {},
        "release:1.21.2-notes": {},
        "release:1.21.1-notes": {},
        "release:1.21.0-notes": {},
        "release:1.20.3-notes": {},
        "release:1.20.2-notes": {},
        "release:1.20.1-notes": {},
        "release:1.20.0-notes": {},
        "release:1.19.5-notes": {},
        "release:1.19.4-notes": {},
        "release:1.19.3-notes": {},
        "release:1.19.2-notes": {},
        "release:1.19.1-notes": {},
        "release:1.19.0-notes": {},
        "release:1.18.5-notes": {},
        "release:1.18.4-notes": {},
        "release:1.18.3-notes": {},
        "release:1.18.2-notes": {},
        "release:1.18.1-notes": {},
        "release:1.18.0-notes": {},
        "release:1.17.5-notes": {},
        "release:1.17.4-notes": {},
        "release:1.17.3-notes": {},
        "release:1.17.2-notes": {},
        "release:1.17.1-notes": {},
        "release:1.17.0-notes": {},
        "release:1.16.6-notes": {},
        "release:1.16.5-notes": {},
        "release:1.16.4-notes": {},
        "release:1.16.3-notes": {},
        "release:1.16.2-notes": {},
        "release:1.16.1-notes": {},
        "release:1.16.0-notes": {},
        "release:1.15.4-notes": {},
        "release:1.15.3-notes": {},
        "release:1.15.2-notes": {},
        "release:1.15.1-notes": {},
        "release:1.15.0-notes": {},
        "release:1.14.6-notes": {},
        "release:1.14.5-notes": {},
        "release:1.14.4-notes": {},
        "release:1.14.3-notes": {},
        "release:1.14.2-notes": {},
        "release:1.14.1-notes": {},
        "release:1.14.0-notes": {},
        "release:1.13.3-notes": {},
        "release:1.13.2-notes": {},
        "release:1.13.1-notes": {},
        "release:1.13.0-notes": {},
        "release:1.12.1-notes": {},
        "release:1.12.0-notes": {},
        "release:1.11.3-notes": {},
        "release:1.11.2-notes": {},
        "release:1.11.1-notes": {},
        "release:1.11.0-notes": {},
        "release:1.10.4-notes": {},
        "release:1.10.3-notes": {},
        "release:1.10.2-notes": {},
        "release:1.10.1-notes": {},
        "release:1.10.0-notes": {},
        "release:1.9.2-notes": {},
        "release:1.9.1-notes": {},
        "release:1.9.0-notes": {},
        "release:1.8.2-notes": {},
        "release:1.8.1-notes": {},
        "release:1.8.0-notes": {},
        "release:1.7.2-notes": {},
        "release:1.7.1-notes": {},
        "release:1.7.0-notes": {},
        "release:1.6.2-notes": {},
        "release:1.6.1-notes": {},
        "release:1.6.0-notes": {},
        "release:1.5.0-notes": {},
        "release:1.4.0-notes": {},
        "release:1.3.0-notes": {}
      },
      "license": {}
    },
    "reference:index": {
      "reference:arrays": {
        "reference:arrays.scalars": {},
        "reference:arrays.dtypes": {},
        "reference:arrays.indexing": {},
        "reference:arrays.nditer": {},
        "reference:arrays.classes": {},
        "reference:maskedarray": {
          "reference:maskedarray.generic": {},
          "reference:maskedarray.baseclass": {},
          "reference:routines.ma": {}
        },
        "reference:arrays.interface": {},
        "reference:arrays.datetime": {}
      },
      "reference:array_api": {},
      "reference:constants": {},
      "reference:ufuncs": {},
      "reference:routines": {
        "reference:routines.array-creation": {},
        "reference:routines.array-manipulation": {},
        "reference:routines.bitwise": {},
        "reference:routines.char": {},
        "reference:routines.ctypeslib": {},
        "reference:routines.datetime": {},
        "reference:routines.dtype": {},
        "reference:routines.emath": {},
        "reference:routines.err": {},
        "reference:routines.fft": {},
        "reference:routines.functional": {},
        "reference:routines.help": {},
        "reference:routines.io": {},
        "reference:routines.linalg": {},
        "reference:routines.logic": {},
        "reference:routines.ma": {},
        "reference:routines.math": {},
        "reference:routines.matlib": {},
        "reference:routines.other": {},
        "reference:routines.padding": {},
        "reference:routines.polynomials": {
          "reference:routines.polynomials.classes": {},
          "reference:routines.polynomials.polynomial": {},
          "reference:routines.polynomials.chebyshev": {},
          "reference:routines.polynomials.hermite": {},
          "reference:routines.polynomials.hermite_e": {},
          "reference:routines.polynomials.laguerre": {},
          "reference:routines.polynomials.legendre": {},
          "reference:routines.polynomials.polyutils": {},
          "reference:routines.polynomials.poly1d": {}
        },
        "reference:random:index": {
          "reference:random:generator": {},
          "reference:random:legacy": {},
          "reference:random:bit_generators:index": {
            "reference:random:bit_generators:mt19937": {},
            "reference:random:bit_generators:pcg64": {},
            "reference:random:bit_generators:pcg64dxsm": {},
            "reference:random:bit_generators:philox": {},
            "reference:random:bit_generators:sfc64": {}
          },
          "reference:random:upgrading-pcg64": {},
          "reference:random:compatibility": {},
          "reference:random:parallel": {},
          "reference:random:multithreading": {},
          "reference:random:new-or-different": {},
          "reference:random:performance": {},
          "reference:random:c-api": {},
          "reference:random:extending": {
            "reference:random:examples:numba": {},
            "reference:random:examples:numba_cffi": {},
            "reference:random:examples:cython:index": {
              "reference:random:examples:cython:setup.py": {},
              "reference:random:examples:cython:extending.pyx": {},
              "reference:random:examples:cython:extending_distributions.pyx": {}
            },
            "reference:random:examples:cffi": {}
          }
        },
        "reference:routines.set": {},
        "reference:routines.sort": {},
        "reference:routines.statistics": {},
        "reference:routines.testing": {
          "reference:testing": {}
        },
        "reference:routines.testing.overrides": {},
        "reference:routines.window": {}
      },
      "reference:typing": {},
      "reference:global_state": {},
      "reference:distutils": {
        "reference:distutils:misc_util": {}
      },
      "reference:distutils_guide": {},
      "reference:distutils_status_migration": {},
      "reference:c-api:index": {
        "reference:c-api:types-and-structures": {},
        "reference:c-api:config": {},
        "reference:c-api:dtype": {},
        "reference:c-api:array": {},
        "reference:c-api:iterator": {},
        "reference:c-api:ufunc": {},
        "reference:c-api:generalized-ufuncs": {},
        "reference:c-api:coremath": {},
        "reference:c-api:deprecations": {},
        "reference:c-api:data_memory": {}
      },
      "reference:simd:index": {
        "reference:simd:build-options": {},
        "reference:simd:how-it-works": {}
      },
      "reference:security": {},
      "reference:swig": {
        "reference:swig.interface-file": {},
        "reference:swig.testing": {}
      }
    },
    "dev:index": {
      "dev:gitwash:index": {
        "dev:gitwash:git_intro": {},
        "dev:gitwash:following_latest": {},
        "dev:gitwash:development_setup": {},
        "dev:gitwash:configure_git": {},
        "dev:gitwash:dot2_dot3": {},
        "dev:gitwash:git_resources": {}
      },
      "dev:development_environment": {},
      "dev:howto_build_docs": {},
      "dev:development_workflow": {},
      "dev:development_advanced_debugging": {},
      "dev:reviewer_guidelines": {},
      "benchmarking": {},
      "dev:depending_on_numpy": {},
      "dev:releasing": {},
      "dev:governance:index": {
        "dev:governance:governance": {}
      },
      "dev:howto-docs": {}
    },
    "release": {
      "release:2.0.0-notes": {},
      "release:1.25.0-notes": {},
      "release:1.24.3-notes": {},
      "release:1.24.2-notes": {},
      "release:1.24.1-notes": {},
      "release:1.24.0-notes": {},
      "release:1.23.5-notes": {},
      "release:1.23.4-notes": {},
      "release:1.23.3-notes": {},
      "release:1.23.2-notes": {},
      "release:1.23.1-notes": {},
      "release:1.23.0-notes": {},
      "release:1.22.4-notes": {},
      "release:1.22.3-notes": {},
      "release:1.22.2-notes": {},
      "release:1.22.1-notes": {},
      "release:1.22.0-notes": {},
      "release:1.21.6-notes": {},
      "release:1.21.5-notes": {},
      "release:1.21.4-notes": {},
      "release:1.21.3-notes": {},
      "release:1.21.2-notes": {},
      "release:1.21.1-notes": {},
      "release:1.21.0-notes": {},
      "release:1.20.3-notes": {},
      "release:1.20.2-notes": {},
      "release:1.20.1-notes": {},
      "release:1.20.0-notes": {},
      "release:1.19.5-notes": {},
      "release:1.19.4-notes": {},
      "release:1.19.3-notes": {},
      "release:1.19.2-notes": {},
      "release:1.19.1-notes": {},
      "release:1.19.0-notes": {},
      "release:1.18.5-notes": {},
      "release:1.18.4-notes": {},
      "release:1.18.3-notes": {},
      "release:1.18.2-notes": {},
      "release:1.18.1-notes": {},
      "release:1.18.0-notes": {},
      "release:1.17.5-notes": {},
      "release:1.17.4-notes": {},
      "release:1.17.3-notes": {},
      "release:1.17.2-notes": {},
      "release:1.17.1-notes": {},
      "release:1.17.0-notes": {},
      "release:1.16.6-notes": {},
      "release:1.16.5-notes": {},
      "release:1.16.4-notes": {},
      "release:1.16.3-notes": {},
      "release:1.16.2-notes": {},
      "release:1.16.1-notes": {},
      "release:1.16.0-notes": {},
      "release:1.15.4-notes": {},
      "release:1.15.3-notes": {},
      "release:1.15.2-notes": {},
      "release:1.15.1-notes": {},
      "release:1.15.0-notes": {},
      "release:1.14.6-notes": {},
      "release:1.14.5-notes": {},
      "release:1.14.4-notes": {},
      "release:1.14.3-notes": {},
      "release:1.14.2-notes": {},
      "release:1.14.1-notes": {},
      "release:1.14.0-notes": {},
      "release:1.13.3-notes": {},
      "release:1.13.2-notes": {},
      "release:1.13.1-notes": {},
      "release:1.13.0-notes": {},
      "release:1.12.1-notes": {},
      "release:1.12.0-notes": {},
      "release:1.11.3-notes": {},
      "release:1.11.2-notes": {},
      "release:1.11.1-notes": {},
      "release:1.11.0-notes": {},
      "release:1.10.4-notes": {},
      "release:1.10.3-notes": {},
      "release:1.10.2-notes": {},
      "release:1.10.1-notes": {},
      "release:1.10.0-notes": {},
      "release:1.9.2-notes": {},
      "release:1.9.1-notes": {},
      "release:1.9.0-notes": {},
      "release:1.8.2-notes": {},
      "release:1.8.1-notes": {},
      "release:1.8.0-notes": {},
      "release:1.7.2-notes": {},
      "release:1.7.1-notes": {},
      "release:1.7.0-notes": {},
      "release:1.6.2-notes": {},
      "release:1.6.1-notes": {},
      "release:1.6.0-notes": {},
      "release:1.5.0-notes": {},
      "release:1.4.0-notes": {},
      "release:1.3.0-notes": {}
    }
  },
  "titles": {
    "benchmarking": "<No Title benchmarking>",
    "index": "NumPy documentation",
    "getting_started": "Getting started",
    "license": "NumPy license",
    "release": "Release notes",
    "glossary": "Glossary",
    "_templates:autosummary:class": "<No Title _templates:autosummary:class>",
    "_templates:autosummary:member": "<No Title _templates:autosummary:member>",
    "_templates:autosummary:method": "<No Title _templates:autosummary:method>",
    "_templates:autosummary:attribute": "<No Title _templates:autosummary:attribute>",
    "_templates:autosummary:base": "<No Title _templates:autosummary:base>",
    "_templates:autosummary:module": "<No Title _templates:autosummary:module>",
    "_templates:autosummary:minimal_module": "<No Title _templates:autosummary:minimal_module>",
    "user:basics.types": "Data types",
    "user:basics.indexing": "Indexing on :class:`ndarrays <.ndarray>`",
    "user:install": "Installing NumPy",
    "user:c-info.how-to-extend": "How to extend NumPy",
    "user:index": "NumPy user guide",
    "user:how-to-io": "Reading and writing files",
    "user:theory.broadcasting": "Array broadcasting in Numpy",
    "user:basics.rec": "Structured arrays",
    "user:basics.interoperability": "Interoperability with NumPy",
    "user:numpy-for-matlab-users": "NumPy for MATLAB users",
    "user:troubleshooting-importerror": "Troubleshooting",
    "user:byteswapping": "Byte-swapping",
    "user:whatisnumpy": "What is NumPy?",
    "user:absolute_beginners": "NumPy: the absolute basics for beginners",
    "user:basics.subclassing": "Subclassing ndarray",
    "user:basics.ufuncs": "Universal functions (:class:`.ufunc`) basics",
    "user:c-info.beyond-basics": "Beyond the Basics",
    "user:basics.dispatch": "Writing custom array containers",
    "user:quickstart": "NumPy quickstart",
    "user:basics.io.genfromtxt": "Importing data with :func:`~numpy.genfromtxt`",
    "user:basics.io": "I/O with NumPy",
    "user:c-info.ufunc-tutorial": "Writing your own ufunc",
    "user:building": "Building from source",
    "user:how-to-partition": "How to create arrays with regularly-spaced values",
    "user:basics.broadcasting": "Broadcasting",
    "user:how-to-verify-bug": "Verifying bugs and bug fixes in NumPy",
    "user:howtos_index": "NumPy how-tos",
    "user:misc": "Miscellaneous",
    "user:c-info.python-as-glue": "Using Python as glue",
    "user:basics": "NumPy fundamentals",
    "user:basics.copies": "Copies and views",
    "user:how-to-index": "How to index :class:`ndarrays <.ndarray>`",
    "user:basics.creation": "Array creation",
    "user:c-info": "Using NumPy C-API",
    "release:1.11.1-notes": "NumPy 1.11.1 Release Notes",
    "release:1.21.2-notes": "NumPy 1.21.2 Release Notes",
    "release:1.6.0-notes": "NumPy 1.6.0 Release Notes",
    "release:1.25.0-notes": "NumPy 1.25.0 Release Notes",
    "release:1.15.3-notes": "NumPy 1.15.3 Release Notes",
    "release:1.23.1-notes": "NumPy 1.23.1 Release Notes",
    "release:1.13.2-notes": "NumPy 1.13.2 Release Notes",
    "release:1.19.5-notes": "NumPy 1.19.5 Release Notes",
    "release:1.17.0-notes": "NumPy 1.17.0 Release Notes",
    "release:1.18.1-notes": "NumPy 1.18.1 Release Notes",
    "release:1.16.4-notes": "NumPy 1.16.4 Release Notes",
    "release:1.9.1-notes": "NumPy 1.9.1 Release Notes",
    "release:1.19.3-notes": "NumPy 1.19.3 Release Notes",
    "release:1.21.4-notes": "NumPy 1.21.4 Release Notes",
    "release:1.10.3-notes": "NumPy 1.10.3 Release Notes",
    "release:1.20.0-notes": "NumPy 1.20.0 Release Notes",
    "release:1.3.0-notes": "NumPy 1.3.0 Release Notes",
    "release:1.24.2-notes": "NumPy 1.24.2 Release Notes",
    "release:1.14.1-notes": "NumPy 1.14.1 Release Notes",
    "release:1.7.2-notes": "NumPy 1.7.2 Release Notes",
    "release:1.22.3-notes": "NumPy 1.22.3 Release Notes",
    "release:1.12.0-notes": "NumPy 1.12.0 Release Notes",
    "release:1.16.2-notes": "NumPy 1.16.2 Release Notes",
    "release:1.6.1-notes": "NumPy 1.6.1 Release Notes",
    "release:1.15.2-notes": "NumPy 1.15.2 Release Notes",
    "release:1.11.0-notes": "NumPy 1.11.0 Release Notes",
    "release:1.21.3-notes": "NumPy 1.21.3 Release Notes",
    "release:1.17.1-notes": "NumPy 1.17.1 Release Notes",
    "release:1.23.0-notes": "NumPy 1.23.0 Release Notes",
    "release:1.13.3-notes": "NumPy 1.13.3 Release Notes",
    "release:1.19.4-notes": "NumPy 1.19.4 Release Notes",
    "release:1.16.5-notes": "NumPy 1.16.5 Release Notes",
    "release:1.22.4-notes": "NumPy 1.22.4 Release Notes",
    "release:1.18.0-notes": "NumPy 1.18.0 Release Notes",
    "release:1.14.6-notes": "NumPy 1.14.6 Release Notes",
    "release:1.9.0-notes": "NumPy 1.9.0 Release Notes",
    "release:1.10.4-notes": "NumPy 1.10.4 Release Notes",
    "release:1.19.2-notes": "NumPy 1.19.2 Release Notes",
    "release:1.15.4-notes": "NumPy 1.15.4 Release Notes",
    "release:1.21.5-notes": "NumPy 1.21.5 Release Notes",
    "release:1.8.2-notes": "NumPy 1.8.2 Release Notes",
    "release:1.24.3-notes": "NumPy 1.24.3 Release Notes",
    "release:1.14.0-notes": "NumPy 1.14.0 Release Notes",
    "release:1.10.2-notes": "NumPy 1.10.2 Release Notes",
    "release:1.20.1-notes": "NumPy 1.20.1 Release Notes",
    "release:1.5.0-notes": "NumPy 1.5.0 Release Notes",
    "release:1.16.3-notes": "NumPy 1.16.3 Release Notes",
    "release:2.0.0-notes": "NumPy 2.0.0 Release Notes",
    "release:1.22.2-notes": "NumPy 1.22.2 Release Notes",
    "release:1.12.1-notes": "NumPy 1.12.1 Release Notes",
    "release:1.13.0-notes": "NumPy 1.13.0 Release Notes",
    "release:1.23.3-notes": "NumPy 1.23.3 Release Notes",
    "release:1.17.2-notes": "NumPy 1.17.2 Release Notes",
    "release:1.21.0-notes": "NumPy 1.21.0 Release Notes",
    "release:1.11.3-notes": "NumPy 1.11.3 Release Notes",
    "release:1.6.2-notes": "NumPy 1.6.2 Release Notes",
    "release:1.15.1-notes": "NumPy 1.15.1 Release Notes",
    "release:1.14.5-notes": "NumPy 1.14.5 Release Notes",
    "release:1.18.3-notes": "NumPy 1.18.3 Release Notes",
    "release:1.16.6-notes": "NumPy 1.16.6 Release Notes",
    "release:1.21.6-notes": "NumPy 1.21.6 Release Notes",
    "release:1.8.1-notes": "NumPy 1.8.1 Release Notes",
    "release:1.19.1-notes": "NumPy 1.19.1 Release Notes",
    "release:1.23.5-notes": "NumPy 1.23.5 Release Notes",
    "release:1.17.4-notes": "NumPy 1.17.4 Release Notes",
    "release:1.18.5-notes": "NumPy 1.18.5 Release Notes",
    "release:1.22.1-notes": "NumPy 1.22.1 Release Notes",
    "release:1.16.0-notes": "NumPy 1.16.0 Release Notes",
    "release:1.20.2-notes": "NumPy 1.20.2 Release Notes",
    "release:1.10.1-notes": "NumPy 1.10.1 Release Notes",
    "release:1.14.3-notes": "NumPy 1.14.3 Release Notes",
    "release:1.24.0-notes": "NumPy 1.24 Release Notes",
    "release:1.7.0-notes": "NumPy 1.7.0 Release Notes",
    "release:1.17.3-notes": "NumPy 1.17.3 Release Notes",
    "release:1.4.0-notes": "NumPy 1.4.0 Release Notes",
    "release:1.13.1-notes": "NumPy 1.13.1 Release Notes",
    "release:1.23.2-notes": "NumPy 1.23.2 Release Notes",
    "release:1.15.0-notes": "NumPy 1.15.0 Release Notes",
    "release:1.21.1-notes": "NumPy 1.21.1 Release Notes",
    "release:1.11.2-notes": "NumPy 1.11.2 Release Notes",
    "release:1.14.4-notes": "NumPy 1.14.4 Release Notes",
    "release:1.9.2-notes": "NumPy 1.9.2 Release Notes",
    "release:1.18.2-notes": "NumPy 1.18.2 Release Notes",
    "release:1.8.0-notes": "NumPy 1.8.0 Release Notes",
    "release:1.17.5-notes": "NumPy 1.17.5 Release Notes",
    "release:1.19.0-notes": "NumPy 1.19.0 Release Notes",
    "release:1.23.4-notes": "NumPy 1.23.4 Release Notes",
    "release:1.16.1-notes": "NumPy 1.16.1 Release Notes",
    "release:template": "NumPy 1.xx.x Release Notes",
    "release:1.18.4-notes": "NumPy 1.18.4 Release Notes",
    "release:1.22.0-notes": "NumPy 1.22.0 Release Notes",
    "release:1.14.2-notes": "NumPy 1.14.2 Release Notes",
    "release:1.24.1-notes": "NumPy 1.24.1 Release Notes",
    "release:1.7.1-notes": "NumPy 1.7.1 Release Notes",
    "release:1.20.3-notes": "NumPy 1.20.3 Release Notes",
    "release:1.10.0-notes": "NumPy 1.10.0 Release Notes",
    "f2py:index": "F2PY user guide and reference manual",
    "f2py:signature-file": "Signature file",
    "f2py:f2py-testing": "F2PY test suite",
    "f2py:f2py.getting-started": "Three ways to wrap - getting started",
    "f2py:python-usage": "Using F2PY bindings in Python",
    "f2py:advanced": "Advanced F2PY use cases",
    "f2py:f2py-examples": "F2PY examples",
    "f2py:f2py-user": "F2PY user guide",
    "f2py:f2py-reference": "F2PY reference manual",
    "f2py:buildtools:index": "F2PY and Build Systems",
    "f2py:buildtools:skbuild": "Using via ``scikit-build``",
    "f2py:buildtools:cmake": "Using via ``cmake``",
    "f2py:buildtools:meson": "Using via ``meson``",
    "f2py:buildtools:distutils": "Using via `numpy.distutils`",
    "f2py:windows:index": "F2PY and Windows",
    "f2py:windows:msys2": "F2PY and Windows with MSYS2",
    "f2py:windows:intel": "F2PY and Windows Intel Fortran",
    "f2py:windows:conda": "F2PY and Conda on Windows",
    "f2py:windows:pgi": "F2PY and PGI Fortran on Windows",
    "dev:index": "Contributing to NumPy",
    "dev:alignment": "Memory alignment",
    "dev:howto_build_docs": "Building the NumPy API and reference docs",
    "dev:internals.code-explanations": "NumPy C code explanations",
    "dev:howto-docs": "How to contribute to the NumPy documentation",
    "dev:development_advanced_debugging": "Advanced debugging tools",
    "dev:development_workflow": "Development workflow",
    "dev:development_environment": "Setting up and using your development environment",
    "dev:underthehood": "Under-the-hood documentation for developers",
    "dev:depending_on_numpy": "For downstream package authors",
    "dev:releasing": "Releasing a version",
    "dev:internals": "Internal organization of NumPy arrays",
    "dev:reviewer_guidelines": "Reviewer guidelines",
    "dev:governance:index": "NumPy governance",
    "dev:governance:governance": "NumPy project governance and decision-making",
    "dev:gitwash:git_intro": "Install git",
    "dev:gitwash:index": "Git for development",
    "dev:gitwash:following_latest": "Get the local copy of the code",
    "dev:gitwash:configure_git": "Git configuration",
    "dev:gitwash:development_setup": "Setting up git for NumPy development",
    "dev:gitwash:git_resources": "Additional Git_ resources",
    "dev:gitwash:dot2_dot3": "Two and three dots in difference specs",
    "reference:routines.array-manipulation": "Array manipulation routines",
    "reference:swig.interface-file": "numpy.i: a SWIG Interface File for NumPy",
    "reference:routines.polynomials.hermite_e": "<No Title reference:routines.polynomials.hermite_e>",
    "reference:routines.ma": "Masked array operations",
    "reference:index": "NumPy reference",
    "reference:routines.char": "String operations",
    "reference:typing": "<No Title reference:typing>",
    "reference:routines.other": "Miscellaneous routines",
    "reference:routines": "Routines",
    "reference:routines.polynomials.chebyshev": "<No Title reference:routines.polynomials.chebyshev>",
    "reference:routines.padding": "Padding Arrays",
    "reference:swig": "NumPy and SWIG",
    "reference:routines.ctypeslib": "C-Types foreign function interface (:mod:`numpy.ctypeslib`)",
    "reference:routines.emath": "Mathematical functions with automatic domain",
    "reference:alignment": "Memory Alignment",
    "reference:testing": "Testing Guidelines",
    "reference:routines.bitwise": "Binary operations",
    "reference:routines.help": "NumPy-specific help functions",
    "reference:routines.datetime": "Datetime support functions",
    "reference:routines.math": "Mathematical functions",
    "reference:routines.polynomials.hermite": "<No Title reference:routines.polynomials.hermite>",
    "reference:routines.testing.overrides": "Support for testing overrides (:mod:`numpy.testing.overrides`)",
    "reference:array_api": "Array API Standard Compatibility",
    "reference:routines.testing": "Test Support (:mod:`numpy.testing`)",
    "reference:arrays.indexing": "Indexing routines",
    "reference:arrays": "Array objects",
    "reference:arrays.interface": "The array interface protocol",
    "reference:maskedarray.generic": "The :mod:`numpy.ma` module",
    "reference:internals.code-explanations": "NumPy C code explanations",
    "reference:arrays.nditer": "Iterating over arrays",
    "reference:arrays.classes": "Standard array subclasses",
    "reference:routines.logic": "Logic functions",
    "reference:routines.sort": "Sorting, searching, and counting",
    "reference:routines.io": "Input and output",
    "reference:routines.statistics": "Statistics",
    "reference:routines.set": "Set routines",
    "reference:routines.matlib": "Matrix library (:mod:`numpy.matlib`)",
    "reference:routines.polynomials.package": "Configuration",
    "reference:arrays.nditer.cython": "Putting the Inner Loop in Cython",
    "reference:routines.functional": "Functional programming",
    "reference:distutils_guide": "NumPy distutils - users guide",
    "reference:maskedarray": "Masked arrays",
    "reference:routines.array-creation": "Array creation routines",
    "reference:routines.fft": "<No Title reference:routines.fft>",
    "reference:swig.testing": "Testing the numpy.i Typemaps",
    "reference:distutils_status_migration": "Status of ``numpy.distutils`` and migration advice",
    "reference:constants": "Constants",
    "reference:routines.linalg": "Linear algebra (:mod:`numpy.linalg`)",
    "reference:routines.dtype": "Data type routines",
    "reference:global_state": "Global state",
    "reference:routines.err": "Floating point error handling",
    "reference:routines.polynomials.polynomial": "<No Title reference:routines.polynomials.polynomial>",
    "reference:routines.polynomials": "Polynomials",
    "reference:maskedarray.baseclass": "Constants of the :mod:`numpy.ma` module",
    "reference:arrays.dtypes": "Data type objects (:class:`dtype`)",
    "reference:routines.polynomials.poly1d": "Poly1d",
    "reference:routines.polynomials.polyutils": "Polyutils",
    "reference:arrays.scalars": "Scalars",
    "reference:routines.polynomials.laguerre": "<No Title reference:routines.polynomials.laguerre>",
    "reference:distutils": "Packaging (:mod:`numpy.distutils`)",
    "reference:routines.polynomials.classes": "Using the Convenience Classes",
    "reference:ufuncs": "Universal functions (:class:`ufunc`)",
    "reference:routines.polynomials.legendre": "<No Title reference:routines.polynomials.legendre>",
    "reference:internals": "NumPy internals",
    "reference:routines.window": "Window functions",
    "reference:arrays.datetime": "Datetimes and Timedeltas",
    "reference:security": "NumPy security",
    "reference:generated:numpy.ndarray.__floordiv__": "numpy.ndarray.\\_\\_floordiv\\_\\_",
    "reference:generated:numpy.ma.getmask": "numpy.ma.getmask",
    "reference:generated:numpy.ma.MaskType.nonzero": "numpy.ma.MaskType.nonzero",
    "reference:generated:numpy.ma.masked_array.any": "numpy.ma.masked\\_array.any",
    "reference:generated:numpy.ma.masked_array.copy": "numpy.ma.masked\\_array.copy",
    "reference:generated:numpy.matrix.prod": "numpy.matrix.prod",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.conf_target_groups": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.conf\\_target\\_groups",
    "reference:generated:numpy.matrix.fill": "numpy.matrix.fill",
    "reference:generated:numpy.record.repeat": "numpy.record.repeat",
    "reference:generated:numpy.ma.MaskedArray.filled": "numpy.ma.MaskedArray.filled",
    "reference:generated:numpy.ma.MaskedArray.ndim": "numpy.ma.MaskedArray.ndim",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.feature_extra_checks": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.feature\\_extra\\_checks",
    "reference:generated:numpy.memmap.trace": "numpy.memmap.trace",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.window": "numpy.polynomial.chebyshev.Chebyshev.window",
    "reference:generated:numpy.asmatrix": "numpy.asmatrix",
    "reference:generated:numpy.chararray.argpartition": "numpy.chararray.argpartition",
    "reference:generated:numpy.polynomial.polynomial.polyvander": "numpy.polynomial.polynomial.polyvander",
    "reference:generated:numpy.record.setflags": "numpy.record.setflags",
    "reference:generated:numpy.polyder": "numpy.polyder",
    "reference:generated:numpy.ma.MaskedArray.__setstate__": "numpy.ma.MaskedArray.\\_\\_setstate\\_\\_",
    "reference:generated:numpy.chararray": "numpy.chararray",
    "reference:generated:numpy.ma.MaskedArray.__abs__": "numpy.ma.MaskedArray.\\_\\_abs\\_\\_",
    "reference:generated:numpy.nditer.has_delayed_bufalloc": "numpy.nditer.has\\_delayed\\_bufalloc",
    "reference:generated:numpy.ma.masked_array.argsort": "numpy.ma.masked\\_array.argsort",
    "reference:generated:numpy.char.str_len": "numpy.char.str\\_len",
    "reference:generated:numpy.take_along_axis": "numpy.take\\_along\\_axis",
    "reference:generated:numpy.testing.assert_warns": "numpy.testing.assert\\_warns",
    "reference:generated:numpy.format_float_positional": "numpy.format\\_float\\_positional",
    "reference:generated:numpy.ma.MaskType.newbyteorder": "numpy.ma.MaskType.newbyteorder",
    "reference:generated:numpy.matrix.sum": "numpy.matrix.sum",
    "reference:generated:numpy.fft.irfftn": "numpy.fft.irfftn",
    "reference:generated:numpy.cosh": "numpy.cosh",
    "reference:generated:numpy.recarray.data": "numpy.recarray.data",
    "reference:generated:numpy.ma.MaskedArray.any": "numpy.ma.MaskedArray.any",
    "reference:generated:numpy.lib.format.write_array": "numpy.lib.format.write\\_array",
    "reference:generated:numpy.chararray.rstrip": "numpy.chararray.rstrip",
    "reference:generated:numpy.memmap.argmin": "numpy.memmap.argmin",
    "reference:generated:numpy.lib.user_array.container.astype": "numpy.lib.user\\_array.container.astype",
    "reference:generated:numpy.ma.masked_array.flatten": "numpy.ma.masked\\_array.flatten",
    "reference:generated:numpy.polynomial.polynomial.polyder": "numpy.polynomial.polynomial.polyder",
    "reference:generated:numpy.polynomial.hermite.Hermite.fromroots": "numpy.polynomial.hermite.Hermite.fromroots",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.domain": "numpy.polynomial.hermite\\_e.HermiteE.domain",
    "reference:generated:numpy.sort_complex": "numpy.sort\\_complex",
    "reference:generated:numpy.ma.transpose": "numpy.ma.transpose",
    "reference:generated:numpy.ma.MaskType.tofile": "numpy.ma.MaskType.tofile",
    "reference:generated:numpy.array_equal": "numpy.array\\_equal",
    "reference:generated:numpy.chararray.newbyteorder": "numpy.chararray.newbyteorder",
    "reference:generated:numpy.char.add": "numpy.char.add",
    "reference:generated:numpy.polynomial.hermite_e.hermeder": "numpy.polynomial.hermite\\_e.hermeder",
    "reference:generated:numpy.chararray.choose": "numpy.chararray.choose",
    "reference:generated:numpy.allclose": "numpy.allclose",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.has_samedomain": "numpy.polynomial.chebyshev.Chebyshev.has\\_samedomain",
    "reference:generated:numpy.char.chararray.isdigit": "numpy.char.chararray.isdigit",
    "reference:generated:numpy.ma.MaskedArray.flags": "numpy.ma.MaskedArray.flags",
    "reference:generated:numpy.DataSource.open": "numpy.DataSource.open",
    "reference:generated:numpy.chararray.translate": "numpy.chararray.translate",
    "reference:generated:numpy.char.chararray.rfind": "numpy.char.chararray.rfind",
    "reference:generated:numpy.disp": "numpy.disp",
    "reference:generated:numpy.geomspace": "numpy.geomspace",
    "reference:generated:numpy.core.defchararray.array": "numpy.core.defchararray.array",
    "reference:generated:numpy.polynomial.legendre.Legendre.basis_name": "numpy.polynomial.legendre.Legendre.basis\\_name",
    "reference:generated:numpy.recarray.sum": "numpy.recarray.sum",
    "reference:generated:numpy.char.rfind": "numpy.char.rfind",
    "reference:generated:numpy.ndarray.setfield": "numpy.ndarray.setfield",
    "reference:generated:numpy.diff": "numpy.diff",
    "reference:generated:numpy.ndarray.__or__": "numpy.ndarray.\\_\\_or\\_\\_",
    "reference:generated:numpy.memmap.copy": "numpy.memmap.copy",
    "reference:generated:numpy.recarray.tolist": "numpy.recarray.tolist",
    "reference:generated:numpy.ma.any": "numpy.ma.any",
    "reference:generated:numpy.distutils.ccompiler_opt.new_ccompiler_opt": "numpy.distutils.ccompiler\\_opt.new\\_ccompiler\\_opt",
    "reference:generated:numpy.recarray.trace": "numpy.recarray.trace",
    "reference:generated:numpy.polynomial.chebyshev.chebval2d": "numpy.polynomial.chebyshev.chebval2d",
    "reference:generated:numpy.fill_diagonal": "numpy.fill\\_diagonal",
    "reference:generated:numpy.generic.size": "numpy.generic.size",
    "reference:generated:numpy.char.chararray.cumprod": "numpy.char.chararray.cumprod",
    "reference:generated:numpy.record.dumps": "numpy.record.dumps",
    "reference:generated:numpy.ma.masked_array.squeeze": "numpy.ma.masked\\_array.squeeze",
    "reference:generated:numpy.savez": "numpy.savez",
    "reference:generated:numpy.recarray.base": "numpy.recarray.base",
    "reference:generated:numpy.generic.flat": "numpy.generic.flat",
    "reference:generated:numpy.char.greater_equal": "numpy.char.greater\\_equal",
    "reference:generated:numpy.polynomial.hermite.Hermite.trim": "numpy.polynomial.hermite.Hermite.trim",
    "reference:generated:numpy.matrix.tobytes": "numpy.matrix.tobytes",
    "reference:generated:numpy.chararray.rfind": "numpy.chararray.rfind",
    "reference:generated:numpy.ma.MaskedArray.__repr__": "numpy.ma.MaskedArray.\\_\\_repr\\_\\_",
    "reference:generated:numpy.recarray.view": "numpy.recarray.view",
    "reference:generated:numpy.ma.masked_array.get_fill_value": "numpy.ma.masked\\_array.get\\_fill\\_value",
    "reference:generated:numpy.ma.MaskedArray.__rtruediv__": "numpy.ma.MaskedArray.\\_\\_rtruediv\\_\\_",
    "reference:generated:numpy.matrix.mean": "numpy.matrix.mean",
    "reference:generated:numpy.chararray.searchsorted": "numpy.chararray.searchsorted",
    "reference:generated:numpy.memmap.ravel": "numpy.memmap.ravel",
    "reference:generated:numpy.recarray.sort": "numpy.recarray.sort",
    "reference:generated:numpy.ceil": "numpy.ceil",
    "reference:generated:numpy.memmap.sum": "numpy.memmap.sum",
    "reference:generated:numpy.distutils.exec_command.find_executable": "numpy.distutils.exec\\_command.find\\_executable",
    "reference:generated:numpy.ma.argmax": "numpy.ma.argmax",
    "reference:generated:numpy.ndarray.min": "numpy.ndarray.min",
    "reference:generated:numpy.polynomial.chebyshev.poly2cheb": "numpy.polynomial.chebyshev.poly2cheb",
    "reference:generated:numpy.polynomial.legendre.Legendre.has_samecoef": "numpy.polynomial.legendre.Legendre.has\\_samecoef",
    "reference:generated:numpy.fft.fftn": "numpy.fft.fftn",
    "reference:generated:numpy.polynomial.hermite.hermadd": "numpy.polynomial.hermite.hermadd",
    "reference:generated:numpy.ma.masked_array.set_fill_value": "numpy.ma.masked\\_array.set\\_fill\\_value",
    "reference:generated:numpy.ma.MaskedArray.cumsum": "numpy.ma.MaskedArray.cumsum",
    "reference:generated:numpy.ma.MaskType.searchsorted": "numpy.ma.MaskType.searchsorted",
    "reference:generated:numpy.ma.MaskType.sum": "numpy.ma.MaskType.sum",
    "reference:generated:numpy.ma.MaskedArray.__ixor__": "numpy.ma.MaskedArray.\\_\\_ixor\\_\\_",
    "reference:generated:numpy.ndarray.T": "numpy.ndarray.T",
    "reference:generated:numpy.empty_like": "numpy.empty\\_like",
    "reference:generated:numpy.chararray.encode": "numpy.chararray.encode",
    "reference:generated:numpy.arctan": "numpy.arctan",
    "reference:generated:numpy.recarray.ravel": "numpy.recarray.ravel",
    "reference:generated:numpy.finfo.tiny": "numpy.finfo.tiny",
    "reference:generated:numpy.AxisError": "numpy.AxisError",
    "reference:generated:numpy.ma.MaskedArray.nbytes": "numpy.ma.MaskedArray.nbytes",
    "reference:generated:numpy.ma.MaskedArray.imag": "numpy.ma.MaskedArray.imag",
    "reference:generated:numpy.ma.MaskedArray.swapaxes": "numpy.ma.MaskedArray.swapaxes",
    "reference:generated:numpy.i0": "numpy.i0",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.truncate": "numpy.polynomial.polynomial.Polynomial.truncate",
    "reference:generated:numpy.flatiter.base": "numpy.flatiter.base",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.linspace": "numpy.polynomial.laguerre.Laguerre.linspace",
    "reference:generated:numpy.polynomial.hermite.hermvander3d": "numpy.polynomial.hermite.hermvander3d",
    "reference:generated:numpy.hypot": "numpy.hypot",
    "reference:generated:numpy.conjugate": "numpy.conjugate",
    "reference:generated:numpy.polynomial.hermite_e.hermegrid3d": "numpy.polynomial.hermite\\_e.hermegrid3d",
    "reference:generated:numpy.matlib.empty": "numpy.matlib.empty",
    "reference:generated:numpy.lib.scimath.log10": "numpy.lib.scimath.log10",
    "reference:generated:numpy.floor": "numpy.floor",
    "reference:generated:numpy.chararray.T": "numpy.chararray.T",
    "reference:generated:numpy.polynomial.legendre.legzero": "numpy.polynomial.legendre.legzero",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.degree": "numpy.polynomial.hermite\\_e.HermiteE.degree",
    "reference:generated:numpy.intersect1d": "numpy.intersect1d",
    "reference:generated:numpy.ma.row_stack": "numpy.ma.row\\_stack",
    "reference:generated:numpy.recarray.conj": "numpy.recarray.conj",
    "reference:generated:numpy.ndarray.__eq__": "numpy.ndarray.\\_\\_eq\\_\\_",
    "reference:generated:numpy.char.chararray.sum": "numpy.char.chararray.sum",
    "reference:generated:numpy.radians": "numpy.radians",
    "reference:generated:numpy.nancumprod": "numpy.nancumprod",
    "reference:generated:numpy.chararray.cumprod": "numpy.chararray.cumprod",
    "reference:generated:numpy.ma.MaskedArray.max": "numpy.ma.MaskedArray.max",
    "reference:generated:numpy.ma.MaskType.real": "numpy.ma.MaskType.real",
    "reference:generated:numpy.record.flat": "numpy.record.flat",
    "reference:generated:numpy.ma.masked_array.mask": "numpy.ma.masked\\_array.mask",
    "reference:generated:numpy.fft.rfftfreq": "numpy.fft.rfftfreq",
    "reference:generated:numpy.ma.vander": "numpy.ma.vander",
    "reference:generated:numpy.negative": "numpy.negative",
    "reference:generated:numpy.ma.hsplit": "numpy.ma.hsplit",
    "reference:generated:numpy.msort": "numpy.msort",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.roots": "numpy.polynomial.polynomial.Polynomial.roots",
    "reference:generated:numpy.real_if_close": "numpy.real\\_if\\_close",
    "reference:generated:numpy.cross": "numpy.cross",
    "reference:generated:numpy.matrix.shape": "numpy.matrix.shape",
    "reference:generated:numpy.ma.masked_array.max": "numpy.ma.masked\\_array.max",
    "reference:generated:numpy.memmap.cumprod": "numpy.memmap.cumprod",
    "reference:generated:numpy.chararray.isdigit": "numpy.chararray.isdigit",
    "reference:generated:numpy.polynomial.legendre.legtrim": "numpy.polynomial.legendre.legtrim",
    "reference:generated:numpy.ma.MaskedArray.ctypes": "numpy.ma.MaskedArray.ctypes",
    "reference:generated:numpy.true_divide": "numpy.true\\_divide",
    "reference:generated:numpy.polynomial.laguerre.lagdomain": "numpy.polynomial.laguerre.lagdomain",
    "reference:generated:numpy.ma.MaskType.byteswap": "numpy.ma.MaskType.byteswap",
    "reference:generated:numpy.ma.masked_array.imag": "numpy.ma.masked\\_array.imag",
    "reference:generated:numpy.polynomial.chebyshev.chebfromroots": "numpy.polynomial.chebyshev.chebfromroots",
    "reference:generated:numpy.char.chararray.argmin": "numpy.char.chararray.argmin",
    "reference:generated:numpy.ndarray.__array__": "numpy.ndarray.\\_\\_array\\_\\_",
    "reference:generated:numpy.ma.masked_less": "numpy.ma.masked\\_less",
    "reference:generated:numpy.array2string": "numpy.array2string",
    "reference:generated:numpy.testing.assert_raises": "numpy.testing.assert\\_raises",
    "reference:generated:numpy.chararray.flags": "numpy.chararray.flags",
    "reference:generated:numpy.char.isupper": "numpy.char.isupper",
    "reference:generated:numpy.ma.zeros_like": "numpy.ma.zeros\\_like",
    "reference:generated:numpy.linalg.det": "numpy.linalg.det",
    "reference:generated:numpy.ma.max": "numpy.ma.max",
    "reference:generated:numpy.ma.size": "numpy.ma.size",
    "reference:generated:numpy.generic.squeeze": "numpy.generic.squeeze",
    "reference:generated:numpy.memmap.imag": "numpy.memmap.imag",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.copy": "numpy.polynomial.polynomial.Polynomial.copy",
    "reference:generated:numpy.ma.masked_array.itemset": "numpy.ma.masked\\_array.itemset",
    "reference:generated:numpy.record.sum": "numpy.record.sum",
    "reference:generated:numpy.polynomial.laguerre.lagval": "numpy.polynomial.laguerre.lagval",
    "reference:generated:numpy.ma.MaskedArray.__bool__": "numpy.ma.MaskedArray.\\_\\_bool\\_\\_",
    "reference:generated:numpy.einsum_path": "numpy.einsum\\_path",
    "reference:generated:numpy.argpartition": "numpy.argpartition",
    "reference:generated:numpy.matrix.setfield": "numpy.matrix.setfield",
    "reference:generated:numpy.ma.resize": "numpy.ma.resize",
    "reference:generated:numpy.generic.byteswap": "numpy.generic.byteswap",
    "reference:generated:numpy.char.chararray.mean": "numpy.char.chararray.mean",
    "reference:generated:numpy.ma.masked_array.round": "numpy.ma.masked\\_array.round",
    "reference:generated:numpy.ma.around": "numpy.ma.around",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.basis_name": "numpy.polynomial.hermite\\_e.HermiteE.basis\\_name",
    "reference:generated:numpy.ndarray.conjugate": "numpy.ndarray.conjugate",
    "reference:generated:numpy.testing.dec.knownfailureif": "numpy.testing.dec.knownfailureif",
    "reference:generated:numpy.chararray.strip": "numpy.chararray.strip",
    "reference:generated:numpy.poly1d.integ": "numpy.poly1d.integ",
    "reference:generated:numpy.recarray.take": "numpy.recarray.take",
    "reference:generated:numpy.union1d": "numpy.union1d",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.integ": "numpy.polynomial.hermite\\_e.HermiteE.integ",
    "reference:generated:numpy.issubclass_": "numpy.issubclass\\_",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.dist_info": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.dist\\_info",
    "reference:generated:numpy.polynomial.hermite_e.poly2herme": "numpy.polynomial.hermite\\_e.poly2herme",
    "reference:generated:numpy.distutils.ccompiler_opt": "numpy.distutils.ccompiler\\_opt",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.trim": "numpy.polynomial.laguerre.Laguerre.trim",
    "reference:generated:numpy.ma.polyfit": "numpy.ma.polyfit",
    "reference:generated:numpy.chararray.setflags": "numpy.chararray.setflags",
    "reference:generated:numpy.ma.MaskType.tobytes": "numpy.ma.MaskType.tobytes",
    "reference:generated:numpy.record.dump": "numpy.record.dump",
    "reference:generated:numpy.ma.masked_array.tolist": "numpy.ma.masked\\_array.tolist",
    "reference:generated:numpy.char.strip": "numpy.char.strip",
    "reference:generated:numpy.digitize": "numpy.digitize",
    "reference:generated:numpy.polynomial.legendre.Legendre.__call__": "numpy.polynomial.legendre.Legendre.\\_\\_call\\_\\_",
    "reference:generated:numpy.poly1d.deriv": "numpy.poly1d.deriv",
    "reference:generated:numpy.ufunc.at": "numpy.ufunc.at",
    "reference:generated:numpy.stack": "numpy.stack",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.mapparms": "numpy.polynomial.polynomial.Polynomial.mapparms",
    "reference:generated:numpy.logspace": "numpy.logspace",
    "reference:generated:numpy.char.chararray.flags": "numpy.char.chararray.flags",
    "reference:generated:numpy.matlib.ones": "numpy.matlib.ones",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.deriv": "numpy.polynomial.hermite\\_e.HermiteE.deriv",
    "reference:generated:numpy.format_float_scientific": "numpy.format\\_float\\_scientific",
    "reference:generated:numpy.char.chararray.conjugate": "numpy.char.chararray.conjugate",
    "reference:generated:numpy.ones_like": "numpy.ones\\_like",
    "reference:generated:numpy.fft.ifftshift": "numpy.fft.ifftshift",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.trim": "numpy.polynomial.chebyshev.Chebyshev.trim",
    "reference:generated:numpy.triu_indices_from": "numpy.triu\\_indices\\_from",
    "reference:generated:numpy.memmap.ndim": "numpy.memmap.ndim",
    "reference:generated:numpy.ma.MaskedArray.__reduce__": "numpy.ma.MaskedArray.\\_\\_reduce\\_\\_",
    "reference:generated:numpy.histogramdd": "numpy.histogramdd",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.conf_cc_flags": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.conf\\_cc\\_flags",
    "reference:generated:numpy.ndarray.round": "numpy.ndarray.round",
    "reference:generated:numpy.vstack": "numpy.vstack",
    "reference:generated:numpy.arctan2": "numpy.arctan2",
    "reference:generated:numpy.char.chararray.strip": "numpy.char.chararray.strip",
    "reference:generated:numpy.nanpercentile": "numpy.nanpercentile",
    "reference:generated:numpy.tri": "numpy.tri",
    "reference:generated:numpy.distutils.ccompiler.simple_version_match": "numpy.distutils.ccompiler.simple\\_version\\_match",
    "reference:generated:numpy.ma.masked_array.ndim": "numpy.ma.masked\\_array.ndim",
    "reference:generated:numpy.nditer.nop": "numpy.nditer.nop",
    "reference:generated:numpy.ma.isarray": "numpy.ma.isarray",
    "reference:generated:numpy.poly1d.variable": "numpy.poly1d.variable",
    "reference:generated:numpy.char.chararray.prod": "numpy.char.chararray.prod",
    "reference:generated:numpy.ndarray.__abs__": "numpy.ndarray.\\_\\_abs\\_\\_",
    "reference:generated:numpy.polynomial.laguerre.lagcompanion": "numpy.polynomial.laguerre.lagcompanion",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.cache_flush": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.cache\\_flush",
    "reference:generated:numpy.vectorize": "numpy.vectorize",
    "reference:generated:numpy.char.chararray.fill": "numpy.char.chararray.fill",
    "reference:generated:numpy.ma.MaskedArray.diagonal": "numpy.ma.MaskedArray.diagonal",
    "reference:generated:numpy.ma.MaskedArray.__deepcopy__": "numpy.ma.MaskedArray.\\_\\_deepcopy\\_\\_",
    "reference:generated:numpy.polynomial.chebyshev.chebdiv": "numpy.polynomial.chebyshev.chebdiv",
    "reference:generated:numpy.polynomial.laguerre.lagpow": "numpy.polynomial.laguerre.lagpow",
    "reference:generated:numpy.char.chararray.find": "numpy.char.chararray.find",
    "reference:generated:numpy.chararray.std": "numpy.chararray.std",
    "reference:generated:numpy.ma.MaskedArray.copy": "numpy.ma.MaskedArray.copy",
    "reference:generated:numpy.tril_indices": "numpy.tril\\_indices",
    "reference:generated:numpy.polynomial.polyutils.mapdomain": "numpy.polynomial.polyutils.mapdomain",
    "reference:generated:numpy.polynomial.hermite.hermcompanion": "numpy.polynomial.hermite.hermcompanion",
    "reference:generated:numpy.record.size": "numpy.record.size",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.conf_tmp_path": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.conf\\_tmp\\_path",
    "reference:generated:numpy.dsplit": "numpy.dsplit",
    "reference:generated:numpy.sinc": "numpy.sinc",
    "reference:generated:numpy.memmap.setfield": "numpy.memmap.setfield",
    "reference:generated:numpy.searchsorted": "numpy.searchsorted",
    "reference:generated:numpy.delete": "numpy.delete",
    "reference:generated:numpy.matrix.nonzero": "numpy.matrix.nonzero",
    "reference:generated:numpy.polynomial.legendre.Legendre.has_sametype": "numpy.polynomial.legendre.Legendre.has\\_sametype",
    "reference:generated:numpy.chararray.dot": "numpy.chararray.dot",
    "reference:generated:numpy.ma.diff": "numpy.ma.diff",
    "reference:generated:numpy.polynomial.hermite.Hermite.__call__": "numpy.polynomial.hermite.Hermite.\\_\\_call\\_\\_",
    "reference:generated:numpy.polynomial.chebyshev.chebfit": "numpy.polynomial.chebyshev.chebfit",
    "reference:generated:numpy.show_config": "numpy.show\\_config",
    "reference:generated:numpy.modf": "numpy.modf",
    "reference:generated:numpy.recarray.item": "numpy.recarray.item",
    "reference:generated:numpy.nditer.itersize": "numpy.nditer.itersize",
    "reference:generated:numpy.ma.MaskedArray.resize": "numpy.ma.MaskedArray.resize",
    "reference:generated:numpy.recarray.getfield": "numpy.recarray.getfield",
    "reference:generated:numpy.ma.MaskedArray.anom": "numpy.ma.MaskedArray.anom",
    "reference:generated:numpy.char.zfill": "numpy.char.zfill",
    "reference:generated:numpy.chararray.imag": "numpy.chararray.imag",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.fromroots": "numpy.polynomial.polynomial.Polynomial.fromroots",
    "reference:generated:numpy.ndarray.shape": "numpy.ndarray.shape",
    "reference:generated:numpy.ndarray.copy": "numpy.ndarray.copy",
    "reference:generated:numpy.ma.masked_all": "numpy.ma.masked\\_all",
    "reference:generated:numpy.core.records.fromstring": "numpy.core.records.fromstring",
    "reference:generated:numpy.char.chararray.decode": "numpy.char.chararray.decode",
    "reference:generated:numpy.ndarray.choose": "numpy.ndarray.choose",
    "reference:generated:numpy.testing.dec.deprecated": "numpy.testing.dec.deprecated",
    "reference:generated:numpy.chararray.min": "numpy.chararray.min",
    "reference:generated:numpy.distutils.ccompiler.CCompiler_cxx_compiler": "numpy.distutils.ccompiler.CCompiler\\_cxx\\_compiler",
    "reference:generated:numpy.ldexp": "numpy.ldexp",
    "reference:generated:numpy.chararray.partition": "numpy.chararray.partition",
    "reference:generated:numpy.polynomial.hermite.Hermite.integ": "numpy.polynomial.hermite.Hermite.integ",
    "reference:generated:numpy.ndarray.cumprod": "numpy.ndarray.cumprod",
    "reference:generated:numpy.ma.MaskedArray.__array__": "numpy.ma.MaskedArray.\\_\\_array\\_\\_",
    "reference:generated:numpy.ma.MaskedArray.__xor__": "numpy.ma.MaskedArray.\\_\\_xor\\_\\_",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.has_samedomain": "numpy.polynomial.laguerre.Laguerre.has\\_samedomain",
    "reference:generated:numpy.hstack": "numpy.hstack",
    "reference:generated:numpy.ma.masked_array.getfield": "numpy.ma.masked\\_array.getfield",
    "reference:generated:numpy.char.chararray.conj": "numpy.char.chararray.conj",
    "reference:generated:numpy.swapaxes": "numpy.swapaxes",
    "reference:generated:numpy.polynomial.hermite.Hermite.window": "numpy.polynomial.hermite.Hermite.window",
    "reference:generated:numpy.ma.MaskedArray.__rsub__": "numpy.ma.MaskedArray.\\_\\_rsub\\_\\_",
    "reference:generated:numpy.ma.empty_like": "numpy.ma.empty\\_like",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.fit": "numpy.polynomial.polynomial.Polynomial.fit",
    "reference:generated:numpy.ma.masked_array.hardmask": "numpy.ma.masked\\_array.hardmask",
    "reference:generated:numpy.char.chararray.zfill": "numpy.char.chararray.zfill",
    "reference:generated:numpy.ma.MaskedArray.searchsorted": "numpy.ma.MaskedArray.searchsorted",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.basis_name": "numpy.polynomial.chebyshev.Chebyshev.basis\\_name",
    "reference:generated:numpy.testing.assert_approx_equal": "numpy.testing.assert\\_approx\\_equal",
    "reference:generated:numpy.nditer.enable_external_loop": "numpy.nditer.enable\\_external\\_loop",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.feature_get_til": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.feature\\_get\\_til",
    "reference:generated:numpy.polynomial.hermite.hermtrim": "numpy.polynomial.hermite.hermtrim",
    "reference:generated:numpy.ma.MaskedArray.__delitem__": "numpy.ma.MaskedArray.\\_\\_delitem\\_\\_",
    "reference:generated:numpy.recarray.mean": "numpy.recarray.mean",
    "reference:generated:numpy.char.split": "numpy.char.split",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.conf_c_prefix_": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.conf\\_c\\_prefix\\_",
    "reference:generated:numpy.ma.masked_array.reshape": "numpy.ma.masked\\_array.reshape",
    "reference:generated:numpy.polynomial.laguerre.lagmul": "numpy.polynomial.laguerre.lagmul",
    "reference:generated:numpy.record.tobytes": "numpy.record.tobytes",
    "reference:generated:numpy.fmin": "numpy.fmin",
    "reference:generated:numpy.char.chararray.take": "numpy.char.chararray.take",
    "reference:generated:numpy.matrix.sort": "numpy.matrix.sort",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.cc_test_flags": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.cc\\_test\\_flags",
    "reference:generated:numpy.polynomial.hermite_e.hermefromroots": "numpy.polynomial.hermite\\_e.hermefromroots",
    "reference:generated:numpy.dtype.isnative": "numpy.dtype.isnative",
    "reference:generated:numpy.ndarray.__isub__": "numpy.ndarray.\\_\\_isub\\_\\_",
    "reference:generated:numpy.matrix.view": "numpy.matrix.view",
    "reference:generated:numpy.matrix.base": "numpy.matrix.base",
    "reference:generated:numpy.polynomial.hermite.hermzero": "numpy.polynomial.hermite.hermzero",
    "reference:generated:numpy.ndarray.__len__": "numpy.ndarray.\\_\\_len\\_\\_",
    "reference:generated:numpy.polynomial.legendre.Legendre.degree": "numpy.polynomial.legendre.Legendre.degree",
    "reference:generated:numpy.lib.scimath.log": "numpy.lib.scimath.log",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.domain": "numpy.polynomial.laguerre.Laguerre.domain",
    "reference:generated:numpy.dtype.__gt__": "numpy.dtype.\\_\\_gt\\_\\_",
    "reference:generated:numpy.busday_offset": "numpy.busday\\_offset",
    "reference:generated:numpy.ma.masked_array.tofile": "numpy.ma.masked\\_array.tofile",
    "reference:generated:numpy.ndarray.__class_getitem__": "numpy.ndarray.\\_\\_class\\_getitem\\_\\_",
    "reference:generated:numpy.char.chararray.split": "numpy.char.chararray.split",
    "reference:generated:numpy.poly1d.coeffs": "numpy.poly1d.coeffs",
    "reference:generated:numpy.ma.MaskedArray.conjugate": "numpy.ma.MaskedArray.conjugate",
    "reference:generated:numpy.record.dtype": "numpy.record.dtype",
    "reference:generated:numpy.chararray.itemsize": "numpy.chararray.itemsize",
    "reference:generated:numpy.polynomial.polynomial.polyfit": "numpy.polynomial.polynomial.polyfit",
    "reference:generated:numpy.ix_": "numpy.ix\\_",
    "reference:generated:numpy.polynomial.chebyshev.chebvander": "numpy.polynomial.chebyshev.chebvander",
    "reference:generated:numpy.polynomial.legendre.legfromroots": "numpy.polynomial.legendre.legfromroots",
    "reference:generated:numpy.ma.masked_array.compress": "numpy.ma.masked\\_array.compress",
    "reference:generated:numpy.ma.MaskedArray.set_fill_value": "numpy.ma.MaskedArray.set\\_fill\\_value",
    "reference:generated:numpy.polynomial.hermite_e.hermefit": "numpy.polynomial.hermite\\_e.hermefit",
    "reference:generated:numpy.memmap.flush": "numpy.memmap.flush",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.degree": "numpy.polynomial.polynomial.Polynomial.degree",
    "reference:generated:numpy.set_string_function": "numpy.set\\_string\\_function",
    "reference:generated:numpy.matrix.round": "numpy.matrix.round",
    "reference:generated:numpy.polynomial.polynomial.polydiv": "numpy.polynomial.polynomial.polydiv",
    "reference:generated:numpy.recarray.partition": "numpy.recarray.partition",
    "reference:generated:numpy.polynomial.laguerre.lagone": "numpy.polynomial.laguerre.lagone",
    "reference:generated:numpy.chararray.split": "numpy.chararray.split",
    "reference:generated:numpy.recarray.compress": "numpy.recarray.compress",
    "reference:generated:numpy.polynomial.hermite_e.hermediv": "numpy.polynomial.hermite\\_e.hermediv",
    "reference:generated:numpy.matlib.rand": "numpy.matlib.rand",
    "reference:generated:numpy.ma.masked_array.toflex": "numpy.ma.masked\\_array.toflex",
    "reference:generated:numpy.info": "numpy.info",
    "reference:generated:numpy.linalg.solve": "numpy.linalg.solve",
    "reference:generated:numpy.mintypecode": "numpy.mintypecode",
    "reference:generated:numpy.ma.MaskedArray.__truediv__": "numpy.ma.MaskedArray.\\_\\_truediv\\_\\_",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.basis": "numpy.polynomial.polynomial.Polynomial.basis",
    "reference:generated:numpy.polynomial.laguerre.lagint": "numpy.polynomial.laguerre.lagint",
    "reference:generated:numpy.char.chararray.diagonal": "numpy.char.chararray.diagonal",
    "reference:generated:numpy.ma.MaskType.clip": "numpy.ma.MaskType.clip",
    "reference:generated:numpy.polynomial.hermite.Hermite.deriv": "numpy.polynomial.hermite.Hermite.deriv",
    "reference:generated:numpy.ndarray.byteswap": "numpy.ndarray.byteswap",
    "reference:generated:numpy.hamming": "numpy.hamming",
    "reference:generated:numpy.get_include": "numpy.get\\_include",
    "reference:generated:numpy.ma.flatnotmasked_edges": "numpy.ma.flatnotmasked\\_edges",
    "reference:generated:numpy.matrix.data": "numpy.matrix.data",
    "reference:generated:numpy.sctype2char": "numpy.sctype2char",
    "reference:generated:numpy.fft.ifft2": "numpy.fft.ifft2",
    "reference:generated:numpy.char.chararray.item": "numpy.char.chararray.item",
    "reference:generated:numpy.ma.dstack": "numpy.ma.dstack",
    "reference:generated:numpy.polynomial.hermite.hermsub": "numpy.polynomial.hermite.hermsub",
    "reference:generated:numpy.polyfit": "numpy.polyfit",
    "reference:generated:numpy.ma.masked_array.shape": "numpy.ma.masked\\_array.shape",
    "reference:generated:numpy.ma.MaskedArray.get_fill_value": "numpy.ma.MaskedArray.get\\_fill\\_value",
    "reference:generated:numpy.ravel_multi_index": "numpy.ravel\\_multi\\_index",
    "reference:generated:numpy.char.center": "numpy.char.center",
    "reference:generated:numpy.polynomial.hermite.hermweight": "numpy.polynomial.hermite.hermweight",
    "reference:generated:numpy.recarray.prod": "numpy.recarray.prod",
    "reference:generated:numpy.record.T": "numpy.record.T",
    "reference:generated:numpy.getbufsize": "numpy.getbufsize",
    "reference:generated:numpy.nditer.iterrange": "numpy.nditer.iterrange",
    "reference:generated:numpy.tensordot": "numpy.tensordot",
    "reference:generated:numpy.polynomial.hermite.Hermite.basis_name": "numpy.polynomial.hermite.Hermite.basis\\_name",
    "reference:generated:numpy.matlib.repmat": "numpy.matlib.repmat",
    "reference:generated:numpy.chararray.zfill": "numpy.chararray.zfill",
    "reference:generated:numpy.arccosh": "numpy.arccosh",
    "reference:generated:numpy.memmap.conjugate": "numpy.memmap.conjugate",
    "reference:generated:numpy.iterable": "numpy.iterable",
    "reference:generated:numpy.chararray.ndim": "numpy.chararray.ndim",
    "reference:generated:numpy.char.chararray.repeat": "numpy.char.chararray.repeat",
    "reference:generated:numpy.lib.Arrayterator": "numpy.lib.Arrayterator",
    "reference:generated:numpy.recarray.fill": "numpy.recarray.fill",
    "reference:generated:numpy.ma.MaskType": "numpy.ma.MaskType",
    "reference:generated:numpy.polydiv": "numpy.polydiv",
    "reference:generated:numpy.isnan": "numpy.isnan",
    "reference:generated:numpy.lib.format.read_array_header_2_0": "numpy.lib.format.read\\_array\\_header\\_2\\_0",
    "reference:generated:numpy.trace": "numpy.trace",
    "reference:generated:numpy.generic.__array_wrap__": "numpy.generic.\\_\\_array\\_wrap\\_\\_",
    "reference:generated:numpy.polynomial.hermite.hermvander2d": "numpy.polynomial.hermite.hermvander2d",
    "reference:generated:numpy.diagonal": "numpy.diagonal",
    "reference:generated:numpy.chararray.endswith": "numpy.chararray.endswith",
    "reference:generated:numpy.polynomial.hermite_e.hermegrid2d": "numpy.polynomial.hermite\\_e.hermegrid2d",
    "reference:generated:numpy.ma.MaskedArray.astype": "numpy.ma.MaskedArray.astype",
    "reference:generated:numpy.testing.dec.slow": "numpy.testing.dec.slow",
    "reference:generated:numpy.char.chararray.data": "numpy.char.chararray.data",
    "reference:generated:numpy.polynomial.hermite.Hermite.identity": "numpy.polynomial.hermite.Hermite.identity",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.basis_name": "numpy.polynomial.polynomial.Polynomial.basis\\_name",
    "reference:generated:numpy.ma.append": "numpy.ma.append",
    "reference:generated:numpy.tile": "numpy.tile",
    "reference:generated:numpy.matrix.item": "numpy.matrix.item",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.fit": "numpy.polynomial.laguerre.Laguerre.fit",
    "reference:generated:numpy.fromregex": "numpy.fromregex",
    "reference:generated:numpy.ma.masked_array.recordmask": "numpy.ma.masked\\_array.recordmask",
    "reference:generated:numpy.corrcoef": "numpy.corrcoef",
    "reference:generated:numpy.ma.MaskType.ravel": "numpy.ma.MaskType.ravel",
    "reference:generated:numpy.record.nonzero": "numpy.record.nonzero",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.dist_error": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.dist\\_error",
    "reference:generated:numpy.polynomial.legendre.Legendre.domain": "numpy.polynomial.legendre.Legendre.domain",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.degree": "numpy.polynomial.laguerre.Laguerre.degree",
    "reference:generated:numpy.ndarray.imag": "numpy.ndarray.imag",
    "reference:generated:numpy.nditer.finished": "numpy.nditer.finished",
    "reference:generated:numpy.char.isspace": "numpy.char.isspace",
    "reference:generated:numpy.distutils.ccompiler.CCompiler_customize_cmd": "numpy.distutils.ccompiler.CCompiler\\_customize\\_cmd",
    "reference:generated:numpy.polynomial.chebyshev.chebder": "numpy.polynomial.chebyshev.chebder",
    "reference:generated:numpy.nditer.has_multi_index": "numpy.nditer.has\\_multi\\_index",
    "reference:generated:numpy.chararray.copy": "numpy.chararray.copy",
    "reference:generated:numpy.identity": "numpy.identity",
    "reference:generated:numpy.ma.MaskType.tolist": "numpy.ma.MaskType.tolist",
    "reference:generated:numpy.memmap.byteswap": "numpy.memmap.byteswap",
    "reference:generated:numpy.polynomial.chebyshev.chebroots": "numpy.polynomial.chebyshev.chebroots",
    "reference:generated:numpy.ma.MaskedArray.compressed": "numpy.ma.MaskedArray.compressed",
    "reference:generated:numpy.ma.filled": "numpy.ma.filled",
    "reference:generated:numpy.apply_over_axes": "numpy.apply\\_over\\_axes",
    "reference:generated:numpy.ndarray.dot": "numpy.ndarray.dot",
    "reference:generated:numpy.ma.masked_array.searchsorted": "numpy.ma.masked\\_array.searchsorted",
    "reference:generated:numpy.histogram2d": "numpy.histogram2d",
    "reference:generated:numpy.bartlett": "numpy.bartlett",
    "reference:generated:numpy.polynomial.legendre.Legendre.identity": "numpy.polynomial.legendre.Legendre.identity",
    "reference:generated:numpy.recarray.tofile": "numpy.recarray.tofile",
    "reference:generated:numpy.polynomial.chebyshev.chebline": "numpy.polynomial.chebyshev.chebline",
    "reference:generated:numpy.absolute": "numpy.absolute",
    "reference:generated:numpy.lib.scimath.arcsin": "numpy.lib.scimath.arcsin",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.cpu_baseline_flags": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.cpu\\_baseline\\_flags",
    "reference:generated:numpy.lib.format.descr_to_dtype": "numpy.lib.format.descr\\_to\\_dtype",
    "reference:generated:numpy.ndarray.std": "numpy.ndarray.std",
    "reference:generated:numpy.polynomial.legendre.legweight": "numpy.polynomial.legendre.legweight",
    "reference:generated:numpy.polynomial.chebyshev.chebval3d": "numpy.polynomial.chebyshev.chebval3d",
    "reference:generated:numpy.polynomial.polynomial.polycompanion": "numpy.polynomial.polynomial.polycompanion",
    "reference:generated:numpy.ma.MaskType.trace": "numpy.ma.MaskType.trace",
    "reference:generated:numpy.dtype.__le__": "numpy.dtype.\\_\\_le\\_\\_",
    "reference:generated:numpy.ma.mr_": "numpy.ma.mr\\_",
    "reference:generated:numpy.lib.scimath.arccos": "numpy.lib.scimath.arccos",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.copy": "numpy.polynomial.hermite\\_e.HermiteE.copy",
    "reference:generated:numpy.nditer.operands": "numpy.nditer.operands",
    "reference:generated:numpy.ma.cumsum": "numpy.ma.cumsum",
    "reference:generated:numpy.polynomial.hermite.Hermite.maxpower": "numpy.polynomial.hermite.Hermite.maxpower",
    "reference:generated:numpy.bmat": "numpy.bmat",
    "reference:generated:numpy.matrix.take": "numpy.matrix.take",
    "reference:generated:numpy.ma.MaskType.setfield": "numpy.ma.MaskType.setfield",
    "reference:generated:numpy.ndarray.__iand__": "numpy.ndarray.\\_\\_iand\\_\\_",
    "reference:generated:numpy.char.chararray.sort": "numpy.char.chararray.sort",
    "reference:generated:numpy.log": "numpy.log",
    "reference:generated:numpy.char.istitle": "numpy.char.istitle",
    "reference:generated:numpy.lib.format.header_data_from_array_1_0": "numpy.lib.format.header\\_data\\_from\\_array\\_1\\_0",
    "reference:generated:numpy.block": "numpy.block",
    "reference:generated:numpy.ravel": "numpy.ravel",
    "reference:generated:numpy.char.chararray.view": "numpy.char.chararray.view",
    "reference:generated:numpy.char.chararray.base": "numpy.char.chararray.base",
    "reference:generated:numpy.zeros_like": "numpy.zeros\\_like",
    "reference:generated:numpy.ma.MaskedArray.__copy__": "numpy.ma.MaskedArray.\\_\\_copy\\_\\_",
    "reference:generated:numpy.chararray.lstrip": "numpy.chararray.lstrip",
    "reference:generated:numpy.ma.masked_array.newbyteorder": "numpy.ma.masked\\_array.newbyteorder",
    "reference:generated:numpy.polynomial.laguerre.lagmulx": "numpy.polynomial.laguerre.lagmulx",
    "reference:generated:numpy.polynomial.chebyshev.chebgauss": "numpy.polynomial.chebyshev.chebgauss",
    "reference:generated:numpy.ma.MaskedArray.__len__": "numpy.ma.MaskedArray.\\_\\_len\\_\\_",
    "reference:generated:numpy.fft.ifft": "numpy.fft.ifft",
    "reference:generated:numpy.load": "numpy.load",
    "reference:generated:numpy.ma.masked_less_equal": "numpy.ma.masked\\_less\\_equal",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.feature_can_autovec": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.feature\\_can\\_autovec",
    "reference:generated:numpy.ma.MaskedArray.__rand__": "numpy.ma.MaskedArray.\\_\\_rand\\_\\_",
    "reference:generated:numpy.ndarray.ndim": "numpy.ndarray.ndim",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.conf_noopt": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.conf\\_noopt",
    "reference:generated:numpy.sum": "numpy.sum",
    "reference:generated:numpy.polynomial.hermite_e.hermetrim": "numpy.polynomial.hermite\\_e.hermetrim",
    "reference:generated:numpy.testing.assert_array_less": "numpy.testing.assert\\_array\\_less",
    "reference:generated:numpy.ma.masked_not_equal": "numpy.ma.masked\\_not\\_equal",
    "reference:generated:numpy.char.chararray": "numpy.char.chararray",
    "reference:generated:numpy.nanvar": "numpy.nanvar",
    "reference:generated:numpy.ma.masked_array.anom": "numpy.ma.masked\\_array.anom",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.domain": "numpy.polynomial.polynomial.Polynomial.domain",
    "reference:generated:numpy.diagflat": "numpy.diagflat",
    "reference:generated:numpy.recarray.tostring": "numpy.recarray.tostring",
    "reference:generated:numpy.record.argmin": "numpy.record.argmin",
    "reference:generated:numpy.matlib.zeros": "numpy.matlib.zeros",
    "reference:generated:numpy.polynomial.legendre.Legendre.fromroots": "numpy.polynomial.legendre.Legendre.fromroots",
    "reference:generated:numpy.ma.masked_array.argpartition": "numpy.ma.masked\\_array.argpartition",
    "reference:generated:numpy.polynomial.hermite_e.hermezero": "numpy.polynomial.hermite\\_e.hermezero",
    "reference:generated:numpy.polynomial.legendre.Legendre.maxpower": "numpy.polynomial.legendre.Legendre.maxpower",
    "reference:generated:numpy.ma.MaskedArray.argmax": "numpy.ma.MaskedArray.argmax",
    "reference:generated:numpy.record.itemsize": "numpy.record.itemsize",
    "reference:generated:numpy.recarray.cumprod": "numpy.recarray.cumprod",
    "reference:generated:numpy.matrix.conj": "numpy.matrix.conj",
    "reference:generated:numpy.ndarray.__getitem__": "numpy.ndarray.\\_\\_getitem\\_\\_",
    "reference:generated:numpy.matrix.byteswap": "numpy.matrix.byteswap",
    "reference:generated:numpy.ufunc.outer": "numpy.ufunc.outer",
    "reference:generated:numpy.matrix.choose": "numpy.matrix.choose",
    "reference:generated:numpy.chararray.rsplit": "numpy.chararray.rsplit",
    "reference:generated:numpy.ma.masked_array.tostring": "numpy.ma.masked\\_array.tostring",
    "reference:generated:numpy.memmap.repeat": "numpy.memmap.repeat",
    "reference:generated:numpy.issctype": "numpy.issctype",
    "reference:generated:numpy.ma.MaskedArray.cumprod": "numpy.ma.MaskedArray.cumprod",
    "reference:generated:numpy.char.chararray.swapaxes": "numpy.char.chararray.swapaxes",
    "reference:generated:numpy.ndarray.__xor__": "numpy.ndarray.\\_\\_xor\\_\\_",
    "reference:generated:numpy.isneginf": "numpy.isneginf",
    "reference:generated:numpy.ma.MaskedArray.__new__": "numpy.ma.MaskedArray.\\_\\_new\\_\\_",
    "reference:generated:numpy.char.chararray.any": "numpy.char.chararray.any",
    "reference:generated:numpy.polynomial.legendre.legone": "numpy.polynomial.legendre.legone",
    "reference:generated:numpy.chararray.prod": "numpy.chararray.prod",
    "reference:generated:numpy.isfortran": "numpy.isfortran",
    "reference:generated:numpy.ma.isMaskedArray": "numpy.ma.isMaskedArray",
    "reference:generated:numpy.nanargmin": "numpy.nanargmin",
    "reference:generated:numpy.polynomial.polynomial.polyval3d": "numpy.polynomial.polynomial.polyval3d",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.conf_c_prefix": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.conf\\_c\\_prefix",
    "reference:generated:numpy.char.islower": "numpy.char.islower",
    "reference:generated:numpy.chararray.fill": "numpy.chararray.fill",
    "reference:generated:numpy.matrix.max": "numpy.matrix.max",
    "reference:generated:numpy.chararray.find": "numpy.chararray.find",
    "reference:generated:numpy.chararray.ravel": "numpy.chararray.ravel",
    "reference:generated:numpy.linalg.tensorinv": "numpy.linalg.tensorinv",
    "reference:generated:numpy.memmap.nonzero": "numpy.memmap.nonzero",
    "reference:generated:numpy.recarray.ndim": "numpy.recarray.ndim",
    "reference:generated:numpy.ma.ravel": "numpy.ma.ravel",
    "reference:generated:numpy.dtype.alignment": "numpy.dtype.alignment",
    "reference:generated:numpy.asarray_chkfinite": "numpy.asarray\\_chkfinite",
    "reference:generated:numpy.ndarray.__matmul__": "numpy.ndarray.\\_\\_matmul\\_\\_",
    "reference:generated:numpy.ma.MaskedArray.__getitem__": "numpy.ma.MaskedArray.\\_\\_getitem\\_\\_",
    "reference:generated:numpy.polynomial.polyutils.getdomain": "numpy.polynomial.polyutils.getdomain",
    "reference:generated:numpy.ma.masked_array.item": "numpy.ma.masked\\_array.item",
    "reference:generated:numpy.distutils.exec_command": "numpy.distutils.exec\\_command",
    "reference:generated:numpy.ma.MaskedArray.harden_mask": "numpy.ma.MaskedArray.harden\\_mask",
    "reference:generated:numpy.ndarray.__lshift__": "numpy.ndarray.\\_\\_lshift\\_\\_",
    "reference:generated:numpy.ma.expand_dims": "numpy.ma.expand\\_dims",
    "reference:generated:numpy.polynomial.laguerre.lagval2d": "numpy.polynomial.laguerre.lagval2d",
    "reference:generated:numpy.ma.compress_cols": "numpy.ma.compress\\_cols",
    "reference:generated:numpy.ma.flatnotmasked_contiguous": "numpy.ma.flatnotmasked\\_contiguous",
    "reference:generated:numpy.ndenumerate": "numpy.ndenumerate",
    "reference:generated:numpy.char.chararray.tobytes": "numpy.char.chararray.tobytes",
    "reference:generated:numpy.ma.MaskType.tostring": "numpy.ma.MaskType.tostring",
    "reference:generated:numpy.chararray.nonzero": "numpy.chararray.nonzero",
    "reference:generated:numpy.polynomial.hermite.Hermite.mapparms": "numpy.polynomial.hermite.Hermite.mapparms",
    "reference:generated:numpy.polynomial.hermite_e.hermeroots": "numpy.polynomial.hermite\\_e.hermeroots",
    "reference:generated:numpy.chararray.swapaxes": "numpy.chararray.swapaxes",
    "reference:generated:numpy.cumsum": "numpy.cumsum",
    "reference:generated:numpy.ma.harden_mask": "numpy.ma.harden\\_mask",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.__call__": "numpy.polynomial.polynomial.Polynomial.\\_\\_call\\_\\_",
    "reference:generated:numpy.ma.masked_array.nbytes": "numpy.ma.masked\\_array.nbytes",
    "reference:generated:numpy.is_busday": "numpy.is\\_busday",
    "reference:generated:numpy.memmap.item": "numpy.memmap.item",
    "reference:generated:numpy.recarray.max": "numpy.recarray.max",
    "reference:generated:numpy.dtype.shape": "numpy.dtype.shape",
    "reference:generated:numpy.polynomial.legendre.Legendre.mapparms": "numpy.polynomial.legendre.Legendre.mapparms",
    "reference:generated:numpy.lib.scimath.log2": "numpy.lib.scimath.log2",
    "reference:generated:numpy.putmask": "numpy.putmask",
    "reference:generated:numpy.polynomial.hermite.hermval3d": "numpy.polynomial.hermite.hermval3d",
    "reference:generated:numpy.reshape": "numpy.reshape",
    "reference:generated:numpy.core.records.fromfile": "numpy.core.records.fromfile",
    "reference:generated:numpy.logical_or": "numpy.logical\\_or",
    "reference:generated:numpy.min_scalar_type": "numpy.min\\_scalar\\_type",
    "reference:generated:numpy.clip": "numpy.clip",
    "reference:generated:numpy.ma.masked_array.setfield": "numpy.ma.masked\\_array.setfield",
    "reference:generated:numpy.testing.assert_string_equal": "numpy.testing.assert\\_string\\_equal",
    "reference:generated:numpy.record.any": "numpy.record.any",
    "reference:generated:numpy.polynomial.legendre.legroots": "numpy.polynomial.legendre.legroots",
    "reference:generated:numpy.setxor1d": "numpy.setxor1d",
    "reference:generated:numpy.ma.masked_array.dumps": "numpy.ma.masked\\_array.dumps",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.linspace": "numpy.polynomial.chebyshev.Chebyshev.linspace",
    "reference:generated:numpy.ma.ones": "numpy.ma.ones",
    "reference:generated:numpy.polynomial.hermite.hermgauss": "numpy.polynomial.hermite.hermgauss",
    "reference:generated:numpy.ma.MaskedArray.__ge__": "numpy.ma.MaskedArray.\\_\\_ge\\_\\_",
    "reference:generated:numpy.chararray.ptp": "numpy.chararray.ptp",
    "reference:generated:numpy.dtype.byteorder": "numpy.dtype.byteorder",
    "reference:generated:numpy.ma.masked_array.cumsum": "numpy.ma.masked\\_array.cumsum",
    "reference:generated:numpy.polynomial.legendre.legint": "numpy.polynomial.legendre.legint",
    "reference:generated:numpy.char.chararray.trace": "numpy.char.chararray.trace",
    "reference:generated:numpy.chararray.put": "numpy.chararray.put",
    "reference:generated:numpy.record.diagonal": "numpy.record.diagonal",
    "reference:generated:numpy.matmul": "numpy.matmul",
    "reference:generated:numpy.recarray.setfield": "numpy.recarray.setfield",
    "reference:generated:numpy.ma.MaskedArray.__ipow__": "numpy.ma.MaskedArray.\\_\\_ipow\\_\\_",
    "reference:generated:numpy.fromfile": "numpy.fromfile",
    "reference:generated:numpy.ndarray.__deepcopy__": "numpy.ndarray.\\_\\_deepcopy\\_\\_",
    "reference:generated:numpy.ma.MaskedArray.__getstate__": "numpy.ma.MaskedArray.\\_\\_getstate\\_\\_",
    "reference:generated:numpy.ma.MaskedArray.view": "numpy.ma.MaskedArray.view",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.feature_ahead": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.feature\\_ahead",
    "reference:generated:numpy.ma.mask_or": "numpy.ma.mask\\_or",
    "reference:generated:numpy.ndarray.all": "numpy.ndarray.all",
    "reference:generated:numpy.poly1d.order": "numpy.poly1d.order",
    "reference:generated:numpy.ndarray.dumps": "numpy.ndarray.dumps",
    "reference:generated:numpy.ma.set_fill_value": "numpy.ma.set\\_fill\\_value",
    "reference:generated:numpy.ma.MaskedArray.base": "numpy.ma.MaskedArray.base",
    "reference:generated:numpy.generic.strides": "numpy.generic.strides",
    "reference:generated:numpy.distutils.ccompiler.CCompiler_compile": "numpy.distutils.ccompiler.CCompiler\\_compile",
    "reference:generated:numpy.roots": "numpy.roots",
    "reference:generated:numpy.broadcast_to": "numpy.broadcast\\_to",
    "reference:generated:numpy.polynomial.hermite.Hermite.cutdeg": "numpy.polynomial.hermite.Hermite.cutdeg",
    "reference:generated:numpy.memmap.max": "numpy.memmap.max",
    "reference:generated:numpy.fromstring": "numpy.fromstring",
    "reference:generated:numpy.partition": "numpy.partition",
    "reference:generated:numpy.matrix.repeat": "numpy.matrix.repeat",
    "reference:generated:numpy.ma.minimum_fill_value": "numpy.ma.minimum\\_fill\\_value",
    "reference:generated:numpy.memmap.choose": "numpy.memmap.choose",
    "reference:generated:numpy.polynomial.hermite.hermroots": "numpy.polynomial.hermite.hermroots",
    "reference:generated:numpy.cbrt": "numpy.cbrt",
    "reference:generated:numpy.recarray.ctypes": "numpy.recarray.ctypes",
    "reference:generated:numpy.ma.atleast_3d": "numpy.ma.atleast\\_3d",
    "reference:generated:numpy.polynomial.legendre.legval3d": "numpy.polynomial.legendre.legval3d",
    "reference:generated:numpy.ma.MaskType.resize": "numpy.ma.MaskType.resize",
    "reference:generated:numpy.poly1d.r": "numpy.poly1d.r",
    "reference:generated:numpy.mask_indices": "numpy.mask\\_indices",
    "reference:generated:numpy.distutils.ccompiler.replace_method": "numpy.distutils.ccompiler.replace\\_method",
    "reference:generated:numpy.ma.MaskedArray.__rmod__": "numpy.ma.MaskedArray.\\_\\_rmod\\_\\_",
    "reference:generated:numpy.chararray.mean": "numpy.chararray.mean",
    "reference:generated:numpy.ma.notmasked_edges": "numpy.ma.notmasked\\_edges",
    "reference:generated:numpy.polynomial.legendre.leggauss": "numpy.polynomial.legendre.leggauss",
    "reference:generated:numpy.square": "numpy.square",
    "reference:generated:numpy.remainder": "numpy.remainder",
    "reference:generated:numpy.matrix.T": "numpy.matrix.T",
    "reference:generated:numpy.issubsctype": "numpy.issubsctype",
    "reference:generated:numpy.ma.masked_array.take": "numpy.ma.masked\\_array.take",
    "reference:generated:numpy.polynomial.legendre.legmulx": "numpy.polynomial.legendre.legmulx",
    "reference:generated:numpy.ma.masked_array.filled": "numpy.ma.masked\\_array.filled",
    "reference:generated:numpy.ma.masked_array.mini": "numpy.ma.masked\\_array.mini",
    "reference:generated:numpy.ma.trace": "numpy.ma.trace",
    "reference:generated:numpy.ndarray.__gt__": "numpy.ndarray.\\_\\_gt\\_\\_",
    "reference:generated:numpy.chararray.trace": "numpy.chararray.trace",
    "reference:generated:numpy.eye": "numpy.eye",
    "reference:generated:numpy.ma.MaskedArray.sort": "numpy.ma.MaskedArray.sort",
    "reference:generated:numpy.append": "numpy.append",
    "reference:generated:numpy.memmap.conj": "numpy.memmap.conj",
    "reference:generated:numpy.ndarray.__int__": "numpy.ndarray.\\_\\_int\\_\\_",
    "reference:generated:numpy.polynomial.hermite_e.hermegauss": "numpy.polynomial.hermite\\_e.hermegauss",
    "reference:generated:numpy.char.chararray.endswith": "numpy.char.chararray.endswith",
    "reference:generated:numpy.char.chararray.ravel": "numpy.char.chararray.ravel",
    "reference:generated:numpy.memmap.take": "numpy.memmap.take",
    "reference:generated:numpy.matrix.cumprod": "numpy.matrix.cumprod",
    "reference:generated:numpy.nditer.has_index": "numpy.nditer.has\\_index",
    "reference:generated:numpy.char.replace": "numpy.char.replace",
    "reference:generated:numpy.polynomial.polynomial.polyroots": "numpy.polynomial.polynomial.polyroots",
    "reference:generated:numpy.nditer.close": "numpy.nditer.close",
    "reference:generated:numpy.nanmedian": "numpy.nanmedian",
    "reference:generated:numpy.meshgrid": "numpy.meshgrid",
    "reference:generated:numpy.ma.masked_array.conj": "numpy.ma.masked\\_array.conj",
    "reference:generated:numpy.polynomial.hermite.Hermite.has_samecoef": "numpy.polynomial.hermite.Hermite.has\\_samecoef",
    "reference:generated:numpy.chararray.argmin": "numpy.chararray.argmin",
    "reference:generated:numpy.typename": "numpy.typename",
    "reference:generated:numpy.recarray.imag": "numpy.recarray.imag",
    "reference:generated:numpy.char.isalnum": "numpy.char.isalnum",
    "reference:generated:numpy.ndarray.__rshift__": "numpy.ndarray.\\_\\_rshift\\_\\_",
    "reference:generated:numpy.isposinf": "numpy.isposinf",
    "reference:generated:numpy.ma.MaskType.max": "numpy.ma.MaskType.max",
    "reference:generated:numpy.polynomial.hermite_e.hermeval3d": "numpy.polynomial.hermite\\_e.hermeval3d",
    "reference:generated:numpy.recarray.T": "numpy.recarray.T",
    "reference:generated:numpy.ma.concatenate": "numpy.ma.concatenate",
    "reference:generated:numpy.polynomial.chebyshev.chebsub": "numpy.polynomial.chebyshev.chebsub",
    "reference:generated:numpy.polynomial.legendre.legmul": "numpy.polynomial.legendre.legmul",
    "reference:generated:numpy.ndarray.__pos__": "numpy.ndarray.\\_\\_pos\\_\\_",
    "reference:generated:numpy.geterrobj": "numpy.geterrobj",
    "reference:generated:numpy.savez_compressed": "numpy.savez\\_compressed",
    "reference:generated:numpy.ma.getdata": "numpy.ma.getdata",
    "reference:generated:numpy.ndarray.__imod__": "numpy.ndarray.\\_\\_imod\\_\\_",
    "reference:generated:numpy.ma.MaskedArray.__rrshift__": "numpy.ma.MaskedArray.\\_\\_rrshift\\_\\_",
    "reference:generated:numpy.char.translate": "numpy.char.translate",
    "reference:generated:numpy.ma.masked_array.sum": "numpy.ma.masked\\_array.sum",
    "reference:generated:numpy.polynomial.laguerre.laggrid2d": "numpy.polynomial.laguerre.laggrid2d",
    "reference:generated:numpy.ma.MaskedArray.ravel": "numpy.ma.MaskedArray.ravel",
    "reference:generated:numpy.ndarray.__truediv__": "numpy.ndarray.\\_\\_truediv\\_\\_",
    "reference:generated:numpy.chararray.diagonal": "numpy.chararray.diagonal",
    "reference:generated:numpy.memmap.sort": "numpy.memmap.sort",
    "reference:generated:numpy.ma.MaskedArray.conj": "numpy.ma.MaskedArray.conj",
    "reference:generated:numpy.invert": "numpy.invert",
    "reference:generated:numpy.char.chararray.encode": "numpy.char.chararray.encode",
    "reference:generated:numpy.ndarray.partition": "numpy.ndarray.partition",
    "reference:generated:numpy.sign": "numpy.sign",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.has_samewindow": "numpy.polynomial.hermite\\_e.HermiteE.has\\_samewindow",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.fit": "numpy.polynomial.chebyshev.Chebyshev.fit",
    "reference:generated:numpy.ma.MaskedArray.__int__": "numpy.ma.MaskedArray.\\_\\_int\\_\\_",
    "reference:generated:numpy.split": "numpy.split",
    "reference:generated:numpy.polynomial.hermite.Hermite.has_samewindow": "numpy.polynomial.hermite.Hermite.has\\_samewindow",
    "reference:generated:numpy.fft.ihfft": "numpy.fft.ihfft",
    "reference:generated:numpy.polynomial.hermite.hermder": "numpy.polynomial.hermite.hermder",
    "reference:generated:numpy.ndarray.fill": "numpy.ndarray.fill",
    "reference:generated:numpy.polynomial.legendre.Legendre.truncate": "numpy.polynomial.legendre.Legendre.truncate",
    "reference:generated:numpy.char.isalpha": "numpy.char.isalpha",
    "reference:generated:numpy.ma.masked_array.baseclass": "numpy.ma.masked\\_array.baseclass",
    "reference:generated:numpy.recarray.newbyteorder": "numpy.recarray.newbyteorder",
    "reference:generated:numpy.ufunc.ntypes": "numpy.ufunc.ntypes",
    "reference:generated:numpy.char.chararray.max": "numpy.char.chararray.max",
    "reference:generated:numpy.vsplit": "numpy.vsplit",
    "reference:generated:numpy.tril": "numpy.tril",
    "reference:generated:numpy.ma.masked_array.transpose": "numpy.ma.masked\\_array.transpose",
    "reference:generated:numpy.ma.MaskedArray.__setmask__": "numpy.ma.MaskedArray.\\_\\_setmask\\_\\_",
    "reference:generated:numpy.memmap.view": "numpy.memmap.view",
    "reference:generated:numpy.ma.MaskedArray.sum": "numpy.ma.MaskedArray.sum",
    "reference:generated:numpy.lib.arraysetops": "numpy.lib.arraysetops",
    "reference:generated:numpy.s_": "numpy.s\\_",
    "reference:generated:numpy.ma.MaskedArray.__div__": "numpy.ma.MaskedArray.\\_\\_div\\_\\_",
    "reference:generated:numpy.char.less": "numpy.char.less",
    "reference:generated:numpy.ma.MaskType.cumprod": "numpy.ma.MaskType.cumprod",
    "reference:generated:numpy.memmap.base": "numpy.memmap.base",
    "reference:generated:numpy.matrix.any": "numpy.matrix.any",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.feature_detect": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.feature\\_detect",
    "reference:generated:numpy.ndarray.prod": "numpy.ndarray.prod",
    "reference:generated:numpy.nanstd": "numpy.nanstd",
    "reference:generated:numpy.dtype.newbyteorder": "numpy.dtype.newbyteorder",
    "reference:generated:numpy.char.chararray.itemsize": "numpy.char.chararray.itemsize",
    "reference:generated:numpy.ndarray.__le__": "numpy.ndarray.\\_\\_le\\_\\_",
    "reference:generated:numpy.ndarray.__invert__": "numpy.ndarray.\\_\\_invert\\_\\_",
    "reference:generated:numpy.ma.MaskType.compress": "numpy.ma.MaskType.compress",
    "reference:generated:numpy.fft.fftfreq": "numpy.fft.fftfreq",
    "reference:generated:numpy.chararray.tobytes": "numpy.chararray.tobytes",
    "reference:generated:numpy.piecewise": "numpy.piecewise",
    "reference:generated:numpy.record.round": "numpy.record.round",
    "reference:generated:numpy.char.chararray.nonzero": "numpy.char.chararray.nonzero",
    "reference:generated:numpy.ma.masked_array.view": "numpy.ma.masked\\_array.view",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.dist_load_module": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.dist\\_load\\_module",
    "reference:generated:numpy.isrealobj": "numpy.isrealobj",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.fromroots": "numpy.polynomial.chebyshev.Chebyshev.fromroots",
    "reference:generated:numpy.fft.fftshift": "numpy.fft.fftshift",
    "reference:generated:numpy.polynomial.hermite.Hermite.truncate": "numpy.polynomial.hermite.Hermite.truncate",
    "reference:generated:numpy.recarray.nbytes": "numpy.recarray.nbytes",
    "reference:generated:numpy.record.transpose": "numpy.record.transpose",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.linspace": "numpy.polynomial.hermite\\_e.HermiteE.linspace",
    "reference:generated:numpy.ma.MaskedArray.ids": "numpy.ma.MaskedArray.ids",
    "reference:generated:numpy.ma.masked_array.base": "numpy.ma.masked\\_array.base",
    "reference:generated:numpy.record.swapaxes": "numpy.record.swapaxes",
    "reference:generated:numpy.matrix.A": "numpy.matrix.A",
    "reference:generated:numpy.memmap.tobytes": "numpy.memmap.tobytes",
    "reference:generated:numpy.core.records.fromrecords": "numpy.core.records.fromrecords",
    "reference:generated:numpy.ma.sum": "numpy.ma.sum",
    "reference:generated:numpy.testing.suppress_warnings.__call__": "numpy.testing.suppress\\_warnings.\\_\\_call\\_\\_",
    "reference:generated:numpy.ma.masked_array.sort": "numpy.ma.masked\\_array.sort",
    "reference:generated:numpy.ma.masked_array.ids": "numpy.ma.masked\\_array.ids",
    "reference:generated:numpy.recarray.any": "numpy.recarray.any",
    "reference:generated:numpy.record.clip": "numpy.record.clip",
    "reference:generated:numpy.record.max": "numpy.record.max",
    "reference:generated:numpy.ma.MaskType.argmax": "numpy.ma.MaskType.argmax",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.integ": "numpy.polynomial.laguerre.Laguerre.integ",
    "reference:generated:numpy.recarray.argpartition": "numpy.recarray.argpartition",
    "reference:generated:numpy.ndarray.repeat": "numpy.ndarray.repeat",
    "reference:generated:numpy.ma.MaskedArray.take": "numpy.ma.MaskedArray.take",
    "reference:generated:numpy.recarray.cumsum": "numpy.recarray.cumsum",
    "reference:generated:numpy.dstack": "numpy.dstack",
    "reference:generated:numpy.polynomial.polyutils.trimcoef": "numpy.polynomial.polyutils.trimcoef",
    "reference:generated:numpy.ma.mask_rows": "numpy.ma.mask\\_rows",
    "reference:generated:numpy.ma.hstack": "numpy.ma.hstack",
    "reference:generated:numpy.atleast_2d": "numpy.atleast\\_2d",
    "reference:generated:numpy.memmap.data": "numpy.memmap.data",
    "reference:generated:numpy.testing.Tester.prepare_test_args": "numpy.testing.Tester.prepare\\_test\\_args",
    "reference:generated:numpy.recarray.flags": "numpy.recarray.flags",
    "reference:generated:numpy.ma.masked_array.ctypes": "numpy.ma.masked\\_array.ctypes",
    "reference:generated:numpy.memmap.T": "numpy.memmap.T",
    "reference:generated:numpy.ndarray.mean": "numpy.ndarray.mean",
    "reference:generated:numpy.char.chararray.choose": "numpy.char.chararray.choose",
    "reference:generated:numpy.ma.MaskedArray.__lt__": "numpy.ma.MaskedArray.\\_\\_lt\\_\\_",
    "reference:generated:numpy.linalg.cond": "numpy.linalg.cond",
    "reference:generated:numpy.ma.MaskType.astype": "numpy.ma.MaskType.astype",
    "reference:generated:numpy.interp": "numpy.interp",
    "reference:generated:numpy.ndarray.var": "numpy.ndarray.var",
    "reference:generated:numpy.polynomial.polynomial.polyadd": "numpy.polynomial.polynomial.polyadd",
    "reference:generated:numpy.linalg.qr": "numpy.linalg.qr",
    "reference:generated:numpy.polynomial.hermite_e.hermeadd": "numpy.polynomial.hermite\\_e.hermeadd",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.deriv": "numpy.polynomial.laguerre.Laguerre.deriv",
    "reference:generated:numpy.ma.argsort": "numpy.ma.argsort",
    "reference:generated:numpy.polynomial.polynomial.polyline": "numpy.polynomial.polynomial.polyline",
    "reference:generated:numpy.testing.assert_almost_equal": "numpy.testing.assert\\_almost\\_equal",
    "reference:generated:numpy.ma.masked_array.strides": "numpy.ma.masked\\_array.strides",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.feature_names": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.feature\\_names",
    "reference:generated:numpy.ma.MaskedArray.__floordiv__": "numpy.ma.MaskedArray.\\_\\_floordiv\\_\\_",
    "reference:generated:numpy.generic.flags": "numpy.generic.flags",
    "reference:generated:numpy.ma.MaskedArray.trace": "numpy.ma.MaskedArray.trace",
    "reference:generated:numpy.matrix.dtype": "numpy.matrix.dtype",
    "reference:generated:numpy.ndarray.__setstate__": "numpy.ndarray.\\_\\_setstate\\_\\_",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.cc_normalize_flags": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.cc\\_normalize\\_flags",
    "reference:generated:numpy.broadcast.size": "numpy.broadcast.size",
    "reference:generated:numpy.memmap.any": "numpy.memmap.any",
    "reference:generated:numpy.frombuffer": "numpy.frombuffer",
    "reference:generated:numpy.flatiter.copy": "numpy.flatiter.copy",
    "reference:generated:numpy.ma.indices": "numpy.ma.indices",
    "reference:generated:numpy.ma.masked_array.torecords": "numpy.ma.masked\\_array.torecords",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.feature_untied": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.feature\\_untied",
    "reference:generated:numpy.ma.MaskedArray.__rlshift__": "numpy.ma.MaskedArray.\\_\\_rlshift\\_\\_",
    "reference:generated:numpy.ma.MaskType.any": "numpy.ma.MaskType.any",
    "reference:generated:numpy.ma.clip": "numpy.ma.clip",
    "reference:generated:numpy.ma.squeeze": "numpy.ma.squeeze",
    "reference:generated:numpy.dtype.type": "numpy.dtype.type",
    "reference:generated:numpy.ma.MaskedArray.__imul__": "numpy.ma.MaskedArray.\\_\\_imul\\_\\_",
    "reference:generated:numpy.recarray.searchsorted": "numpy.recarray.searchsorted",
    "reference:generated:numpy.polyadd": "numpy.polyadd",
    "reference:generated:numpy.ma.MaskedArray.product": "numpy.ma.MaskedArray.product",
    "reference:generated:numpy.recarray.copy": "numpy.recarray.copy",
    "reference:generated:numpy.ndarray.__new__": "numpy.ndarray.\\_\\_new\\_\\_",
    "reference:generated:numpy.polynomial.legendre.Legendre.roots": "numpy.polynomial.legendre.Legendre.roots",
    "reference:generated:numpy.linalg.eigvals": "numpy.linalg.eigvals",
    "reference:generated:numpy.ma.masked_array.shrink_mask": "numpy.ma.masked\\_array.shrink\\_mask",
    "reference:generated:numpy.ma.MaskedArray.tolist": "numpy.ma.MaskedArray.tolist",
    "reference:generated:numpy.triu_indices": "numpy.triu\\_indices",
    "reference:generated:numpy.char.chararray.rstrip": "numpy.char.chararray.rstrip",
    "reference:generated:numpy.ma.masked_array.data": "numpy.ma.masked\\_array.data",
    "reference:generated:numpy.polynomial.hermite.Hermite.has_sametype": "numpy.polynomial.hermite.Hermite.has\\_sametype",
    "reference:generated:numpy.ma.MaskType.getfield": "numpy.ma.MaskType.getfield",
    "reference:generated:numpy.memmap.flags": "numpy.memmap.flags",
    "reference:generated:numpy.ma.MaskedArray.item": "numpy.ma.MaskedArray.item",
    "reference:generated:numpy.char.chararray.partition": "numpy.char.chararray.partition",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.roots": "numpy.polynomial.chebyshev.Chebyshev.roots",
    "reference:generated:numpy.ones": "numpy.ones",
    "reference:generated:numpy.frexp": "numpy.frexp",
    "reference:generated:numpy.polynomial.hermite.hermvander": "numpy.polynomial.hermite.hermvander",
    "reference:generated:numpy.ma.MaskedArray.__rdivmod__": "numpy.ma.MaskedArray.\\_\\_rdivmod\\_\\_",
    "reference:generated:numpy.polynomial.laguerre.lagzero": "numpy.polynomial.laguerre.lagzero",
    "reference:generated:numpy.matrix.imag": "numpy.matrix.imag",
    "reference:generated:numpy.apply_along_axis": "numpy.apply\\_along\\_axis",
    "reference:generated:numpy.frompyfunc": "numpy.frompyfunc",
    "reference:generated:numpy.testing.run_module_suite": "numpy.testing.run\\_module\\_suite",
    "reference:generated:numpy.polynomial.legendre.Legendre.basis": "numpy.polynomial.legendre.Legendre.basis",
    "reference:generated:numpy.polynomial.legendre.poly2leg": "numpy.polynomial.legendre.poly2leg",
    "reference:generated:numpy.record.cumprod": "numpy.record.cumprod",
    "reference:generated:numpy.ma.vstack": "numpy.ma.vstack",
    "reference:generated:numpy.linalg.slogdet": "numpy.linalg.slogdet",
    "reference:generated:numpy.char.rindex": "numpy.char.rindex",
    "reference:generated:numpy.ma.masked_greater_equal": "numpy.ma.masked\\_greater\\_equal",
    "reference:generated:numpy.ma.MaskedArray.__radd__": "numpy.ma.MaskedArray.\\_\\_radd\\_\\_",
    "reference:generated:numpy.ndarray.getfield": "numpy.ndarray.getfield",
    "reference:generated:numpy.polynomial.polyutils.trimseq": "numpy.polynomial.polyutils.trimseq",
    "reference:generated:numpy.quantile": "numpy.quantile",
    "reference:generated:numpy.ma.MaskedArray.toflex": "numpy.ma.MaskedArray.toflex",
    "reference:generated:numpy.lib.scimath.power": "numpy.lib.scimath.power",
    "reference:generated:numpy.nanquantile": "numpy.nanquantile",
    "reference:generated:numpy.indices": "numpy.indices",
    "reference:generated:numpy.ma.MaskedArray.__ror__": "numpy.ma.MaskedArray.\\_\\_ror\\_\\_",
    "reference:generated:numpy.chararray.all": "numpy.chararray.all",
    "reference:generated:numpy.lib.user_array.container": "numpy.lib.user\\_array.container",
    "reference:generated:numpy.ndarray.item": "numpy.ndarray.item",
    "reference:generated:numpy.DataSource.abspath": "numpy.DataSource.abspath",
    "reference:generated:numpy.ma.MaskedArray.shrink_mask": "numpy.ma.MaskedArray.shrink\\_mask",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.basis": "numpy.polynomial.chebyshev.Chebyshev.basis",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.maxpower": "numpy.polynomial.polynomial.Polynomial.maxpower",
    "reference:generated:numpy.ndarray.__ne__": "numpy.ndarray.\\_\\_ne\\_\\_",
    "reference:generated:numpy.polynomial.laguerre.lagtrim": "numpy.polynomial.laguerre.lagtrim",
    "reference:generated:numpy.char.chararray.rsplit": "numpy.char.chararray.rsplit",
    "reference:generated:numpy.dtype.kind": "numpy.dtype.kind",
    "reference:generated:numpy.select": "numpy.select",
    "reference:generated:numpy.ma.stack": "numpy.ma.stack",
    "reference:generated:numpy.ma.count_masked": "numpy.ma.count\\_masked",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.convert": "numpy.polynomial.laguerre.Laguerre.convert",
    "reference:generated:numpy.dtype.itemsize": "numpy.dtype.itemsize",
    "reference:generated:numpy.left_shift": "numpy.left\\_shift",
    "reference:generated:numpy.argsort": "numpy.argsort",
    "reference:generated:numpy.amax": "numpy.amax",
    "reference:generated:numpy.char.count": "numpy.char.count",
    "reference:generated:numpy.ufunc.signature": "numpy.ufunc.signature",
    "reference:generated:numpy.ma.MaskType.size": "numpy.ma.MaskType.size",
    "reference:generated:numpy.memmap.tostring": "numpy.memmap.tostring",
    "reference:generated:numpy.lib.format.read_array_header_1_0": "numpy.lib.format.read\\_array\\_header\\_1\\_0",
    "reference:generated:numpy.ma.MaskedArray.mean": "numpy.ma.MaskedArray.mean",
    "reference:generated:numpy.ma.allequal": "numpy.ma.allequal",
    "reference:generated:numpy.ma.innerproduct": "numpy.ma.innerproduct",
    "reference:generated:numpy.ndarray.__iadd__": "numpy.ndarray.\\_\\_iadd\\_\\_",
    "reference:generated:numpy.recarray.argmax": "numpy.recarray.argmax",
    "reference:generated:numpy.polynomial.hermite_e.hermemulx": "numpy.polynomial.hermite\\_e.hermemulx",
    "reference:generated:numpy.ma.MaskType.cumsum": "numpy.ma.MaskType.cumsum",
    "reference:generated:numpy.ma.MaskType.transpose": "numpy.ma.MaskType.transpose",
    "reference:generated:numpy.ma.masked_array.dtype": "numpy.ma.masked\\_array.dtype",
    "reference:generated:numpy.linalg.eigh": "numpy.linalg.eigh",
    "reference:generated:numpy.generic.__setstate__": "numpy.generic.\\_\\_setstate\\_\\_",
    "reference:generated:numpy.ma.MaskedArray.itemsize": "numpy.ma.MaskedArray.itemsize",
    "reference:generated:numpy.flatiter": "numpy.flatiter",
    "reference:generated:numpy.chararray.sort": "numpy.chararray.sort",
    "reference:generated:numpy.chararray.view": "numpy.chararray.view",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.interpolate": "numpy.polynomial.chebyshev.Chebyshev.interpolate",
    "reference:generated:numpy.testing.dec.setastest": "numpy.testing.dec.setastest",
    "reference:generated:numpy.squeeze": "numpy.squeeze",
    "reference:generated:numpy.polynomial.chebyshev.chebweight": "numpy.polynomial.chebyshev.chebweight",
    "reference:generated:numpy.testing.assert_array_equal": "numpy.testing.assert\\_array\\_equal",
    "reference:generated:numpy.ndarray.tobytes": "numpy.ndarray.tobytes",
    "reference:generated:numpy.ma.anomalies": "numpy.ma.anomalies",
    "reference:generated:numpy.chararray.base": "numpy.chararray.base",
    "reference:generated:numpy.diag": "numpy.diag",
    "reference:generated:numpy.atleast_3d": "numpy.atleast\\_3d",
    "reference:generated:numpy.char.chararray.lstrip": "numpy.char.chararray.lstrip",
    "reference:generated:numpy.char.chararray.count": "numpy.char.chararray.count",
    "reference:generated:numpy.chararray.conjugate": "numpy.chararray.conjugate",
    "reference:generated:numpy.ma.MaskType.flags": "numpy.ma.MaskType.flags",
    "reference:generated:numpy.ma.MaskType.nbytes": "numpy.ma.MaskType.nbytes",
    "reference:generated:numpy.lib.format.read_array": "numpy.lib.format.read\\_array",
    "reference:generated:numpy.polynomial.hermite.Hermite.cast": "numpy.polynomial.hermite.Hermite.cast",
    "reference:generated:numpy.ndarray.dtype": "numpy.ndarray.dtype",
    "reference:generated:numpy.setbufsize": "numpy.setbufsize",
    "reference:generated:numpy.memmap.partition": "numpy.memmap.partition",
    "reference:generated:numpy.dtype.names": "numpy.dtype.names",
    "reference:generated:numpy.polynomial.hermite.Hermite": "numpy.polynomial.hermite.Hermite",
    "reference:generated:numpy.polynomial.laguerre.poly2lag": "numpy.polynomial.laguerre.poly2lag",
    "reference:generated:numpy.iinfo.min": "numpy.iinfo.min",
    "reference:generated:numpy.ma.MaskedArray.__pow__": "numpy.ma.MaskedArray.\\_\\_pow\\_\\_",
    "reference:generated:numpy.poly1d.c": "numpy.poly1d.c",
    "reference:generated:numpy.source": "numpy.source",
    "reference:generated:numpy.positive": "numpy.positive",
    "reference:generated:numpy.ma.masked_array.resize": "numpy.ma.masked\\_array.resize",
    "reference:generated:numpy.chararray.count": "numpy.chararray.count",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.identity": "numpy.polynomial.polynomial.Polynomial.identity",
    "reference:generated:numpy.polynomial.hermite.hermx": "numpy.polynomial.hermite.hermx",
    "reference:generated:numpy.ndarray.take": "numpy.ndarray.take",
    "reference:generated:numpy.fft.irfft": "numpy.fft.irfft",
    "reference:generated:numpy.ma.count": "numpy.ma.count",
    "reference:generated:numpy.lib.stride_tricks.sliding_window_view": "numpy.lib.stride\\_tricks.sliding\\_window\\_view",
    "reference:generated:numpy.ndarray.argmin": "numpy.ndarray.argmin",
    "reference:generated:numpy.ma.MaskType.flat": "numpy.ma.MaskType.flat",
    "reference:generated:numpy.log2": "numpy.log2",
    "reference:generated:numpy.record.real": "numpy.record.real",
    "reference:generated:numpy.testing.suppress_warnings.record": "numpy.testing.suppress\\_warnings.record",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.cutdeg": "numpy.polynomial.chebyshev.Chebyshev.cutdeg",
    "reference:generated:numpy.recarray.astype": "numpy.recarray.astype",
    "reference:generated:numpy.hsplit": "numpy.hsplit",
    "reference:generated:numpy.exp": "numpy.exp",
    "reference:generated:numpy.char.chararray.setflags": "numpy.char.chararray.setflags",
    "reference:generated:numpy.vander": "numpy.vander",
    "reference:generated:numpy.ndarray.compress": "numpy.ndarray.compress",
    "reference:generated:numpy.recarray.conjugate": "numpy.recarray.conjugate",
    "reference:generated:numpy.ma.MaskedArray.nonzero": "numpy.ma.MaskedArray.nonzero",
    "reference:generated:numpy.any": "numpy.any",
    "reference:generated:numpy.r_": "numpy.r\\_",
    "reference:generated:numpy.ndarray.put": "numpy.ndarray.put",
    "reference:generated:numpy.around": "numpy.around",
    "reference:generated:numpy.linalg.eig": "numpy.linalg.eig",
    "reference:generated:numpy.ndarray.ptp": "numpy.ndarray.ptp",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.dist_compile": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.dist\\_compile",
    "reference:generated:numpy.linalg.LinAlgError": "numpy.linalg.LinAlgError",
    "reference:generated:numpy.recarray.nonzero": "numpy.recarray.nonzero",
    "reference:generated:numpy.matrix.transpose": "numpy.matrix.transpose",
    "reference:generated:numpy.chararray.data": "numpy.chararray.data",
    "reference:generated:numpy.ma.MaskedArray.tofile": "numpy.ma.MaskedArray.tofile",
    "reference:generated:numpy.distutils.ccompiler.CCompiler_show_customization": "numpy.distutils.ccompiler.CCompiler\\_show\\_customization",
    "reference:generated:numpy.polynomial.legendre.Legendre": "numpy.polynomial.legendre.Legendre",
    "reference:generated:numpy.recarray.byteswap": "numpy.recarray.byteswap",
    "reference:generated:numpy.ma.MaskType.dump": "numpy.ma.MaskType.dump",
    "reference:generated:numpy.ndarray.conj": "numpy.ndarray.conj",
    "reference:generated:numpy.ma.compress_rows": "numpy.ma.compress\\_rows",
    "reference:generated:numpy.deprecate": "numpy.deprecate",
    "reference:generated:numpy.can_cast": "numpy.can\\_cast",
    "reference:generated:numpy.minimum": "numpy.minimum",
    "reference:generated:numpy.nditer.multi_index": "numpy.nditer.multi\\_index",
    "reference:generated:numpy.distutils.exec_command.temp_file_name": "numpy.distutils.exec\\_command.temp\\_file\\_name",
    "reference:generated:numpy.signbit": "numpy.signbit",
    "reference:generated:numpy.ma.MaskedArray.prod": "numpy.ma.MaskedArray.prod",
    "reference:generated:numpy.polynomial.chebyshev.chebadd": "numpy.polynomial.chebyshev.chebadd",
    "reference:generated:numpy.matrix.tostring": "numpy.matrix.tostring",
    "reference:generated:numpy.record.shape": "numpy.record.shape",
    "reference:generated:numpy.ma.masked_array.byteswap": "numpy.ma.masked\\_array.byteswap",
    "reference:generated:numpy.ma.MaskedArray.fill": "numpy.ma.MaskedArray.fill",
    "reference:generated:numpy.resize": "numpy.resize",
    "reference:generated:numpy.char.endswith": "numpy.char.endswith",
    "reference:generated:numpy.polynomial.laguerre.laggrid3d": "numpy.polynomial.laguerre.laggrid3d",
    "reference:generated:numpy.matrix.ndim": "numpy.matrix.ndim",
    "reference:generated:numpy.ndarray.__mul__": "numpy.ndarray.\\_\\_mul\\_\\_",
    "reference:generated:numpy.char.chararray.copy": "numpy.char.chararray.copy",
    "reference:generated:numpy.tan": "numpy.tan",
    "reference:generated:numpy.ma.masked_invalid": "numpy.ma.masked\\_invalid",
    "reference:generated:numpy.nditer.remove_axis": "numpy.nditer.remove\\_axis",
    "reference:generated:numpy.nanmin": "numpy.nanmin",
    "reference:generated:numpy.polynomial.hermite_e.hermeval2d": "numpy.polynomial.hermite\\_e.hermeval2d",
    "reference:generated:numpy.unravel_index": "numpy.unravel\\_index",
    "reference:generated:numpy.dtype.hasobject": "numpy.dtype.hasobject",
    "reference:generated:numpy.fft.rfftn": "numpy.fft.rfftn",
    "reference:generated:numpy.distutils.ccompiler.CCompiler_find_executables": "numpy.distutils.ccompiler.CCompiler\\_find\\_executables",
    "reference:generated:numpy.char.find": "numpy.char.find",
    "reference:generated:numpy.chararray.item": "numpy.chararray.item",
    "reference:generated:numpy.polynomial.polynomial.polyx": "numpy.polynomial.polynomial.polyx",
    "reference:generated:numpy.argmax": "numpy.argmax",
    "reference:generated:numpy.ndarray.nonzero": "numpy.ndarray.nonzero",
    "reference:generated:numpy.number.__class_getitem__": "numpy.number.\\_\\_class\\_getitem\\_\\_",
    "reference:generated:numpy.polynomial.laguerre.lagroots": "numpy.polynomial.laguerre.lagroots",
    "reference:generated:numpy.testing.assert_array_max_ulp": "numpy.testing.assert\\_array\\_max\\_ulp",
    "reference:generated:numpy.char.compare_chararrays": "numpy.char.compare\\_chararrays",
    "reference:generated:numpy.isinf": "numpy.isinf",
    "reference:generated:numpy.ma.masked_array.get_real": "numpy.ma.masked\\_array.get\\_real",
    "reference:generated:numpy.ndarray.argpartition": "numpy.ndarray.argpartition",
    "reference:generated:numpy.generic.__array__": "numpy.generic.\\_\\_array\\_\\_",
    "reference:generated:numpy.iscomplex": "numpy.iscomplex",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.feature_sorted": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.feature\\_sorted",
    "reference:generated:numpy.ma.masked_array.fill": "numpy.ma.masked\\_array.fill",
    "reference:generated:numpy.generic.real": "numpy.generic.real",
    "reference:generated:numpy.matrix.getfield": "numpy.matrix.getfield",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.conf_features": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.conf\\_features",
    "reference:generated:numpy.ma.MaskedArray.__mul__": "numpy.ma.MaskedArray.\\_\\_mul\\_\\_",
    "reference:generated:numpy.chararray.repeat": "numpy.chararray.repeat",
    "reference:generated:numpy.chararray.var": "numpy.chararray.var",
    "reference:generated:numpy.char.chararray.ndim": "numpy.char.chararray.ndim",
    "reference:generated:numpy.polynomial.hermite_e.hermedomain": "numpy.polynomial.hermite\\_e.hermedomain",
    "reference:generated:numpy.memmap.compress": "numpy.memmap.compress",
    "reference:generated:numpy.matrix.copy": "numpy.matrix.copy",
    "reference:generated:numpy.ma.masked_object": "numpy.ma.masked\\_object",
    "reference:generated:numpy.ma.masked_array.prod": "numpy.ma.masked\\_array.prod",
    "reference:generated:numpy.convolve": "numpy.convolve",
    "reference:generated:numpy.count_nonzero": "numpy.count\\_nonzero",
    "reference:generated:numpy.char.partition": "numpy.char.partition",
    "reference:generated:numpy.ndarray.__pow__": "numpy.ndarray.\\_\\_pow\\_\\_",
    "reference:generated:numpy.ma.masked_array.fill_value": "numpy.ma.masked\\_array.fill\\_value",
    "reference:generated:numpy.memmap.fill": "numpy.memmap.fill",
    "reference:generated:numpy.ma.masked_array.argmax": "numpy.ma.masked\\_array.argmax",
    "reference:generated:numpy.ma.make_mask_descr": "numpy.ma.make\\_mask\\_descr",
    "reference:generated:numpy.iinfo": "numpy.iinfo",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.convert": "numpy.polynomial.hermite\\_e.HermiteE.convert",
    "reference:generated:numpy.matrix.getI": "numpy.matrix.getI",
    "reference:generated:numpy.find_common_type": "numpy.find\\_common\\_type",
    "reference:generated:numpy.ma.frombuffer": "numpy.ma.frombuffer",
    "reference:generated:numpy.array_equiv": "numpy.array\\_equiv",
    "reference:generated:numpy.ndarray.view": "numpy.ndarray.view",
    "reference:generated:numpy.testing.assert_array_almost_equal": "numpy.testing.assert\\_array\\_almost\\_equal",
    "reference:generated:numpy.ndarray.base": "numpy.ndarray.base",
    "reference:generated:numpy.matrix.argmin": "numpy.matrix.argmin",
    "reference:generated:numpy.memmap.prod": "numpy.memmap.prod",
    "reference:generated:numpy.dtype.fields": "numpy.dtype.fields",
    "reference:generated:numpy.logical_not": "numpy.logical\\_not",
    "reference:generated:numpy.ndarray.sort": "numpy.ndarray.sort",
    "reference:generated:numpy.testing.assert_raises_regex": "numpy.testing.assert\\_raises\\_regex",
    "reference:generated:numpy.ma.atleast_2d": "numpy.ma.atleast\\_2d",
    "reference:generated:numpy.polynomial.legendre.legval2d": "numpy.polynomial.legendre.legval2d",
    "reference:generated:numpy.shares_memory": "numpy.shares\\_memory",
    "reference:generated:numpy.ndarray.newbyteorder": "numpy.ndarray.newbyteorder",
    "reference:generated:numpy.record.choose": "numpy.record.choose",
    "reference:generated:numpy.ma.mask_cols": "numpy.ma.mask\\_cols",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.cast": "numpy.polynomial.laguerre.Laguerre.cast",
    "reference:generated:numpy.distutils.exec_command.filepath_from_subprocess_output": "numpy.distutils.exec\\_command.filepath\\_from\\_subprocess\\_output",
    "reference:generated:numpy.polynomial.legendre.legpow": "numpy.polynomial.legendre.legpow",
    "reference:generated:numpy.dtype.descr": "numpy.dtype.descr",
    "reference:generated:numpy.fabs": "numpy.fabs",
    "reference:generated:numpy.matrix.compress": "numpy.matrix.compress",
    "reference:generated:numpy.polynomial.hermite_e.hermesub": "numpy.polynomial.hermite\\_e.hermesub",
    "reference:generated:numpy.dtype.__setstate__": "numpy.dtype.\\_\\_setstate\\_\\_",
    "reference:generated:numpy.fromiter": "numpy.fromiter",
    "reference:generated:numpy.polynomial.polynomial.polysub": "numpy.polynomial.polynomial.polysub",
    "reference:generated:numpy.real": "numpy.real",
    "reference:generated:numpy.lib.scimath.arctanh": "numpy.lib.scimath.arctanh",
    "reference:generated:numpy.ndarray.searchsorted": "numpy.ndarray.searchsorted",
    "reference:generated:numpy.ma.masked_array.mean": "numpy.ma.masked\\_array.mean",
    "reference:generated:numpy.isfinite": "numpy.isfinite",
    "reference:generated:numpy.chararray.take": "numpy.chararray.take",
    "reference:generated:numpy.polynomial.legendre.legvander": "numpy.polynomial.legendre.legvander",
    "reference:generated:numpy.memmap.getfield": "numpy.memmap.getfield",
    "reference:generated:numpy.polynomial.hermite.hermval2d": "numpy.polynomial.hermite.hermval2d",
    "reference:generated:numpy.subtract": "numpy.subtract",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.has_samewindow": "numpy.polynomial.polynomial.Polynomial.has\\_samewindow",
    "reference:generated:numpy.distutils.exec_command.get_pythonexe": "numpy.distutils.exec\\_command.get\\_pythonexe",
    "reference:generated:numpy.polynomial.legendre.Legendre.has_samewindow": "numpy.polynomial.legendre.Legendre.has\\_samewindow",
    "reference:generated:numpy.matrix.dumps": "numpy.matrix.dumps",
    "reference:generated:numpy.ma.masked_array.astype": "numpy.ma.masked\\_array.astype",
    "reference:generated:numpy.printoptions": "numpy.printoptions",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.cast": "numpy.polynomial.chebyshev.Chebyshev.cast",
    "reference:generated:numpy.recarray.tobytes": "numpy.recarray.tobytes",
    "reference:generated:numpy.matrix.getH": "numpy.matrix.getH",
    "reference:generated:numpy.dtype.isbuiltin": "numpy.dtype.isbuiltin",
    "reference:generated:numpy.recarray.resize": "numpy.recarray.resize",
    "reference:generated:numpy.char.chararray.translate": "numpy.char.chararray.translate",
    "reference:generated:numpy.ma.MaskedArray.count": "numpy.ma.MaskedArray.count",
    "reference:generated:numpy.dtype.str": "numpy.dtype.str",
    "reference:generated:numpy.linalg.eigvalsh": "numpy.linalg.eigvalsh",
    "reference:generated:numpy.ma.MaskedArray.tobytes": "numpy.ma.MaskedArray.tobytes",
    "reference:generated:numpy.char.chararray.imag": "numpy.char.chararray.imag",
    "reference:generated:numpy.testing.Tester": "numpy.testing.Tester",
    "reference:generated:numpy.polynomial.legendre.Legendre.copy": "numpy.polynomial.legendre.Legendre.copy",
    "reference:generated:numpy.fix": "numpy.fix",
    "reference:generated:numpy.ma.mask_rowcols": "numpy.ma.mask\\_rowcols",
    "reference:generated:numpy.ndarray.tostring": "numpy.ndarray.tostring",
    "reference:generated:numpy.chararray.decode": "numpy.chararray.decode",
    "reference:generated:numpy.polysub": "numpy.polysub",
    "reference:generated:numpy.vdot": "numpy.vdot",
    "reference:generated:numpy.poly1d": "numpy.poly1d",
    "reference:generated:numpy.ma.masked_array.harden_mask": "numpy.ma.masked\\_array.harden\\_mask",
    "reference:generated:numpy.polynomial.hermite.hermmulx": "numpy.polynomial.hermite.hermmulx",
    "reference:generated:numpy.polynomial.laguerre.lagval3d": "numpy.polynomial.laguerre.lagval3d",
    "reference:generated:numpy.polynomial.hermite.hermfit": "numpy.polynomial.hermite.hermfit",
    "reference:generated:numpy.ma.MaskedArray.__idiv__": "numpy.ma.MaskedArray.\\_\\_idiv\\_\\_",
    "reference:generated:numpy.ndarray.data": "numpy.ndarray.data",
    "reference:generated:numpy.polynomial.polynomial.polyval2d": "numpy.polynomial.polynomial.polyval2d",
    "reference:generated:numpy.histogram": "numpy.histogram",
    "reference:generated:numpy.ndarray.__divmod__": "numpy.ndarray.\\_\\_divmod\\_\\_",
    "reference:generated:numpy.polynomial.laguerre.laggauss": "numpy.polynomial.laguerre.laggauss",
    "reference:generated:numpy.chararray.conj": "numpy.chararray.conj",
    "reference:generated:numpy.memmap.mean": "numpy.memmap.mean",
    "reference:generated:numpy.ma.reshape": "numpy.ma.reshape",
    "reference:generated:numpy.MachAr": "numpy.MachAr",
    "reference:generated:numpy.polynomial.legendre.legval": "numpy.polynomial.legendre.legval",
    "reference:generated:numpy.mod": "numpy.mod",
    "reference:generated:numpy.polynomial.hermite.hermdiv": "numpy.polynomial.hermite.hermdiv",
    "reference:generated:numpy.ma.diag": "numpy.ma.diag",
    "reference:generated:numpy.ufunc.types": "numpy.ufunc.types",
    "reference:generated:numpy.obj2sctype": "numpy.obj2sctype",
    "reference:generated:numpy.poly1d.roots": "numpy.poly1d.roots",
    "reference:generated:numpy.ma.MaskedArray.__le__": "numpy.ma.MaskedArray.\\_\\_le\\_\\_",
    "reference:generated:numpy.char.chararray.isnumeric": "numpy.char.chararray.isnumeric",
    "reference:generated:numpy.distutils.core.Extension": "numpy.distutils.core.Extension",
    "reference:generated:numpy.distutils.ccompiler": "numpy.distutils.ccompiler",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.roots": "numpy.polynomial.hermite\\_e.HermiteE.roots",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.mapparms": "numpy.polynomial.hermite\\_e.HermiteE.mapparms",
    "reference:generated:numpy.char.chararray.var": "numpy.char.chararray.var",
    "reference:generated:numpy.ndarray.__array_wrap__": "numpy.ndarray.\\_\\_array\\_wrap\\_\\_",
    "reference:generated:numpy.char.less_equal": "numpy.char.less\\_equal",
    "reference:generated:numpy.ma.power": "numpy.ma.power",
    "reference:generated:numpy.char.chararray.join": "numpy.char.chararray.join",
    "reference:generated:numpy.char.isdigit": "numpy.char.isdigit",
    "reference:generated:numpy.ufunc.__call__": "numpy.ufunc.\\_\\_call\\_\\_",
    "reference:generated:numpy.memmap.argmax": "numpy.memmap.argmax",
    "reference:generated:numpy.record.item": "numpy.record.item",
    "reference:generated:numpy.less": "numpy.less",
    "reference:generated:numpy.broadcast.nd": "numpy.broadcast.nd",
    "reference:generated:numpy.core.records.array": "numpy.core.records.array",
    "reference:generated:numpy.recarray.size": "numpy.recarray.size",
    "reference:generated:numpy.matrix.all": "numpy.matrix.all",
    "reference:generated:numpy.generic.T": "numpy.generic.T",
    "reference:generated:numpy.ma.make_mask_none": "numpy.ma.make\\_mask\\_none",
    "reference:generated:numpy.distutils.exec_command.exec_command": "numpy.distutils.exec\\_command.exec\\_command",
    "reference:generated:numpy.ma.MaskedArray.repeat": "numpy.ma.MaskedArray.repeat",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.has_samecoef": "numpy.polynomial.polynomial.Polynomial.has\\_samecoef",
    "reference:generated:numpy.dtype": "numpy.dtype",
    "reference:generated:numpy.transpose": "numpy.transpose",
    "reference:generated:numpy.average": "numpy.average",
    "reference:generated:numpy.ma.MaskedArray.compress": "numpy.ma.MaskedArray.compress",
    "reference:generated:numpy.linalg.pinv": "numpy.linalg.pinv",
    "reference:generated:numpy.record.var": "numpy.record.var",
    "reference:generated:numpy.pad": "numpy.pad",
    "reference:generated:numpy.polynomial.hermite.herm2poly": "numpy.polynomial.hermite.herm2poly",
    "reference:generated:numpy.ndarray.flags": "numpy.ndarray.flags",
    "reference:generated:numpy.chararray.isupper": "numpy.chararray.isupper",
    "reference:generated:numpy.char.chararray.capitalize": "numpy.char.chararray.capitalize",
    "reference:generated:numpy.polynomial.polynomial.polyvander3d": "numpy.polynomial.polynomial.polyvander3d",
    "reference:generated:numpy.rint": "numpy.rint",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.has_samecoef": "numpy.polynomial.hermite\\_e.HermiteE.has\\_samecoef",
    "reference:generated:numpy.distutils.cpuinfo.cpu": "numpy.distutils.cpuinfo.cpu",
    "reference:generated:numpy.sort": "numpy.sort",
    "reference:generated:numpy.polynomial.laguerre.lagadd": "numpy.polynomial.laguerre.lagadd",
    "reference:generated:numpy.recarray.all": "numpy.recarray.all",
    "reference:generated:numpy.distutils.core.Extension.has_f2py_sources": "numpy.distutils.core.Extension.has\\_f2py\\_sources",
    "reference:generated:numpy.nanprod": "numpy.nanprod",
    "reference:generated:numpy.ndarray.__ifloordiv__": "numpy.ndarray.\\_\\_ifloordiv\\_\\_",
    "reference:generated:numpy.ma.isMA": "numpy.ma.isMA",
    "reference:generated:numpy.polynomial.hermite.Hermite.copy": "numpy.polynomial.hermite.Hermite.copy",
    "reference:generated:numpy.char.mod": "numpy.char.mod",
    "reference:generated:numpy.char.chararray.round": "numpy.char.chararray.round",
    "reference:generated:numpy.ma.atleast_1d": "numpy.ma.atleast\\_1d",
    "reference:generated:numpy.nditer": "numpy.nditer",
    "reference:generated:numpy.ma.MaskType.strides": "numpy.ma.MaskType.strides",
    "reference:generated:numpy.diag_indices_from": "numpy.diag\\_indices\\_from",
    "reference:generated:numpy.ma.median": "numpy.ma.median",
    "reference:generated:numpy.ma.nonzero": "numpy.ma.nonzero",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.__call__": "numpy.polynomial.laguerre.Laguerre.\\_\\_call\\_\\_",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.truncate": "numpy.polynomial.chebyshev.Chebyshev.truncate",
    "reference:generated:numpy.generic.data": "numpy.generic.data",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.integ": "numpy.polynomial.polynomial.Polynomial.integ",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.degree": "numpy.polynomial.chebyshev.Chebyshev.degree",
    "reference:generated:numpy.memmap.itemset": "numpy.memmap.itemset",
    "reference:generated:numpy.geterrcall": "numpy.geterrcall",
    "reference:generated:numpy.polynomial.polynomial.polygrid2d": "numpy.polynomial.polynomial.polygrid2d",
    "reference:generated:numpy.polynomial.legendre.leg2poly": "numpy.polynomial.legendre.leg2poly",
    "reference:generated:numpy.ma.conjugate": "numpy.ma.conjugate",
    "reference:generated:numpy.char.expandtabs": "numpy.char.expandtabs",
    "reference:generated:numpy.array_str": "numpy.array\\_str",
    "reference:generated:numpy.ndarray.tolist": "numpy.ndarray.tolist",
    "reference:generated:numpy.polynomial.hermite.Hermite.basis": "numpy.polynomial.hermite.Hermite.basis",
    "reference:generated:numpy.ma.masked_array.flags": "numpy.ma.masked\\_array.flags",
    "reference:generated:numpy.ndarray.reshape": "numpy.ndarray.reshape",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.deriv": "numpy.polynomial.polynomial.Polynomial.deriv",
    "reference:generated:numpy.broadcast.iters": "numpy.broadcast.iters",
    "reference:generated:numpy.ma.argmin": "numpy.ma.argmin",
    "reference:generated:numpy.ndarray.itemsize": "numpy.ndarray.itemsize",
    "reference:generated:numpy.trunc": "numpy.trunc",
    "reference:generated:numpy.ndarray.max": "numpy.ndarray.max",
    "reference:generated:numpy.char.chararray.argsort": "numpy.char.chararray.argsort",
    "reference:generated:numpy.polynomial.hermite.hermline": "numpy.polynomial.hermite.hermline",
    "reference:generated:numpy.ma.MaskType.setflags": "numpy.ma.MaskType.setflags",
    "reference:generated:numpy.record.take": "numpy.record.take",
    "reference:generated:numpy.recarray.dump": "numpy.recarray.dump",
    "reference:generated:numpy.chararray.itemset": "numpy.chararray.itemset",
    "reference:generated:numpy.polynomial.polynomial.Polynomial": "numpy.polynomial.polynomial.Polynomial",
    "reference:generated:numpy.ma.round": "numpy.ma.round",
    "reference:generated:numpy.ma.MaskedArray.__iadd__": "numpy.ma.MaskedArray.\\_\\_iadd\\_\\_",
    "reference:generated:numpy.issubdtype": "numpy.issubdtype",
    "reference:generated:numpy.ndarray.__itruediv__": "numpy.ndarray.\\_\\_itruediv\\_\\_",
    "reference:generated:numpy.ma.MaskedArray.clip": "numpy.ma.MaskedArray.clip",
    "reference:generated:numpy.ma.masked_array.soften_mask": "numpy.ma.masked\\_array.soften\\_mask",
    "reference:generated:numpy.memmap.all": "numpy.memmap.all",
    "reference:generated:numpy.chararray.round": "numpy.chararray.round",
    "reference:generated:numpy.ma.MaskType.dtype": "numpy.ma.MaskType.dtype",
    "reference:generated:numpy.ndarray.real": "numpy.ndarray.real",
    "reference:generated:numpy.gradient": "numpy.gradient",
    "reference:generated:numpy.generic.base": "numpy.generic.base",
    "reference:generated:numpy.recarray.flat": "numpy.recarray.flat",
    "reference:generated:numpy.char.chararray.flatten": "numpy.char.chararray.flatten",
    "reference:generated:numpy.char.chararray.resize": "numpy.char.chararray.resize",
    "reference:generated:numpy.record.nbytes": "numpy.record.nbytes",
    "reference:generated:numpy.roll": "numpy.roll",
    "reference:generated:numpy.fliplr": "numpy.fliplr",
    "reference:generated:numpy.ma.MaskType.all": "numpy.ma.MaskType.all",
    "reference:generated:numpy.memmap.astype": "numpy.memmap.astype",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.cache_hash": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.cache\\_hash",
    "reference:generated:numpy.nanmean": "numpy.nanmean",
    "reference:generated:numpy.isclose": "numpy.isclose",
    "reference:generated:numpy.generic.setflags": "numpy.generic.setflags",
    "reference:generated:numpy.record.conj": "numpy.record.conj",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE": "numpy.polynomial.hermite\\_e.HermiteE",
    "reference:generated:numpy.ma.empty": "numpy.ma.empty",
    "reference:generated:numpy.ndarray.__lt__": "numpy.ndarray.\\_\\_lt\\_\\_",
    "reference:generated:numpy.polynomial.hermite_e.herme2poly": "numpy.polynomial.hermite\\_e.herme2poly",
    "reference:generated:numpy.ma.MaskedArray.__mod__": "numpy.ma.MaskedArray.\\_\\_mod\\_\\_",
    "reference:generated:numpy.mat": "numpy.mat",
    "reference:generated:numpy.dtype.__class_getitem__": "numpy.dtype.\\_\\_class\\_getitem\\_\\_",
    "reference:generated:numpy.ma.MaskedArray.__contains__": "numpy.ma.MaskedArray.\\_\\_contains\\_\\_",
    "reference:generated:numpy.bitwise_and": "numpy.bitwise\\_and",
    "reference:generated:numpy.record.cumsum": "numpy.record.cumsum",
    "reference:generated:numpy.chararray.byteswap": "numpy.chararray.byteswap",
    "reference:generated:numpy.ma.masked_array.cumprod": "numpy.ma.masked\\_array.cumprod",
    "reference:generated:numpy.ma.where": "numpy.ma.where",
    "reference:generated:numpy.iscomplexobj": "numpy.iscomplexobj",
    "reference:generated:numpy.char.chararray.squeeze": "numpy.char.chararray.squeeze",
    "reference:generated:numpy.memmap.clip": "numpy.memmap.clip",
    "reference:generated:numpy.dtype.ndim": "numpy.dtype.ndim",
    "reference:generated:numpy.polynomial.legendre.Legendre.linspace": "numpy.polynomial.legendre.Legendre.linspace",
    "reference:generated:numpy.char.chararray.all": "numpy.char.chararray.all",
    "reference:generated:numpy.ma.MaskedArray.min": "numpy.ma.MaskedArray.min",
    "reference:generated:numpy.DataSource": "numpy.DataSource",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.has_sametype": "numpy.polynomial.polynomial.Polynomial.has\\_sametype",
    "reference:generated:numpy.sin": "numpy.sin",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.mapparms": "numpy.polynomial.chebyshev.Chebyshev.mapparms",
    "reference:generated:numpy.char.chararray.argmax": "numpy.char.chararray.argmax",
    "reference:generated:numpy.polynomial.legendre.Legendre.cast": "numpy.polynomial.legendre.Legendre.cast",
    "reference:generated:numpy.ma.default_fill_value": "numpy.ma.default\\_fill\\_value",
    "reference:generated:numpy.matrix.var": "numpy.matrix.var",
    "reference:generated:numpy.ndarray.__ge__": "numpy.ndarray.\\_\\_ge\\_\\_",
    "reference:generated:numpy.memmap.dumps": "numpy.memmap.dumps",
    "reference:generated:numpy.angle": "numpy.angle",
    "reference:generated:numpy.memmap.itemsize": "numpy.memmap.itemsize",
    "reference:generated:numpy.polynomial.hermite_e.hermeline": "numpy.polynomial.hermite\\_e.hermeline",
    "reference:generated:numpy.char.rstrip": "numpy.char.rstrip",
    "reference:generated:numpy.char.startswith": "numpy.char.startswith",
    "reference:generated:numpy.diag_indices": "numpy.diag\\_indices",
    "reference:generated:numpy.ma.MaskedArray.tostring": "numpy.ma.MaskedArray.tostring",
    "reference:generated:numpy.char.chararray.isupper": "numpy.char.chararray.isupper",
    "reference:generated:numpy.ndarray.__mod__": "numpy.ndarray.\\_\\_mod\\_\\_",
    "reference:generated:numpy.seterrobj": "numpy.seterrobj",
    "reference:generated:numpy.ma.masked_array.min": "numpy.ma.masked\\_array.min",
    "reference:generated:numpy.chararray.lower": "numpy.chararray.lower",
    "reference:generated:numpy.recarray.dumps": "numpy.recarray.dumps",
    "reference:generated:numpy.inner": "numpy.inner",
    "reference:generated:numpy.ma.MaskedArray.reshape": "numpy.ma.MaskedArray.reshape",
    "reference:generated:numpy.record.trace": "numpy.record.trace",
    "reference:generated:numpy.char.array": "numpy.char.array",
    "reference:generated:numpy.lib.scimath.logn": "numpy.lib.scimath.logn",
    "reference:generated:numpy.ufunc.nin": "numpy.ufunc.nin",
    "reference:generated:numpy.polynomial.hermite.hermpow": "numpy.polynomial.hermite.hermpow",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.copy": "numpy.polynomial.chebyshev.Chebyshev.copy",
    "reference:generated:numpy.matrix.H": "numpy.matrix.H",
    "reference:generated:numpy.record.base": "numpy.record.base",
    "reference:generated:numpy.recarray.reshape": "numpy.recarray.reshape",
    "reference:generated:numpy.record.all": "numpy.record.all",
    "reference:generated:numpy.record.view": "numpy.record.view",
    "reference:generated:numpy.extract": "numpy.extract",
    "reference:generated:numpy.ma.min": "numpy.ma.min",
    "reference:generated:numpy.linspace": "numpy.linspace",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.cpu_dispatch_names": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.cpu\\_dispatch\\_names",
    "reference:generated:numpy.char.chararray.transpose": "numpy.char.chararray.transpose",
    "reference:generated:numpy.generic.__array_interface__": "numpy.generic.\\_\\_array\\_interface\\_\\_",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.dist_fatal": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.dist\\_fatal",
    "reference:generated:numpy.record.sort": "numpy.record.sort",
    "reference:generated:numpy.ma.masked_array.clip": "numpy.ma.masked\\_array.clip",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.has_sametype": "numpy.polynomial.hermite\\_e.HermiteE.has\\_sametype",
    "reference:generated:numpy.ma.MaskedArray.__rshift__": "numpy.ma.MaskedArray.\\_\\_rshift\\_\\_",
    "reference:generated:numpy.polynomial.hermite.Hermite.linspace": "numpy.polynomial.hermite.Hermite.linspace",
    "reference:generated:numpy.recarray.var": "numpy.recarray.var",
    "reference:generated:numpy.broadcast_shapes": "numpy.broadcast\\_shapes",
    "reference:generated:numpy.matrix.tolist": "numpy.matrix.tolist",
    "reference:generated:numpy.ma.MaskedArray.__array_priority__": "numpy.ma.MaskedArray.\\_\\_array\\_priority\\_\\_",
    "reference:generated:numpy.log10": "numpy.log10",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.truncate": "numpy.polynomial.hermite\\_e.HermiteE.truncate",
    "reference:generated:numpy.polynomial.laguerre.lagweight": "numpy.polynomial.laguerre.lagweight",
    "reference:generated:numpy.ma.compressed": "numpy.ma.compressed",
    "reference:generated:numpy.row_stack": "numpy.row\\_stack",
    "reference:generated:numpy.matlib.identity": "numpy.matlib.identity",
    "reference:generated:numpy.ptp": "numpy.ptp",
    "reference:generated:numpy.linalg.svd": "numpy.linalg.svd",
    "reference:generated:numpy.chararray.squeeze": "numpy.chararray.squeeze",
    "reference:generated:numpy.put": "numpy.put",
    "reference:generated:numpy.chararray.swapcase": "numpy.chararray.swapcase",
    "reference:generated:numpy.log1p": "numpy.log1p",
    "reference:generated:numpy.nditer.debug_print": "numpy.nditer.debug\\_print",
    "reference:generated:numpy.polynomial.chebyshev.chebtrim": "numpy.polynomial.chebyshev.chebtrim",
    "reference:generated:numpy.nditer.index": "numpy.nditer.index",
    "reference:generated:numpy.record.byteswap": "numpy.record.byteswap",
    "reference:generated:numpy.chararray.real": "numpy.chararray.real",
    "reference:generated:numpy.ndarray.any": "numpy.ndarray.any",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.has_samewindow": "numpy.polynomial.chebyshev.Chebyshev.has\\_samewindow",
    "reference:generated:numpy.matrix.A1": "numpy.matrix.A1",
    "reference:generated:numpy.nditer.remove_multi_index": "numpy.nditer.remove\\_multi\\_index",
    "reference:generated:numpy.memmap.flatten": "numpy.memmap.flatten",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.copy": "numpy.polynomial.laguerre.Laguerre.copy",
    "reference:generated:numpy.ma.masked_array.compressed": "numpy.ma.masked\\_array.compressed",
    "reference:generated:numpy.matrix.strides": "numpy.matrix.strides",
    "reference:generated:numpy.broadcast.ndim": "numpy.broadcast.ndim",
    "reference:generated:numpy.take": "numpy.take",
    "reference:generated:numpy.matrix.itemsize": "numpy.matrix.itemsize",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.window": "numpy.polynomial.hermite\\_e.HermiteE.window",
    "reference:generated:numpy.poly1d.o": "numpy.poly1d.o",
    "reference:generated:numpy.divide": "numpy.divide",
    "reference:generated:numpy.ma.masked_array.partition": "numpy.ma.masked\\_array.partition",
    "reference:generated:numpy.ndarray.transpose": "numpy.ndarray.transpose",
    "reference:generated:numpy.memmap.var": "numpy.memmap.var",
    "reference:generated:numpy.who": "numpy.who",
    "reference:generated:numpy.ma.MaskedArray.round": "numpy.ma.MaskedArray.round",
    "reference:generated:numpy.ma.array": "numpy.ma.array",
    "reference:generated:numpy.maximum": "numpy.maximum",
    "reference:generated:numpy.polynomial.chebyshev.chebzero": "numpy.polynomial.chebyshev.chebzero",
    "reference:generated:numpy.memmap.squeeze": "numpy.memmap.squeeze",
    "reference:generated:numpy.fft.fft": "numpy.fft.fft",
    "reference:generated:numpy.matrix.I": "numpy.matrix.I",
    "reference:generated:numpy.ufunc.nout": "numpy.ufunc.nout",
    "reference:generated:numpy.ma.MaskedArray.__lshift__": "numpy.ma.MaskedArray.\\_\\_lshift\\_\\_",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.conf_features_partial": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.conf\\_features\\_partial",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.me": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.me",
    "reference:generated:numpy.distutils.ccompiler.CCompiler_customize": "numpy.distutils.ccompiler.CCompiler\\_customize",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.trim": "numpy.polynomial.polynomial.Polynomial.trim",
    "reference:generated:numpy.ma.arange": "numpy.ma.arange",
    "reference:generated:numpy.fft.rfft": "numpy.fft.rfft",
    "reference:generated:numpy.chararray.flatten": "numpy.chararray.flatten",
    "reference:generated:numpy.char.encode": "numpy.char.encode",
    "reference:generated:numpy.greater": "numpy.greater",
    "reference:generated:numpy.memmap.resize": "numpy.memmap.resize",
    "reference:generated:numpy.polynomial.hermite.hermval": "numpy.polynomial.hermite.hermval",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.domain": "numpy.polynomial.chebyshev.Chebyshev.domain",
    "reference:generated:numpy.ma.MaskType.choose": "numpy.ma.MaskType.choose",
    "reference:generated:numpy.chararray.tofile": "numpy.chararray.tofile",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.dist_test": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.dist\\_test",
    "reference:generated:numpy.polynomial.legendre.legdiv": "numpy.polynomial.legendre.legdiv",
    "reference:generated:numpy.char.chararray.astype": "numpy.char.chararray.astype",
    "reference:generated:numpy.ma.sort": "numpy.ma.sort",
    "reference:generated:numpy.testing.assert_array_almost_equal_nulp": "numpy.testing.assert\\_array\\_almost\\_equal\\_nulp",
    "reference:generated:numpy.char.chararray.itemset": "numpy.char.chararray.itemset",
    "reference:generated:numpy.argwhere": "numpy.argwhere",
    "reference:generated:numpy.char.lower": "numpy.char.lower",
    "reference:generated:numpy.char.equal": "numpy.char.equal",
    "reference:generated:numpy.deg2rad": "numpy.deg2rad",
    "reference:generated:numpy.ma.MaskType.var": "numpy.ma.MaskType.var",
    "reference:generated:numpy.lib.format": "numpy.lib.format",
    "reference:generated:numpy.einsum": "numpy.einsum",
    "reference:generated:numpy.chararray.argsort": "numpy.chararray.argsort",
    "reference:generated:numpy.chararray.capitalize": "numpy.chararray.capitalize",
    "reference:generated:numpy.finfo.smallest_normal": "numpy.finfo.smallest\\_normal",
    "reference:generated:numpy.flipud": "numpy.flipud",
    "reference:generated:numpy.datetime_data": "numpy.datetime\\_data",
    "reference:generated:numpy.ma.ones_like": "numpy.ma.ones\\_like",
    "reference:generated:numpy.record.ravel": "numpy.record.ravel",
    "reference:generated:numpy.record.pprint": "numpy.record.pprint",
    "reference:generated:numpy.cos": "numpy.cos",
    "reference:generated:numpy.conj": "numpy.conj",
    "reference:generated:numpy.polynomial.legendre.legfit": "numpy.polynomial.legendre.legfit",
    "reference:generated:numpy.ma.MaskedArray.__setitem__": "numpy.ma.MaskedArray.\\_\\_setitem\\_\\_",
    "reference:generated:numpy.polynomial.chebyshev.chebgrid3d": "numpy.polynomial.chebyshev.chebgrid3d",
    "reference:generated:numpy.char.chararray.lower": "numpy.char.chararray.lower",
    "reference:generated:numpy.record.data": "numpy.record.data",
    "reference:generated:numpy.nan_to_num": "numpy.nan\\_to\\_num",
    "reference:generated:numpy.ma.MaskedArray.__gt__": "numpy.ma.MaskedArray.\\_\\_gt\\_\\_",
    "reference:generated:numpy.memmap.argsort": "numpy.memmap.argsort",
    "reference:generated:numpy.poly1d.__call__": "numpy.poly1d.\\_\\_call\\_\\_",
    "reference:generated:numpy.polynomial.legendre.Legendre.fit": "numpy.polynomial.legendre.Legendre.fit",
    "reference:generated:numpy.ma.MaskedArray.__imod__": "numpy.ma.MaskedArray.\\_\\_imod\\_\\_",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.feature_is_exist": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.feature\\_is\\_exist",
    "reference:generated:numpy.fft.rfft2": "numpy.fft.rfft2",
    "reference:generated:numpy.chararray.max": "numpy.chararray.max",
    "reference:generated:numpy.prod": "numpy.prod",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.window": "numpy.polynomial.polynomial.Polynomial.window",
    "reference:generated:numpy.polynomial.set_default_printstyle": "numpy.polynomial.set\\_default\\_printstyle",
    "reference:generated:numpy.recarray.swapaxes": "numpy.recarray.swapaxes",
    "reference:generated:numpy.char.chararray.cumsum": "numpy.char.chararray.cumsum",
    "reference:generated:numpy.bitwise_xor": "numpy.bitwise\\_xor",
    "reference:generated:numpy.fft.hfft": "numpy.fft.hfft",
    "reference:generated:numpy.chararray.splitlines": "numpy.chararray.splitlines",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.maxpower": "numpy.polynomial.laguerre.Laguerre.maxpower",
    "reference:generated:numpy.ma.MaskedArray.shape": "numpy.ma.MaskedArray.shape",
    "reference:generated:numpy.polynomial.chebyshev.chebgrid2d": "numpy.polynomial.chebyshev.chebgrid2d",
    "reference:generated:numpy.distutils.log.set_verbosity": "numpy.distutils.log.set\\_verbosity",
    "reference:generated:numpy.format_parser": "numpy.format\\_parser",
    "reference:generated:numpy.ma.masked_array.swapaxes": "numpy.ma.masked\\_array.swapaxes",
    "reference:generated:numpy.lib.user_array.container.byteswap": "numpy.lib.user\\_array.container.byteswap",
    "reference:generated:numpy.memmap.transpose": "numpy.memmap.transpose",
    "reference:generated:numpy.record.resize": "numpy.record.resize",
    "reference:generated:numpy.char.chararray.nbytes": "numpy.char.chararray.nbytes",
    "reference:generated:numpy.lib.user_array.container.copy": "numpy.lib.user\\_array.container.copy",
    "reference:generated:numpy.isreal": "numpy.isreal",
    "reference:generated:numpy.recarray.ptp": "numpy.recarray.ptp",
    "reference:generated:numpy.matrix.argpartition": "numpy.matrix.argpartition",
    "reference:generated:numpy.recarray.put": "numpy.recarray.put",
    "reference:generated:numpy.matrix.flat": "numpy.matrix.flat",
    "reference:generated:numpy.char.chararray.tostring": "numpy.char.chararray.tostring",
    "reference:generated:numpy.polynomial.hermite.hermone": "numpy.polynomial.hermite.hermone",
    "reference:generated:numpy.trapz": "numpy.trapz",
    "reference:generated:numpy.chararray.isspace": "numpy.chararray.isspace",
    "reference:generated:numpy.testing.assert_equal": "numpy.testing.assert\\_equal",
    "reference:generated:numpy.nested_iters": "numpy.nested\\_iters",
    "reference:generated:numpy.polynomial.laguerre.lagsub": "numpy.polynomial.laguerre.lagsub",
    "reference:generated:numpy.polynomial.hermite_e.hermex": "numpy.polynomial.hermite\\_e.hermex",
    "reference:generated:numpy.matrix.dump": "numpy.matrix.dump",
    "reference:generated:numpy.chararray.setfield": "numpy.chararray.setfield",
    "reference:generated:numpy.ma.MaskedArray.torecords": "numpy.ma.MaskedArray.torecords",
    "reference:generated:numpy.chararray.ljust": "numpy.chararray.ljust",
    "reference:generated:numpy.chararray.isdecimal": "numpy.chararray.isdecimal",
    "reference:generated:numpy.unpackbits": "numpy.unpackbits",
    "reference:generated:numpy.fmax": "numpy.fmax",
    "reference:generated:numpy.matrix.getT": "numpy.matrix.getT",
    "reference:generated:numpy.ma.MaskedArray.__ifloordiv__": "numpy.ma.MaskedArray.\\_\\_ifloordiv\\_\\_",
    "reference:generated:numpy.recarray.itemset": "numpy.recarray.itemset",
    "reference:generated:numpy.ndarray.__ilshift__": "numpy.ndarray.\\_\\_ilshift\\_\\_",
    "reference:generated:numpy.polynomial.legendre.Legendre.convert": "numpy.polynomial.legendre.Legendre.convert",
    "reference:generated:numpy.poly": "numpy.poly",
    "reference:generated:numpy.chararray.clip": "numpy.chararray.clip",
    "reference:generated:numpy.floor_divide": "numpy.floor\\_divide",
    "reference:generated:numpy.ma.MaskedArray.__add__": "numpy.ma.MaskedArray.\\_\\_add\\_\\_",
    "reference:generated:numpy.polynomial.hermite.Hermite.fit": "numpy.polynomial.hermite.Hermite.fit",
    "reference:generated:numpy.fmod": "numpy.fmod",
    "reference:generated:numpy.logaddexp": "numpy.logaddexp",
    "reference:generated:numpy.ma.MaskedArray.T": "numpy.ma.MaskedArray.T",
    "reference:generated:numpy.polynomial.hermite.hermint": "numpy.polynomial.hermite.hermint",
    "reference:generated:numpy.matrix.setflags": "numpy.matrix.setflags",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.feature_c_preprocessor": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.feature\\_c\\_preprocessor",
    "reference:generated:numpy.ma.MaskType.ndim": "numpy.ma.MaskType.ndim",
    "reference:generated:numpy.ma.MaskedArray.__divmod__": "numpy.ma.MaskedArray.\\_\\_divmod\\_\\_",
    "reference:generated:numpy.insert": "numpy.insert",
    "reference:generated:numpy.matrix.tofile": "numpy.matrix.tofile",
    "reference:generated:numpy.busdaycalendar.weekmask": "numpy.busdaycalendar.weekmask",
    "reference:generated:numpy.matrix.ptp": "numpy.matrix.ptp",
    "reference:generated:numpy.exp2": "numpy.exp2",
    "reference:generated:numpy.matrix.newbyteorder": "numpy.matrix.newbyteorder",
    "reference:generated:numpy.matrix.partition": "numpy.matrix.partition",
    "reference:generated:numpy.ogrid": "numpy.ogrid",
    "reference:generated:numpy.matrix.put": "numpy.matrix.put",
    "reference:generated:numpy.ma.MaskType.ptp": "numpy.ma.MaskType.ptp",
    "reference:generated:numpy.ma.compress_rowcols": "numpy.ma.compress\\_rowcols",
    "reference:generated:numpy.ndindex": "numpy.ndindex",
    "reference:generated:numpy.ma.MaskType.put": "numpy.ma.MaskType.put",
    "reference:generated:numpy.linalg.cholesky": "numpy.linalg.cholesky",
    "reference:generated:numpy.ndarray.__ipow__": "numpy.ndarray.\\_\\_ipow\\_\\_",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.convert": "numpy.polynomial.polynomial.Polynomial.convert",
    "reference:generated:numpy.atleast_1d": "numpy.atleast\\_1d",
    "reference:generated:numpy.rot90": "numpy.rot90",
    "reference:generated:numpy.ndarray.__irshift__": "numpy.ndarray.\\_\\_irshift\\_\\_",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.identity": "numpy.polynomial.laguerre.Laguerre.identity",
    "reference:generated:numpy.compress": "numpy.compress",
    "reference:generated:numpy.char.chararray.ljust": "numpy.char.chararray.ljust",
    "reference:generated:numpy.matrix.searchsorted": "numpy.matrix.searchsorted",
    "reference:generated:numpy.poly1d.coef": "numpy.poly1d.coef",
    "reference:generated:numpy.ndarray.flatten": "numpy.ndarray.flatten",
    "reference:generated:numpy.ma.std": "numpy.ma.std",
    "reference:generated:numpy.ma.MaskType.imag": "numpy.ma.MaskType.imag",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.convert": "numpy.polynomial.chebyshev.Chebyshev.convert",
    "reference:generated:numpy.chararray.rpartition": "numpy.chararray.rpartition",
    "reference:generated:numpy.ndarray.squeeze": "numpy.ndarray.squeeze",
    "reference:generated:numpy.char.ljust": "numpy.char.ljust",
    "reference:generated:numpy.mean": "numpy.mean",
    "reference:generated:numpy.lib.mixins.NDArrayOperatorsMixin": "numpy.lib.mixins.NDArrayOperatorsMixin",
    "reference:generated:numpy.polynomial.hermite.Hermite.degree": "numpy.polynomial.hermite.Hermite.degree",
    "reference:generated:numpy.ma.masked_array.unshare_mask": "numpy.ma.masked\\_array.unshare\\_mask",
    "reference:generated:numpy.nditer.dtypes": "numpy.nditer.dtypes",
    "reference:generated:numpy.chararray.istitle": "numpy.chararray.istitle",
    "reference:generated:numpy.polynomial.hermite.hermdomain": "numpy.polynomial.hermite.hermdomain",
    "reference:generated:numpy.matlib.randn": "numpy.matlib.randn",
    "reference:generated:numpy.ma.MaskedArray.transpose": "numpy.ma.MaskedArray.transpose",
    "reference:generated:numpy.ma.masked_array.T": "numpy.ma.masked\\_array.T",
    "reference:generated:numpy.ma.dot": "numpy.ma.dot",
    "reference:generated:numpy.ma.MaskType.dumps": "numpy.ma.MaskType.dumps",
    "reference:generated:numpy.lexsort": "numpy.lexsort",
    "reference:generated:numpy.char.isnumeric": "numpy.char.isnumeric",
    "reference:generated:numpy.ma.masked_array.real": "numpy.ma.masked\\_array.real",
    "reference:generated:numpy.char.lstrip": "numpy.char.lstrip",
    "reference:generated:numpy.nansum": "numpy.nansum",
    "reference:generated:numpy.chararray.tolist": "numpy.chararray.tolist",
    "reference:generated:numpy.polynomial.hermite.hermmul": "numpy.polynomial.hermite.hermmul",
    "reference:generated:numpy.ascontiguousarray": "numpy.ascontiguousarray",
    "reference:generated:numpy.ma.MaskedArray.std": "numpy.ma.MaskedArray.std",
    "reference:generated:numpy.char.chararray.reshape": "numpy.char.chararray.reshape",
    "reference:generated:numpy.ufunc.identity": "numpy.ufunc.identity",
    "reference:generated:numpy.ma.masked_where": "numpy.ma.masked\\_where",
    "reference:generated:numpy.ma.MaskedArray.__rpow__": "numpy.ma.MaskedArray.\\_\\_rpow\\_\\_",
    "reference:generated:numpy.ma.masked_array.dot": "numpy.ma.masked\\_array.dot",
    "reference:generated:numpy.broadcast.shape": "numpy.broadcast.shape",
    "reference:generated:numpy.lib.Arrayterator.flat": "numpy.lib.Arrayterator.flat",
    "reference:generated:numpy.memmap.setflags": "numpy.memmap.setflags",
    "reference:generated:numpy.dtype.name": "numpy.dtype.name",
    "reference:generated:numpy.var": "numpy.var",
    "reference:generated:numpy.matrix.size": "numpy.matrix.size",
    "reference:generated:numpy.tril_indices_from": "numpy.tril\\_indices\\_from",
    "reference:generated:numpy.place": "numpy.place",
    "reference:generated:numpy.memmap.real": "numpy.memmap.real",
    "reference:generated:numpy.polynomial.polynomial.polymulx": "numpy.polynomial.polynomial.polymulx",
    "reference:generated:numpy.char.chararray.rindex": "numpy.char.chararray.rindex",
    "reference:generated:numpy.recarray.choose": "numpy.recarray.choose",
    "reference:generated:numpy.dtype.num": "numpy.dtype.num",
    "reference:generated:numpy.flatnonzero": "numpy.flatnonzero",
    "reference:generated:numpy.char.rsplit": "numpy.char.rsplit",
    "reference:generated:numpy.ma.masked_array.sharedmask": "numpy.ma.masked\\_array.sharedmask",
    "reference:generated:numpy.record": "numpy.record",
    "reference:generated:numpy.cov": "numpy.cov",
    "reference:generated:numpy.memmap.ctypes": "numpy.memmap.ctypes",
    "reference:generated:numpy.polynomial.legendre.Legendre.window": "numpy.polynomial.legendre.Legendre.window",
    "reference:generated:numpy.memmap.put": "numpy.memmap.put",
    "reference:generated:numpy.ma.masked_array.std": "numpy.ma.masked\\_array.std",
    "reference:generated:numpy.ndarray.argsort": "numpy.ndarray.argsort",
    "reference:generated:numpy.memmap.ptp": "numpy.memmap.ptp",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.generate_dispatch_header": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.generate\\_dispatch\\_header",
    "reference:generated:numpy.dtype.char": "numpy.dtype.char",
    "reference:generated:numpy.loadtxt": "numpy.loadtxt",
    "reference:generated:numpy.char.chararray.rpartition": "numpy.char.chararray.rpartition",
    "reference:generated:numpy.memmap.cumsum": "numpy.memmap.cumsum",
    "reference:generated:numpy.chararray.shape": "numpy.chararray.shape",
    "reference:generated:numpy.ma.shape": "numpy.ma.shape",
    "reference:generated:numpy.ma.masked_equal": "numpy.ma.masked\\_equal",
    "reference:generated:numpy.copysign": "numpy.copysign",
    "reference:generated:numpy.ma.masked_array.diagonal": "numpy.ma.masked\\_array.diagonal",
    "reference:generated:numpy.char.chararray.size": "numpy.char.chararray.size",
    "reference:generated:numpy.record.put": "numpy.record.put",
    "reference:generated:numpy.lib.format.magic": "numpy.lib.format.magic",
    "reference:generated:numpy.record.ptp": "numpy.record.ptp",
    "reference:generated:numpy.memmap.nbytes": "numpy.memmap.nbytes",
    "reference:generated:numpy.record.setfield": "numpy.record.setfield",
    "reference:generated:numpy.ma.MaskedArray.argsort": "numpy.ma.MaskedArray.argsort",
    "reference:generated:numpy.polynomial.legendre.legder": "numpy.polynomial.legendre.legder",
    "reference:generated:numpy.memmap.dtype": "numpy.memmap.dtype",
    "reference:generated:numpy.ma.soften_mask": "numpy.ma.soften\\_mask",
    "reference:generated:numpy.record.fill": "numpy.record.fill",
    "reference:generated:numpy.chararray.any": "numpy.chararray.any",
    "reference:generated:numpy.record.astype": "numpy.record.astype",
    "reference:generated:numpy.polynomial.legendre.legdomain": "numpy.polynomial.legendre.legdomain",
    "reference:generated:numpy.flip": "numpy.flip",
    "reference:generated:numpy.ndarray.__imul__": "numpy.ndarray.\\_\\_imul\\_\\_",
    "reference:generated:numpy.generic.itemsize": "numpy.generic.itemsize",
    "reference:generated:numpy.record.prod": "numpy.record.prod",
    "reference:generated:numpy.ma.mean": "numpy.ma.mean",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt": "numpy.distutils.ccompiler\\_opt.CCompilerOpt",
    "reference:generated:numpy.recarray.argsort": "numpy.recarray.argsort",
    "reference:generated:numpy.ufunc": "numpy.ufunc",
    "reference:generated:numpy.recarray.diagonal": "numpy.recarray.diagonal",
    "reference:generated:numpy.lib.format.write_array_header_1_0": "numpy.lib.format.write\\_array\\_header\\_1\\_0",
    "reference:generated:numpy.char.chararray.isspace": "numpy.char.chararray.isspace",
    "reference:generated:numpy.char.chararray.ptp": "numpy.char.chararray.ptp",
    "reference:generated:numpy.ma.outer": "numpy.ma.outer",
    "reference:generated:numpy.char.chararray.put": "numpy.char.chararray.put",
    "reference:generated:numpy.record.strides": "numpy.record.strides",
    "reference:generated:numpy.ma.MaskedArray.flatten": "numpy.ma.MaskedArray.flatten",
    "reference:generated:numpy.ma.MaskedArray.soften_mask": "numpy.ma.MaskedArray.soften\\_mask",
    "reference:generated:numpy.gcd": "numpy.gcd",
    "reference:generated:numpy.recarray.dtype": "numpy.recarray.dtype",
    "reference:generated:numpy.ma.fromfunction": "numpy.ma.fromfunction",
    "reference:generated:numpy.polynomial.hermite.Hermite.roots": "numpy.polynomial.hermite.Hermite.roots",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.parse_targets": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.parse\\_targets",
    "reference:generated:numpy.column_stack": "numpy.column\\_stack",
    "reference:generated:numpy.ma.MaskType.itemsize": "numpy.ma.MaskType.itemsize",
    "reference:generated:numpy.recarray.flatten": "numpy.recarray.flatten",
    "reference:generated:numpy.char.chararray.compress": "numpy.char.chararray.compress",
    "reference:generated:numpy.ndarray.setflags": "numpy.ndarray.setflags",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.trim": "numpy.polynomial.hermite\\_e.HermiteE.trim",
    "reference:generated:numpy.ma.MaskedArray.__ne__": "numpy.ma.MaskedArray.\\_\\_ne\\_\\_",
    "reference:generated:numpy.recarray.squeeze": "numpy.recarray.squeeze",
    "reference:generated:numpy.ndarray.clip": "numpy.ndarray.clip",
    "reference:generated:numpy.deprecate_with_doc": "numpy.deprecate\\_with\\_doc",
    "reference:generated:numpy.distutils.ccompiler.gen_lib_options": "numpy.distutils.ccompiler.gen\\_lib\\_options",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.conf_check_path": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.conf\\_check\\_path",
    "reference:generated:numpy.linalg.matrix_rank": "numpy.linalg.matrix\\_rank",
    "reference:generated:numpy.degrees": "numpy.degrees",
    "reference:generated:numpy.ma.MaskedArray.real": "numpy.ma.MaskedArray.real",
    "reference:generated:numpy.ma.MaskedArray.__rmul__": "numpy.ma.MaskedArray.\\_\\_rmul\\_\\_",
    "reference:generated:numpy.matrix.flags": "numpy.matrix.flags",
    "reference:generated:numpy.generic.dtype": "numpy.generic.dtype",
    "reference:generated:numpy.ma.MaskedArray.squeeze": "numpy.ma.MaskedArray.squeeze",
    "reference:generated:numpy.ma.MaskedArray.__array_wrap__": "numpy.ma.MaskedArray.\\_\\_array\\_wrap\\_\\_",
    "reference:generated:numpy.put_along_axis": "numpy.put\\_along\\_axis",
    "reference:generated:numpy.polynomial.polynomial.polygrid3d": "numpy.polynomial.polynomial.polygrid3d",
    "reference:generated:numpy.lib.format.open_memmap": "numpy.lib.format.open\\_memmap",
    "reference:generated:numpy.char.chararray.dump": "numpy.char.chararray.dump",
    "reference:generated:numpy.ndarray.__add__": "numpy.ndarray.\\_\\_add\\_\\_",
    "reference:generated:numpy.char.chararray.splitlines": "numpy.char.chararray.splitlines",
    "reference:generated:numpy.distutils.core.Extension.has_cxx_sources": "numpy.distutils.core.Extension.has\\_cxx\\_sources",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.report": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.report",
    "reference:generated:numpy.full_like": "numpy.full\\_like",
    "reference:generated:numpy.ndarray.itemset": "numpy.ndarray.itemset",
    "reference:generated:numpy.ma.masked_array": "numpy.ma.masked\\_array",
    "reference:generated:numpy.linalg.norm": "numpy.linalg.norm",
    "reference:generated:numpy.polynomial.hermite_e.hermevander": "numpy.polynomial.hermite\\_e.hermevander",
    "reference:generated:numpy.char.chararray.T": "numpy.char.chararray.T",
    "reference:generated:numpy.memmap.reshape": "numpy.memmap.reshape",
    "reference:generated:numpy.ma.prod": "numpy.ma.prod",
    "reference:generated:numpy.ndarray.tofile": "numpy.ndarray.tofile",
    "reference:generated:numpy.ma.apply_over_axes": "numpy.ma.apply\\_over\\_axes",
    "reference:generated:numpy.record.mean": "numpy.record.mean",
    "reference:generated:numpy.ma.average": "numpy.ma.average",
    "reference:generated:numpy.choose": "numpy.choose",
    "reference:generated:numpy.ma.MaskType.copy": "numpy.ma.MaskType.copy",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.window": "numpy.polynomial.laguerre.Laguerre.window",
    "reference:generated:numpy.ma.fix_invalid": "numpy.ma.fix\\_invalid",
    "reference:generated:numpy.flatiter.index": "numpy.flatiter.index",
    "reference:generated:numpy.core.defchararray.asarray": "numpy.core.defchararray.asarray",
    "reference:generated:numpy.chararray.reshape": "numpy.chararray.reshape",
    "reference:generated:numpy.expm1": "numpy.expm1",
    "reference:generated:numpy.finfo.machar": "numpy.finfo.machar",
    "reference:generated:numpy.polynomial.polynomial.polyvander2d": "numpy.polynomial.polynomial.polyvander2d",
    "reference:generated:numpy.matrix.getA": "numpy.matrix.getA",
    "reference:generated:numpy.ma.MaskedArray.unshare_mask": "numpy.ma.MaskedArray.unshare\\_mask",
    "reference:generated:numpy.record.argmax": "numpy.record.argmax",
    "reference:generated:numpy.ma.clump_masked": "numpy.ma.clump\\_masked",
    "reference:generated:numpy.all": "numpy.all",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.basis": "numpy.polynomial.hermite\\_e.HermiteE.basis",
    "reference:generated:numpy.polynomial.laguerre.lag2poly": "numpy.polynomial.laguerre.lag2poly",
    "reference:generated:numpy.broadcast.reset": "numpy.broadcast.reset",
    "reference:generated:numpy.polynomial.legendre.legline": "numpy.polynomial.legendre.legline",
    "reference:generated:numpy.array_split": "numpy.array\\_split",
    "reference:generated:numpy.nonzero": "numpy.nonzero",
    "reference:generated:numpy.char.chararray.istitle": "numpy.char.chararray.istitle",
    "reference:generated:numpy.polynomial.hermite.poly2herm": "numpy.polynomial.hermite.poly2herm",
    "reference:generated:numpy.char.chararray.shape": "numpy.char.chararray.shape",
    "reference:generated:numpy.triu": "numpy.triu",
    "reference:generated:numpy.binary_repr": "numpy.binary\\_repr",
    "reference:generated:numpy.char.asarray": "numpy.char.asarray",
    "reference:generated:numpy.testing.suppress_warnings": "numpy.testing.suppress\\_warnings",
    "reference:generated:numpy.char.chararray.ctypes": "numpy.char.chararray.ctypes",
    "reference:generated:numpy.polynomial.hermite.Hermite.domain": "numpy.polynomial.hermite.Hermite.domain",
    "reference:generated:numpy.char.chararray.flat": "numpy.char.chararray.flat",
    "reference:generated:numpy.chararray.center": "numpy.chararray.center",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.has_samewindow": "numpy.polynomial.laguerre.Laguerre.has\\_samewindow",
    "reference:generated:numpy.ma.masked_array.choose": "numpy.ma.masked\\_array.choose",
    "reference:generated:numpy.char.chararray.getfield": "numpy.char.chararray.getfield",
    "reference:generated:numpy.moveaxis": "numpy.moveaxis",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.cpu_baseline_names": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.cpu\\_baseline\\_names",
    "reference:generated:numpy.ma.zeros": "numpy.ma.zeros",
    "reference:generated:numpy.ma.MaskedArray.argmin": "numpy.ma.MaskedArray.argmin",
    "reference:generated:numpy.reciprocal": "numpy.reciprocal",
    "reference:generated:numpy.record.copy": "numpy.record.copy",
    "reference:generated:numpy.imag": "numpy.imag",
    "reference:generated:numpy.poly1d.coefficients": "numpy.poly1d.coefficients",
    "reference:generated:numpy.ma.choose": "numpy.ma.choose",
    "reference:generated:numpy.matrix.min": "numpy.matrix.min",
    "reference:generated:numpy.char.chararray.tofile": "numpy.char.chararray.tofile",
    "reference:generated:numpy.polynomial.polynomial.polypow": "numpy.polynomial.polynomial.polypow",
    "reference:generated:numpy.polynomial.chebyshev.chebone": "numpy.polynomial.chebyshev.chebone",
    "reference:generated:numpy.nanargmax": "numpy.nanargmax",
    "reference:generated:numpy.chararray.astype": "numpy.chararray.astype",
    "reference:generated:numpy.ma.masked_array.var": "numpy.ma.masked\\_array.var",
    "reference:generated:numpy.polynomial.hermite_e.hermepow": "numpy.polynomial.hermite\\_e.hermepow",
    "reference:generated:numpy.polynomial.chebyshev.chebmulx": "numpy.polynomial.chebyshev.chebmulx",
    "reference:generated:numpy.dot": "numpy.dot",
    "reference:generated:numpy.memmap.round": "numpy.memmap.round",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.roots": "numpy.polynomial.laguerre.Laguerre.roots",
    "reference:generated:numpy.sinh": "numpy.sinh",
    "reference:generated:numpy.matrix.argsort": "numpy.matrix.argsort",
    "reference:generated:numpy.mgrid": "numpy.mgrid",
    "reference:generated:numpy.ma.MaskedArray.var": "numpy.ma.MaskedArray.var",
    "reference:generated:numpy.recarray": "numpy.recarray",
    "reference:generated:numpy.dtype.subdtype": "numpy.dtype.subdtype",
    "reference:generated:numpy.chararray.isalpha": "numpy.chararray.isalpha",
    "reference:generated:numpy.ndarray.__reduce__": "numpy.ndarray.\\_\\_reduce\\_\\_",
    "reference:generated:numpy.polynomial.hermite.Hermite.convert": "numpy.polynomial.hermite.Hermite.convert",
    "reference:generated:numpy.linalg.matrix_power": "numpy.linalg.matrix\\_power",
    "reference:generated:numpy.ma.MaskedArray.byteswap": "numpy.ma.MaskedArray.byteswap",
    "reference:generated:numpy.ma.MaskType.shape": "numpy.ma.MaskType.shape",
    "reference:generated:numpy.chararray.getfield": "numpy.chararray.getfield",
    "reference:generated:numpy.std": "numpy.std",
    "reference:generated:numpy.ma.MaskedArray.size": "numpy.ma.MaskedArray.size",
    "reference:generated:numpy.trim_zeros": "numpy.trim\\_zeros",
    "reference:generated:numpy.ma.MaskType.mean": "numpy.ma.MaskType.mean",
    "reference:generated:numpy.matrix.nbytes": "numpy.matrix.nbytes",
    "reference:generated:numpy.matrix.squeeze": "numpy.matrix.squeeze",
    "reference:generated:numpy.ma.cov": "numpy.ma.cov",
    "reference:generated:numpy.zeros": "numpy.zeros",
    "reference:generated:numpy.ma.MaskedArray.__eq__": "numpy.ma.MaskedArray.\\_\\_eq\\_\\_",
    "reference:generated:numpy.lib.scimath.sqrt": "numpy.lib.scimath.sqrt",
    "reference:generated:numpy.char.chararray.real": "numpy.char.chararray.real",
    "reference:generated:numpy.polynomial.legendre.Legendre.cutdeg": "numpy.polynomial.legendre.Legendre.cutdeg",
    "reference:generated:numpy.polynomial.legendre.Legendre.deriv": "numpy.polynomial.legendre.Legendre.deriv",
    "reference:generated:numpy.chararray.strides": "numpy.chararray.strides",
    "reference:generated:numpy.generic.ndim": "numpy.generic.ndim",
    "reference:generated:numpy.recarray.min": "numpy.recarray.min",
    "reference:generated:numpy.char.chararray.islower": "numpy.char.chararray.islower",
    "reference:generated:numpy.get_printoptions": "numpy.get\\_printoptions",
    "reference:generated:numpy.ma.masked_greater": "numpy.ma.masked\\_greater",
    "reference:generated:numpy.ndarray.ctypes": "numpy.ndarray.ctypes",
    "reference:generated:numpy.testing.decorate_methods": "numpy.testing.decorate\\_methods",
    "reference:generated:numpy.matrix.cumsum": "numpy.matrix.cumsum",
    "reference:generated:numpy.tanh": "numpy.tanh",
    "reference:generated:numpy.chararray.upper": "numpy.chararray.upper",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.deriv": "numpy.polynomial.chebyshev.Chebyshev.deriv",
    "reference:generated:numpy.ma.var": "numpy.ma.var",
    "reference:generated:numpy.memmap.strides": "numpy.memmap.strides",
    "reference:generated:numpy.char.swapcase": "numpy.char.swapcase",
    "reference:generated:numpy.polynomial.chebyshev.chebint": "numpy.polynomial.chebyshev.chebint",
    "reference:generated:numpy.ma.allclose": "numpy.ma.allclose",
    "reference:generated:numpy.recarray.round": "numpy.recarray.round",
    "reference:generated:numpy.matrix.flatten": "numpy.matrix.flatten",
    "reference:generated:numpy.ndarray.sum": "numpy.ndarray.sum",
    "reference:generated:numpy.ma.is_masked": "numpy.ma.is\\_masked",
    "reference:generated:numpy.char.upper": "numpy.char.upper",
    "reference:generated:numpy.memmap.min": "numpy.memmap.min",
    "reference:generated:numpy.record.tostring": "numpy.record.tostring",
    "reference:generated:numpy.distutils.exec_command.forward_bytes_to_stdout": "numpy.distutils.exec\\_command.forward\\_bytes\\_to\\_stdout",
    "reference:generated:numpy.ma.MaskType.fill": "numpy.ma.MaskType.fill",
    "reference:generated:numpy.ma.MaskType.prod": "numpy.ma.MaskType.prod",
    "reference:generated:numpy.distutils.system_info.get_info": "numpy.distutils.system\\_info.get\\_info",
    "reference:generated:numpy.ma.masked_array.repeat": "numpy.ma.masked\\_array.repeat",
    "reference:generated:numpy.polynomial.hermite_e.hermeval": "numpy.polynomial.hermite\\_e.hermeval",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.integ": "numpy.polynomial.chebyshev.Chebyshev.integ",
    "reference:generated:numpy.ma.masked_array.itemsize": "numpy.ma.masked\\_array.itemsize",
    "reference:generated:numpy.ma.MaskType.itemset": "numpy.ma.MaskType.itemset",
    "reference:generated:numpy.char.chararray.isalnum": "numpy.char.chararray.isalnum",
    "reference:generated:numpy.ma.MaskedArray.dumps": "numpy.ma.MaskedArray.dumps",
    "reference:generated:numpy.ma.MaskedArray.__isub__": "numpy.ma.MaskedArray.\\_\\_isub\\_\\_",
    "reference:generated:numpy.polynomial.polynomial.polyval": "numpy.polynomial.polynomial.polyval",
    "reference:generated:numpy.chararray.compress": "numpy.chararray.compress",
    "reference:generated:numpy.polynomial.laguerre.Laguerre": "numpy.polynomial.laguerre.Laguerre",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.conf_cache_factors": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.conf\\_cache\\_factors",
    "reference:generated:numpy.ma.MaskedArray.dump": "numpy.ma.MaskedArray.dump",
    "reference:generated:numpy.char.chararray.replace": "numpy.char.chararray.replace",
    "reference:generated:numpy.generic.imag": "numpy.generic.imag",
    "reference:generated:numpy.ma.copy": "numpy.ma.copy",
    "reference:generated:numpy.ma.masked_array.get_imag": "numpy.ma.masked\\_array.get\\_imag",
    "reference:generated:numpy.record.reshape": "numpy.record.reshape",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.dist_log": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.dist\\_log",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.cutdeg": "numpy.polynomial.polynomial.Polynomial.cutdeg",
    "reference:generated:numpy.polynomial.legendre.Legendre.integ": "numpy.polynomial.legendre.Legendre.integ",
    "reference:generated:numpy.shape": "numpy.shape",
    "reference:generated:numpy.polynomial.polynomial.polydomain": "numpy.polynomial.polynomial.polydomain",
    "reference:generated:numpy.flatiter.coords": "numpy.flatiter.coords",
    "reference:generated:numpy.ma.masked_array.tobytes": "numpy.ma.masked\\_array.tobytes",
    "reference:generated:numpy.recarray.itemsize": "numpy.recarray.itemsize",
    "reference:generated:numpy.recarray.clip": "numpy.recarray.clip",
    "reference:generated:numpy.broadcast_arrays": "numpy.broadcast\\_arrays",
    "reference:generated:numpy.ma.is_mask": "numpy.ma.is\\_mask",
    "reference:generated:numpy.dtype.metadata": "numpy.dtype.metadata",
    "reference:generated:numpy.record.flags": "numpy.record.flags",
    "reference:generated:numpy.char.chararray.upper": "numpy.char.chararray.upper",
    "reference:generated:numpy.polynomial.laguerre.lagx": "numpy.polynomial.laguerre.lagx",
    "reference:generated:numpy.repeat": "numpy.repeat",
    "reference:generated:numpy.polynomial.hermite.Hermite.has_samedomain": "numpy.polynomial.hermite.Hermite.has\\_samedomain",
    "reference:generated:numpy.busday_count": "numpy.busday\\_count",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.feature_test": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.feature\\_test",
    "reference:generated:numpy.testing.suppress_warnings.filter": "numpy.testing.suppress\\_warnings.filter",
    "reference:generated:numpy.polyval": "numpy.polyval",
    "reference:generated:numpy.asfarray": "numpy.asfarray",
    "reference:generated:numpy.ma.MaskedArray.flat": "numpy.ma.MaskedArray.flat",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.linspace": "numpy.polynomial.polynomial.Polynomial.linspace",
    "reference:generated:numpy.polynomial.laguerre.lagline": "numpy.polynomial.laguerre.lagline",
    "reference:generated:numpy.byte_bounds": "numpy.byte\\_bounds",
    "reference:generated:numpy.ma.apply_along_axis": "numpy.ma.apply\\_along\\_axis",
    "reference:generated:numpy.ma.MaskType.diagonal": "numpy.ma.MaskType.diagonal",
    "reference:generated:numpy.nditer.shape": "numpy.nditer.shape",
    "reference:generated:numpy.ndarray.__float__": "numpy.ndarray.\\_\\_float\\_\\_",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.has_samedomain": "numpy.polynomial.hermite\\_e.HermiteE.has\\_samedomain",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.truncate": "numpy.polynomial.laguerre.Laguerre.truncate",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.__call__": "numpy.polynomial.chebyshev.Chebyshev.\\_\\_call\\_\\_",
    "reference:generated:numpy.ma.MaskedArray.__rfloordiv__": "numpy.ma.MaskedArray.\\_\\_rfloordiv\\_\\_",
    "reference:generated:numpy.nditer.iterindex": "numpy.nditer.iterindex",
    "reference:generated:numpy.polynomial.chebyshev.chebmul": "numpy.polynomial.chebyshev.chebmul",
    "reference:generated:numpy.testing.rundocs": "numpy.testing.rundocs",
    "reference:generated:numpy.polynomial.legendre.legsub": "numpy.polynomial.legendre.legsub",
    "reference:generated:numpy.seterrcall": "numpy.seterrcall",
    "reference:generated:numpy.float_power": "numpy.float\\_power",
    "reference:generated:numpy.finfo": "numpy.finfo",
    "reference:generated:numpy.nditer.value": "numpy.nditer.value",
    "reference:generated:numpy.polynomial.legendre.leggrid3d": "numpy.polynomial.legendre.leggrid3d",
    "reference:generated:numpy.ma.MaskType.min": "numpy.ma.MaskType.min",
    "reference:generated:numpy.outer": "numpy.outer",
    "reference:generated:numpy.chararray.argmax": "numpy.chararray.argmax",
    "reference:generated:numpy.ndindex.ndincr": "numpy.ndindex.ndincr",
    "reference:generated:numpy.heaviside": "numpy.heaviside",
    "reference:generated:numpy.polynomial.polyutils.as_series": "numpy.polynomial.polyutils.as\\_series",
    "reference:generated:numpy.kron": "numpy.kron",
    "reference:generated:numpy.ma.masked_array.all": "numpy.ma.masked\\_array.all",
    "reference:generated:numpy.distutils.ccompiler.new_compiler": "numpy.distutils.ccompiler.new\\_compiler",
    "reference:generated:numpy.char.chararray.searchsorted": "numpy.char.chararray.searchsorted",
    "reference:generated:numpy.asarray": "numpy.asarray",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.cutdeg": "numpy.polynomial.laguerre.Laguerre.cutdeg",
    "reference:generated:numpy.chararray.rjust": "numpy.chararray.rjust",
    "reference:generated:numpy.isnat": "numpy.isnat",
    "reference:generated:numpy.memmap.dump": "numpy.memmap.dump",
    "reference:generated:numpy.testing.assert_allclose": "numpy.testing.assert\\_allclose",
    "reference:generated:numpy.memmap.tofile": "numpy.memmap.tofile",
    "reference:generated:numpy.polynomial.chebyshev.chebcompanion": "numpy.polynomial.chebyshev.chebcompanion",
    "reference:generated:numpy.ma.MaskedArray.__itruediv__": "numpy.ma.MaskedArray.\\_\\_itruediv\\_\\_",
    "reference:generated:numpy.ndarray.ravel": "numpy.ndarray.ravel",
    "reference:generated:numpy.ma.masked_array.flat": "numpy.ma.masked\\_array.flat",
    "reference:generated:numpy.chararray.islower": "numpy.chararray.islower",
    "reference:generated:numpy.logical_and": "numpy.logical\\_and",
    "reference:generated:numpy.chararray.resize": "numpy.chararray.resize",
    "reference:generated:numpy.char.chararray.strides": "numpy.char.chararray.strides",
    "reference:generated:numpy.full": "numpy.full",
    "reference:generated:numpy.ma.MaskedArray.__or__": "numpy.ma.MaskedArray.\\_\\_or\\_\\_",
    "reference:generated:numpy.matrix": "numpy.matrix",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.feature_flags": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.feature\\_flags",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.try_dispatch": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.try\\_dispatch",
    "reference:generated:numpy.ndarray.__neg__": "numpy.ndarray.\\_\\_neg\\_\\_",
    "reference:generated:numpy.divmod": "numpy.divmod",
    "reference:generated:numpy.require": "numpy.require",
    "reference:generated:numpy.fft.irfft2": "numpy.fft.irfft2",
    "reference:generated:numpy.ma.MaskedArray.all": "numpy.ma.MaskedArray.all",
    "reference:generated:numpy.char.chararray.min": "numpy.char.chararray.min",
    "reference:generated:numpy.busdaycalendar": "numpy.busdaycalendar",
    "reference:generated:numpy.copy": "numpy.copy",
    "reference:generated:numpy.record.imag": "numpy.record.imag",
    "reference:generated:numpy.packbits": "numpy.packbits",
    "reference:generated:numpy.ma.clump_unmasked": "numpy.ma.clump\\_unmasked",
    "reference:generated:numpy.ma.make_mask": "numpy.ma.make\\_mask",
    "reference:generated:numpy.ndarray.__contains__": "numpy.ndarray.\\_\\_contains\\_\\_",
    "reference:generated:numpy.result_type": "numpy.result\\_type",
    "reference:generated:numpy.char.rpartition": "numpy.char.rpartition",
    "reference:generated:numpy.ma.masked_values": "numpy.ma.masked\\_values",
    "reference:generated:numpy.ma.cumprod": "numpy.ma.cumprod",
    "reference:generated:numpy.char.chararray.isalpha": "numpy.char.chararray.isalpha",
    "reference:generated:numpy.record.getfield": "numpy.record.getfield",
    "reference:generated:numpy.ndarray.__copy__": "numpy.ndarray.\\_\\_copy\\_\\_",
    "reference:generated:numpy.lib.NumpyVersion": "numpy.lib.NumpyVersion",
    "reference:generated:numpy.round_": "numpy.round\\_",
    "reference:generated:numpy.multiply": "numpy.multiply",
    "reference:generated:numpy.char.chararray.dumps": "numpy.char.chararray.dumps",
    "reference:generated:numpy.ma.MaskedArray.__irshift__": "numpy.ma.MaskedArray.\\_\\_irshift\\_\\_",
    "reference:generated:numpy.hanning": "numpy.hanning",
    "reference:generated:numpy.matrix.getA1": "numpy.matrix.getA1",
    "reference:generated:numpy.ma.MaskType.argmin": "numpy.ma.MaskType.argmin",
    "reference:generated:numpy.ma.all": "numpy.ma.all",
    "reference:generated:numpy.correlate": "numpy.correlate",
    "reference:generated:numpy.ma.MaskedArray.__iand__": "numpy.ma.MaskedArray.\\_\\_iand\\_\\_",
    "reference:generated:numpy.ma.outerproduct": "numpy.ma.outerproduct",
    "reference:generated:numpy.distutils.system_info.get_standard_file": "numpy.distutils.system\\_info.get\\_standard\\_file",
    "reference:generated:numpy.record.min": "numpy.record.min",
    "reference:generated:numpy.ma.masked_outside": "numpy.ma.masked\\_outside",
    "reference:generated:numpy.matrix.itemset": "numpy.matrix.itemset",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.cast": "numpy.polynomial.hermite\\_e.HermiteE.cast",
    "reference:generated:numpy.ma.masked_array.trace": "numpy.ma.masked\\_array.trace",
    "reference:generated:numpy.polynomial.chebyshev.chebvander2d": "numpy.polynomial.chebyshev.chebvander2d",
    "reference:generated:numpy.polynomial.hermite.hermgrid3d": "numpy.polynomial.hermite.hermgrid3d",
    "reference:generated:numpy.polynomial.laguerre.lagvander2d": "numpy.polynomial.laguerre.lagvander2d",
    "reference:generated:numpy.core.records.fromarrays": "numpy.core.records.fromarrays",
    "reference:generated:numpy.ndarray": "numpy.ndarray",
    "reference:generated:numpy.ma.masked_array.dump": "numpy.ma.masked\\_array.dump",
    "reference:generated:numpy.memmap.flat": "numpy.memmap.flat",
    "reference:generated:numpy.nextafter": "numpy.nextafter",
    "reference:generated:numpy.distutils.ccompiler.CCompiler_object_filenames": "numpy.distutils.ccompiler.CCompiler\\_object\\_filenames",
    "reference:generated:numpy.char.chararray.setfield": "numpy.char.chararray.setfield",
    "reference:generated:numpy.recarray.repeat": "numpy.recarray.repeat",
    "reference:generated:numpy.ndarray.cumsum": "numpy.ndarray.cumsum",
    "reference:generated:numpy.polynomial.laguerre.lagder": "numpy.polynomial.laguerre.lagder",
    "reference:generated:numpy.ma.MaskType.flatten": "numpy.ma.MaskType.flatten",
    "reference:generated:numpy.memmap.size": "numpy.memmap.size",
    "reference:generated:numpy.matrix.ctypes": "numpy.matrix.ctypes",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.feature_implies": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.feature\\_implies",
    "reference:generated:numpy.chararray.dumps": "numpy.chararray.dumps",
    "reference:generated:numpy.matrix.real": "numpy.matrix.real",
    "reference:generated:numpy.promote_types": "numpy.promote\\_types",
    "reference:generated:numpy.record.conjugate": "numpy.record.conjugate",
    "reference:generated:numpy.polynomial.laguerre.lagvander": "numpy.polynomial.laguerre.lagvander",
    "reference:generated:numpy.ma.asanyarray": "numpy.ma.asanyarray",
    "reference:generated:numpy.may_share_memory": "numpy.may\\_share\\_memory",
    "reference:generated:numpy.ma.masked_inside": "numpy.ma.masked\\_inside",
    "reference:generated:numpy.dtype.base": "numpy.dtype.base",
    "reference:generated:numpy.ma.MaskedArray.__ilshift__": "numpy.ma.MaskedArray.\\_\\_ilshift\\_\\_",
    "reference:generated:numpy.right_shift": "numpy.right\\_shift",
    "reference:generated:numpy.spacing": "numpy.spacing",
    "reference:generated:numpy.ufunc.accumulate": "numpy.ufunc.accumulate",
    "reference:generated:numpy.polynomial.legendre.legx": "numpy.polynomial.legendre.legx",
    "reference:generated:numpy.char.chararray.isdecimal": "numpy.char.chararray.isdecimal",
    "reference:generated:numpy.ediff1d": "numpy.ediff1d",
    "reference:generated:numpy.ndarray.nbytes": "numpy.ndarray.nbytes",
    "reference:generated:numpy.linalg.multi_dot": "numpy.linalg.multi\\_dot",
    "reference:generated:numpy.ma.MaskType.squeeze": "numpy.ma.MaskType.squeeze",
    "reference:generated:numpy.char.chararray.argpartition": "numpy.char.chararray.argpartition",
    "reference:generated:numpy.save": "numpy.save",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.mapparms": "numpy.polynomial.laguerre.Laguerre.mapparms",
    "reference:generated:numpy.ndarray.trace": "numpy.ndarray.trace",
    "reference:generated:numpy.kaiser": "numpy.kaiser",
    "reference:generated:numpy.fft.fft2": "numpy.fft.fft2",
    "reference:generated:numpy.ma.masked_array.ravel": "numpy.ma.masked\\_array.ravel",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.fromroots": "numpy.polynomial.laguerre.Laguerre.fromroots",
    "reference:generated:numpy.char.splitlines": "numpy.char.splitlines",
    "reference:generated:numpy.polynomial.hermite.hermfromroots": "numpy.polynomial.hermite.hermfromroots",
    "reference:generated:numpy.record.ndim": "numpy.record.ndim",
    "reference:generated:numpy.polynomial.hermite_e.hermevander3d": "numpy.polynomial.hermite\\_e.hermevander3d",
    "reference:generated:numpy.ma.masked_array.nonzero": "numpy.ma.masked\\_array.nonzero",
    "reference:generated:numpy.nditer.reset": "numpy.nditer.reset",
    "reference:generated:numpy.ma.masked_all_like": "numpy.ma.masked\\_all\\_like",
    "reference:generated:numpy.ufunc.reduce": "numpy.ufunc.reduce",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.__call__": "numpy.polynomial.hermite\\_e.HermiteE.\\_\\_call\\_\\_",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.basis_name": "numpy.polynomial.laguerre.Laguerre.basis\\_name",
    "reference:generated:numpy.seterr": "numpy.seterr",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.is_cached": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.is\\_cached",
    "reference:generated:numpy.polynomial.legendre.legvander3d": "numpy.polynomial.legendre.legvander3d",
    "reference:generated:numpy.char.chararray.rjust": "numpy.char.chararray.rjust",
    "reference:generated:numpy.lib.format.read_magic": "numpy.lib.format.read\\_magic",
    "reference:generated:numpy.chararray.replace": "numpy.chararray.replace",
    "reference:generated:numpy.chararray.join": "numpy.chararray.join",
    "reference:generated:numpy.not_equal": "numpy.not\\_equal",
    "reference:generated:numpy.polynomial.laguerre.lagfromroots": "numpy.polynomial.laguerre.lagfromroots",
    "reference:generated:numpy.ma.MaskType.swapaxes": "numpy.ma.MaskType.swapaxes",
    "reference:generated:numpy.char.chararray.newbyteorder": "numpy.char.chararray.newbyteorder",
    "reference:generated:numpy.char.rjust": "numpy.char.rjust",
    "reference:generated:numpy.isscalar": "numpy.isscalar",
    "reference:generated:numpy.chararray.isalnum": "numpy.chararray.isalnum",
    "reference:generated:numpy.percentile": "numpy.percentile",
    "reference:generated:numpy.ma.MaskType.argsort": "numpy.ma.MaskType.argsort",
    "reference:generated:numpy.chararray.tostring": "numpy.chararray.tostring",
    "reference:generated:numpy.RankWarning": "numpy.RankWarning",
    "reference:generated:numpy.ma.masked_array.size": "numpy.ma.masked\\_array.size",
    "reference:generated:numpy.linalg.inv": "numpy.linalg.inv",
    "reference:generated:numpy.unwrap": "numpy.unwrap",
    "reference:generated:numpy.record.compress": "numpy.record.compress",
    "reference:generated:numpy.ma.masked_array.conjugate": "numpy.ma.masked\\_array.conjugate",
    "reference:generated:numpy.record.tolist": "numpy.record.tolist",
    "reference:generated:numpy.ufunc.nargs": "numpy.ufunc.nargs",
    "reference:generated:numpy.ma.swapaxes": "numpy.ma.swapaxes",
    "reference:generated:numpy.char.capitalize": "numpy.char.capitalize",
    "reference:generated:numpy.record.searchsorted": "numpy.record.searchsorted",
    "reference:generated:numpy.isin": "numpy.isin",
    "reference:generated:numpy.dtype.flags": "numpy.dtype.flags",
    "reference:generated:numpy.recarray.transpose": "numpy.recarray.transpose",
    "reference:generated:numpy.ma.ediff1d": "numpy.ma.ediff1d",
    "reference:generated:numpy.dtype.__lt__": "numpy.dtype.\\_\\_lt\\_\\_",
    "reference:generated:numpy.matrix.diagonal": "numpy.matrix.diagonal",
    "reference:generated:numpy.asfortranarray": "numpy.asfortranarray",
    "reference:generated:numpy.arange": "numpy.arange",
    "reference:generated:numpy.matrix.conjugate": "numpy.matrix.conjugate",
    "reference:generated:numpy.ndarray.swapaxes": "numpy.ndarray.swapaxes",
    "reference:generated:numpy.array": "numpy.array",
    "reference:generated:numpy.memmap.tolist": "numpy.memmap.tolist",
    "reference:generated:numpy.chararray.sum": "numpy.chararray.sum",
    "reference:generated:numpy.ndarray.__setitem__": "numpy.ndarray.\\_\\_setitem\\_\\_",
    "reference:generated:numpy.lookfor": "numpy.lookfor",
    "reference:generated:numpy.busdaycalendar.holidays": "numpy.busdaycalendar.holidays",
    "reference:generated:numpy.polynomial.legendre.legvander2d": "numpy.polynomial.legendre.legvander2d",
    "reference:generated:numpy.chararray.flat": "numpy.chararray.flat",
    "reference:generated:numpy.polynomial.chebyshev.chebdomain": "numpy.polynomial.chebyshev.chebdomain",
    "reference:generated:numpy.char.chararray.center": "numpy.char.chararray.center",
    "reference:generated:numpy.errstate": "numpy.errstate",
    "reference:generated:numpy.matrix.ravel": "numpy.matrix.ravel",
    "reference:generated:numpy.ndarray.__ixor__": "numpy.ndarray.\\_\\_ixor\\_\\_",
    "reference:generated:numpy.char.not_equal": "numpy.char.not\\_equal",
    "reference:generated:numpy.chararray.ctypes": "numpy.chararray.ctypes",
    "reference:generated:numpy.linalg.tensorsolve": "numpy.linalg.tensorsolve",
    "reference:generated:numpy.polynomial.hermite_e.hermevander2d": "numpy.polynomial.hermite\\_e.hermevander2d",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.identity": "numpy.polynomial.chebyshev.Chebyshev.identity",
    "reference:generated:numpy.bincount": "numpy.bincount",
    "reference:generated:numpy.chararray.dump": "numpy.chararray.dump",
    "reference:generated:numpy.in1d": "numpy.in1d",
    "reference:generated:numpy.ndarray.astype": "numpy.ndarray.astype",
    "reference:generated:numpy.char.chararray.swapcase": "numpy.char.chararray.swapcase",
    "reference:generated:numpy.recarray.argmin": "numpy.recarray.argmin",
    "reference:generated:numpy.setdiff1d": "numpy.setdiff1d",
    "reference:generated:numpy.ma.MaskType.data": "numpy.ma.MaskType.data",
    "reference:generated:numpy.polynomial.hermite_e.hermecompanion": "numpy.polynomial.hermite\\_e.hermecompanion",
    "reference:generated:numpy.ndarray.__and__": "numpy.ndarray.\\_\\_and\\_\\_",
    "reference:generated:numpy.matrix.clip": "numpy.matrix.clip",
    "reference:generated:numpy.lib.Arrayterator.shape": "numpy.lib.Arrayterator.shape",
    "reference:generated:numpy.ndarray.__complex__": "numpy.ndarray.\\_\\_complex\\_\\_",
    "reference:generated:numpy.chararray.index": "numpy.chararray.index",
    "reference:generated:numpy.distutils.ccompiler.CCompiler_spawn": "numpy.distutils.ccompiler.CCompiler\\_spawn",
    "reference:generated:numpy.amin": "numpy.amin",
    "reference:generated:numpy.char.chararray.title": "numpy.char.chararray.title",
    "reference:generated:numpy.generic.__array_priority__": "numpy.generic.\\_\\_array\\_priority\\_\\_",
    "reference:generated:numpy.concatenate": "numpy.concatenate",
    "reference:generated:numpy.lib.user_array.container.tobytes": "numpy.lib.user\\_array.container.tobytes",
    "reference:generated:numpy.testing.Tester.test": "numpy.testing.Tester.test",
    "reference:generated:numpy.char.title": "numpy.char.title",
    "reference:generated:numpy.testing.dec.skipif": "numpy.testing.dec.skipif",
    "reference:generated:numpy.ma.MaskedArray.__rxor__": "numpy.ma.MaskedArray.\\_\\_rxor\\_\\_",
    "reference:generated:numpy.lib.stride_tricks.as_strided": "numpy.lib.stride\\_tricks.as\\_strided",
    "reference:generated:numpy.broadcast.numiter": "numpy.broadcast.numiter",
    "reference:generated:numpy.matrix.reshape": "numpy.matrix.reshape",
    "reference:generated:numpy.dtype.__reduce__": "numpy.dtype.\\_\\_reduce\\_\\_",
    "reference:generated:numpy.ndarray.__repr__": "numpy.ndarray.\\_\\_repr\\_\\_",
    "reference:generated:numpy.vectorize.__call__": "numpy.vectorize.\\_\\_call\\_\\_",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.has_samedomain": "numpy.polynomial.polynomial.Polynomial.has\\_samedomain",
    "reference:generated:numpy.ma.MaskedArray.__sub__": "numpy.ma.MaskedArray.\\_\\_sub\\_\\_",
    "reference:generated:numpy.polynomial.legendre.Legendre.has_samedomain": "numpy.polynomial.legendre.Legendre.has\\_samedomain",
    "reference:generated:numpy.equal": "numpy.equal",
    "reference:generated:numpy.char.chararray.index": "numpy.char.chararray.index",
    "reference:generated:numpy.polynomial.laguerre.lagvander3d": "numpy.polynomial.laguerre.lagvander3d",
    "reference:generated:numpy.chararray.title": "numpy.chararray.title",
    "reference:generated:numpy.matrix.trace": "numpy.matrix.trace",
    "reference:generated:numpy.iinfo.max": "numpy.iinfo.max",
    "reference:generated:numpy.ma.MaskedArray.dtype": "numpy.ma.MaskedArray.dtype",
    "reference:generated:numpy.rollaxis": "numpy.rollaxis",
    "reference:generated:numpy.record.squeeze": "numpy.record.squeeze",
    "reference:generated:numpy.nditer.iterationneedsapi": "numpy.nditer.iterationneedsapi",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.fromroots": "numpy.polynomial.hermite\\_e.HermiteE.fromroots",
    "reference:generated:numpy.polynomial.chebyshev.chebvander3d": "numpy.polynomial.chebyshev.chebvander3d",
    "reference:generated:numpy.polynomial.hermite.hermgrid2d": "numpy.polynomial.hermite.hermgrid2d",
    "reference:generated:numpy.ma.MaskType.conjugate": "numpy.ma.MaskType.conjugate",
    "reference:generated:numpy.memmap.diagonal": "numpy.memmap.diagonal",
    "reference:generated:numpy.record.flatten": "numpy.record.flatten",
    "reference:generated:numpy.char.multiply": "numpy.char.multiply",
    "reference:generated:numpy.matrix.resize": "numpy.matrix.resize",
    "reference:generated:numpy.maximum_sctype": "numpy.maximum\\_sctype",
    "reference:generated:numpy.ma.MaskType.repeat": "numpy.ma.MaskType.repeat",
    "reference:generated:numpy.record.std": "numpy.record.std",
    "reference:generated:numpy.polynomial.legendre.legcompanion": "numpy.polynomial.legendre.legcompanion",
    "reference:generated:numpy.ma.asarray": "numpy.ma.asarray",
    "reference:generated:numpy.ndarray.argmax": "numpy.ndarray.argmax",
    "reference:generated:numpy.ma.MaskedArray.strides": "numpy.ma.MaskedArray.strides",
    "reference:generated:numpy.chararray.transpose": "numpy.chararray.transpose",
    "reference:generated:numpy.sqrt": "numpy.sqrt",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.has_sametype": "numpy.polynomial.laguerre.Laguerre.has\\_sametype",
    "reference:generated:numpy.recarray.field": "numpy.recarray.field",
    "reference:generated:numpy.arctanh": "numpy.arctanh",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.maxpower": "numpy.polynomial.chebyshev.Chebyshev.maxpower",
    "reference:generated:numpy.broadcast": "numpy.broadcast",
    "reference:generated:numpy.expand_dims": "numpy.expand\\_dims",
    "reference:generated:numpy.char.index": "numpy.char.index",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.conf_min_features": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.conf\\_min\\_features",
    "reference:generated:numpy.recarray.strides": "numpy.recarray.strides",
    "reference:generated:numpy.ma.masked_array.iscontiguous": "numpy.ma.masked\\_array.iscontiguous",
    "reference:generated:numpy.char.chararray.expandtabs": "numpy.char.chararray.expandtabs",
    "reference:generated:numpy.record.argsort": "numpy.record.argsort",
    "reference:generated:numpy.arcsinh": "numpy.arcsinh",
    "reference:generated:numpy.ma.MaskType.sort": "numpy.ma.MaskType.sort",
    "reference:generated:numpy.ma.MaskedArray.__ior__": "numpy.ma.MaskedArray.\\_\\_ior\\_\\_",
    "reference:generated:numpy.ma.masked_array.product": "numpy.ma.masked\\_array.product",
    "reference:generated:numpy.DataSource.exists": "numpy.DataSource.exists",
    "reference:generated:numpy.chararray.size": "numpy.chararray.size",
    "reference:generated:numpy.char.chararray.dot": "numpy.char.chararray.dot",
    "reference:generated:numpy.char.decode": "numpy.char.decode",
    "reference:generated:numpy.nditer.ndim": "numpy.nditer.ndim",
    "reference:generated:numpy.lib.format.dtype_to_descr": "numpy.lib.format.dtype\\_to\\_descr",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.has_sametype": "numpy.polynomial.chebyshev.Chebyshev.has\\_sametype",
    "reference:generated:numpy.unique": "numpy.unique",
    "reference:generated:numpy.ma.column_stack": "numpy.ma.column\\_stack",
    "reference:generated:numpy.nanmax": "numpy.nanmax",
    "reference:generated:numpy.ndarray.__str__": "numpy.ndarray.\\_\\_str\\_\\_",
    "reference:generated:numpy.chararray.startswith": "numpy.chararray.startswith",
    "reference:generated:numpy.datetime_as_string": "numpy.datetime\\_as\\_string",
    "reference:generated:numpy.polynomial.chebyshev.chebpts1": "numpy.polynomial.chebyshev.chebpts1",
    "reference:generated:numpy.cumprod": "numpy.cumprod",
    "reference:generated:numpy.record.newbyteorder": "numpy.record.newbyteorder",
    "reference:generated:numpy.record.tofile": "numpy.record.tofile",
    "reference:generated:numpy.ma.MaskType.T": "numpy.ma.MaskType.T",
    "reference:generated:numpy.ma.MaskType.base": "numpy.ma.MaskType.base",
    "reference:generated:numpy.bitwise_or": "numpy.bitwise\\_or",
    "reference:generated:numpy.char.join": "numpy.char.join",
    "reference:generated:numpy.char.chararray.std": "numpy.char.chararray.std",
    "reference:generated:numpy.ma.MaskType.view": "numpy.ma.MaskType.view",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.conf_nocache": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.conf\\_nocache",
    "reference:generated:numpy.polynomial.legendre.legadd": "numpy.polynomial.legendre.legadd",
    "reference:generated:numpy.fromfunction": "numpy.fromfunction",
    "reference:generated:numpy.ma.inner": "numpy.ma.inner",
    "reference:generated:numpy.array_repr": "numpy.array\\_repr",
    "reference:generated:numpy.polynomial.polynomial.polyint": "numpy.polynomial.polynomial.polyint",
    "reference:generated:numpy.polynomial.legendre.leggrid2d": "numpy.polynomial.legendre.leggrid2d",
    "reference:generated:numpy.ma.MaskType.take": "numpy.ma.MaskType.take",
    "reference:generated:numpy.chararray.rindex": "numpy.chararray.rindex",
    "reference:generated:numpy.generic.__array_struct__": "numpy.generic.\\_\\_array\\_struct\\_\\_",
    "reference:generated:numpy.distutils.ccompiler.CCompiler_get_version": "numpy.distutils.ccompiler.CCompiler\\_get\\_version",
    "reference:generated:numpy.argmin": "numpy.argmin",
    "reference:generated:numpy.polynomial.hermite_e.hermeint": "numpy.polynomial.hermite\\_e.hermeint",
    "reference:generated:numpy.ma.identity": "numpy.ma.identity",
    "reference:generated:numpy.nditer.copy": "numpy.nditer.copy",
    "reference:generated:numpy.memmap.argpartition": "numpy.memmap.argpartition",
    "reference:generated:numpy.char.isdecimal": "numpy.char.isdecimal",
    "reference:generated:numpy.ma.notmasked_contiguous": "numpy.ma.notmasked\\_contiguous",
    "reference:generated:numpy.polynomial.polyutils.RankWarning": "numpy.polynomial.polyutils.RankWarning",
    "reference:generated:numpy.char.chararray.tolist": "numpy.char.chararray.tolist",
    "reference:generated:numpy.ndarray.__ior__": "numpy.ndarray.\\_\\_ior\\_\\_",
    "reference:generated:numpy.ndarray.flat": "numpy.ndarray.flat",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.fit": "numpy.polynomial.hermite\\_e.HermiteE.fit",
    "reference:generated:numpy.dtype.isalignedstruct": "numpy.dtype.isalignedstruct",
    "reference:generated:numpy.matrix.swapaxes": "numpy.matrix.swapaxes",
    "reference:generated:numpy.lib.user_array.container.tostring": "numpy.lib.user\\_array.container.tostring",
    "reference:generated:numpy.ndarray.diagonal": "numpy.ndarray.diagonal",
    "reference:generated:numpy.ma.ptp": "numpy.ma.ptp",
    "reference:generated:numpy.ma.corrcoef": "numpy.ma.corrcoef",
    "reference:generated:numpy.polynomial.polynomial.polyvalfromroots": "numpy.polynomial.polynomial.polyvalfromroots",
    "reference:generated:numpy.char.chararray.byteswap": "numpy.char.chararray.byteswap",
    "reference:generated:numpy.polynomial.legendre.Legendre.trim": "numpy.polynomial.legendre.Legendre.trim",
    "reference:generated:numpy.char.greater": "numpy.char.greater",
    "reference:generated:numpy.geterr": "numpy.geterr",
    "reference:generated:numpy.ma.MaskType.std": "numpy.ma.MaskType.std",
    "reference:generated:numpy.arcsin": "numpy.arcsin",
    "reference:generated:numpy.ma.MaskedArray.__str__": "numpy.ma.MaskedArray.\\_\\_str\\_\\_",
    "reference:generated:numpy.nancumsum": "numpy.nancumsum",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.cutdeg": "numpy.polynomial.hermite\\_e.HermiteE.cutdeg",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.identity": "numpy.polynomial.hermite\\_e.HermiteE.identity",
    "reference:generated:numpy.polynomial.polynomial.polytrim": "numpy.polynomial.polynomial.polytrim",
    "reference:generated:numpy.where": "numpy.where",
    "reference:generated:numpy.matrix.argmax": "numpy.matrix.argmax",
    "reference:generated:numpy.memmap.newbyteorder": "numpy.memmap.newbyteorder",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.feature_implies_c": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.feature\\_implies\\_c",
    "reference:generated:numpy.ma.getmaskarray": "numpy.ma.getmaskarray",
    "reference:generated:numpy.recarray.setflags": "numpy.recarray.setflags",
    "reference:generated:numpy.memmap.std": "numpy.memmap.std",
    "reference:generated:numpy.ma.masked_array.put": "numpy.ma.masked\\_array.put",
    "reference:generated:numpy.polynomial.laguerre.lagfit": "numpy.polynomial.laguerre.lagfit",
    "reference:generated:numpy.ma.masked_array.ptp": "numpy.ma.masked\\_array.ptp",
    "reference:generated:numpy.ndarray.resize": "numpy.ndarray.resize",
    "reference:generated:numpy.ma.MaskedArray.choose": "numpy.ma.MaskedArray.choose",
    "reference:generated:numpy.char.chararray.dtype": "numpy.char.chararray.dtype",
    "reference:generated:numpy.chararray.expandtabs": "numpy.chararray.expandtabs",
    "reference:generated:numpy.logaddexp2": "numpy.logaddexp2",
    "reference:generated:numpy.polyint": "numpy.polyint",
    "reference:generated:numpy.linalg.lstsq": "numpy.linalg.lstsq",
    "reference:generated:numpy.ma.masked_array.argmin": "numpy.ma.masked\\_array.argmin",
    "reference:generated:numpy.ufunc.reduceat": "numpy.ufunc.reduceat",
    "reference:generated:numpy.memmap.dot": "numpy.memmap.dot",
    "reference:generated:numpy.memmap": "numpy.memmap",
    "reference:generated:numpy.empty": "numpy.empty",
    "reference:generated:numpy.recarray.real": "numpy.recarray.real",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev": "numpy.polynomial.chebyshev.Chebyshev",
    "reference:generated:numpy.less_equal": "numpy.less\\_equal",
    "reference:generated:numpy.polynomial.hermite_e.hermeone": "numpy.polynomial.hermite\\_e.hermeone",
    "reference:generated:numpy.ma.masked_array.setflags": "numpy.ma.masked\\_array.setflags",
    "reference:generated:numpy.polynomial.laguerre.lagdiv": "numpy.polynomial.laguerre.lagdiv",
    "reference:generated:numpy.polynomial.chebyshev.chebpow": "numpy.polynomial.chebyshev.chebpow",
    "reference:generated:numpy.polynomial.polynomial.polyone": "numpy.polynomial.polynomial.polyone",
    "reference:generated:numpy.polynomial.polynomial.polyzero": "numpy.polynomial.polynomial.polyzero",
    "reference:generated:numpy.asanyarray": "numpy.asanyarray",
    "reference:generated:numpy.ma.MaskType.conj": "numpy.ma.MaskType.conj",
    "reference:generated:numpy.ndarray.dump": "numpy.ndarray.dump",
    "reference:generated:numpy.ma.anom": "numpy.ma.anom",
    "reference:generated:numpy.nditer.iternext": "numpy.nditer.iternext",
    "reference:generated:numpy.ma.MaskedArray.put": "numpy.ma.MaskedArray.put",
    "reference:generated:numpy.ma.masked_array.count": "numpy.ma.masked\\_array.count",
    "reference:generated:numpy.polynomial.hermite_e.hermeweight": "numpy.polynomial.hermite\\_e.hermeweight",
    "reference:generated:numpy.char.chararray.startswith": "numpy.char.chararray.startswith",
    "reference:generated:numpy.ndarray.strides": "numpy.ndarray.strides",
    "reference:generated:numpy.ma.MaskedArray.ptp": "numpy.ma.MaskedArray.ptp",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.has_samecoef": "numpy.polynomial.laguerre.Laguerre.has\\_samecoef",
    "reference:generated:numpy.lcm": "numpy.lcm",
    "reference:generated:numpy.rad2deg": "numpy.rad2deg",
    "reference:generated:numpy.base_repr": "numpy.base\\_repr",
    "reference:generated:numpy.ma.MaskedArray.__and__": "numpy.ma.MaskedArray.\\_\\_and\\_\\_",
    "reference:generated:numpy.lib.format.write_array_header_2_0": "numpy.lib.format.write\\_array\\_header\\_2\\_0",
    "reference:generated:numpy.ma.MaskType.reshape": "numpy.ma.MaskType.reshape",
    "reference:generated:numpy.chararray.dtype": "numpy.chararray.dtype",
    "reference:generated:numpy.ma.MaskType.item": "numpy.ma.MaskType.item",
    "reference:generated:numpy.ma.MaskType.round": "numpy.ma.MaskType.round",
    "reference:generated:numpy.broadcast.index": "numpy.broadcast.index",
    "reference:generated:numpy.char.chararray.clip": "numpy.char.chararray.clip",
    "reference:generated:numpy.memmap.swapaxes": "numpy.memmap.swapaxes",
    "reference:generated:numpy.polynomial.hermite_e.hermemul": "numpy.polynomial.hermite\\_e.hermemul",
    "reference:generated:numpy.polynomial.chebyshev.cheb2poly": "numpy.polynomial.chebyshev.cheb2poly",
    "reference:generated:numpy.histogram_bin_edges": "numpy.histogram\\_bin\\_edges",
    "reference:generated:numpy.power": "numpy.power",
    "reference:generated:numpy.polynomial.polynomial.polymul": "numpy.polynomial.polynomial.polymul",
    "reference:generated:numpy.recarray.std": "numpy.recarray.std",
    "reference:generated:numpy.matlib.eye": "numpy.matlib.eye",
    "reference:generated:numpy.memmap.shape": "numpy.memmap.shape",
    "reference:generated:numpy.savetxt": "numpy.savetxt",
    "reference:generated:numpy.memmap.searchsorted": "numpy.memmap.searchsorted",
    "reference:generated:numpy.ndarray.__sub__": "numpy.ndarray.\\_\\_sub\\_\\_",
    "reference:generated:numpy.genfromtxt": "numpy.genfromtxt",
    "reference:generated:numpy.polynomial.polynomial.polyfromroots": "numpy.polynomial.polynomial.polyfromroots",
    "reference:generated:numpy.ndarray.__bool__": "numpy.ndarray.\\_\\_bool\\_\\_",
    "reference:generated:numpy.ma.MaskedArray.iscontiguous": "numpy.ma.MaskedArray.iscontiguous",
    "reference:generated:numpy.greater_equal": "numpy.greater\\_equal",
    "reference:generated:numpy.polynomial.chebyshev.chebinterpolate": "numpy.polynomial.chebyshev.chebinterpolate",
    "reference:generated:numpy.matrix.astype": "numpy.matrix.astype",
    "reference:generated:numpy.polynomial.polynomial.Polynomial.cast": "numpy.polynomial.polynomial.Polynomial.cast",
    "reference:generated:numpy.recarray.dot": "numpy.recarray.dot",
    "reference:generated:numpy.set_printoptions": "numpy.set\\_printoptions",
    "reference:generated:numpy.record.itemset": "numpy.record.itemset",
    "reference:generated:numpy.polynomial.chebyshev.chebx": "numpy.polynomial.chebyshev.chebx",
    "reference:generated:numpy.polynomial.hermite_e.HermiteE.maxpower": "numpy.polynomial.hermite\\_e.HermiteE.maxpower",
    "reference:generated:numpy.errstate.__call__": "numpy.errstate.\\_\\_call\\_\\_",
    "reference:generated:numpy.ma.MaskedArray.__float__": "numpy.ma.MaskedArray.\\_\\_float\\_\\_",
    "reference:generated:numpy.polynomial.laguerre.Laguerre.basis": "numpy.polynomial.laguerre.Laguerre.basis",
    "reference:generated:numpy.polymul": "numpy.polymul",
    "reference:generated:numpy.recarray.shape": "numpy.recarray.shape",
    "reference:generated:numpy.ma.maximum_fill_value": "numpy.ma.maximum\\_fill\\_value",
    "reference:generated:numpy.generic.__reduce__": "numpy.generic.\\_\\_reduce\\_\\_",
    "reference:generated:numpy.arccos": "numpy.arccos",
    "reference:generated:numpy.blackman": "numpy.blackman",
    "reference:generated:numpy.polynomial.polyutils.mapparms": "numpy.polynomial.polyutils.mapparms",
    "reference:generated:numpy.matrix.std": "numpy.matrix.std",
    "reference:generated:numpy.copyto": "numpy.copyto",
    "reference:generated:numpy.fft.ifftn": "numpy.fft.ifftn",
    "reference:generated:numpy.common_type": "numpy.common\\_type",
    "reference:generated:numpy.chararray.cumsum": "numpy.chararray.cumsum",
    "reference:generated:numpy.add": "numpy.add",
    "reference:generated:numpy.testing.Tester.bench": "numpy.testing.Tester.bench",
    "reference:generated:numpy.polynomial.chebyshev.Chebyshev.has_samecoef": "numpy.polynomial.chebyshev.Chebyshev.has\\_samecoef",
    "reference:generated:numpy.distutils.ccompiler_opt.CCompilerOpt.feature_is_supported": "numpy.distutils.ccompiler\\_opt.CCompilerOpt.feature\\_is\\_supported",
    "reference:generated:numpy.median": "numpy.median",
    "reference:generated:numpy.generic.shape": "numpy.generic.shape",
    "reference:generated:numpy.polynomial.chebyshev.chebval": "numpy.polynomial.chebyshev.chebval",
    "reference:generated:numpy.chararray.isnumeric": "numpy.chararray.isnumeric",
    "reference:generated:numpy.matrix.dot": "numpy.matrix.dot",
    "reference:generated:numpy.dtype.__ge__": "numpy.dtype.\\_\\_ge\\_\\_",
    "reference:generated:numpy.polynomial.chebyshev.chebpts2": "numpy.polynomial.chebyshev.chebpts2",
    "reference:generated:numpy.ndarray.size": "numpy.ndarray.size",
    "reference:generated:numpy.c_": "numpy.c\\_",
    "reference:generated:numpy.chararray.nbytes": "numpy.chararray.nbytes",
    "reference:generated:numpy.logical_xor": "numpy.logical\\_xor",
    "reference:generated:numpy.ma.common_fill_value": "numpy.ma.common\\_fill\\_value",
    "reference:generated:numpy.nditer.itviews": "numpy.nditer.itviews",
    "reference:distutils:misc_util": "distutils.misc_util",
    "reference:simd:index": "CPU/SIMD Optimizations",
    "reference:simd:simd-optimizations": "<No Title reference:simd:simd-optimizations>",
    "reference:simd:build-options": "CPU build options",
    "reference:simd:how-it-works": "How does the CPU dispatcher work?",
    "reference:random:multithreading": "Multithreaded Generation",
    "reference:random:index": "Random sampling (:mod:`numpy.random`)",
    "reference:random:new-or-different": "What's New or Different",
    "reference:random:upgrading-pcg64": "Upgrading ``PCG64`` with ``PCG64DXSM``",
    "reference:random:extending": "Extending",
    "reference:random:parallel": "Parallel Random Number Generation",
    "reference:random:compatibility": "Compatibility Policy",
    "reference:random:legacy": "Legacy Random Generation",
    "reference:random:c-api": "C API for random",
    "reference:random:performance": "Performance",
    "reference:random:generator": "Random Generator",
    "reference:random:generated:numpy.random.Generator.multivariate_normal": "numpy.random.Generator.multivariate\\_normal",
    "reference:random:generated:numpy.random.negative_binomial": "numpy.random.negative\\_binomial",
    "reference:random:generated:numpy.random.randn": "numpy.random.randn",
    "reference:random:generated:numpy.random.Generator.gamma": "numpy.random.Generator.gamma",
    "reference:random:generated:numpy.random.Generator.permuted": "numpy.random.Generator.permuted",
    "reference:random:generated:numpy.random.RandomState.rand": "numpy.random.RandomState.rand",
    "reference:random:generated:numpy.random.Generator.standard_cauchy": "numpy.random.Generator.standard\\_cauchy",
    "reference:random:generated:numpy.random.RandomState.standard_exponential": "numpy.random.RandomState.standard\\_exponential",
    "reference:random:generated:numpy.random.noncentral_chisquare": "numpy.random.noncentral\\_chisquare",
    "reference:random:generated:numpy.random.random_integers": "numpy.random.random\\_integers",
    "reference:random:generated:numpy.random.RandomState.vonmises": "numpy.random.RandomState.vonmises",
    "reference:random:generated:numpy.random.Generator.geometric": "numpy.random.Generator.geometric",
    "reference:random:generated:numpy.random.hypergeometric": "numpy.random.hypergeometric",
    "reference:random:generated:numpy.random.RandomState.set_state": "numpy.random.RandomState.set\\_state",
    "reference:random:generated:numpy.random.RandomState.standard_normal": "numpy.random.RandomState.standard\\_normal",
    "reference:random:generated:numpy.random.Generator.bit_generator": "numpy.random.Generator.bit\\_generator",
    "reference:random:generated:numpy.random.Generator.logseries": "numpy.random.Generator.logseries",
    "reference:random:generated:numpy.random.Generator.beta": "numpy.random.Generator.beta",
    "reference:random:generated:numpy.random.RandomState.exponential": "numpy.random.RandomState.exponential",
    "reference:random:generated:numpy.random.gamma": "numpy.random.gamma",
    "reference:random:generated:numpy.random.Generator.noncentral_chisquare": "numpy.random.Generator.noncentral\\_chisquare",
    "reference:random:generated:numpy.random.Generator.chisquare": "numpy.random.Generator.chisquare",
    "reference:random:generated:numpy.random.RandomState.triangular": "numpy.random.RandomState.triangular",
    "reference:random:generated:numpy.random.gumbel": "numpy.random.gumbel",
    "reference:random:generated:numpy.random.random_sample": "numpy.random.random\\_sample",
    "reference:random:generated:numpy.random.shuffle": "numpy.random.shuffle",
    "reference:random:generated:numpy.random.randint": "numpy.random.randint",
    "reference:random:generated:numpy.random.get_state": "numpy.random.get\\_state",
    "reference:random:generated:numpy.random.Generator.multinomial": "numpy.random.Generator.multinomial",
    "reference:random:generated:numpy.random.standard_t": "numpy.random.standard\\_t",
    "reference:random:generated:numpy.random.RandomState.permutation": "numpy.random.RandomState.permutation",
    "reference:random:generated:numpy.random.RandomState.geometric": "numpy.random.RandomState.geometric",
    "reference:random:generated:numpy.random.RandomState.weibull": "numpy.random.RandomState.weibull",
    "reference:random:generated:numpy.random.RandomState.power": "numpy.random.RandomState.power",
    "reference:random:generated:numpy.random.RandomState.chisquare": "numpy.random.RandomState.chisquare",
    "reference:random:generated:numpy.random.Generator.pareto": "numpy.random.Generator.pareto",
    "reference:random:generated:numpy.random.beta": "numpy.random.beta",
    "reference:random:generated:numpy.random.Generator.vonmises": "numpy.random.Generator.vonmises",
    "reference:random:generated:numpy.random.Generator.shuffle": "numpy.random.Generator.shuffle",
    "reference:random:generated:numpy.random.RandomState.logseries": "numpy.random.RandomState.logseries",
    "reference:random:generated:numpy.random.RandomState.wald": "numpy.random.RandomState.wald",
    "reference:random:generated:numpy.random.Generator.integers": "numpy.random.Generator.integers",
    "reference:random:generated:numpy.random.RandomState.random_sample": "numpy.random.RandomState.random\\_sample",
    "reference:random:generated:numpy.random.bytes": "numpy.random.bytes",
    "reference:random:generated:numpy.random.RandomState.standard_gamma": "numpy.random.RandomState.standard\\_gamma",
    "reference:random:generated:numpy.random.RandomState.binomial": "numpy.random.RandomState.binomial",
    "reference:random:generated:numpy.random.Generator.uniform": "numpy.random.Generator.uniform",
    "reference:random:generated:numpy.random.Generator.permutation": "numpy.random.Generator.permutation",
    "reference:random:generated:numpy.random.Generator.normal": "numpy.random.Generator.normal",
    "reference:random:generated:numpy.random.RandomState.multinomial": "numpy.random.RandomState.multinomial",
    "reference:random:generated:numpy.random.uniform": "numpy.random.uniform",
    "reference:random:generated:numpy.random.rayleigh": "numpy.random.rayleigh",
    "reference:random:generated:numpy.random.Generator.bytes": "numpy.random.Generator.bytes",
    "reference:random:generated:numpy.random.Generator.zipf": "numpy.random.Generator.zipf",
    "reference:random:generated:numpy.random.logistic": "numpy.random.logistic",
    "reference:random:generated:numpy.random.Generator.dirichlet": "numpy.random.Generator.dirichlet",
    "reference:random:generated:numpy.random.RandomState.standard_cauchy": "numpy.random.RandomState.standard\\_cauchy",
    "reference:random:generated:numpy.random.Generator.standard_gamma": "numpy.random.Generator.standard\\_gamma",
    "reference:random:generated:numpy.random.RandomState.multivariate_normal": "numpy.random.RandomState.multivariate\\_normal",
    "reference:random:generated:numpy.random.seed": "numpy.random.seed",
    "reference:random:generated:numpy.random.Generator.exponential": "numpy.random.Generator.exponential",
    "reference:random:generated:numpy.random.RandomState.gumbel": "numpy.random.RandomState.gumbel",
    "reference:random:generated:numpy.random.Generator.random": "numpy.random.Generator.random",
    "reference:random:generated:numpy.random.Generator.choice": "numpy.random.Generator.choice",
    "reference:random:generated:numpy.random.Generator.standard_normal": "numpy.random.Generator.standard\\_normal",
    "reference:random:generated:numpy.random.Generator.standard_t": "numpy.random.Generator.standard\\_t",
    "reference:random:generated:numpy.random.RandomState.dirichlet": "numpy.random.RandomState.dirichlet",
    "reference:random:generated:numpy.random.lognormal": "numpy.random.lognormal",
    "reference:random:generated:numpy.random.RandomState.laplace": "numpy.random.RandomState.laplace",
    "reference:random:generated:numpy.random.Generator.binomial": "numpy.random.Generator.binomial",
    "reference:random:generated:numpy.random.zipf": "numpy.random.zipf",
    "reference:random:generated:numpy.random.RandomState.poisson": "numpy.random.RandomState.poisson",
    "reference:random:generated:numpy.random.standard_cauchy": "numpy.random.standard\\_cauchy",
    "reference:random:generated:numpy.random.RandomState.rayleigh": "numpy.random.RandomState.rayleigh",
    "reference:random:generated:numpy.random.wald": "numpy.random.wald",
    "reference:random:generated:numpy.random.RandomState.beta": "numpy.random.RandomState.beta",
    "reference:random:generated:numpy.random.RandomState.gamma": "numpy.random.RandomState.gamma",
    "reference:random:generated:numpy.random.weibull": "numpy.random.weibull",
    "reference:random:generated:numpy.random.RandomState.logistic": "numpy.random.RandomState.logistic",
    "reference:random:generated:numpy.random.Generator.hypergeometric": "numpy.random.Generator.hypergeometric",
    "reference:random:generated:numpy.random.exponential": "numpy.random.exponential",
    "reference:random:generated:numpy.random.Generator.triangular": "numpy.random.Generator.triangular",
    "reference:random:generated:numpy.random.Generator.weibull": "numpy.random.Generator.weibull",
    "reference:random:generated:numpy.random.RandomState.normal": "numpy.random.RandomState.normal",
    "reference:random:generated:numpy.random.binomial": "numpy.random.binomial",
    "reference:random:generated:numpy.random.RandomState.randn": "numpy.random.RandomState.randn",
    "reference:random:generated:numpy.random.dirichlet": "numpy.random.dirichlet",
    "reference:random:generated:numpy.random.RandomState.lognormal": "numpy.random.RandomState.lognormal",
    "reference:random:generated:numpy.random.RandomState.shuffle": "numpy.random.RandomState.shuffle",
    "reference:random:generated:numpy.random.RandomState.randint": "numpy.random.RandomState.randint",
    "reference:random:generated:numpy.random.RandomState.noncentral_chisquare": "numpy.random.RandomState.noncentral\\_chisquare",
    "reference:random:generated:numpy.random.standard_exponential": "numpy.random.standard\\_exponential",
    "reference:random:generated:numpy.random.Generator.wald": "numpy.random.Generator.wald",
    "reference:random:generated:numpy.random.RandomState.hypergeometric": "numpy.random.RandomState.hypergeometric",
    "reference:random:generated:numpy.random.ranf": "numpy.random.ranf",
    "reference:random:generated:numpy.random.power": "numpy.random.power",
    "reference:random:generated:numpy.random.Generator.noncentral_f": "numpy.random.Generator.noncentral\\_f",
    "reference:random:generated:numpy.random.Generator.gumbel": "numpy.random.Generator.gumbel",
    "reference:random:generated:numpy.random.RandomState.choice": "numpy.random.RandomState.choice",
    "reference:random:generated:numpy.random.RandomState.f": "numpy.random.RandomState.f",
    "reference:random:generated:numpy.random.noncentral_f": "numpy.random.noncentral\\_f",
    "reference:random:generated:numpy.random.pareto": "numpy.random.pareto",
    "reference:random:generated:numpy.random.Generator.standard_exponential": "numpy.random.Generator.standard\\_exponential",
    "reference:random:generated:numpy.random.Generator.rayleigh": "numpy.random.Generator.rayleigh",
    "reference:random:generated:numpy.random.Generator.power": "numpy.random.Generator.power",
    "reference:random:generated:numpy.random.Generator.lognormal": "numpy.random.Generator.lognormal",
    "reference:random:generated:numpy.random.permutation": "numpy.random.permutation",
    "reference:random:generated:numpy.random.rand": "numpy.random.rand",
    "reference:random:generated:numpy.random.Generator.logistic": "numpy.random.Generator.logistic",
    "reference:random:generated:numpy.random.multinomial": "numpy.random.multinomial",
    "reference:random:generated:numpy.random.laplace": "numpy.random.laplace",
    "reference:random:generated:numpy.random.RandomState.zipf": "numpy.random.RandomState.zipf",
    "reference:random:generated:numpy.random.multivariate_normal": "numpy.random.multivariate\\_normal",
    "reference:random:generated:numpy.random.poisson": "numpy.random.poisson",
    "reference:random:generated:numpy.random.geometric": "numpy.random.geometric",
    "reference:random:generated:numpy.random.RandomState.get_state": "numpy.random.RandomState.get\\_state",
    "reference:random:generated:numpy.random.RandomState.bytes": "numpy.random.RandomState.bytes",
    "reference:random:generated:numpy.random.f": "numpy.random.f",
    "reference:random:generated:numpy.random.Generator.negative_binomial": "numpy.random.Generator.negative\\_binomial",
    "reference:random:generated:numpy.random.RandomState.negative_binomial": "numpy.random.RandomState.negative\\_binomial",
    "reference:random:generated:numpy.random.Generator.poisson": "numpy.random.Generator.poisson",
    "reference:random:generated:numpy.random.sample": "numpy.random.sample",
    "reference:random:generated:numpy.random.vonmises": "numpy.random.vonmises",
    "reference:random:generated:numpy.random.logseries": "numpy.random.logseries",
    "reference:random:generated:numpy.random.RandomState.seed": "numpy.random.RandomState.seed",
    "reference:random:generated:numpy.random.Generator.laplace": "numpy.random.Generator.laplace",
    "reference:random:generated:numpy.random.chisquare": "numpy.random.chisquare",
    "reference:random:generated:numpy.random.triangular": "numpy.random.triangular",
    "reference:random:generated:numpy.random.normal": "numpy.random.normal",
    "reference:random:generated:numpy.random.Generator.multivariate_hypergeometric": "numpy.random.Generator.multivariate\\_hypergeometric",
    "reference:random:generated:numpy.random.standard_gamma": "numpy.random.standard\\_gamma",
    "reference:random:generated:numpy.random.RandomState.standard_t": "numpy.random.RandomState.standard\\_t",
    "reference:random:generated:numpy.random.RandomState.noncentral_f": "numpy.random.RandomState.noncentral\\_f",
    "reference:random:generated:numpy.random.RandomState.uniform": "numpy.random.RandomState.uniform",
    "reference:random:generated:numpy.random.RandomState.random_integers": "numpy.random.RandomState.random\\_integers",
    "reference:random:generated:numpy.random.Generator.f": "numpy.random.Generator.f",
    "reference:random:generated:numpy.random.standard_normal": "numpy.random.standard\\_normal",
    "reference:random:generated:numpy.random.set_state": "numpy.random.set\\_state",
    "reference:random:generated:numpy.random.choice": "numpy.random.choice",
    "reference:random:generated:numpy.random.RandomState.pareto": "numpy.random.RandomState.pareto",
    "reference:random:generated:numpy.random.random": "numpy.random.random",
    "reference:random:examples:numba": "Extending via Numba",
    "reference:random:examples:numba_cffi": "Extending via Numba and CFFI",
    "reference:random:examples:cffi": "Extending via CFFI",
    "reference:random:examples:cython:index": "Extending `numpy.random` via Cython",
    "reference:random:examples:cython:setup.py": "setup.py",
    "reference:random:examples:cython:extending.pyx": "extending.pyx",
    "reference:random:examples:cython:extending_distributions.pyx": "extending_distributions.pyx",
    "reference:random:bit_generators:index": "Bit Generators",
    "reference:random:bit_generators:philox": "Philox Counter-based RNG",
    "reference:random:bit_generators:mt19937": "Mersenne Twister (MT19937)",
    "reference:random:bit_generators:pcg64": "Permuted Congruential Generator (64-bit, PCG64)",
    "reference:random:bit_generators:pcg64dxsm": "Permuted Congruential Generator (64-bit, PCG64 DXSM)",
    "reference:random:bit_generators:sfc64": "SFC64 Small Fast Chaotic PRNG",
    "reference:random:bit_generators:generated:numpy.random.MT19937.state": "numpy.random.MT19937.state",
    "reference:random:bit_generators:generated:numpy.random.SFC64.cffi": "numpy.random.SFC64.cffi",
    "reference:random:bit_generators:generated:numpy.random.PCG64.ctypes": "numpy.random.PCG64.ctypes",
    "reference:random:bit_generators:generated:numpy.random.SeedSequence.pool": "numpy.random.SeedSequence.pool",
    "reference:random:bit_generators:generated:numpy.random.SeedSequence.state": "numpy.random.SeedSequence.state",
    "reference:random:bit_generators:generated:numpy.random.PCG64DXSM.advance": "numpy.random.PCG64DXSM.advance",
    "reference:random:bit_generators:generated:numpy.random.Philox.ctypes": "numpy.random.Philox.ctypes",
    "reference:random:bit_generators:generated:numpy.random.MT19937.cffi": "numpy.random.MT19937.cffi",
    "reference:random:bit_generators:generated:numpy.random.BitGenerator.lock": "numpy.random.BitGenerator.lock",
    "reference:random:bit_generators:generated:numpy.random.PCG64.advance": "numpy.random.PCG64.advance",
    "reference:random:bit_generators:generated:numpy.random.BitGenerator.state": "numpy.random.BitGenerator.state",
    "reference:random:bit_generators:generated:numpy.random.PCG64DXSM.jumped": "numpy.random.PCG64DXSM.jumped",
    "reference:random:bit_generators:generated:numpy.random.SeedSequence.spawn_key": "numpy.random.SeedSequence.spawn\\_key",
    "reference:random:bit_generators:generated:numpy.random.SeedSequence.spawn": "numpy.random.SeedSequence.spawn",
    "reference:random:bit_generators:generated:numpy.random.SeedSequence.n_children_spawned": "numpy.random.SeedSequence.n\\_children\\_spawned",
    "reference:random:bit_generators:generated:numpy.random.PCG64.cffi": "numpy.random.PCG64.cffi",
    "reference:random:bit_generators:generated:numpy.random.MT19937.jumped": "numpy.random.MT19937.jumped",
    "reference:random:bit_generators:generated:numpy.random.SFC64.ctypes": "numpy.random.SFC64.ctypes",
    "reference:random:bit_generators:generated:numpy.random.SeedSequence.pool_size": "numpy.random.SeedSequence.pool\\_size",
    "reference:random:bit_generators:generated:numpy.random.PCG64DXSM.cffi": "numpy.random.PCG64DXSM.cffi",
    "reference:random:bit_generators:generated:numpy.random.PCG64.jumped": "numpy.random.PCG64.jumped",
    "reference:random:bit_generators:generated:numpy.random.BitGenerator.ctypes": "numpy.random.BitGenerator.ctypes",
    "reference:random:bit_generators:generated:numpy.random.Philox.jumped": "numpy.random.Philox.jumped",
    "reference:random:bit_generators:generated:numpy.random.PCG64.state": "numpy.random.PCG64.state",
    "reference:random:bit_generators:generated:numpy.random.BitGenerator.random_raw": "numpy.random.BitGenerator.random\\_raw",
    "reference:random:bit_generators:generated:numpy.random.BitGenerator": "numpy.random.BitGenerator",
    "reference:random:bit_generators:generated:numpy.random.SeedSequence.entropy": "numpy.random.SeedSequence.entropy",
    "reference:random:bit_generators:generated:numpy.random.Philox.state": "numpy.random.Philox.state",
    "reference:random:bit_generators:generated:numpy.random.BitGenerator.cffi": "numpy.random.BitGenerator.cffi",
    "reference:random:bit_generators:generated:numpy.random.Philox.cffi": "numpy.random.Philox.cffi",
    "reference:random:bit_generators:generated:numpy.random.SeedSequence": "numpy.random.SeedSequence",
    "reference:random:bit_generators:generated:numpy.random.PCG64DXSM.ctypes": "numpy.random.PCG64DXSM.ctypes",
    "reference:random:bit_generators:generated:numpy.random.Philox.advance": "numpy.random.Philox.advance",
    "reference:random:bit_generators:generated:numpy.random.SeedSequence.generate_state": "numpy.random.SeedSequence.generate\\_state",
    "reference:random:bit_generators:generated:numpy.random.PCG64DXSM.state": "numpy.random.PCG64DXSM.state",
    "reference:random:bit_generators:generated:numpy.random.SFC64.state": "numpy.random.SFC64.state",
    "reference:random:bit_generators:generated:numpy.random.BitGenerator.capsule": "numpy.random.BitGenerator.capsule",
    "reference:random:bit_generators:generated:numpy.random.MT19937.ctypes": "numpy.random.MT19937.ctypes",
    "reference:c-api:index": "NumPy C-API",
    "reference:c-api:dtype": "Data Type API",
    "reference:c-api:ufunc": "UFunc API",
    "reference:c-api:coremath": "NumPy core libraries",
    "reference:c-api:config": "System configuration",
    "reference:c-api:array": "Array API",
    "reference:c-api:types-and-structures": "Python Types and C-Structures",
    "reference:c-api:deprecations": "C API Deprecations",
    "reference:c-api:generalized-ufuncs": "Generalized Universal Function API",
    "reference:c-api:iterator": "Array Iterator API",
    "reference:c-api:data_memory": "Memory management in NumPy"
  }
}