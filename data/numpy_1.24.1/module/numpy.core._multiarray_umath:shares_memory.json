{
  "aliases": [
    "numpy.core._multiarray_umath.shares_memory"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "warning "
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "This function can be exponentially slow for some inputs, unless "
                },
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "max_work"
                },
                {
                  "type": "text",
                  "value": " is set to a finite number or "
                },
                {
                  "type": "inlineCode",
                  "value": "MAY_SHARE_BOUNDS"
                },
                {
                  "type": "text",
                  "value": ". If in doubt, use "
                },
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "numpy.may_share_memory"
                },
                {
                  "type": "text",
                  "value": " instead."
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Input arrays"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "a, b",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Effort to spend on solving the overlap problem (maximum number of candidate solutions to consider). The following special values are recognized:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "The problem is solved exactly. In this case, the function returns     True only if there is an element shared between the arrays. Finding     the exact solution may take extremely long in some cases."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "max_work=MAY_SHARE_EXACT  (default)"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "Only the memory bounds of a and b are checked."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "max_work=MAY_SHARE_BOUNDS"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    }
                  ],
                  "type": "DefList"
                }
              ],
              "param": "max_work",
              "type": "Param",
              "type_": "int, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Exceeded max_work."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "numpy.TooHardError"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "out",
              "type": "Param",
              "type_": "bool"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Determine if two arrays share memory."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "x = np.array([1, 2, 3, 4])\nnp.shares_memory(x, np.array([5, 6, 7]))"
      },
      {
        "type": "code",
        "value": "np.shares_memory(x[::2], x)"
      },
      {
        "type": "code",
        "value": "np.shares_memory(x[::2], x[1::2])"
      },
      {
        "type": "text",
        "value": "Checking whether two arrays share memory is NP-complete, and\nruntime may increase exponentially in the number of\ndimensions. Hence, `max_work` should generally be set to a finite\nnumber, as it is possible to construct examples that take\nextremely long to run:"
      },
      {
        "type": "code",
        "value": "from numpy.lib.stride_tricks import as_strided\nx = np.zeros([192163377], dtype=np.int8)\nx1 = as_strided(x, strides=(36674, 61119, 85569), shape=(1049, 1049, 1049))\nx2 = as_strided(x[64023025:], strides=(12223, 12224, 1), shape=(1049, 1049, 1))\nnp.shares_memory(x1, x2, max_work=1000)"
      },
      {
        "type": "text",
        "value": "Running ``np.shares_memory(x1, x2)`` without `max_work` set takes\naround 1 minute for this case. It is possible to find problems\nthat take still significantly longer."
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": null,
  "item_line": null,
  "item_type": "<class 'builtin_function_or_method'>",
  "ordered_sections": [
    "Signature",
    "Summary",
    "Extended Summary",
    "Parameters",
    "Raises",
    "Returns",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy:may_share_memory",
          "type": "RefInfo",
          "version": "1.24.1"
        },
        "type": "Link",
        "value": "may_share_memory"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "shares_memory(a, b, /, max_work=None)"
  },
  "type": "DocBlob"
}