{
  "aliases": [
    "numpy.distutils.misc_util.Configuration.add_npy_pkg_config"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The config file generated from "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "template",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "template"
            },
            {
              "type": "text",
              "value": " is installed in the given install directory, using "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "subst_dict",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "subst_dict"
            },
            {
              "type": "text",
              "value": " for variable substitution."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This works for both standard installs and in-place builds, i.e. the "
            },
            {
              "type": "inlineCode",
              "value": "@prefix@"
            },
            {
              "type": "text",
              "value": " refer to the source directory for in-place builds."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The path of the template, relatively to the current package path."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "template",
              "type": "Param",
              "type_": "str"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Where to install the npy-pkg config file, relatively to the current package path."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "install_dir",
              "type": "Param",
              "type_": "str"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If given, any string of the form "
                    },
                    {
                      "type": "inlineCode",
                      "value": "@key@"
                    },
                    {
                      "type": "text",
                      "value": " will be replaced by "
                    },
                    {
                      "type": "inlineCode",
                      "value": "subst_dict[key]"
                    },
                    {
                      "type": "text",
                      "value": " in the template file when installed. The install prefix is always available through the variable "
                    },
                    {
                      "type": "inlineCode",
                      "value": "@prefix@"
                    },
                    {
                      "type": "text",
                      "value": ", since the install prefix is not easy to get reliably from setup.py."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "subst_dict",
              "type": "Param",
              "type_": "dict, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Generate and install a npy-pkg config file from a template."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "::"
      },
      {
        "type": "text",
        "value": "    config.add_npy_pkg_config('foo.ini.in', 'lib', {'foo': bar})"
      },
      {
        "type": "text",
        "value": "Assuming the foo.ini.in file has the following content::"
      },
      {
        "type": "text",
        "value": "    [meta]\n    Name=@foo@\n    Version=1.0\n    Description=dummy description"
      },
      {
        "type": "text",
        "value": "    [default]\n    Cflags=-I@prefix@/include\n    Libs="
      },
      {
        "type": "text",
        "value": "The generated file will have the following content::"
      },
      {
        "type": "text",
        "value": "    [meta]\n    Name=bar\n    Version=1.0\n    Description=dummy description"
      },
      {
        "type": "text",
        "value": "    [default]\n    Cflags=-Iprefix_dir/include\n    Libs="
      },
      {
        "type": "text",
        "value": "and will be installed as foo.ini in the 'lib' subpath."
      },
      {
        "type": "text",
        "value": "When cross-compiling with numpy distutils, it might be necessary to\nuse modified npy-pkg-config files.  Using the default/generated files\nwill link with the host libraries (i.e. libnpymath.a).  For\ncross-compilation you of-course need to link with target libraries,\nwhile using the host Python installation."
      },
      {
        "type": "text",
        "value": "You can copy out the numpy/core/lib/npy-pkg-config directory, add a\npkgdir value to the .ini files and set NPY_PKG_CONFIG_PATH environment\nvariable to point to the directory with the modified npy-pkg-config\nfiles."
      },
      {
        "type": "text",
        "value": "Example npymath.ini modified for cross-compilation::"
      },
      {
        "type": "text",
        "value": "    [meta]\n    Name=npymath\n    Description=Portable, core math library implementing C99 standard\n    Version=0.1"
      },
      {
        "type": "text",
        "value": "    [variables]\n    pkgname=numpy.core\n    pkgdir=/build/arm-linux-gnueabi/sysroot/usr/lib/python3.7/site-packages/numpy/core\n    prefix=${pkgdir}\n    libdir=${prefix}/lib\n    includedir=${prefix}/include"
      },
      {
        "type": "text",
        "value": "    [default]\n    Libs=-L${libdir} -lnpymath\n    Cflags=-I${includedir}\n    Requires=mlib"
      },
      {
        "type": "text",
        "value": "    [msvc]\n    Libs=/LIBPATH:${libdir} npymath.lib\n    Cflags=/INCLUDE:${includedir}\n    Requires=mlib"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/distutils/misc_util.py",
  "item_line": 1648,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy.distutils.misc_util:Configuration.add_installed_library",
          "type": "RefInfo",
          "version": "1.24.1"
        },
        "type": "Link",
        "value": "add_installed_library"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy.distutils.misc_util:Configuration.get_info",
          "type": "RefInfo",
          "version": "1.24.1"
        },
        "type": "Link",
        "value": "get_info"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self, template, install_dir, subst_dict=None)"
  },
  "type": "DocBlob"
}