{
  "aliases": [
    "numpy.fft.hfft"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "hfft"
            },
            {
              "type": "text",
              "value": "/"
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "numpy",
                "path": "numpy.fft:ihfft",
                "type": "RefInfo",
                "version": "1.24.1"
              },
              "type": "Link",
              "value": "ihfft"
            },
            {
              "type": "text",
              "value": " are a pair analogous to "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "rfft"
            },
            {
              "type": "text",
              "value": "/"
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "irfft"
            },
            {
              "type": "text",
              "value": ", but for the opposite case: here the signal has Hermitian symmetry in the time domain and is real in the frequency domain. So here it's "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "hfft"
            },
            {
              "type": "text",
              "value": " for which you must supply the length of the result if it is to be odd."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "even: "
                    },
                    {
                      "type": "inlineCode",
                      "value": "ihfft(hfft(a, 2*len(a) - 2)) == a"
                    },
                    {
                      "type": "text",
                      "value": ", within roundoff error,"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "odd: "
                    },
                    {
                      "type": "inlineCode",
                      "value": "ihfft(hfft(a, 2*len(a) - 1)) == a"
                    },
                    {
                      "type": "text",
                      "value": ", within roundoff error."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": false,
          "spread": false,
          "start": 1,
          "type": "list"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The correct interpretation of the hermitian input depends on the length of the original data, as given by "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "n",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "n"
            },
            {
              "type": "text",
              "value": ". This is because each input shape could correspond to either an odd or even length signal. By default, "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "hfft"
            },
            {
              "type": "text",
              "value": " assumes an even output length which puts the last entry at the Nyquist frequency; aliasing with its symmetric counterpart. By Hermitian symmetry, the value is thus treated as purely real. To avoid losing information, the shape of the full signal "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "must"
                }
              ],
              "type": "strong"
            },
            {
              "type": "text",
              "value": " be given."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The input array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "a",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Length of the transformed axis of the output. For "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "n",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "n"
                    },
                    {
                      "type": "text",
                      "value": " output points, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "n//2 + 1"
                    },
                    {
                      "type": "text",
                      "value": " input points are necessary.  If the input is longer than this, it is cropped.  If it is shorter than this, it is padded with zeros.  If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "n",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "n"
                    },
                    {
                      "type": "text",
                      "value": " is not given, it is taken to be "
                    },
                    {
                      "type": "inlineCode",
                      "value": "2*(m-1)"
                    },
                    {
                      "type": "text",
                      "value": " where "
                    },
                    {
                      "type": "inlineCode",
                      "value": "m"
                    },
                    {
                      "type": "text",
                      "value": " is the length of the input along the axis specified by "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "axis",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "axis"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "n",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Axis over which to compute the FFT. If not given, the last axis is used."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axis",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.10.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Normalization mode (see "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "numpy",
                        "path": "numpy.fft",
                        "type": "RefInfo",
                        "version": "1.24.1"
                      },
                      "type": "Link",
                      "value": "numpy.fft"
                    },
                    {
                      "type": "text",
                      "value": "). Default is \"backward\". Indicates which direction of the forward/backward pair of transforms is scaled and with what normalization factor."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.20.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "The \"backward\", \"forward\" values were added."
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "norm",
              "type": "Param",
              "type_": "{\"backward\", \"ortho\", \"forward\"}, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "axis",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "axis"
                    },
                    {
                      "type": "text",
                      "value": " is not a valid axis of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "IndexError"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The truncated or zero-padded input, transformed along the axis indicated by "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "axis",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "axis"
                    },
                    {
                      "type": "text",
                      "value": ", or the last one if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "axis",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "axis"
                    },
                    {
                      "type": "text",
                      "value": " is not specified. The length of the transformed axis is "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "n",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "n"
                    },
                    {
                      "type": "text",
                      "value": ", or, if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "n",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "n"
                    },
                    {
                      "type": "text",
                      "value": " is not given, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "2*m - 2"
                    },
                    {
                      "type": "text",
                      "value": " where "
                    },
                    {
                      "type": "inlineCode",
                      "value": "m"
                    },
                    {
                      "type": "text",
                      "value": " is the length of the transformed axis of the input. To get an odd number of output points, "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "n",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "n"
                    },
                    {
                      "type": "text",
                      "value": " must be specified, for instance as "
                    },
                    {
                      "type": "inlineCode",
                      "value": "2*m - 1"
                    },
                    {
                      "type": "text",
                      "value": " in the typical case,"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Compute the FFT of a signal that has Hermitian symmetry, i.e., a real spectrum."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "signal = np.array([1, 2, 3, 4, 3, 2])\nnp.fft.fft(signal)"
      },
      {
        "type": "code",
        "value": "np.fft.hfft(signal[:4]) # Input first half of signal"
      },
      {
        "type": "code",
        "value": "np.fft.hfft(signal, 6)  # Input entire signal and truncate"
      },
      {
        "type": "code",
        "value": "signal = np.array([[1, 1.j], [-1.j, 2]])\nnp.conj(signal.T) - signal   # check Hermitian symmetry"
      },
      {
        "type": "code",
        "value": "freq_spectrum = np.fft.hfft(signal)\nfreq_spectrum"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/fft/_pocketfft.py",
  "item_line": 517,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Raises",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Compute the one-dimensional FFT for real input."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "rfft",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "rfft"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "The inverse of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "hfft"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy.fft:ihfft",
          "type": "RefInfo",
          "version": "1.24.1"
        },
        "type": "Link",
        "value": "ihfft"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(a, n=None, axis=-1, norm=None)"
  },
  "type": "DocBlob"
}