{
  "aliases": [
    "numpy.lib._iotools.NameValidator"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The strings are stripped of any non alphanumeric character, and spaces are replaced by '_'. During instantiation, the user can define a list of names to exclude, as well as a list of invalid characters. Names in the exclusion list are appended a '_' character."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Once an instance has been created, it can be called with a list of names, and a list of valid names will be created.  The "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "__call__"
            },
            {
              "type": "text",
              "value": " method accepts an optional keyword \"default\" that sets the default name in case of ambiguity. By default this is 'f', so that names will default to "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "f0"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "f1"
            },
            {
              "type": "text",
              "value": ", etc."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Calling an instance of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "NameValidator"
            },
            {
              "type": "text",
              "value": " is the same as calling its method "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "numpy",
                "path": "numpy.lib._iotools:NameValidator.validate",
                "type": "RefInfo",
                "version": "1.24.1"
              },
              "type": "Link",
              "value": "validate"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A list of names to exclude. This list is appended to the default list ['return', 'file', 'print']. Excluded names are appended an underscore: for example, "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "file"
                    },
                    {
                      "type": "text",
                      "value": " becomes "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "file_"
                    },
                    {
                      "type": "text",
                      "value": " if supplied."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "excludelist",
              "type": "Param",
              "type_": "sequence, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A string combining invalid characters that must be deleted from the names."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "deletechars",
              "type": "Param",
              "type_": "str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "If True, field names are case-sensitive."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "If False or 'upper', field names are converted to upper case."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "If 'lower', field names are converted to lower case."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The default value is True."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "case_sensitive",
              "type": "Param",
              "type_": "{True, False, 'upper', 'lower'}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Character(s) used in replacement of white spaces."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "replace_space",
              "type": "Param",
              "type_": "'_', optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Object to validate a list of strings to use as field names."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "validator = np.lib._iotools.NameValidator()\nvalidator(['file', 'field2', 'with space', 'CaSe'])"
      },
      {
        "type": "code",
        "value": "validator = np.lib._iotools.NameValidator(excludelist=['excl'],\n                                          deletechars='q',\n                                          case_sensitive=False)\nvalidator(['excl', 'field2', 'no_q', 'with space', 'CaSe'])"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/lib/_iotools.py",
  "item_line": 229,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}