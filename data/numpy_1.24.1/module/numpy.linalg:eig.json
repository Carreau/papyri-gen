{
  "aliases": [
    "numpy.dual.eig"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionadded 1.8.0"
                }
              ],
              "type": "admonitionTitle"
            }
          ],
          "kind": "note",
          "type": "admonition"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Broadcasting rules apply, see the "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "numpy",
                "path": "numpy.linalg",
                "type": "RefInfo",
                "version": "1.24.1"
              },
              "type": "Link",
              "value": "numpy.linalg"
            },
            {
              "type": "text",
              "value": " documentation for details."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "This is implemented using the "
            },
            {
              "type": "inlineCode",
              "value": "_geev"
            },
            {
              "type": "text",
              "value": " LAPACK routines which compute the eigenvalues and eigenvectors of general square arrays."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The number "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "w",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "w"
            },
            {
              "type": "text",
              "value": " is an eigenvalue of "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "a",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "a"
            },
            {
              "type": "text",
              "value": " if there exists a vector "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "v",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "v"
            },
            {
              "type": "text",
              "value": " such that "
            },
            {
              "type": "inlineCode",
              "value": "a @ v = w * v"
            },
            {
              "type": "text",
              "value": ". Thus, the arrays "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "a",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "a"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "w",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "w"
            },
            {
              "type": "text",
              "value": ", and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "v",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "v"
            },
            {
              "type": "text",
              "value": " satisfy the equations "
            },
            {
              "type": "inlineCode",
              "value": "a @ v[:,i] = w[i] * v[:,i]"
            },
            {
              "type": "text",
              "value": " for "
            },
            {
              "type": "inlineMath",
              "value": "i \\in \\{0,...,M-1\\}"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The array "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "v",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "v"
            },
            {
              "type": "text",
              "value": " of eigenvectors may not be of maximum rank, that is, some of the columns may be linearly dependent, although round-off error may obscure that fact. If the eigenvalues are all different, then theoretically the eigenvectors are linearly independent and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "a",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "a"
            },
            {
              "type": "text",
              "value": " can be diagonalized by a similarity transformation using "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "v",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "v"
            },
            {
              "type": "text",
              "value": ", i.e, "
            },
            {
              "type": "inlineCode",
              "value": "inv(v) @ a @ v"
            },
            {
              "type": "text",
              "value": " is diagonal."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For non-Hermitian normal matrices the SciPy function "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "api",
                "module": "scipy.linalg._decomp_schur",
                "path": "scipy.linalg._decomp_schur:schur",
                "type": "RefInfo",
                "version": "*"
              },
              "type": "Link",
              "value": "scipy.linalg.schur"
            },
            {
              "type": "text",
              "value": " is preferred because the matrix "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "v",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "v"
            },
            {
              "type": "text",
              "value": " is guaranteed to be unitary, which is not the case when using "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "eig"
            },
            {
              "type": "text",
              "value": ". The Schur factorization produces an upper triangular matrix rather than a diagonal matrix, but for normal matrices only the diagonal of the upper triangular matrix is needed, the rest is roundoff error."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Finally, it is emphasized that "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "v",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "v"
            },
            {
              "type": "text",
              "value": " consists of the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "right"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " (as in right-hand side) eigenvectors of "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "a",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "a"
            },
            {
              "type": "text",
              "value": ".  A vector "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "y"
            },
            {
              "type": "text",
              "value": " satisfying "
            },
            {
              "type": "inlineCode",
              "value": "y.T @ a = z * y.T"
            },
            {
              "type": "text",
              "value": " for some number "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "z"
            },
            {
              "type": "text",
              "value": " is called a "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "left"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " eigenvector of "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "a",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "a"
            },
            {
              "type": "text",
              "value": ", and, in general, the left and right eigenvectors of a matrix are not necessarily the (perhaps conjugate) transposes of each other."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Matrices for which the eigenvalues and right eigenvectors will be computed"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "a",
              "type": "Param",
              "type_": "(..., M, M) array"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If the eigenvalue computation does not converge."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "LinAlgError"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The eigenvalues, each repeated according to its multiplicity. The eigenvalues are not necessarily ordered. The resulting array will be of complex type, unless the imaginary part is zero in which case it will be cast to a real type. When "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": " is real the resulting eigenvalues will be real (0 imaginary part) or occur in conjugate pairs"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "w",
              "type": "Param",
              "type_": "(..., M) array"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The normalized (unit \"length\") eigenvectors, such that the column "
                    },
                    {
                      "type": "inlineCode",
                      "value": "v[:,i]"
                    },
                    {
                      "type": "text",
                      "value": " is the eigenvector corresponding to the eigenvalue "
                    },
                    {
                      "type": "inlineCode",
                      "value": "w[i]"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "v",
              "type": "Param",
              "type_": "(..., M, M) array"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Compute the eigenvalues and right eigenvectors of a square array."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from numpy import linalg as LA"
      },
      {
        "type": "text",
        "value": "(Almost) trivial example with real e-values and e-vectors."
      },
      {
        "type": "code",
        "value": "w, v = LA.eig(np.diag((1, 2, 3)))\nw; v"
      },
      {
        "type": "text",
        "value": "Real matrix possessing complex e-values and e-vectors; note that the\ne-values are complex conjugates of each other."
      },
      {
        "type": "code",
        "value": "w, v = LA.eig(np.array([[1, -1], [1, 1]]))\nw; v"
      },
      {
        "type": "text",
        "value": "Complex-valued matrix with real e-values (but complex-valued e-vectors);\nnote that ``a.conj().T == a``, i.e., `a` is Hermitian."
      },
      {
        "type": "code",
        "value": "a = np.array([[1, 1j], [-1j, 1]])\nw, v = LA.eig(a)\nw; v"
      },
      {
        "type": "text",
        "value": "Be careful about round-off error!"
      },
      {
        "type": "code",
        "value": "a = np.array([[1 + 1e-9, 0], [0, 1 - 1e-9]])\n# Theor. e-values are 1 +/- 1e-9\nw, v = LA.eig(a)\nw; v"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/linalg/linalg.py",
  "item_line": 1168,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Raises",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "eigenvalues of a non-symmetric array."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "eigvals",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "eigvals"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "eigenvalues and eigenvectors of a real symmetric or complex Hermitian (conjugate symmetric) array."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "eigh",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "eigh"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "eigenvalues of a real symmetric or complex Hermitian (conjugate symmetric) array."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "eigvalsh",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "eigvalsh"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Similar function in SciPy that also solves the generalized eigenvalue problem."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "scipy.linalg.eig",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "scipy.linalg.eig"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Best choice for unitary and other non-Hermitian normal matrices."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "scipy.linalg.schur",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "scipy.linalg.schur"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(a)"
  },
  "type": "DocBlob"
}