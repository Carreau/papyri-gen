{
  "aliases": [
    "numpy.dual.eigvals"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Main difference between "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "eigvals"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "eig"
            },
            {
              "type": "text",
              "value": ": the eigenvectors aren't returned."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionadded 1.8.0"
                }
              ],
              "type": "admonitionTitle"
            }
          ],
          "kind": "note",
          "type": "admonition"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Broadcasting rules apply, see the "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "numpy",
                "path": "numpy.linalg",
                "type": "RefInfo",
                "version": "1.24.1"
              },
              "type": "Link",
              "value": "numpy.linalg"
            },
            {
              "type": "text",
              "value": " documentation for details."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "This is implemented using the "
            },
            {
              "type": "inlineCode",
              "value": "_geev"
            },
            {
              "type": "text",
              "value": " LAPACK routines which compute the eigenvalues and eigenvectors of general square arrays."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A complex- or real-valued matrix whose eigenvalues will be computed."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "a",
              "type": "Param",
              "type_": "(..., M, M) array_like"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If the eigenvalue computation does not converge."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "LinAlgError"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The eigenvalues, each repeated according to its multiplicity. They are not necessarily ordered, nor are they necessarily real for real matrices."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "w",
              "type": "Param",
              "type_": "(..., M,) ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Compute the eigenvalues of a general matrix."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Illustration, using the fact that the eigenvalues of a diagonal matrix\nare its diagonal elements, that multiplying a matrix on the left\nby an orthogonal matrix, `Q`, and on the right by `Q.T` (the transpose\nof `Q`), preserves the eigenvalues of the \"middle\" matrix.  In other words,\nif `Q` is orthogonal, then ``Q * A * Q.T`` has the same eigenvalues as\n``A``:"
      },
      {
        "type": "code",
        "value": "from numpy import linalg as LA\nx = np.random.random()\nQ = np.array([[np.cos(x), -np.sin(x)], [np.sin(x), np.cos(x)]])\nLA.norm(Q[0, :]), LA.norm(Q[1, :]), np.dot(Q[0, :],Q[1, :])"
      },
      {
        "type": "text",
        "value": "Now multiply a diagonal matrix by ``Q`` on one side and by ``Q.T`` on the other:"
      },
      {
        "type": "code",
        "value": "D = np.diag((-1,1))\nLA.eigvals(D)"
      },
      {
        "type": "code",
        "value": "A = np.dot(Q, D)\nA = np.dot(A, Q.T)\nLA.eigvals(A)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/linalg/linalg.py",
  "item_line": 969,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "eigenvalues and right eigenvectors of general arrays"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "eig",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "eig"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "eigenvalues of real symmetric or complex Hermitian (conjugate symmetric) arrays."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "eigvalsh",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "eigvalsh"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "eigenvalues and eigenvectors of real symmetric or complex Hermitian (conjugate symmetric) arrays."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "eigh",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "eigh"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Similar function in SciPy."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "scipy.linalg.eigvals",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "scipy.linalg.eigvals"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(a)"
  },
  "type": "DocBlob"
}