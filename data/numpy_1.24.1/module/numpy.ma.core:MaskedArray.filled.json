{
  "aliases": [
    "numpy.ma.MaskedArray.filled"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The result is "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "not"
                }
              ],
              "type": "strong"
            },
            {
              "type": "text",
              "value": " a MaskedArray!"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The value to use for invalid entries. Can be scalar or non-scalar. If non-scalar, the resulting ndarray must be broadcastable over input array. Default is None, in which case, the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "fill_value",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "fill_value"
                    },
                    {
                      "type": "text",
                      "value": " attribute of the array is used instead."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "fill_value",
              "type": "Param",
              "type_": "array_like, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A copy of "
                    },
                    {
                      "type": "inlineCode",
                      "value": "self"
                    },
                    {
                      "type": "text",
                      "value": " with invalid entries replaced by "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "fill_value"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " (be it the function argument or the attribute of "
                    },
                    {
                      "type": "inlineCode",
                      "value": "self"
                    },
                    {
                      "type": "text",
                      "value": "), or "
                    },
                    {
                      "type": "inlineCode",
                      "value": "self"
                    },
                    {
                      "type": "text",
                      "value": " itself as an ndarray if there are no invalid entries to be replaced."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "filled_array",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return a copy of self, with masked values filled with a given value. "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "However"
                }
              ],
              "type": "strong"
            },
            {
              "type": "text",
              "value": ", if there are no masked values to fill, self will be returned instead as an ndarray."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "x = np.ma.array([1,2,3,4,5], mask=[0,0,1,0,1], fill_value=-999)\nx.filled()"
      },
      {
        "type": "code",
        "value": "x.filled(fill_value=1000)"
      },
      {
        "type": "code",
        "value": "type(x.filled())"
      },
      {
        "type": "text",
        "value": "Subclassing is preserved. This means that if, e.g., the data part of\nthe masked array is a recarray, `filled` returns a recarray:"
      },
      {
        "type": "code",
        "value": "x = np.array([(-1, 2), (-3, 4)], dtype='i8,i8').view(np.recarray)\nm = np.ma.array(x, mask=[(True, False), (False, True)])\nm.filled()"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/ma/core.py",
  "item_line": 3770,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self, fill_value=None)"
  },
  "type": "DocBlob"
}