{
  "aliases": [
    "numpy.random.default_rng"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "seed"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " is not a "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "anchor": null,
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "numpy",
                          "path": "numpy.random.bit_generator.BitGenerator",
                          "version": "1.24.1"
                        },
                        "value": "BitGenerator"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " or a "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "anchor": null,
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "numpy",
                          "path": "numpy.random._generator.Generator",
                          "version": "1.24.1"
                        },
                        "value": "Generator"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ", a new "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "anchor": null,
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "numpy",
                          "path": "numpy.random.bit_generator.BitGenerator",
                          "version": "1.24.1"
                        },
                        "value": "BitGenerator"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": "     is instantiated. This function does not manage a default global instance."
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              }
            ]
          },
          "type": "BlockQuote"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A seed to initialize the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "numpy",
                              "path": "numpy.random.bit_generator.BitGenerator",
                              "version": "1.24.1"
                            },
                            "value": "BitGenerator"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ". If None, then fresh, unpredictable entropy will be pulled from the OS. If an "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "int"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "array_like[ints]"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " is passed, then it will be passed to "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "numpy",
                              "path": "numpy.random.bit_generator.SeedSequence",
                              "version": "1.24.1"
                            },
                            "value": "SeedSequence"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " to derive the initial "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "numpy",
                              "path": "numpy.random.bit_generator.BitGenerator",
                              "version": "1.24.1"
                            },
                            "value": "BitGenerator"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " state. One may also pass in a "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "numpy",
                              "path": "numpy.random.bit_generator.SeedSequence",
                              "version": "1.24.1"
                            },
                            "value": "SeedSequence"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " instance. Additionally, when passed a "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "numpy",
                              "path": "numpy.random.bit_generator.BitGenerator",
                              "version": "1.24.1"
                            },
                            "value": "BitGenerator"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ", it will be wrapped by "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "numpy",
                              "path": "numpy.random._generator.Generator",
                              "version": "1.24.1"
                            },
                            "value": "Generator"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ". If passed a "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "numpy",
                              "path": "numpy.random._generator.Generator",
                              "version": "1.24.1"
                            },
                            "value": "Generator"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ", it will be returned unaltered."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "seed",
                "type_": "{None, int, array_like[ints], SeedSequence, BitGenerator, Generator}, optional"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The initialized generator object."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "",
                "type_": "Generator"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "default_rng(seed=None) Construct a new Generator with the default BitGenerator (PCG64)."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [
      {
        "data": {
          "children": [
            {
              "data": {
                "children": [
                  {
                    "data": {
                      "value": [
                        "default_rng"
                      ]
                    },
                    "type": "Verbatim"
                  },
                  {
                    "data": {
                      "value": " is the recommended constructor for the random number class     "
                    },
                    "type": "Words"
                  },
                  {
                    "data": {
                      "value": [
                        "Generator"
                      ]
                    },
                    "type": "Verbatim"
                  },
                  {
                    "data": {
                      "value": ". Here are several ways we can construct a random      number generator using "
                    },
                    "type": "Words"
                  },
                  {
                    "data": {
                      "value": [
                        "default_rng"
                      ]
                    },
                    "type": "Verbatim"
                  },
                  {
                    "data": {
                      "value": " and the "
                    },
                    "type": "Words"
                  },
                  {
                    "data": {
                      "value": [
                        "Generator"
                      ]
                    },
                    "type": "Verbatim"
                  },
                  {
                    "data": {
                      "value": " class."
                    },
                    "type": "Words"
                  }
                ]
              },
              "type": "Paragraph"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "children": [
                  {
                    "data": {
                      "value": "Here we use "
                    },
                    "type": "Words"
                  },
                  {
                    "data": {
                      "value": [
                        "default_rng"
                      ]
                    },
                    "type": "Verbatim"
                  },
                  {
                    "data": {
                      "value": " to generate a random float:"
                    },
                    "type": "Words"
                  }
                ]
              },
              "type": "Paragraph"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> import numpy as np\n>>> rng = np.random.default_rng(12345)\n>>> print(rng)\nGenerator(PCG64)\n>>> rfloat = rng.random()\n>>> rfloat\n0.22733602246716966\n>>> type(rfloat)\n<class 'float'>"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "children": [
                  {
                    "data": {
                      "value": "Here we use "
                    },
                    "type": "Words"
                  },
                  {
                    "data": {
                      "value": [
                        "default_rng"
                      ]
                    },
                    "type": "Verbatim"
                  },
                  {
                    "data": {
                      "value": " to generate 3 random integers between 0      (inclusive) and 10 (exclusive):"
                    },
                    "type": "Words"
                  }
                ]
              },
              "type": "Paragraph"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> import numpy as np\n>>> rng = np.random.default_rng(12345)\n>>> rints = rng.integers(low=0, high=10, size=3)\n>>> rints\narray([6, 2, 7])\n>>> type(rints[0])\n<class 'numpy.int64'>"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "children": [
                  {
                    "data": {
                      "value": "Here we specify a seed so that we have reproducible results:"
                    },
                    "type": "Words"
                  }
                ]
              },
              "type": "Paragraph"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> import numpy as np\n>>> rng = np.random.default_rng(seed=42)\n>>> print(rng)\nGenerator(PCG64)\n>>> arr1 = rng.random((3, 3))\n>>> arr1\narray([[0.77395605, 0.43887844, 0.85859792],\n       [0.69736803, 0.09417735, 0.97562235],\n       [0.7611397 , 0.78606431, 0.12811363]])"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "children": [
                  {
                    "data": {
                      "value": "If we exit and restart our Python interpreter, we'll see that we     generate the same random numbers again:"
                    },
                    "type": "Words"
                  }
                ]
              },
              "type": "Paragraph"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> import numpy as np\n>>> rng = np.random.default_rng(seed=42)\n>>> arr2 = rng.random((3, 3))\n>>> arr2\narray([[0.77395605, 0.43887844, 0.85859792],\n       [0.69736803, 0.09417735, 0.97562235],\n       [0.7611397 , 0.78606431, 0.12811363]])"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      }
    ],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": null,
  "item_line": null,
  "item_type": "<class 'builtin_function_or_method'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}