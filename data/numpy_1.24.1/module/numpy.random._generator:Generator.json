{
  "aliases": [
    "numpy.random.Generator"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "inlineCode",
              "value": "Generator"
            },
            {
              "type": "text",
              "value": " exposes a number of methods for generating random numbers drawn from a variety of probability distributions. In addition to the distribution-specific arguments, each method takes a keyword argument "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "size"
            },
            {
              "type": "text",
              "value": " that defaults to "
            },
            {
              "type": "inlineCode",
              "value": "None"
            },
            {
              "type": "text",
              "value": ". If "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "size"
            },
            {
              "type": "text",
              "value": " is "
            },
            {
              "type": "inlineCode",
              "value": "None"
            },
            {
              "type": "text",
              "value": ", then a single value is generated and returned. If "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "size"
            },
            {
              "type": "text",
              "value": " is an integer, then a 1-D array filled with generated values is returned. If "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "size"
            },
            {
              "type": "text",
              "value": " is a tuple, then an array with that shape is filled and returned."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The function "
            },
            {
              "type": "inlineCode",
              "value": "numpy.random.default_rng"
            },
            {
              "type": "text",
              "value": " will instantiate a "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "Generator"
            },
            {
              "type": "text",
              "value": " with numpy's default "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "numpy",
                "path": "numpy.random.bit_generator:BitGenerator",
                "type": "RefInfo",
                "version": "1.24.1"
              },
              "type": "Link",
              "value": "BitGenerator"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "No Compatibility Guarantee"
                }
              ],
              "type": "strong"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "inlineCode",
              "value": "Generator"
            },
            {
              "type": "text",
              "value": " does not provide a version compatibility guarantee. In particular, as better algorithms evolve the bit stream may change."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The Python stdlib module "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "numpy",
                "path": "numpy.random",
                "type": "RefInfo",
                "version": "1.24.1"
              },
              "type": "Link",
              "value": "random"
            },
            {
              "type": "text",
              "value": " contains pseudo-random number generator with a number of methods that are similar to the ones available in "
            },
            {
              "type": "inlineCode",
              "value": "Generator"
            },
            {
              "type": "text",
              "value": ". It uses Mersenne Twister, and this bit generator can be accessed using "
            },
            {
              "type": "inlineCode",
              "value": "MT19937"
            },
            {
              "type": "text",
              "value": ". "
            },
            {
              "type": "inlineCode",
              "value": "Generator"
            },
            {
              "type": "text",
              "value": ", besides being NumPy-aware, has the advantage that it provides a much larger number of probability distributions to choose from."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "BitGenerator to use as the core generator."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "bit_generator",
              "type": "Param",
              "type_": "BitGenerator"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Container for the BitGenerators."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from numpy.random import Generator, PCG64\nrng = Generator(PCG64())\nrng.standard_normal()"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/random/_generator.cpython-311-darwin.so",
  "item_line": null,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Signature",
    "Summary",
    "Extended Summary",
    "Parameters",
    "Notes",
    "Examples",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Recommended constructor for "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "Generator"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy.random._generator:default_rng",
          "type": "RefInfo",
          "version": "1.24.1"
        },
        "type": "Link",
        "value": "default_rng"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "Generator(bit_generator)"
  },
  "type": "DocBlob"
}