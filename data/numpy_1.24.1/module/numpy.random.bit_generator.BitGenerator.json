{
  "aliases": [
    "numpy.random.BitGenerator"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Lock instance that is shared so that the same BitGenerator can be used in multiple Generators without corrupting the state. Code that generates values from a bit generator should hold the bit generator's lock."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "lock",
                "type_": "threading.Lock"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A seed to initialize the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "numpy",
                              "path": "numpy.random.bit_generator.BitGenerator",
                              "version": "1.24.1"
                            },
                            "value": "BitGenerator"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ". If None, then fresh, unpredictable entropy will be pulled from the OS. If an "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "int"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "array_like[ints]"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " is passed, then it will be passed to "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "api",
                              "module": "numpy",
                              "path": "numpy.random.bit_generator.SeedSequence",
                              "version": "*"
                            },
                            "value": "SeedSequence"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " to derive the initial "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "numpy",
                              "path": "numpy.random.bit_generator.BitGenerator",
                              "version": "1.24.1"
                            },
                            "value": "BitGenerator"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " state. One may also pass in a "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "numpy",
                              "path": "numpy.random.bit_generator.SeedSequence",
                              "version": "1.24.1"
                            },
                            "value": "SeedSequence"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " instance."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "seed",
                "type_": "{None, int, array_like[ints], SeedSequence}, optional"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Base Class for generic BitGenerators, which provide a stream of random bits based on different algorithms. Must be overridden."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/numpy/random/bit_generator.cpython-311-darwin.so",
  "item_line": null,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Signature",
    "Summary",
    "Parameters",
    "Attributes",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy.random.bit_generator.SeedSequence",
          "version": "1.24.1"
        },
        "value": "SeedSequence"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "BitGenerator(seed=None)"
  }
}