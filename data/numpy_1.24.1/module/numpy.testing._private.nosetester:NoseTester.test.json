{
  "aliases": [
    "numpy.Tester.test"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Each NumPy module exposes "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "numpy",
                "path": "numpy.testing._private.nosetester:NoseTester.test",
                "type": "RefInfo",
                "version": "1.24.1"
              },
              "type": "Link",
              "value": "test"
            },
            {
              "type": "text",
              "value": " in its namespace to run all tests for it. For example, to run all tests for numpy.lib:"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": ">>> np.lib.test() #doctest: +SKIP"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Identifies the tests to run. This can be a string to pass to the nosetests executable with the '-A' option, or one of several special values.  Special values are:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "'fast' - the default - which corresponds to the "
                            },
                            {
                              "type": "inlineCode",
                              "value": "nosetests -A"
                            },
                            {
                              "type": "text",
                              "value": "   option of 'not slow'."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "'full' - fast (as above) and slow tests as in the   'no -A' option to nosetests - this is the same as ''."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "None or '' - run all tests."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "attribute_identifier - string passed directly to nosetests as '-A'."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                }
              ],
              "param": "label",
              "type": "Param",
              "type_": "{'fast', 'full', '', attribute identifier}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Verbosity value for test outputs, in the range 1-10. Default is 1."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "verbose",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "List with any extra arguments to pass to nosetests."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "extra_argv",
              "type": "Param",
              "type_": "list, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, run doctests in module. Default is False."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "doctests",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, report coverage of NumPy code. Default is False. (This requires the "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "coverage module"
                        }
                      ],
                      "title": "",
                      "type": "link",
                      "url": "https://pypi.org/project/coverage/"
                    },
                    {
                      "type": "text",
                      "value": ")."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "coverage",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "This specifies which warnings to configure as 'raise' instead of being shown once during the test execution. Valid strings are:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                }
              ],
              "param": "raise_warnings",
              "type": "Param",
              "type_": "None, str or sequence of warnings, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Timing of individual tests with "
                    },
                    {
                      "type": "inlineCode",
                      "value": "nose-timer"
                    },
                    {
                      "type": "text",
                      "value": " (which needs to be installed).  If True, time tests and report on all of them. If an integer (say "
                    },
                    {
                      "type": "inlineCode",
                      "value": "N"
                    },
                    {
                      "type": "text",
                      "value": "), report timing results for "
                    },
                    {
                      "type": "inlineCode",
                      "value": "N"
                    },
                    {
                      "type": "text",
                      "value": " slowest tests."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "timer",
              "type": "Param",
              "type_": "bool or int, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Returns the result of running the tests as a "
                    },
                    {
                      "type": "inlineCode",
                      "value": "nose.result.TextTestResult"
                    },
                    {
                      "type": "text",
                      "value": " object."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "result",
              "type": "Param",
              "type_": "object"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Run tests for module using nose."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "result = np.lib.test() #doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "OK"
      },
      {
        "type": "code",
        "value": "result.errors #doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "result.knownfail #doctest: +SKIP"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/testing/_private/nosetester.py",
  "item_line": 326,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self, label='fast', verbose=1, extra_argv=None, doctests=False, coverage=False, raise_warnings=None, timer=False)"
  },
  "type": "DocBlob"
}