{
  "aliases": [
    "numpy.argsort"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Perform an indirect sort along the given axis using the algorithm specified by the "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "kind",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "kind"
            },
            {
              "type": "text",
              "value": " keyword. It returns an array of indices of the same shape as "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "a",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "a"
            },
            {
              "type": "text",
              "value": " that index data along the given axis in sorted order."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "See "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "numpy",
                "path": "numpy:argsort",
                "type": "RefInfo",
                "version": "1.24.1"
              },
              "type": "Link",
              "value": "sort"
            },
            {
              "type": "text",
              "value": " for notes on the different sorting algorithms."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "As of NumPy 1.4.0 "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "numpy",
                "path": "numpy:argsort",
                "type": "RefInfo",
                "version": "1.24.1"
              },
              "type": "Link",
              "value": "argsort"
            },
            {
              "type": "text",
              "value": " works with real/complex arrays containing nan values. The enhanced sort order is documented in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "numpy",
                "path": "numpy:argsort",
                "type": "RefInfo",
                "version": "1.24.1"
              },
              "type": "Link",
              "value": "sort"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Array to sort."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "a",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Axis along which to sort.  The default is -1 (the last axis). If None, the flattened array is used."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axis",
              "type": "Param",
              "type_": "int or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Sorting algorithm. The default is 'quicksort'. Note that both 'stable' and 'mergesort' use timsort under the covers and, in general, the actual implementation will vary with data type. The 'mergesort' option is retained for backwards compatibility."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionchanged 1.15.0."
                        }
                      ],
                      "type": "admonitionTitle"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "The 'stable' option was added."
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "kind",
              "type": "Param",
              "type_": "{'quicksort', 'mergesort', 'heapsort', 'stable'}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "When "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": " is an array with fields defined, this argument specifies which fields to compare first, second, etc.  A single field can be specified as a string, and not all fields need be specified, but unspecified fields will still be used, in the order in which they come up in the dtype, to break ties."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "order",
              "type": "Param",
              "type_": "str or list of str, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Array of indices that sort "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": " along the specified "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "axis",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "axis"
                    },
                    {
                      "type": "text",
                      "value": ". If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": " is one-dimensional, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "a[index_array]"
                    },
                    {
                      "type": "text",
                      "value": " yields a sorted "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": ". More generally, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "np.take_along_axis(a, index_array, axis=axis)"
                    },
                    {
                      "type": "text",
                      "value": " always yields the sorted "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": ", irrespective of dimensionality."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "index_array",
              "type": "Param",
              "type_": "ndarray, int"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns the indices that would sort an array."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "One dimensional array:"
      },
      {
        "type": "code",
        "value": "x = np.array([3, 1, 2])\nnp.argsort(x)"
      },
      {
        "type": "text",
        "value": "Two-dimensional array:"
      },
      {
        "type": "code",
        "value": "x = np.array([[0, 3], [2, 2]])\nx"
      },
      {
        "type": "code",
        "value": "ind = np.argsort(x, axis=0)  # sorts along first axis (down)\nind"
      },
      {
        "type": "code",
        "value": "np.take_along_axis(x, ind, axis=0)  # same as np.sort(x, axis=0)"
      },
      {
        "type": "code",
        "value": "ind = np.argsort(x, axis=1)  # sorts along last axis (across)\nind"
      },
      {
        "type": "code",
        "value": "np.take_along_axis(x, ind, axis=1)  # same as np.sort(x, axis=1)"
      },
      {
        "type": "text",
        "value": "Indices of the sorted elements of a N-dimensional array:"
      },
      {
        "type": "code",
        "value": "ind = np.unravel_index(np.argsort(x, axis=None), x.shape)\nind"
      },
      {
        "type": "code",
        "value": "x[ind]  # same as np.sort(x, axis=None)"
      },
      {
        "type": "text",
        "value": "Sorting with keys:"
      },
      {
        "type": "code",
        "value": "x = np.array([(1, 0), (0, 1)], dtype=[('x', '<i4'), ('y', '<i4')])\nx"
      },
      {
        "type": "code",
        "value": "np.argsort(x, order=('x','y'))"
      },
      {
        "type": "code",
        "value": "np.argsort(x, order=('y','x'))"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/core/fromnumeric.py",
  "item_line": 1038,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Describes sorting algorithms used."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy:argsort",
          "type": "RefInfo",
          "version": "1.24.1"
        },
        "type": "Link",
        "value": "sort"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Indirect stable sort with multiple keys."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "lexsort",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "lexsort"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Inplace sort."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "ndarray.sort",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "ndarray.sort"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Indirect partial sort."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "argpartition",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "argpartition"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Apply "
            },
            {
              "type": "inlineCode",
              "value": "index_array"
            },
            {
              "type": "text",
              "value": " from argsort to an array as if by calling sort."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "take_along_axis",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "take_along_axis"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(a, axis=-1, kind=None, order=None)"
  },
  "type": "DocBlob"
}