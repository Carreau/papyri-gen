{
  "aliases": [
    "numpy.array"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "When order is 'A' and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "object",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "object"
            },
            {
              "type": "text",
              "value": " is an array in neither 'C' nor 'F' order, and a copy is forced by a change in dtype, then the order of the result is not necessarily 'C' as expected. This is likely a bug."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An array, any object exposing the array interface, an object whose __array__ method returns an array, or any (nested) sequence. If object is a scalar, a 0-dimensional array containing object is returned."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "object",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The desired data-type for the array.  If not given, then the type will be determined as the minimum type required to hold the objects in the sequence."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dtype",
              "type": "Param",
              "type_": "data-type, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If true (default), then the object is copied.  Otherwise, a copy will only be made if __array__ returns a copy, if obj is a nested sequence, or if a copy is needed to satisfy any of the other requirements ("
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "dtype",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "dtype"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "order",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "order"
                    },
                    {
                      "type": "text",
                      "value": ", etc.)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "copy",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Specify the memory layout of the array. If object is not an array, the newly created array will be in C order (row major) unless 'F' is specified, in which case it will be in Fortran order (column major). If object is an array the following holds."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "===== ========= =================================================== order  no copy                     copy=True ===== ========= =================================================== 'K'   unchanged F & C order preserved, otherwise most similar order 'A'   unchanged F order if input is F and not C, otherwise C order 'C'   C order   C order 'F'   F order   F order ===== ========= ==================================================="
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "When "
                    },
                    {
                      "type": "inlineCode",
                      "value": "copy=False"
                    },
                    {
                      "type": "text",
                      "value": " and a copy is made for other reasons, the result is the same as if "
                    },
                    {
                      "type": "inlineCode",
                      "value": "copy=True"
                    },
                    {
                      "type": "text",
                      "value": ", with some exceptions for 'A', see the Notes section. The default order is 'K'."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "order",
              "type": "Param",
              "type_": "{'K', 'A', 'C', 'F'}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, then sub-classes will be passed-through, otherwise the returned array will be forced to be a base-class array (default)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "subok",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Specifies the minimum number of dimensions that the resulting array should have.  Ones will be prepended to the shape as needed to meet this requirement."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "ndmin",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Reference object to allow the creation of arrays which are not NumPy arrays. If an array-like passed in as "
                    },
                    {
                      "type": "inlineCode",
                      "value": "like"
                    },
                    {
                      "type": "text",
                      "value": " supports the "
                    },
                    {
                      "type": "inlineCode",
                      "value": "__array_function__"
                    },
                    {
                      "type": "text",
                      "value": " protocol, the result will be defined by it. In this case, it ensures the creation of an array object compatible with that passed in via this argument."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.20.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "like",
              "type": "Param",
              "type_": "array_like, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An array object satisfying the specified requirements."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Create an array."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "np.array([1, 2, 3])"
      },
      {
        "type": "text",
        "value": "Upcasting:"
      },
      {
        "type": "code",
        "value": "np.array([1, 2, 3.0])"
      },
      {
        "type": "text",
        "value": "More than one dimension:"
      },
      {
        "type": "code",
        "value": "np.array([[1, 2], [3, 4]])"
      },
      {
        "type": "text",
        "value": "Minimum dimensions 2:"
      },
      {
        "type": "code",
        "value": "np.array([1, 2, 3], ndmin=2)"
      },
      {
        "type": "text",
        "value": "Type provided:"
      },
      {
        "type": "code",
        "value": "np.array([1, 2, 3], dtype=complex)"
      },
      {
        "type": "text",
        "value": "Data-type consisting of more than one element:"
      },
      {
        "type": "code",
        "value": "x = np.array([(1,2),(3,4)],dtype=[('a','<i4'),('b','<i4')])\nx['a']"
      },
      {
        "type": "text",
        "value": "Creating an array from sub-classes:"
      },
      {
        "type": "code",
        "value": "np.array(np.mat('1 2; 3 4'))"
      },
      {
        "type": "code",
        "value": "np.array(np.mat('1 2; 3 4'), subok=True)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": null,
  "item_line": null,
  "item_type": "<class 'builtin_function_or_method'>",
  "ordered_sections": [
    "Signature",
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return an empty array with shape and type of input."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "empty_like",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "empty_like"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return an array of ones with shape and type of input."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "ones_like",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "ones_like"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return an array of zeros with shape and type of input."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "zeros_like",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "zeros_like"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return a new array with shape of input filled with value."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "full_like",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "full_like"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return a new uninitialized array."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "empty",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "empty"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return a new array setting values to one."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "ones",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "ones"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return a new array setting values to zero."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "zeros",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "zeros"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return a new array of given shape filled with value."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "full",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "full"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "array(object, dtype=None, *, copy=True, order='K', subok=False, ndmin=0, like=None)"
  },
  "type": "DocBlob"
}