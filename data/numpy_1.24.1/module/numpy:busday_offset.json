{
  "aliases": [
    "numpy.busday_offset"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionadded 1.7.0"
                }
              ],
              "type": "admonitionTitle"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The array of dates to process."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dates",
              "type": "Param",
              "type_": "array_like of datetime64[D]"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The array of offsets, which is broadcast with "
                    },
                    {
                      "type": "inlineCode",
                      "value": "dates"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "offsets",
              "type": "Param",
              "type_": "array_like of int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "How to treat dates that do not fall on a valid day. The default is 'raise'."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'raise' means to raise an exception for an invalid day."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'nat' means to return a NaT (not-a-time) for an invalid day."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'forward' and 'following' mean to take the first valid day     later in time."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'backward' and 'preceding' mean to take the first valid day     earlier in time."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'modifiedfollowing' means to take the first valid day     later in time unless it is across a Month boundary, in which     case to take the first valid day earlier in time."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'modifiedpreceding' means to take the first valid day     earlier in time unless it is across a Month boundary, in which     case to take the first valid day later in time."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        }
                      ],
                      "ordered": false,
                      "spread": false,
                      "start": 1,
                      "type": "list"
                    }
                  ],
                  "type": "blockquote"
                }
              ],
              "param": "roll",
              "type": "Param",
              "type_": "{'raise', 'nat', 'forward', 'following', 'backward', 'preceding', 'modifiedfollowing', 'modifiedpreceding'}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A seven-element array indicating which of Monday through Sunday are valid days. May be specified as a length-seven list or array, like [1,1,1,1,1,0,0]; a length-seven string, like '1111100'; or a string like \"Mon Tue Wed Thu Fri\", made up of 3-character abbreviations for weekdays, optionally separated by white space. Valid abbreviations are: Mon Tue Wed Thu Fri Sat Sun"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "weekmask",
              "type": "Param",
              "type_": "str or array_like of bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An array of dates to consider as invalid dates.  They may be specified in any order, and NaT (not-a-time) dates are ignored. This list is saved in a normalized form that is suited for fast calculations of valid days."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "holidays",
              "type": "Param",
              "type_": "array_like of datetime64[D], optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "busdaycalendar"
                    },
                    {
                      "type": "text",
                      "value": " object which specifies the valid days. If this parameter is provided, neither weekmask nor holidays may be provided."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "busdaycal",
              "type": "Param",
              "type_": "busdaycalendar, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If provided, this array is filled with the result."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "array of datetime64[D], optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An array with a shape from broadcasting "
                    },
                    {
                      "type": "inlineCode",
                      "value": "dates"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "offsets"
                    },
                    {
                      "type": "text",
                      "value": " together, containing the dates with offsets applied."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "array of datetime64[D]"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "First adjusts the date to fall on a valid day according to the "
            },
            {
              "type": "inlineCode",
              "value": "roll"
            },
            {
              "type": "text",
              "value": " rule, then applies offsets to the given dates counted in valid days."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "# First business day in October 2011 (not accounting for holidays)\nnp.busday_offset('2011-10', 0, roll='forward')"
      },
      {
        "type": "code",
        "value": "# Last business day in February 2012 (not accounting for holidays)\nnp.busday_offset('2012-03', -1, roll='forward')"
      },
      {
        "type": "code",
        "value": "# Third Wednesday in January 2011\nnp.busday_offset('2011-01', 2, roll='forward', weekmask='Wed')"
      },
      {
        "type": "code",
        "value": "# 2012 Mother's Day in Canada and the U.S.\nnp.busday_offset('2012-05', 1, roll='forward', weekmask='Sun')"
      },
      {
        "type": "code",
        "value": "# First business day on or after a date\nnp.busday_offset('2011-03-20', 0, roll='forward')"
      },
      {
        "type": "code",
        "value": "np.busday_offset('2011-03-22', 0, roll='forward')"
      },
      {
        "type": "code",
        "value": "# First business day after a date\nnp.busday_offset('2011-03-20', 1, roll='backward')"
      },
      {
        "type": "code",
        "value": "np.busday_offset('2011-03-22', 1, roll='backward')"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": null,
  "item_line": null,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Signature",
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "An object that specifies a custom set of valid days."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "busdaycalendar",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "busdaycalendar"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns a boolean array indicating valid days."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "is_busday",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "is_busday"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Counts how many valid days are in a half-open date range."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "busday_count",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "busday_count"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "busday_offset(dates, offsets, roll='raise', weekmask='1111100', holidays=None, busdaycal=None, out=None)"
  },
  "type": "DocBlob"
}