{
  "aliases": [
    "numpy.diag"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "See the more detailed documentation for "
            },
            {
              "type": "inlineCode",
              "value": "numpy.diagonal"
            },
            {
              "type": "text",
              "value": " if you use this function to extract a diagonal and wish to write to the resulting array; whether it returns a copy or a view depends on what version of numpy you are using."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "v",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "v"
                    },
                    {
                      "type": "text",
                      "value": " is a 2-D array, return a copy of its "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "k",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "k"
                    },
                    {
                      "type": "text",
                      "value": "-th diagonal. If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "v",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "v"
                    },
                    {
                      "type": "text",
                      "value": " is a 1-D array, return a 2-D array with "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "v",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "v"
                    },
                    {
                      "type": "text",
                      "value": " on the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "k",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "k"
                    },
                    {
                      "type": "text",
                      "value": "-th diagonal."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "v",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Diagonal in question. The default is 0. Use "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "k>0"
                    },
                    {
                      "type": "text",
                      "value": " for diagonals above the main diagonal, and "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "k<0"
                    },
                    {
                      "type": "text",
                      "value": " for diagonals below the main diagonal."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "k",
              "type": "Param",
              "type_": "int, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The extracted diagonal or constructed diagonal array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Extract a diagonal or construct a diagonal array."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "x = np.arange(9).reshape((3,3))\nx"
      },
      {
        "type": "code",
        "value": "np.diag(x)"
      },
      {
        "type": "code",
        "value": "np.diag(x, k=1)"
      },
      {
        "type": "code",
        "value": "np.diag(x, k=-1)"
      },
      {
        "type": "code",
        "value": "np.diag(np.diag(x))"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/lib/twodim_base.py",
  "item_line": 240,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return specified diagonals."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy:diagonal",
          "type": "RefInfo",
          "version": "1.24.1"
        },
        "type": "Link",
        "value": "diagonal"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Create a 2-D array with the flattened input as a diagonal."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy:diagflat",
          "type": "RefInfo",
          "version": "1.24.1"
        },
        "type": "Link",
        "value": "diagflat"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Sum along diagonals."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "trace",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "trace"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Upper triangle of an array."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "triu",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "triu"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Lower triangle of an array."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "tril",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "tril"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(v, k=0)"
  },
  "type": "DocBlob"
}