{
  "aliases": [
    "numpy.fill_diagonal"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "For an array "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "a",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "a"
            },
            {
              "type": "text",
              "value": " with "
            },
            {
              "type": "inlineCode",
              "value": "a.ndim >= 2"
            },
            {
              "type": "text",
              "value": ", the diagonal is the list of locations with indices "
            },
            {
              "type": "inlineCode",
              "value": "a[i, ..., i]"
            },
            {
              "type": "text",
              "value": " all identical. This function modifies the input array in-place, it does not return a value."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionadded 1.4.0"
                }
              ],
              "type": "admonitionTitle"
            }
          ],
          "kind": "note",
          "type": "admonition"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "This functionality can be obtained via "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "diag_indices"
            },
            {
              "type": "text",
              "value": ", but internally this version uses a much faster implementation that never constructs the indices and uses simple slicing."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Array whose diagonal is to be filled, it gets modified in-place."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "a",
              "type": "Param",
              "type_": "array, at least 2-D."
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Value(s) to write on the diagonal. If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "val",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "val"
                    },
                    {
                      "type": "text",
                      "value": " is scalar, the value is written along the diagonal. If array-like, the flattened "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "val",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "val"
                    },
                    {
                      "type": "text",
                      "value": " is written along the diagonal, repeating if necessary to fill all diagonal entries."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "val",
              "type": "Param",
              "type_": "scalar or array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "For tall matrices in NumPy version up to 1.6.2, the diagonal \"wrapped\" after N columns. You can have this behavior with this option. This affects only tall matrices."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "wrap",
              "type": "Param",
              "type_": "bool"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Fill the main diagonal of the given array of any dimensionality."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "a = np.zeros((3, 3), int)\nnp.fill_diagonal(a, 5)\na"
      },
      {
        "type": "text",
        "value": "The same function can operate on a 4-D array:"
      },
      {
        "type": "code",
        "value": "a = np.zeros((3, 3, 3, 3), int)\nnp.fill_diagonal(a, 4)"
      },
      {
        "type": "text",
        "value": "We only show a few blocks for clarity:"
      },
      {
        "type": "code",
        "value": "a[0, 0]"
      },
      {
        "type": "code",
        "value": "a[1, 1]"
      },
      {
        "type": "code",
        "value": "a[2, 2]"
      },
      {
        "type": "text",
        "value": "The wrap option affects only tall matrices:"
      },
      {
        "type": "code",
        "value": "# tall matrices no wrap\na = np.zeros((5, 3), int)\nnp.fill_diagonal(a, 4)\na"
      },
      {
        "type": "code",
        "value": "# tall matrices wrap\na = np.zeros((5, 3), int)\nnp.fill_diagonal(a, 4, wrap=True)\na"
      },
      {
        "type": "code",
        "value": "# wide matrices\na = np.zeros((3, 5), int)\nnp.fill_diagonal(a, 4, wrap=True)\na"
      },
      {
        "type": "text",
        "value": "The anti-diagonal can be filled by reversing the order of elements\nusing either `numpy.flipud` or `numpy.fliplr`."
      },
      {
        "type": "code",
        "value": "a = np.zeros((3, 3), int);\nnp.fill_diagonal(np.fliplr(a), [1,2,3])  # Horizontal flip\na"
      },
      {
        "type": "code",
        "value": "np.fill_diagonal(np.flipud(a), [1,2,3])  # Vertical flip\na"
      },
      {
        "type": "text",
        "value": "Note that the order in which the diagonal is filled varies depending\non the flip function."
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/lib/index_tricks.py",
  "item_line": 786,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "diag_indices",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "diag_indices"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "diag_indices_from",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "diag_indices_from"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(a, val, wrap=False)"
  },
  "type": "DocBlob"
}