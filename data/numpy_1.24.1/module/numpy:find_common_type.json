{
  "aliases": [
    "numpy.find_common_type"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A list of dtypes or dtype convertible objects representing arrays."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "array_types",
              "type": "Param",
              "type_": "sequence"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A list of dtypes or dtype convertible objects representing scalars."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "scalar_types",
              "type": "Param",
              "type_": "sequence"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The common data type, which is the maximum of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "array_types",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "array_types"
                    },
                    {
                      "type": "text",
                      "value": " ignoring "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "scalar_types",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "scalar_types"
                    },
                    {
                      "type": "text",
                      "value": ", unless the maximum of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "scalar_types",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "scalar_types"
                    },
                    {
                      "type": "text",
                      "value": " is of a different kind ("
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "dtype.kind"
                    },
                    {
                      "type": "text",
                      "value": "). If the kind is not understood, then None is returned."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "datatype",
              "type": "Param",
              "type_": "dtype"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Determine common type following standard coercion rules."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "np.find_common_type([], [np.int64, np.float32, complex])"
      },
      {
        "type": "code",
        "value": "np.find_common_type([np.int64, np.float32], [])"
      },
      {
        "type": "text",
        "value": "The standard casting rules ensure that a scalar cannot up-cast an\narray unless the scalar is of a fundamentally different kind of data\n(i.e. under a different hierarchy in the data type hierarchy) then\nthe array:"
      },
      {
        "type": "code",
        "value": "np.find_common_type([np.float32], [np.int64, np.float64])"
      },
      {
        "type": "text",
        "value": "Complex is of a different type, so it up-casts the float in the\n`array_types` argument:"
      },
      {
        "type": "code",
        "value": "np.find_common_type([np.float32], [complex])"
      },
      {
        "type": "text",
        "value": "Type specifier strings are convertible to dtypes and can therefore\nbe used instead of dtypes:"
      },
      {
        "type": "code",
        "value": "np.find_common_type(['f4', 'f4', 'i4'], ['c8'])"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/core/numerictypes.py",
  "item_line": 597,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "dtype",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "dtype"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy:find_common_type",
          "type": "RefInfo",
          "version": "1.24.1"
        },
        "type": "Link",
        "value": "common_type"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "can_cast",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "can_cast"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "mintypecode",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "mintypecode"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(array_types, scalar_types)"
  },
  "type": "DocBlob"
}