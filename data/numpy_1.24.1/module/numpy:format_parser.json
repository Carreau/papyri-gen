{
  "aliases": [
    "numpy.format_parser"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The converted data-type."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dtype",
              "type": "Param",
              "type_": "dtype"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "After constructing the format_parser object, the dtype attribute is the converted data-type: "
            },
            {
              "type": "inlineCode",
              "value": "dtype = format_parser(formats, names, titles).dtype"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The format description, either specified as a string with comma-separated format descriptions in the form "
                    },
                    {
                      "type": "inlineCode",
                      "value": "'f8, i4, a5'"
                    },
                    {
                      "type": "text",
                      "value": ", or a list of format description strings  in the form "
                    },
                    {
                      "type": "inlineCode",
                      "value": "['f8', 'i4', 'a5']"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "formats",
              "type": "Param",
              "type_": "str or list of str"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The field names, either specified as a comma-separated string in the form "
                    },
                    {
                      "type": "inlineCode",
                      "value": "'col1, col2, col3'"
                    },
                    {
                      "type": "text",
                      "value": ", or as a list or tuple of strings in the form "
                    },
                    {
                      "type": "inlineCode",
                      "value": "['col1', 'col2', 'col3']"
                    },
                    {
                      "type": "text",
                      "value": ". An empty list can be used, in that case default field names ('f0', 'f1', ...) are used."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "names",
              "type": "Param",
              "type_": "str or list/tuple of str"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Sequence of title strings. An empty list can be used to leave titles out."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "titles",
              "type": "Param",
              "type_": "sequence"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, align the fields by padding as the C-compiler would. Default is False."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "aligned",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If specified, all the fields will be changed to the provided byte-order.  Otherwise, the default byte-order is used. For all available string specifiers, see "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "dtype.newbyteorder"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "byteorder",
              "type": "Param",
              "type_": "str, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Class to convert formats, names, titles description to a dtype."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "np.format_parser(['<f8', '<i4', '<a5'], ['col1', 'col2', 'col3'],\n                 ['T1', 'T2', 'T3']).dtype"
      },
      {
        "type": "text",
        "value": "`names` and/or `titles` can be empty lists. If `titles` is an empty list,\ntitles will simply not appear. If `names` is empty, default field names\nwill be used."
      },
      {
        "type": "code",
        "value": "np.format_parser(['f8', 'i4', 'a5'], ['col1', 'col2', 'col3'],\n                 []).dtype"
      },
      {
        "type": "code",
        "value": "np.format_parser(['<f8', '<i4', '<a5'], [], []).dtype"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/__init__.py",
  "item_line": null,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Attributes",
    "Parameters",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "dtype",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "dtype"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "typename",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "typename"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "sctype2char",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "sctype2char"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}