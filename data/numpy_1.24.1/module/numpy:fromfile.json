{
  "aliases": [
    "numpy.fromfile"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A highly efficient way of reading binary data with a known data-type, as well as parsing simply formatted text files.  Data written using the "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "tofile"
            },
            {
              "type": "text",
              "value": " method can be read using this function."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Do not rely on the combination of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "tofile"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "numpy",
                "path": "numpy:fromfile",
                "type": "RefInfo",
                "version": "1.24.1"
              },
              "type": "Link",
              "value": "fromfile"
            },
            {
              "type": "text",
              "value": " for data storage, as the binary files generated are not platform independent.  In particular, no byte-order or data-type information is saved.  Data can be stored in the platform independent "
            },
            {
              "type": "inlineCode",
              "value": ".npy"
            },
            {
              "type": "text",
              "value": " format using "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "save"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "load"
            },
            {
              "type": "text",
              "value": " instead."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Open file object or filename."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionchanged 1.17.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    },
                    {
                      "children": [
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "pathlib.Path"
                        },
                        {
                          "type": "text",
                          "value": " objects are now accepted."
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "file",
              "type": "Param",
              "type_": "file or str or Path"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Data type of the returned array. For binary files, it is used to determine the size and byte-order of the items in the file. Most builtin numeric types are supported and extension types may be supported."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.18.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "Complex dtypes."
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "dtype",
              "type": "Param",
              "type_": "data-type"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of items to read. "
                    },
                    {
                      "type": "inlineCode",
                      "value": "-1"
                    },
                    {
                      "type": "text",
                      "value": " means all items (i.e., the complete file)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "count",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Separator between items if file is a text file. Empty (\"\") separator means the file should be treated as binary. Spaces (\" \") in the separator match zero or more whitespace characters. A separator consisting only of spaces must match at least one whitespace."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "sep",
              "type": "Param",
              "type_": "str"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The offset (in bytes) from the file's current position. Defaults to 0. Only permitted for binary files."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.17.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "offset",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Reference object to allow the creation of arrays which are not NumPy arrays. If an array-like passed in as "
                    },
                    {
                      "type": "inlineCode",
                      "value": "like"
                    },
                    {
                      "type": "text",
                      "value": " supports the "
                    },
                    {
                      "type": "inlineCode",
                      "value": "__array_function__"
                    },
                    {
                      "type": "text",
                      "value": " protocol, the result will be defined by it. In this case, it ensures the creation of an array object compatible with that passed in via this argument."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.20.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "like",
              "type": "Param",
              "type_": "array_like, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Construct an array from data in a text or binary file."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Construct an ndarray:"
      },
      {
        "type": "code",
        "value": "dt = np.dtype([('time', [('min', np.int64), ('sec', np.int64)]),\n               ('temp', float)])\nx = np.zeros((1,), dtype=dt)\nx['time']['min'] = 10; x['temp'] = 98.25\nx"
      },
      {
        "type": "text",
        "value": "Save the raw data to disk:"
      },
      {
        "type": "code",
        "value": "import tempfile\nfname = tempfile.mkstemp()[1]\nx.tofile(fname)"
      },
      {
        "type": "text",
        "value": "Read the raw data from disk:"
      },
      {
        "type": "code",
        "value": "np.fromfile(fname, dtype=dt)"
      },
      {
        "type": "text",
        "value": "The recommended way to store and load data:"
      },
      {
        "type": "code",
        "value": "np.save(fname, x)\nnp.load(fname + '.npy')"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": null,
  "item_line": null,
  "item_type": "<class 'builtin_function_or_method'>",
  "ordered_sections": [
    "Signature",
    "Summary",
    "Extended Summary",
    "Parameters",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "load",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "load"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "save",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "save"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "ndarray.tofile",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "ndarray.tofile"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "More flexible way of loading data from a text file."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "loadtxt",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "loadtxt"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "fromfile(file, dtype=float, count=-1, sep='', offset=0, *, like=None)"
  },
  "type": "DocBlob"
}