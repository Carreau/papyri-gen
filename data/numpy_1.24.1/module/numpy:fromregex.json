{
  "aliases": [
    "numpy.fromregex"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The returned array is always a structured array, and is constructed from all matches of the regular expression in the file. Groups in the regular expression are converted to fields of the structured array."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Dtypes for structured arrays can be specified in several forms, but all forms specify at least the data type and field name. For details see "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "basics.rec"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Filename or file object to read."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionchanged 1.22.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "Now accepts "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "os.PathLike"
                        },
                        {
                          "type": "text",
                          "value": " implementations."
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "file",
              "type": "Param",
              "type_": "path or file"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Regular expression used to parse the file. Groups in the regular expression correspond to fields in the dtype."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "regexp",
              "type": "Param",
              "type_": "str or regexp"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Dtype for the structured array; must be a structured datatype."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dtype",
              "type": "Param",
              "type_": "dtype or list of dtypes"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Encoding used to decode the inputfile. Does not apply to input streams."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.14.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "encoding",
              "type": "Param",
              "type_": "str, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "When "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "dtype",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "dtype"
                    },
                    {
                      "type": "text",
                      "value": " is not a valid dtype for a structured array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "TypeError"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The output array, containing the part of the content of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "file",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "file"
                    },
                    {
                      "type": "text",
                      "value": " that was matched by "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "regexp",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "regexp"
                    },
                    {
                      "type": "text",
                      "value": ". "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "output",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "output"
                    },
                    {
                      "type": "text",
                      "value": " is always a structured array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "output",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Construct an array from a text file, using regular expression parsing."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from io import StringIO\ntext = StringIO(\"1312 foo\\n1534  bar\\n444   qux\")"
      },
      {
        "type": "code",
        "value": "regexp = r\"(\\d+)\\s+(...)\"  # match [digits, whitespace, anything]\noutput = np.fromregex(text, regexp,\n                      [('num', np.int64), ('key', 'S3')])\noutput"
      },
      {
        "type": "code",
        "value": "output['num']"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/lib/npyio.py",
  "item_line": 1615,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "fromstring",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "fromstring"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "loadtxt",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "loadtxt"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(file, regexp, dtype, encoding=None)"
  },
  "type": "DocBlob"
}