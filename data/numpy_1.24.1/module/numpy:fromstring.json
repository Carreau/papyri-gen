{
  "aliases": [
    "numpy.fromstring"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A string containing the data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "string",
              "type": "Param",
              "type_": "str"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The data type of the array; default: float.  For binary input data, the data must be in exactly this format. Most builtin numeric types are supported and extension types may be supported."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.18.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "Complex dtypes."
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "dtype",
              "type": "Param",
              "type_": "data-type, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Read this number of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "dtype",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "dtype"
                    },
                    {
                      "type": "text",
                      "value": " elements from the data.  If this is negative (the default), the count will be determined from the length of the data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "count",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The string separating numbers in the data; extra whitespace between elements is also ignored."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "deprecated 1.14"
                        }
                      ],
                      "type": "admonitionTitle"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "Passing "
                        },
                        {
                          "type": "inlineCode",
                          "value": "sep=''"
                        },
                        {
                          "type": "text",
                          "value": ", the default, is deprecated since it will trigger the deprecated binary mode of this function. This mode interprets "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "string"
                        },
                        {
                          "type": "text",
                          "value": " as binary bytes, rather than ASCII text with decimal numbers, an operation which is better spelt "
                        },
                        {
                          "type": "inlineCode",
                          "value": "frombuffer(string, dtype, count)"
                        },
                        {
                          "type": "text",
                          "value": ". If "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "string"
                        },
                        {
                          "type": "text",
                          "value": " contains unicode text, the binary mode of "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "fromstring"
                        },
                        {
                          "type": "text",
                          "value": " will first encode it into bytes using utf-8, which will not produce sane results."
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "sep",
              "type": "Param",
              "type_": "str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Reference object to allow the creation of arrays which are not NumPy arrays. If an array-like passed in as "
                    },
                    {
                      "type": "inlineCode",
                      "value": "like"
                    },
                    {
                      "type": "text",
                      "value": " supports the "
                    },
                    {
                      "type": "inlineCode",
                      "value": "__array_function__"
                    },
                    {
                      "type": "text",
                      "value": " protocol, the result will be defined by it. In this case, it ensures the creation of an array object compatible with that passed in via this argument."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.20.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "like",
              "type": "Param",
              "type_": "array_like, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If the string is not the correct size to satisfy the requested "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "dtype",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "dtype"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "count",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "count"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "ValueError"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The constructed array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "arr",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A new 1-D array initialized from text data in a string."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "np.fromstring('1 2', dtype=int, sep=' ')"
      },
      {
        "type": "code",
        "value": "np.fromstring('1, 2', dtype=int, sep=',')"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": null,
  "item_line": null,
  "item_type": "<class 'builtin_function_or_method'>",
  "ordered_sections": [
    "Signature",
    "Summary",
    "Parameters",
    "Returns",
    "Raises",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "frombuffer",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "frombuffer"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "fromfile",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "fromfile"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "fromiter",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "fromiter"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "fromstring(string, dtype=float, count=-1, *, sep, like=None)"
  },
  "type": "DocBlob"
}