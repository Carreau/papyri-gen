{
  "aliases": [
    "numpy.geomspace"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This is similar to "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "logspace"
            },
            {
              "type": "text",
              "value": ", but with endpoints specified directly. Each output sample is a constant multiple of the previous."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionchanged 1.16.0"
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "Non-scalar "
                },
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "start"
                },
                {
                  "type": "text",
                  "value": " and "
                },
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "stop"
                },
                {
                  "type": "text",
                  "value": " are now supported."
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "If the inputs or dtype are complex, the output will follow a logarithmic spiral in the complex plane.  (There are an infinite number of spirals passing through two points; the output will follow the shortest such path.)"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The starting value of the sequence."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "start",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The final value of the sequence, unless "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "endpoint",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "endpoint"
                    },
                    {
                      "type": "text",
                      "value": " is False. In that case, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "num + 1"
                    },
                    {
                      "type": "text",
                      "value": " values are spaced over the interval in log-space, of which all but the last (a sequence of length "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "num",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "num"
                    },
                    {
                      "type": "text",
                      "value": ") are returned."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "stop",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of samples to generate.  Default is 50."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "num",
              "type": "Param",
              "type_": "integer, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If true, "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "stop",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "stop"
                    },
                    {
                      "type": "text",
                      "value": " is the last sample. Otherwise, it is not included. Default is True."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "endpoint",
              "type": "Param",
              "type_": "boolean, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The type of the output array.  If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "dtype",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "dtype"
                    },
                    {
                      "type": "text",
                      "value": " is not given, the data type is inferred from "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "start",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "start"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "stop",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "stop"
                    },
                    {
                      "type": "text",
                      "value": ". The inferred dtype will never be an integer; "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "float"
                    },
                    {
                      "type": "text",
                      "value": " is chosen even if the arguments would produce an array of integers."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dtype",
              "type": "Param",
              "type_": "dtype"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The axis in the result to store the samples.  Relevant only if start or stop are array-like.  By default (0), the samples will be along a new axis inserted at the beginning. Use -1 to get an axis at the end."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.16.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "axis",
              "type": "Param",
              "type_": "int, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "num",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "num"
                    },
                    {
                      "type": "text",
                      "value": " samples, equally spaced on a log scale."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "samples",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return numbers spaced evenly on a log scale (a geometric progression)."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "np.geomspace(1, 1000, num=4)"
      },
      {
        "type": "code",
        "value": "np.geomspace(1, 1000, num=3, endpoint=False)"
      },
      {
        "type": "code",
        "value": "np.geomspace(1, 1000, num=4, endpoint=False)"
      },
      {
        "type": "code",
        "value": "np.geomspace(1, 256, num=9)"
      },
      {
        "type": "text",
        "value": "Note that the above may not produce exact integers:"
      },
      {
        "type": "code",
        "value": "np.geomspace(1, 256, num=9, dtype=int)"
      },
      {
        "type": "code",
        "value": "np.around(np.geomspace(1, 256, num=9)).astype(int)"
      },
      {
        "type": "text",
        "value": "Negative, decreasing, and complex inputs are allowed:"
      },
      {
        "type": "code",
        "value": "np.geomspace(1000, 1, num=4)"
      },
      {
        "type": "code",
        "value": "np.geomspace(-1000, -1, num=4)"
      },
      {
        "type": "code",
        "value": "np.geomspace(1j, 1000j, num=4)  # Straight line"
      },
      {
        "type": "code",
        "value": "np.geomspace(-1+0j, 1+0j, num=5)  # Circle"
      },
      {
        "type": "text",
        "value": "Graphical illustration of `endpoint` parameter:"
      },
      {
        "type": "code",
        "value": "import matplotlib.pyplot as plt\nN = 10\ny = np.zeros(N)\nplt.semilogx(np.geomspace(1, 1000, N, endpoint=True), y + 1, 'o')"
      },
      {
        "type": "code",
        "value": "plt.semilogx(np.geomspace(1, 1000, N, endpoint=False), y + 2, 'o')"
      },
      {
        "type": "code",
        "value": "plt.axis([0.5, 2000, 0, 3])"
      },
      {
        "type": "code",
        "value": "plt.grid(True, color='0.7', linestyle='-', which='both', axis='both')\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "numpy",
          "path": "fig-numpy:geomspace-0-e3286d7d.png",
          "type": "RefInfo",
          "version": "1.24.1"
        }
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/core/function_base.py",
  "item_line": 293,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Similar to geomspace, but with endpoints specified using log and base."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "logspace",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "logspace"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Similar to geomspace, but with arithmetic instead of geometric progression."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "linspace",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "linspace"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Similar to linspace, with the step size specified instead of the number of samples."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "arange",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "arange"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "ref"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "how-to-partition",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "how-to-partition"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(start, stop, num=50, endpoint=True, dtype=None, axis=0)"
  },
  "type": "DocBlob"
}