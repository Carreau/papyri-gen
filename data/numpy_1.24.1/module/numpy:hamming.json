{
  "aliases": [
    "numpy.hamming"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The Hamming window is a taper formed by using a weighted cosine."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The Hamming window is defined as"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "w(n) = 0.54 - 0.46\\cos\\left(\\frac{2\\pi{n}}{M-1}\\right)\\qquad 0 \\leq n \\leq M-1"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The Hamming was named for R. W. Hamming, an associate of J. W. Tukey and is described in Blackman and Tukey. It was recommended for smoothing the truncated autocovariance function in the time domain. Most references to the Hamming window come from the signal processing literature, where it is used as one of many windowing functions for smoothing values.  It is also known as an apodization (which means \"removing the foot\", i.e. smoothing discontinuities at the beginning and end of the sampled signal) or tapering function."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of points in the output window. If zero or less, an empty array is returned."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "M",
              "type": "Param",
              "type_": "int"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The window, with the maximum value normalized to one (the value one appears only if the number of samples is odd)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return the Hamming window."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "np.hamming(12)"
      },
      {
        "type": "text",
        "value": "Plot the window and the frequency response:"
      },
      {
        "type": "code",
        "value": "import matplotlib.pyplot as plt\nfrom numpy.fft import fft, fftshift\nwindow = np.hamming(51)\nplt.plot(window)"
      },
      {
        "type": "code",
        "value": "plt.title(\"Hamming window\")"
      },
      {
        "type": "code",
        "value": "plt.ylabel(\"Amplitude\")"
      },
      {
        "type": "code",
        "value": "plt.xlabel(\"Sample\")"
      },
      {
        "type": "code",
        "value": "plt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "numpy",
          "path": "fig-numpy:hamming-0-49fa6f8f.png",
          "type": "RefInfo",
          "version": "1.24.1"
        }
      },
      {
        "type": "code",
        "value": "plt.figure()"
      },
      {
        "type": "code",
        "value": "A = fft(window, 2048) / 25.5\nmag = np.abs(fftshift(A))\nfreq = np.linspace(-0.5, 0.5, len(A))\nresponse = 20 * np.log10(mag)\nresponse = np.clip(response, -100, 100)\nplt.plot(freq, response)"
      },
      {
        "type": "code",
        "value": "plt.title(\"Frequency response of Hamming window\")"
      },
      {
        "type": "code",
        "value": "plt.ylabel(\"Magnitude [dB]\")"
      },
      {
        "type": "code",
        "value": "plt.xlabel(\"Normalized frequency [cycles per sample]\")"
      },
      {
        "type": "code",
        "value": "plt.axis('tight')"
      },
      {
        "type": "code",
        "value": "plt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "numpy",
          "path": "fig-numpy:hamming-1-65229539.png",
          "type": "RefInfo",
          "version": "1.24.1"
        }
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/lib/function_base.py",
  "item_line": 3179,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "bartlett",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "bartlett"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "blackman",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "blackman"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "hanning",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "hanning"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "kaiser",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "kaiser"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(M)"
  },
  "type": "DocBlob"
}