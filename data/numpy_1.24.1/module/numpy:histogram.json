{
  "aliases": [
    "numpy.histogram"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "All but the last (righthand-most) bin is half-open.  In other words, if "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "bins",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "bins"
            },
            {
              "type": "text",
              "value": " is    "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "[1, 2, 3, 4]"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "then the first bin is "
            },
            {
              "type": "inlineCode",
              "value": "[1, 2)"
            },
            {
              "type": "text",
              "value": " (including 1, but excluding 2) and the second "
            },
            {
              "type": "inlineCode",
              "value": "[2, 3)"
            },
            {
              "type": "text",
              "value": ".  The last bin, however, is "
            },
            {
              "type": "inlineCode",
              "value": "[3, 4]"
            },
            {
              "type": "text",
              "value": ", which "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "includes"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " 4."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Input data. The histogram is computed over the flattened array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "a",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "bins",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "bins"
                    },
                    {
                      "type": "text",
                      "value": " is an int, it defines the number of equal-width bins in the given range (10, by default). If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "bins",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "bins"
                    },
                    {
                      "type": "text",
                      "value": " is a sequence, it defines a monotonically increasing array of bin edges, including the rightmost edge, allowing for non-uniform bin widths."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.11.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "bins",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "bins"
                    },
                    {
                      "type": "text",
                      "value": " is a string, it defines the method used to calculate the optimal bin width, as defined by "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "numpy",
                        "path": "numpy:histogram_bin_edges",
                        "type": "RefInfo",
                        "version": "1.24.1"
                      },
                      "type": "Link",
                      "value": "histogram_bin_edges"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "bins",
              "type": "Param",
              "type_": "int or sequence of scalars or str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The lower and upper range of the bins.  If not provided, range is simply "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(a.min(), a.max())"
                    },
                    {
                      "type": "text",
                      "value": ".  Values outside the range are ignored. The first element of the range must be less than or equal to the second. "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "range",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "range"
                    },
                    {
                      "type": "text",
                      "value": " affects the automatic bin computation as well. While bin width is computed to be optimal based on the actual data within "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "range",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "range"
                    },
                    {
                      "type": "text",
                      "value": ", the bin count will fill the entire range including portions containing no data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "range",
              "type": "Param",
              "type_": "(float, float), optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An array of weights, of the same shape as "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": ".  Each value in "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": " only contributes its associated weight towards the bin count (instead of 1). If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "density",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "density"
                    },
                    {
                      "type": "text",
                      "value": " is True, the weights are normalized, so that the integral of the density over the range remains 1."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "weights",
              "type": "Param",
              "type_": "array_like, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "False"
                    },
                    {
                      "type": "text",
                      "value": ", the result will contain the number of samples in each bin. If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "True"
                    },
                    {
                      "type": "text",
                      "value": ", the result is the value of the probability "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "density"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " function at the bin, normalized such that the "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "integral"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " over the range is 1. Note that the sum of the histogram values will not be equal to 1 unless bins of unity width are chosen; it is not a probability "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "mass"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " function."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "density",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The values of the histogram. See "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "density",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "density"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "weights",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "weights"
                    },
                    {
                      "type": "text",
                      "value": " for a description of the possible semantics."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "hist",
              "type": "Param",
              "type_": "array"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Return the bin edges "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(length(hist)+1)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "bin_edges",
              "type": "Param",
              "type_": "array of dtype float"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Compute the histogram of a dataset."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "np.histogram([1, 2, 1], bins=[0, 1, 2, 3])"
      },
      {
        "type": "code",
        "value": "np.histogram(np.arange(4), bins=np.arange(5), density=True)"
      },
      {
        "type": "code",
        "value": "np.histogram([[1, 2, 1], [1, 0, 1]], bins=[0,1,2,3])"
      },
      {
        "type": "code",
        "value": "a = np.arange(5)\nhist, bin_edges = np.histogram(a, density=True)\nhist"
      },
      {
        "type": "code",
        "value": "hist.sum()"
      },
      {
        "type": "code",
        "value": "np.sum(hist * np.diff(bin_edges))"
      },
      {
        "type": "text",
        "value": ".. versionadded:: 1.11.0"
      },
      {
        "type": "text",
        "value": "Automated Bin Selection Methods example, using 2 peak random data\nwith 2000 points:"
      },
      {
        "type": "code",
        "value": "import matplotlib.pyplot as plt\nrng = np.random.RandomState(10)  # deterministic random data\na = np.hstack((rng.normal(size=1000),\n               rng.normal(loc=5, scale=2, size=1000)))\n_ = plt.hist(a, bins='auto')  # arguments are passed to np.histogram\nplt.title(\"Histogram with 'auto' bins\")"
      },
      {
        "type": "code",
        "value": "plt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "numpy",
          "path": "fig-numpy:histogram-0-2a23db89.png",
          "type": "RefInfo",
          "version": "1.24.1"
        }
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/lib/histograms.py",
  "item_line": 678,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy:histogramdd",
          "type": "RefInfo",
          "version": "1.24.1"
        },
        "type": "Link",
        "value": "histogramdd"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "bincount",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "bincount"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "searchsorted",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "searchsorted"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "digitize",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "digitize"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy:histogram_bin_edges",
          "type": "RefInfo",
          "version": "1.24.1"
        },
        "type": "Link",
        "value": "histogram_bin_edges"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(a, bins=10, range=None, density=None, weights=None)"
  },
  "type": "DocBlob"
}