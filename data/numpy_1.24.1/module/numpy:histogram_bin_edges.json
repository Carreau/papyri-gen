{
  "aliases": [
    "numpy.histogram_bin_edges"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The methods to estimate the optimal number of bins are well founded in literature, and are inspired by the choices R provides for histogram visualisation. Note that having the number of bins proportional to "
            },
            {
              "type": "inlineMath",
              "value": "n^{1/3}"
            },
            {
              "type": "text",
              "value": " is asymptotically optimal, which is why it appears in most estimators. These are simply plug-in methods that give good starting points for number of bins. In the equations below, "
            },
            {
              "type": "inlineMath",
              "value": "h"
            },
            {
              "type": "text",
              "value": " is the binwidth and "
            },
            {
              "type": "inlineMath",
              "value": "n_h"
            },
            {
              "type": "text",
              "value": " is the number of bins. All estimators that compute bin counts are recast to bin width using the "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "ptp"
            },
            {
              "type": "text",
              "value": " of the data. The final bin count is obtained from "
            },
            {
              "type": "inlineCode",
              "value": "np.round(np.ceil(range / h))"
            },
            {
              "type": "text",
              "value": ". The final bin width is often less than what is returned by the estimators below."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "dd": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A compromise to get a good value. For small datasets the Sturges     value will usually be chosen, while larger datasets will usually     default to FD.  Avoids the overly conservative behaviour of FD     and Sturges for small and large datasets respectively.     Switchover point is usually "
                    },
                    {
                      "type": "inlineMath",
                      "value": "a.size \\approx 1000"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "dt": {
                "children": [
                  {
                    "type": "text",
                    "value": "'auto' (maximum of the 'sturges' and 'fd' estimators)"
                  }
                ],
                "type": "paragraph"
              },
              "type": "DefListItem"
            },
            {
              "dd": [
                {
                  "type": "math",
                  "value": "h = 2 \\frac{IQR}{n^{1/3}}"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The binwidth is proportional to the interquartile range (IQR)     and inversely proportional to cube root of a.size. Can be too     conservative for small datasets, but is quite good for large     datasets. The IQR is very robust to outliers."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "dt": {
                "children": [
                  {
                    "type": "text",
                    "value": "'fd' (Freedman Diaconis Estimator)"
                  }
                ],
                "type": "paragraph"
              },
              "type": "DefListItem"
            },
            {
              "dd": [
                {
                  "type": "math",
                  "value": "h = \\sigma \\sqrt[3]{\\frac{24 \\sqrt{\\pi}}{n}}"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The binwidth is proportional to the standard deviation of the     data and inversely proportional to cube root of "
                    },
                    {
                      "type": "inlineCode",
                      "value": "x.size"
                    },
                    {
                      "type": "text",
                      "value": ". Can     be too conservative for small datasets, but is quite good for     large datasets. The standard deviation is not very robust to     outliers. Values are very similar to the Freedman-Diaconis     estimator in the absence of outliers."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "dt": {
                "children": [
                  {
                    "type": "text",
                    "value": "'scott'"
                  }
                ],
                "type": "paragraph"
              },
              "type": "DefListItem"
            },
            {
              "dd": [
                {
                  "type": "math",
                  "value": "n_h = 2n^{1/3}"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The number of bins is only proportional to cube root of     "
                    },
                    {
                      "type": "inlineCode",
                      "value": "a.size"
                    },
                    {
                      "type": "text",
                      "value": ". It tends to overestimate the number of bins and it     does not take into account data variability."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "dt": {
                "children": [
                  {
                    "type": "text",
                    "value": "'rice'"
                  }
                ],
                "type": "paragraph"
              },
              "type": "DefListItem"
            },
            {
              "dd": [
                {
                  "type": "math",
                  "value": "n_h = \\log _{2}(n) + 1"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The number of bins is the base 2 log of "
                    },
                    {
                      "type": "inlineCode",
                      "value": "a.size"
                    },
                    {
                      "type": "text",
                      "value": ".  This     estimator assumes normality of data and is too conservative for     larger, non-normal datasets. This is the default method in R's     "
                    },
                    {
                      "type": "inlineCode",
                      "value": "hist"
                    },
                    {
                      "type": "text",
                      "value": " method."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "dt": {
                "children": [
                  {
                    "type": "text",
                    "value": "'sturges'"
                  }
                ],
                "type": "paragraph"
              },
              "type": "DefListItem"
            },
            {
              "dd": [
                {
                  "type": "math",
                  "value": "n_h = 1 + \\log_{2}(n) +\\log_{2}\\left(1 + \\frac{|g_1|}{\\sigma_{g_1}}\\right)"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "g_1 = mean\\left[\\left(\\frac{x - \\mu}{\\sigma}\\right)^3\\right]"
                        }
                      ],
                      "type": "paragraph"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "\\sigma_{g_1} = \\sqrt{\\frac{6(n - 2)}{(n + 1)(n + 3)}}"
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "type": "blockquote"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An improved version of Sturges' formula that produces better     estimates for non-normal datasets. This estimator attempts to     account for the skew of the data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "dt": {
                "children": [
                  {
                    "type": "text",
                    "value": "'doane'"
                  }
                ],
                "type": "paragraph"
              },
              "type": "DefListItem"
            },
            {
              "dd": [
                {
                  "type": "math",
                  "value": "n_h = \\sqrt n"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The simplest and fastest estimator. Only takes into account the     data size."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "dt": {
                "children": [
                  {
                    "type": "text",
                    "value": "'sqrt'"
                  }
                ],
                "type": "paragraph"
              },
              "type": "DefListItem"
            }
          ],
          "type": "DefList"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Input data. The histogram is computed over the flattened array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "a",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "bins",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "bins"
                    },
                    {
                      "type": "text",
                      "value": " is an int, it defines the number of equal-width bins in the given range (10, by default). If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "bins",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "bins"
                    },
                    {
                      "type": "text",
                      "value": " is a sequence, it defines the bin edges, including the rightmost edge, allowing for non-uniform bin widths."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "bins",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "bins"
                    },
                    {
                      "type": "text",
                      "value": " is a string from the list below, "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "numpy",
                        "path": "numpy:histogram_bin_edges",
                        "type": "RefInfo",
                        "version": "1.24.1"
                      },
                      "type": "Link",
                      "value": "histogram_bin_edges"
                    },
                    {
                      "type": "text",
                      "value": " will use the method chosen to calculate the optimal bin width and consequently the number of bins (see "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "Notes"
                    },
                    {
                      "type": "text",
                      "value": " for more detail on the estimators) from the data that falls within the requested range. While the bin width will be optimal for the actual data in the range, the number of bins will be computed to fill the entire range, including the empty portions. For visualisation, using the 'auto' option is suggested. Weighted data is not supported for automated bin size selection."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "Maximum of the 'sturges' and 'fd' estimators. Provides good     all around performance."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "'auto'"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "Robust (resilient to outliers) estimator that takes into     account data variability and data size."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "'fd' (Freedman Diaconis Estimator)"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "An improved version of Sturges' estimator that works better     with non-normal datasets."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "'doane'"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "Less robust estimator that takes into account data variability     and data size."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "'scott'"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "Estimator based on leave-one-out cross-validation estimate of     the integrated squared error. Can be regarded as a generalization     of Scott's rule."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "'stone'"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "Estimator does not take variability into account, only data     size. Commonly overestimates number of bins required."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "'rice'"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "R's default method, only accounts for data size. Only     optimal for gaussian data and underestimates number of bins     for large non-gaussian datasets."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "'sturges'"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "Square root (of data size) estimator, used by Excel and     other programs for its speed and simplicity."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "'sqrt'"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    }
                  ],
                  "type": "DefList"
                }
              ],
              "param": "bins",
              "type": "Param",
              "type_": "int or sequence of scalars or str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The lower and upper range of the bins.  If not provided, range is simply "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(a.min(), a.max())"
                    },
                    {
                      "type": "text",
                      "value": ".  Values outside the range are ignored. The first element of the range must be less than or equal to the second. "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "range",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "range"
                    },
                    {
                      "type": "text",
                      "value": " affects the automatic bin computation as well. While bin width is computed to be optimal based on the actual data within "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "range",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "range"
                    },
                    {
                      "type": "text",
                      "value": ", the bin count will fill the entire range including portions containing no data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "range",
              "type": "Param",
              "type_": "(float, float), optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An array of weights, of the same shape as "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": ".  Each value in "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": " only contributes its associated weight towards the bin count (instead of 1). This is currently not used by any of the bin estimators, but may be in the future."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "weights",
              "type": "Param",
              "type_": "array_like, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The edges to pass into "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "numpy",
                        "path": "numpy:histogram_bin_edges",
                        "type": "RefInfo",
                        "version": "1.24.1"
                      },
                      "type": "Link",
                      "value": "histogram"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "bin_edges",
              "type": "Param",
              "type_": "array of dtype float"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Function to calculate only the edges of the bins used by the "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "numpy",
                "path": "numpy:histogram_bin_edges",
                "type": "RefInfo",
                "version": "1.24.1"
              },
              "type": "Link",
              "value": "histogram"
            },
            {
              "type": "text",
              "value": " function."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "arr = np.array([0, 0, 0, 1, 2, 3, 3, 4, 5])\nnp.histogram_bin_edges(arr, bins='auto', range=(0, 1))"
      },
      {
        "type": "code",
        "value": "np.histogram_bin_edges(arr, bins=2)"
      },
      {
        "type": "text",
        "value": "For consistency with histogram, an array of pre-computed bins is\npassed through unmodified:"
      },
      {
        "type": "code",
        "value": "np.histogram_bin_edges(arr, [1, 2])"
      },
      {
        "type": "text",
        "value": "This function allows one set of bins to be computed, and reused across\nmultiple histograms:"
      },
      {
        "type": "code",
        "value": "shared_bins = np.histogram_bin_edges(arr, bins='auto')\nshared_bins"
      },
      {
        "type": "code",
        "value": "group_id = np.array([0, 1, 1, 0, 1, 1, 0, 1, 1])\nhist_0, _ = np.histogram(arr[group_id == 0], bins=shared_bins)\nhist_1, _ = np.histogram(arr[group_id == 1], bins=shared_bins)"
      },
      {
        "type": "code",
        "value": "hist_0; hist_1"
      },
      {
        "type": "text",
        "value": "Which gives more easily comparable results than using separate bins for\neach histogram:"
      },
      {
        "type": "code",
        "value": "hist_0, bins_0 = np.histogram(arr[group_id == 0], bins='auto')\nhist_1, bins_1 = np.histogram(arr[group_id == 1], bins='auto')\nhist_0; hist_1"
      },
      {
        "type": "code",
        "value": "bins_0; bins_1"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/lib/histograms.py",
  "item_line": 470,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy:histogram_bin_edges",
          "type": "RefInfo",
          "version": "1.24.1"
        },
        "type": "Link",
        "value": "histogram"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(a, bins=10, range=None, weights=None)"
  },
  "type": "DocBlob"
}