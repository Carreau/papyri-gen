{
  "aliases": [
    "numpy.indices"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Compute an array where the subarrays contain index values 0, 1, ... varying only along the corresponding axis."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The output shape in the dense case is obtained by prepending the number of dimensions in front of the tuple of dimensions, i.e. if "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "dimensions",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "dimensions"
            },
            {
              "type": "text",
              "value": " is a tuple "
            },
            {
              "type": "inlineCode",
              "value": "(r0, ..., rN-1)"
            },
            {
              "type": "text",
              "value": " of length "
            },
            {
              "type": "inlineCode",
              "value": "N"
            },
            {
              "type": "text",
              "value": ", the output shape is "
            },
            {
              "type": "inlineCode",
              "value": "(N, r0, ..., rN-1)"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The subarrays "
            },
            {
              "type": "inlineCode",
              "value": "grid[k]"
            },
            {
              "type": "text",
              "value": " contains the N-D array of indices along the "
            },
            {
              "type": "inlineCode",
              "value": "k-th"
            },
            {
              "type": "text",
              "value": " axis. Explicitly      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "grid[k, i0, i1, ..., iN-1] = ik"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The shape of the grid."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dimensions",
              "type": "Param",
              "type_": "sequence of ints"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Data type of the result."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dtype",
              "type": "Param",
              "type_": "dtype, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Return a sparse representation of the grid instead of a dense representation. Default is False."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.17"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "sparse",
              "type": "Param",
              "type_": "boolean, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "Returns one array of grid indices,     "
                            },
                            {
                              "type": "inlineCode",
                              "value": "grid.shape = (len(dimensions),) + tuple(dimensions)"
                            },
                            {
                              "type": "text",
                              "value": "."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "If sparse is False:"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "Returns a tuple of arrays, with     "
                            },
                            {
                              "type": "inlineCode",
                              "value": "grid[i].shape = (1, ..., 1, dimensions[i], 1, ..., 1)"
                            },
                            {
                              "type": "text",
                              "value": " with     dimensions[i] in the ith place"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "If sparse is True:"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    }
                  ],
                  "type": "DefList"
                }
              ],
              "param": "grid",
              "type": "Param",
              "type_": "one ndarray or tuple of ndarrays"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return an array representing the indices of a grid."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "grid = np.indices((2, 3))\ngrid.shape"
      },
      {
        "type": "code",
        "value": "grid[0]        # row indices"
      },
      {
        "type": "code",
        "value": "grid[1]        # column indices"
      },
      {
        "type": "text",
        "value": "The indices can be used as an index into an array."
      },
      {
        "type": "code",
        "value": "x = np.arange(20).reshape(5, 4)\nrow, col = np.indices((2, 3))\nx[row, col]"
      },
      {
        "type": "text",
        "value": "Note that it would be more straightforward in the above example to\nextract the required elements directly with ``x[:2, :3]``."
      },
      {
        "type": "text",
        "value": "If sparse is set to true, the grid will be returned in a sparse\nrepresentation."
      },
      {
        "type": "code",
        "value": "i, j = np.indices((2, 3), sparse=True)\ni.shape"
      },
      {
        "type": "code",
        "value": "j.shape"
      },
      {
        "type": "code",
        "value": "i        # row indices"
      },
      {
        "type": "code",
        "value": "j        # column indices"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/core/numeric.py",
  "item_line": 1691,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "mgrid",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "mgrid"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "ogrid",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "ogrid"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "meshgrid",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "meshgrid"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(dimensions, dtype=<class 'int'>, sparse=False)"
  },
  "type": "DocBlob"
}