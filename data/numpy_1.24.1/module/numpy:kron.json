{
  "aliases": [
    "numpy.kron"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Computes the Kronecker product, a composite array made of blocks of the second array scaled by the first."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The function assumes that the number of dimensions of "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "a",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "a"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "b",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "b"
            },
            {
              "type": "text",
              "value": " are the same, if necessary prepending the smallest with ones. If "
            },
            {
              "type": "inlineCode",
              "value": "a.shape = (r0,r1,..,rN)"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineCode",
              "value": "b.shape = (s0,s1,...,sN)"
            },
            {
              "type": "text",
              "value": ", the Kronecker product has shape "
            },
            {
              "type": "inlineCode",
              "value": "(r0*s0, r1*s1, ..., rN*SN)"
            },
            {
              "type": "text",
              "value": ". The elements are products of elements from "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "a",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "a"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "b",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "b"
            },
            {
              "type": "text",
              "value": ", organized explicitly by      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "kron(a,b)[k0,k1,...,kN] = a[i0,i1,...,iN] * b[j0,j1,...,jN]"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "where      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "kt = it * st + jt,  t = 0,...,N"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "In the common 2-D case (N=1), the block structure can be visualized      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "[[ a[0,0]*b,   a[0,1]*b,  ... , a[0,-1]*b  ],\n [  ...                              ...   ],\n [ a[-1,0]*b,  a[-1,1]*b, ... , a[-1,-1]*b ]]"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "a, b",
              "type": "Param",
              "type_": "array_like"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "out",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Kronecker product of two arrays."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "np.kron([1,10,100], [5,6,7])"
      },
      {
        "type": "code",
        "value": "np.kron([5,6,7], [1,10,100])"
      },
      {
        "type": "code",
        "value": "np.kron(np.eye(2), np.ones((2,2)))"
      },
      {
        "type": "code",
        "value": "a = np.arange(100).reshape((2,5,2,5))\nb = np.arange(24).reshape((2,3,4))\nc = np.kron(a,b)\nc.shape"
      },
      {
        "type": "code",
        "value": "I = (1,3,0,2)\nJ = (0,2,1)\nJ1 = (0,) + J             # extend to ndim=4\nS1 = (1,) + b.shape\nK = tuple(np.array(I) * np.array(S1) + np.array(J1))\nc[K] == a[I]*b[J]"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/lib/shape_base.py",
  "item_line": 1073,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "The outer product"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "outer",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "outer"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(a, b)"
  },
  "type": "DocBlob"
}