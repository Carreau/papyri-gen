{
  "aliases": [
    "numpy.lexsort"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Given multiple sorting keys, which can be interpreted as columns in a spreadsheet, lexsort returns an array of integer indices that describes the sort order by multiple columns. The last key in the sequence is used for the primary sort order, the second-to-last key for the secondary sort order, and so on. The keys argument must be a sequence of objects that can be converted to arrays of the same shape. If a 2D array is provided for the keys argument, its rows are interpreted as the sorting keys and sorting is according to the last row, second last row etc."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "k"
                    },
                    {
                      "type": "text",
                      "value": " different \"columns\" to be sorted.  The last column (or row if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "keys",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "keys"
                    },
                    {
                      "type": "text",
                      "value": " is a 2D array) is the primary sort key."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "keys",
              "type": "Param",
              "type_": "(k, N) array or tuple containing k (N,)-shaped sequences"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Axis to be indirectly sorted.  By default, sort over the last axis."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axis",
              "type": "Param",
              "type_": "int, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Array of indices that sort the keys along the specified axis."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "indices",
              "type": "Param",
              "type_": "(N,) ndarray of ints"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Perform an indirect stable sort using a sequence of keys."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Sort names: first by surname, then by name."
      },
      {
        "type": "code",
        "value": "surnames =    ('Hertz',    'Galilei', 'Hertz')\nfirst_names = ('Heinrich', 'Galileo', 'Gustav')\nind = np.lexsort((first_names, surnames))\nind"
      },
      {
        "type": "code",
        "value": "[surnames[i] + \", \" + first_names[i] for i in ind]"
      },
      {
        "type": "text",
        "value": "Sort two columns of numbers:"
      },
      {
        "type": "code",
        "value": "a = [1,5,1,4,3,4,4] # First column\nb = [9,4,0,4,0,2,1] # Second column\nind = np.lexsort((b,a)) # Sort by a, then by b\nind"
      },
      {
        "type": "code",
        "value": "[(a[i],b[i]) for i in ind]"
      },
      {
        "type": "text",
        "value": "Note that sorting is first according to the elements of ``a``.\nSecondary sorting is according to the elements of ``b``."
      },
      {
        "type": "text",
        "value": "A normal ``argsort`` would have yielded:"
      },
      {
        "type": "code",
        "value": "[(a[i],b[i]) for i in np.argsort(a)]"
      },
      {
        "type": "text",
        "value": "Structured arrays are sorted lexically by ``argsort``:"
      },
      {
        "type": "code",
        "value": "x = np.array([(1,9), (5,4), (1,0), (4,4), (3,0), (4,2), (4,1)],\n             dtype=np.dtype([('x', int), ('y', int)]))"
      },
      {
        "type": "code",
        "value": "np.argsort(x) # or np.argsort(x, order=('x', 'y'))"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": null,
  "item_line": null,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Signature",
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Indirect sort."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "argsort",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "argsort"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "In-place sort."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "ndarray.sort",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "ndarray.sort"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return a sorted copy of an array."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy:lexsort",
          "type": "RefInfo",
          "version": "1.24.1"
        },
        "type": "Link",
        "value": "sort"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "lexsort(keys, axis=-1)"
  },
  "type": "DocBlob"
}