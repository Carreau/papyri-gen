{
  "aliases": [
    "numpy.mask_indices"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Assume "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "mask_func",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "mask_func"
            },
            {
              "type": "text",
              "value": " is a function that, for a square array a of size "
            },
            {
              "type": "inlineCode",
              "value": "(n, n)"
            },
            {
              "type": "text",
              "value": " with a possible offset argument "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "k",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "k"
            },
            {
              "type": "text",
              "value": ", when called as "
            },
            {
              "type": "inlineCode",
              "value": "mask_func(a, k)"
            },
            {
              "type": "text",
              "value": " returns a new array with zeros in certain locations (functions like "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "triu"
            },
            {
              "type": "text",
              "value": " or "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "tril"
            },
            {
              "type": "text",
              "value": " do precisely this). Then this function returns the indices where the non-zero values would be located."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionadded 1.4.0"
                }
              ],
              "type": "admonitionTitle"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The returned indices will be valid to access arrays of shape (n, n)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "n",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A function whose call signature is similar to that of "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "triu"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "tril"
                    },
                    {
                      "type": "text",
                      "value": ". That is, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "mask_func(x, k)"
                    },
                    {
                      "type": "text",
                      "value": " returns a boolean array, shaped like "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": ". "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "k",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "k"
                    },
                    {
                      "type": "text",
                      "value": " is an optional argument to the function."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "mask_func",
              "type": "Param",
              "type_": "callable"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An optional argument which is passed through to "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "mask_func",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "mask_func"
                    },
                    {
                      "type": "text",
                      "value": ". Functions like "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "triu"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "tril"
                    },
                    {
                      "type": "text",
                      "value": " take a second argument that is interpreted as an offset."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "k",
              "type": "Param",
              "type_": "scalar"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "n",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "n"
                    },
                    {
                      "type": "text",
                      "value": " arrays of indices corresponding to the locations where "
                    },
                    {
                      "type": "inlineCode",
                      "value": "mask_func(np.ones((n, n)), k)"
                    },
                    {
                      "type": "text",
                      "value": " is True."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "indices",
              "type": "Param",
              "type_": "tuple of arrays."
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return the indices to access (n, n) arrays, given a masking function."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "These are the indices that would allow you to access the upper triangular\npart of any 3x3 array:"
      },
      {
        "type": "code",
        "value": "iu = np.mask_indices(3, np.triu)"
      },
      {
        "type": "text",
        "value": "For example, if `a` is a 3x3 array:"
      },
      {
        "type": "code",
        "value": "a = np.arange(9).reshape(3, 3)\na"
      },
      {
        "type": "code",
        "value": "a[iu]"
      },
      {
        "type": "text",
        "value": "An offset can be passed also to the masking function.  This gets us the\nindices starting on the first diagonal right of the main one:"
      },
      {
        "type": "code",
        "value": "iu1 = np.mask_indices(3, np.triu, 1)"
      },
      {
        "type": "text",
        "value": "with which we now extract only three elements:"
      },
      {
        "type": "code",
        "value": "a[iu1]"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/lib/twodim_base.py",
  "item_line": 824,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "triu",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "triu"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "tril",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "tril"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "triu_indices",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "triu_indices"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "tril_indices",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "tril_indices"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(n, mask_func, k=0)"
  },
  "type": "DocBlob"
}