{
  "aliases": [
    "numpy.mean"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns the average of the array elements.  The average is taken over the flattened array by default, otherwise over the specified axis. "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "float64"
            },
            {
              "type": "text",
              "value": " intermediate and return values are used for integer inputs."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The arithmetic mean is the sum of the elements along the axis divided by the number of elements."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Note that for floating-point input, the mean is computed using the same precision the input has.  Depending on the input data, this can cause the results to be inaccurate, especially for "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "float32"
            },
            {
              "type": "text",
              "value": " (see example below).  Specifying a higher-precision accumulator using the "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "dtype",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "dtype"
            },
            {
              "type": "text",
              "value": " keyword can alleviate this issue."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "By default, "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "float16"
            },
            {
              "type": "text",
              "value": " results are computed using "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "float32"
            },
            {
              "type": "text",
              "value": " intermediates for extra precision."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Array containing numbers whose mean is desired. If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": " is not an array, a conversion is attempted."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "a",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Axis or axes along which the means are computed. The default is to compute the mean of the flattened array."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.7.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If this is a tuple of ints, a mean is performed over multiple axes, instead of a single axis or all the axes as before."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axis",
              "type": "Param",
              "type_": "None or int or tuple of ints, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Type to use in computing the mean.  For integer inputs, the default is "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "float64"
                    },
                    {
                      "type": "text",
                      "value": "; for floating point inputs, it is the same as the input dtype."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dtype",
              "type": "Param",
              "type_": "data-type, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Alternate output array in which to place the result.  The default is "
                    },
                    {
                      "type": "inlineCode",
                      "value": "None"
                    },
                    {
                      "type": "text",
                      "value": "; if provided, it must have the same shape as the expected output, but the type will be cast if necessary. See "
                    },
                    {
                      "type": "inlineCode",
                      "value": "ufuncs-output-type"
                    },
                    {
                      "type": "text",
                      "value": " for more details."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "ndarray, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If this is set to True, the axes which are reduced are left in the result as dimensions with size one. With this option, the result will broadcast correctly against the input array."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If the default value is passed, then "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "keepdims",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "keepdims"
                    },
                    {
                      "type": "text",
                      "value": " will not be passed through to the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "numpy",
                        "path": "numpy:mean",
                        "type": "RefInfo",
                        "version": "1.24.1"
                      },
                      "type": "Link",
                      "value": "mean"
                    },
                    {
                      "type": "text",
                      "value": " method of sub-classes of "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "ndarray"
                    },
                    {
                      "type": "text",
                      "value": ", however any non-default value will be.  If the sub-class' method does not implement "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "keepdims",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "keepdims"
                    },
                    {
                      "type": "text",
                      "value": " any exceptions will be raised."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "keepdims",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Elements to include in the mean. See "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "~numpy.ufunc.reduce"
                    },
                    {
                      "type": "text",
                      "value": " for details."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.20.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "where",
              "type": "Param",
              "type_": "array_like of bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "out=None"
                    },
                    {
                      "type": "text",
                      "value": ", returns a new array containing the mean values, otherwise a reference to the output array is returned."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "m",
              "type": "Param",
              "type_": "ndarray, see dtype parameter above"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Compute the arithmetic mean along the specified axis."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "a = np.array([[1, 2], [3, 4]])\nnp.mean(a)"
      },
      {
        "type": "code",
        "value": "np.mean(a, axis=0)"
      },
      {
        "type": "code",
        "value": "np.mean(a, axis=1)"
      },
      {
        "type": "text",
        "value": "In single precision, `mean` can be inaccurate:"
      },
      {
        "type": "code",
        "value": "a = np.zeros((2, 512*512), dtype=np.float32)\na[0, :] = 1.0\na[1, :] = 0.1\nnp.mean(a)"
      },
      {
        "type": "text",
        "value": "Computing the mean in float64 is more accurate:"
      },
      {
        "type": "code",
        "value": "np.mean(a, dtype=np.float64)"
      },
      {
        "type": "text",
        "value": "Specifying a where argument:"
      },
      {
        "type": "code",
        "value": "a = np.array([[5, 9, 13], [14, 10, 12], [11, 15, 19]])\nnp.mean(a)"
      },
      {
        "type": "code",
        "value": "np.mean(a, where=[[True], [False], [False]])"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/core/fromnumeric.py",
  "item_line": 3345,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Weighted average"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "average",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "average"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "std",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "std"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "var",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "var"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "nanmean",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "nanmean"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "nanstd",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "nanstd"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "nanvar",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "nanvar"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(a, axis=None, dtype=None, out=None, keepdims=<no value>, *, where=<no value>)"
  },
  "type": "DocBlob"
}