{
  "aliases": [
    "numpy.nested_iters"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Create a tuple of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "nditer"
            },
            {
              "type": "text",
              "value": " objects which iterate in nested loops over different axes of the op argument. The first iterator is used in the outermost loop, the last in the innermost loop. Advancing one will change the subsequent iterators to point at its new element."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The array(s) to iterate over."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "op",
              "type": "Param",
              "type_": "ndarray or sequence of array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Each item is used as an \"op_axes\" argument to an nditer"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axes",
              "type": "Param",
              "type_": "list of list of int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "See "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "nditer"
                    },
                    {
                      "type": "text",
                      "value": " parameters of the same name"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "flags, op_flags, op_dtypes, order, casting, buffersize (optional)",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An nditer for each item in "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "axes",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "axes"
                    },
                    {
                      "type": "text",
                      "value": ", outermost first"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "iters",
              "type": "Param",
              "type_": "tuple of nditer"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Create nditers for use in nested loops"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Basic usage. Note how y is the \"flattened\" version of\n[a[:, 0, :], a[:, 1, 0], a[:, 2, :]] since we specified\nthe first iter's axes as [1]"
      },
      {
        "type": "code",
        "value": "a = np.arange(12).reshape(2, 3, 2)\ni, j = np.nested_iters(a, [[1], [0, 2]], flags=[\"multi_index\"])\nfor x in i:\n     print(i.multi_index)\n     for y in j:\n         print('', j.multi_index, y)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": null,
  "item_line": null,
  "item_type": "<class 'builtin_function_or_method'>",
  "ordered_sections": [
    "Signature",
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "nditer",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "nditer"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "nested_iters(op, axes, flags=None, op_flags=None, op_dtypes=None,     order=\"K\", casting=\"safe\", buffersize=0)"
  },
  "type": "DocBlob"
}