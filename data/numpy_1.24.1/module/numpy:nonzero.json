{
  "aliases": [
    "numpy.nonzero"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns a tuple of arrays, one for each dimension of "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "a",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "a"
            },
            {
              "type": "text",
              "value": ", containing the indices of the non-zero elements in that dimension. The values in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "a",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "a"
            },
            {
              "type": "text",
              "value": " are always tested and returned in row-major, C-style order."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "To group the indices by element, rather than dimension, use "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "argwhere"
            },
            {
              "type": "text",
              "value": ", which returns a row for each non-zero element."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "note "
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "When called on a zero-d array or scalar, "
                },
                {
                  "type": "inlineCode",
                  "value": "nonzero(a)"
                },
                {
                  "type": "text",
                  "value": " is treated as "
                },
                {
                  "type": "inlineCode",
                  "value": "nonzero(atleast_1d(a))"
                },
                {
                  "type": "text",
                  "value": "."
                }
              ],
              "type": "paragraph"
            },
            {
              "args": "1.17.0",
              "children": [],
              "name": "deprecated",
              "options": {},
              "type": "mystDirective",
              "value": "Use `atleast_1d` explicitly if this behavior is deliberate."
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "While the nonzero values can be obtained with "
            },
            {
              "type": "inlineCode",
              "value": "a[nonzero(a)]"
            },
            {
              "type": "text",
              "value": ", it is recommended to use "
            },
            {
              "type": "inlineCode",
              "value": "x[x.astype(bool)]"
            },
            {
              "type": "text",
              "value": " or "
            },
            {
              "type": "inlineCode",
              "value": "x[x != 0]"
            },
            {
              "type": "text",
              "value": " instead, which will correctly handle 0-d arrays."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Input array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "a",
              "type": "Param",
              "type_": "array_like"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Indices of elements that are non-zero."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "tuple_of_arrays",
              "type": "Param",
              "type_": "tuple"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return the indices of the elements that are non-zero."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "x = np.array([[3, 0, 0], [0, 4, 0], [5, 6, 0]])\nx"
      },
      {
        "type": "code",
        "value": "np.nonzero(x)"
      },
      {
        "type": "code",
        "value": "x[np.nonzero(x)]"
      },
      {
        "type": "code",
        "value": "np.transpose(np.nonzero(x))"
      },
      {
        "type": "text",
        "value": "A common use for ``nonzero`` is to find the indices of an array, where\na condition is True.  Given an array `a`, the condition `a` > 3 is a\nboolean array and since False is interpreted as 0, np.nonzero(a > 3)\nyields the indices of the `a` where the condition is true."
      },
      {
        "type": "code",
        "value": "a = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\na > 3"
      },
      {
        "type": "code",
        "value": "np.nonzero(a > 3)"
      },
      {
        "type": "text",
        "value": "Using this result to index `a` is equivalent to using the mask directly:"
      },
      {
        "type": "code",
        "value": "a[np.nonzero(a > 3)]"
      },
      {
        "type": "code",
        "value": "a[a > 3]  # prefer this spelling"
      },
      {
        "type": "text",
        "value": "``nonzero`` can also be called as a method of the array."
      },
      {
        "type": "code",
        "value": "(a > 3).nonzero()"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/core/fromnumeric.py",
  "item_line": 1892,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return indices that are non-zero in the flattened version of the input array."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "flatnonzero",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "flatnonzero"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Equivalent ndarray method."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "ndarray.nonzero",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "ndarray.nonzero"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Counts the number of non-zero elements in the input array."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "count_nonzero",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "count_nonzero"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(a)"
  },
  "type": "DocBlob"
}