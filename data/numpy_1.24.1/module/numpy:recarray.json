{
  "aliases": [
    "numpy.recarray"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Arrays may have a data-types containing fields, analogous to columns in a spread sheet.  An example is "
            },
            {
              "type": "inlineCode",
              "value": "[(x, int), (y, float)]"
            },
            {
              "type": "text",
              "value": ", where each entry in the array is a pair of "
            },
            {
              "type": "inlineCode",
              "value": "(int, float)"
            },
            {
              "type": "text",
              "value": ".  Normally, these attributes are accessed using dictionary lookups such as "
            },
            {
              "type": "inlineCode",
              "value": "arr['x']"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineCode",
              "value": "arr['y']"
            },
            {
              "type": "text",
              "value": ".  Record arrays allow the fields to be accessed as members of the array, using "
            },
            {
              "type": "inlineCode",
              "value": "arr.x"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineCode",
              "value": "arr.y"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This constructor can be compared to "
            },
            {
              "type": "inlineCode",
              "value": "empty"
            },
            {
              "type": "text",
              "value": ": it creates a new record array but does not fill it with data.  To create a record array from data, use one of the following methods:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Create a standard ndarray and convert it to a record array,    using "
                    },
                    {
                      "type": "inlineCode",
                      "value": "arr.view(np.recarray)"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Use the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "buf",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "buf"
                    },
                    {
                      "type": "text",
                      "value": " keyword."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Use "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "np.rec.fromrecords"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": true,
          "spread": false,
          "start": 1,
          "type": "list"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Aliases for column names.  For example, if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "names",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "names"
                    },
                    {
                      "type": "text",
                      "value": " were "
                    },
                    {
                      "type": "inlineCode",
                      "value": "('x', 'y', 'z')"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "titles",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "titles"
                    },
                    {
                      "type": "text",
                      "value": " is "
                    },
                    {
                      "type": "inlineCode",
                      "value": "('x_coordinate', 'y_coordinate', 'z_coordinate')"
                    },
                    {
                      "type": "text",
                      "value": ", then "
                    },
                    {
                      "type": "inlineCode",
                      "value": "arr['x']"
                    },
                    {
                      "type": "text",
                      "value": " is equivalent to both "
                    },
                    {
                      "type": "inlineCode",
                      "value": "arr.x"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "arr.x_coordinate"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "titles",
              "type": "Param",
              "type_": "tuple of str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Byte-order for all fields."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "byteorder",
              "type": "Param",
              "type_": "{'<', '>', '='}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Align the fields in memory as the C-compiler would."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "aligned",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Buffer ("
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "buf",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "buf"
                    },
                    {
                      "type": "text",
                      "value": ") is interpreted according to these strides (strides define how many bytes each array element, row, column, etc. occupy in memory)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "strides",
              "type": "Param",
              "type_": "tuple of ints, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Start reading buffer ("
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "buf",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "buf"
                    },
                    {
                      "type": "text",
                      "value": ") from this offset onwards."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "offset",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Row-major (C-style) or column-major (Fortran-style) order."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "order",
              "type": "Param",
              "type_": "{'C', 'F'}, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Shape of output array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "shape",
              "type": "Param",
              "type_": "tuple"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The desired data-type.  By default, the data-type is determined from "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "formats",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "formats"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "names",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "names"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "titles",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "titles"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "aligned",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "aligned"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "byteorder",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "byteorder"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dtype",
              "type": "Param",
              "type_": "data-type, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A list containing the data-types for the different columns, e.g. "
                    },
                    {
                      "type": "inlineCode",
                      "value": "['i4', 'f8', 'i4']"
                    },
                    {
                      "type": "text",
                      "value": ".  "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "formats",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "formats"
                    },
                    {
                      "type": "text",
                      "value": " does "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "not"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " support the new convention of using types directly, i.e. "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(int, float, int)"
                    },
                    {
                      "type": "text",
                      "value": ". Note that "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "formats",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "formats"
                    },
                    {
                      "type": "text",
                      "value": " must be a list, not a tuple. Given that "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "formats",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "formats"
                    },
                    {
                      "type": "text",
                      "value": " is somewhat limited, we recommend specifying "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "dtype",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "dtype"
                    },
                    {
                      "type": "text",
                      "value": " instead."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "formats",
              "type": "Param",
              "type_": "list of data-types, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The name of each column, e.g. "
                    },
                    {
                      "type": "inlineCode",
                      "value": "('x', 'y', 'z')"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "names",
              "type": "Param",
              "type_": "tuple of str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "By default, a new array is created of the given shape and data-type. If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "buf",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "buf"
                    },
                    {
                      "type": "text",
                      "value": " is specified and is an object exposing the buffer interface, the array will use the memory from the existing buffer.  In this case, the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "offset",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "offset"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "strides",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "strides"
                    },
                    {
                      "type": "text",
                      "value": " keywords are available."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "buf",
              "type": "Param",
              "type_": "buffer, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Empty array of the given shape and type."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "rec",
              "type": "Param",
              "type_": "recarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Construct an ndarray that allows field access using attributes."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Create an array with two fields, ``x`` and ``y``:"
      },
      {
        "type": "code",
        "value": "x = np.array([(1.0, 2), (3.0, 4)], dtype=[('x', '<f8'), ('y', '<i8')])\nx"
      },
      {
        "type": "code",
        "value": "x['x']"
      },
      {
        "type": "text",
        "value": "View the array as a record array:"
      },
      {
        "type": "code",
        "value": "x = x.view(np.recarray)"
      },
      {
        "type": "code",
        "value": "x.x"
      },
      {
        "type": "code",
        "value": "x.y"
      },
      {
        "type": "text",
        "value": "Create a new, empty record array:"
      },
      {
        "type": "code",
        "value": "np.recarray((2,),\ndtype=[('x', int), ('y', float), ('z', int)]) #doctest: +SKIP"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/__init__.py",
  "item_line": null,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Other Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Construct a record array from data."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "core.records.fromrecords",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "core.records.fromrecords"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "fundamental data-type for "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "recarray"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "record",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "record"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "determine a data-type from formats, names, titles."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "format_parser",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "format_parser"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}