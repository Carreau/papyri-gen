{
  "aliases": [
    "numpy.savetxt"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Further explanation of the "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "fmt",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "fmt"
            },
            {
              "type": "text",
              "value": " parameter ("
            },
            {
              "type": "inlineCode",
              "value": "%[flag]width[.precision]specifier"
            },
            {
              "type": "text",
              "value": "):"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "dd": [],
              "dt": {
                "children": [
                  {
                    "type": "text",
                    "value": "flags:"
                  }
                ],
                "type": "paragraph"
              },
              "type": "DefListItem"
            }
          ],
          "type": "DefList"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If the filename ends in "
                    },
                    {
                      "type": "inlineCode",
                      "value": ".gz"
                    },
                    {
                      "type": "text",
                      "value": ", the file is automatically saved in compressed gzip format.  "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "loadtxt"
                    },
                    {
                      "type": "text",
                      "value": " understands gzipped files transparently."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "fname",
              "type": "Param",
              "type_": "filename or file handle"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Data to be saved to a text file."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "X",
              "type": "Param",
              "type_": "1D or 2D array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A single format (%10.5f), a sequence of formats, or a multi-format string, e.g. 'Iteration %d -- %10.5f', in which case "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "delimiter",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "delimiter"
                    },
                    {
                      "type": "text",
                      "value": " is ignored. For complex "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "X",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "X"
                    },
                    {
                      "type": "text",
                      "value": ", the legal options for "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "fmt",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "fmt"
                    },
                    {
                      "type": "text",
                      "value": " are:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "a single specifier, "
                            },
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": "fmt='%.4e'"
                            },
                            {
                              "type": "text",
                              "value": ", resulting in numbers formatted   like "
                            },
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": "' (%s+%sj)' % (fmt, fmt)"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "a full string specifying every real and imaginary part, e.g.   "
                            },
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": "' %.4e %+.4ej %.4e %+.4ej %.4e %+.4ej'"
                            },
                            {
                              "type": "text",
                              "value": " for 3 columns"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "a list of specifiers, one per column - in this case, the real   and imaginary part must have separate specifiers,   e.g. "
                            },
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": "['%.3e + %.3ej', '(%.15e%+.15ej)']"
                            },
                            {
                              "type": "text",
                              "value": " for 2 columns"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                }
              ],
              "param": "fmt",
              "type": "Param",
              "type_": "str or sequence of strs, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "String or character separating columns."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "delimiter",
              "type": "Param",
              "type_": "str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "String or character separating lines."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.5.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "newline",
              "type": "Param",
              "type_": "str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "String that will be written at the beginning of the file."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.7.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "header",
              "type": "Param",
              "type_": "str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "String that will be written at the end of the file."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.7.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "footer",
              "type": "Param",
              "type_": "str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "String that will be prepended to the "
                    },
                    {
                      "type": "inlineCode",
                      "value": "header"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "footer"
                    },
                    {
                      "type": "text",
                      "value": " strings, to mark them as comments. Default: '# ',  as expected by e.g. "
                    },
                    {
                      "type": "inlineCode",
                      "value": "numpy.loadtxt"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.7.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "comments",
              "type": "Param",
              "type_": "str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Encoding used to encode the outputfile. Does not apply to output streams. If the encoding is something other than 'bytes' or 'latin1' you will not be able to load the file in NumPy versions < 1.14. Default is 'latin1'."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.14.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "encoding",
              "type": "Param",
              "type_": "{None, str}, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Save an array to a text file."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "x = y = z = np.arange(0.0,5.0,1.0)\nnp.savetxt('test.out', x, delimiter=',')   # X is an array\nnp.savetxt('test.out', (x,y,z))   # x,y,z equal sized 1D arrays\nnp.savetxt('test.out', x, fmt='%1.4e')   # use exponential notation"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/lib/npyio.py",
  "item_line": 1367,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Save an array to a binary file in NumPy "
            },
            {
              "type": "inlineCode",
              "value": ".npy"
            },
            {
              "type": "text",
              "value": " format"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "numpy",
          "path": "numpy:savetxt",
          "type": "RefInfo",
          "version": "1.24.1"
        },
        "type": "Link",
        "value": "save"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Save several arrays into an uncompressed "
            },
            {
              "type": "inlineCode",
              "value": ".npz"
            },
            {
              "type": "text",
              "value": " archive"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "savez",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "savez"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Save several arrays into a compressed "
            },
            {
              "type": "inlineCode",
              "value": ".npz"
            },
            {
              "type": "text",
              "value": " archive"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "savez_compressed",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "savez_compressed"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(fname, X, fmt='%.18e', delimiter=' ', newline='\\n', header='', footer='', comments='# ', encoding=None)"
  },
  "type": "DocBlob"
}