{
  "aliases": [
    "numpy.sinc"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The sinc function is equal to "
            },
            {
              "type": "inlineMath",
              "value": "\\sin(\\pi x)/(\\pi x)"
            },
            {
              "type": "text",
              "value": " for any argument "
            },
            {
              "type": "inlineMath",
              "value": "x\\ne 0"
            },
            {
              "type": "text",
              "value": ". "
            },
            {
              "type": "inlineCode",
              "value": "sinc(0)"
            },
            {
              "type": "text",
              "value": " takes the limit value 1, making "
            },
            {
              "type": "inlineCode",
              "value": "sinc"
            },
            {
              "type": "text",
              "value": " not only everywhere continuous but also infinitely differentiable."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "note "
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "Note the normalization factor of "
                },
                {
                  "type": "inlineCode",
                  "value": "pi"
                },
                {
                  "type": "text",
                  "value": " used in the definition. This is the most commonly used definition in signal processing. Use "
                },
                {
                  "type": "inlineCode",
                  "value": "sinc(x / np.pi)"
                },
                {
                  "type": "text",
                  "value": " to obtain the unnormalized sinc function "
                },
                {
                  "domain": null,
                  "role": "math",
                  "type": "Directive",
                  "value": "\\sin(x)/x"
                },
                {
                  "type": "text",
                  "value": " that is more common in mathematics."
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The name sinc is short for \"sine cardinal\" or \"sinus cardinalis\"."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The sinc function is used in various signal processing applications, including in anti-aliasing, in the construction of a Lanczos resampling filter, and in interpolation."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For bandlimited interpolation of discrete-time signals, the ideal interpolation kernel is proportional to the sinc function."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Array (possibly multi-dimensional) of values for which to calculate "
                    },
                    {
                      "type": "inlineCode",
                      "value": "sinc(x)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "sinc(x)"
                    },
                    {
                      "type": "text",
                      "value": ", which has the same shape as the input."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return the normalized sinc function."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import matplotlib.pyplot as plt\nx = np.linspace(-4, 4, 41)\nnp.sinc(x)"
      },
      {
        "type": "code",
        "value": "plt.plot(x, np.sinc(x))"
      },
      {
        "type": "code",
        "value": "plt.title(\"Sinc Function\")"
      },
      {
        "type": "code",
        "value": "plt.ylabel(\"Amplitude\")"
      },
      {
        "type": "code",
        "value": "plt.xlabel(\"X\")"
      },
      {
        "type": "code",
        "value": "plt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "numpy",
          "path": "fig-numpy:sinc-0-a647ba61.png",
          "type": "RefInfo",
          "version": "1.24.1"
        }
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/numpy/lib/function_base.py",
  "item_line": 3561,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(x)"
  },
  "type": "DocBlob"
}