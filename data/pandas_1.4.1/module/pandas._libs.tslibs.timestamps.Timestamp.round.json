{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "If the Timestamp has a timezone, rounding will take place relative to the local (\"wall\") time and re-localized to the same timezone. When rounding near daylight savings time, use "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "nonexistent"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ambiguous"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " to control the re-localization behavior."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Frequency string indicating the rounding resolution."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "freq",
            "type_": "str"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The behavior is as follows:"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "bool contains flags to determine if time is dst or not (note   that this flag is only applicable for ambiguous fall dst dates)."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'NaT' will return NaT for an ambiguous time."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'raise' will raise an AmbiguousTimeError for an ambiguous time."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ],
            "param": "ambiguous",
            "type_": "bool or {'raise', 'NaT'}, default 'raise'"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "A nonexistent time does not exist in a particular timezone where clocks moved forward due to DST."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'shift_forward' will shift the nonexistent time forward to the   closest existing time."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'shift_backward' will shift the nonexistent time backward to the   closest existing time."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'NaT' will return NaT where there are nonexistent times."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "timedelta objects will shift nonexistent times by the timedelta."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'raise' will raise an NonExistentTimeError if there are   nonexistent times."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ],
            "param": "nonexistent",
            "type_": "{'raise', 'shift_forward', 'shift_backward, 'NaT', timedelta}, default 'raise'"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "data": {
            "desc": [],
            "param": "",
            "type_": "ValueError if the freq cannot be converted"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [],
            "param": "",
            "type_": "a new Timestamp rounded to the given resolution of `freq`"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Round the Timestamp to the specified resolution."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "pandas.Timestamp.round"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Create a timestamp object:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "ts",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "pd",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "Timestamp",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "2020-03-14T15:32:52.192548651",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": ""
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "A timestamp can be rounded using multiple frequency units:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "ts",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "round",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "freq",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "H",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "# hour",
              "",
              "c1"
            ]
          ],
          "out": "Timestamp('2020-03-14 16:00:00')"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "ts",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "round",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "freq",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "T",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "# minute",
              "",
              "c1"
            ]
          ],
          "out": "Timestamp('2020-03-14 15:33:00')"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "ts",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "round",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "freq",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "S",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "# seconds",
              "",
              "c1"
            ]
          ],
          "out": "Timestamp('2020-03-14 15:32:52')"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "ts",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "round",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "freq",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "L",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "# milliseconds",
              "",
              "c1"
            ]
          ],
          "out": "Timestamp('2020-03-14 15:32:52.193000')"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": [
                  "freq"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " can also be a multiple of a single unit, like '5T' (i.e.  5 minutes):"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "ts",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "round",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "freq",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "5T",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "Timestamp('2020-03-14 15:35:00')"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "or a combination of multiple units, like '1H30T' (i.e. 1 hour and 30 minutes):"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "ts",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "round",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "freq",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "1H30T",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "Timestamp('2020-03-14 15:00:00')"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Analogous for "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "pd.NaT"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": ":"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "pd",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "NaT",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "round",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "NaT"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "When rounding near a daylight savings time transition, use "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "ambiguous"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " or "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "nonexistent"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " to control how the timestamp should be re-localized."
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "ts_tz",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "pd",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "Timestamp",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "2021-10-31 01:30:00",
              "",
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "tz_localize",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "Europe/Amsterdam",
              "",
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": ""
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "ts_tz",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "round",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "H",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "ambiguous",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "False",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "Timestamp('2021-10-31 02:00:00+0100', tz='Europe/Amsterdam')"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "ts_tz",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "round",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "H",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "ambiguous",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "True",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "Timestamp('2021-10-31 02:00:00+0200', tz='Europe/Amsterdam')"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": null,
  "item_line": null,
  "item_type": "<class 'cython_function_or_method'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Raises",
    "Notes",
    "Examples"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": null
  }
}