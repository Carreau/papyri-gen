{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Time zone for time which Timestamp will be converted to. None will remove timezone holding local time."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "tz",
            "type_": "str, pytz.timezone, dateutil.tz.tzfile or None"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "When clocks moved backward due to DST, ambiguous times may arise. For example in Central European Time (UTC+01), when going from 03:00 DST to 02:00 non-DST, 02:30:00 local time occurs both at 00:30:00 UTC and at 01:30:00 UTC. In such a situation, the "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "ambiguous",
                          "version": null
                        },
                        "value": "ambiguous"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " parameter dictates how ambiguous times should be handled."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The behavior is as follows:"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "bool contains flags to determine if time is dst or not (note   that this flag is only applicable for ambiguous fall dst dates)."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'NaT' will return NaT for an ambiguous time."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'raise' will raise an AmbiguousTimeError for an ambiguous time."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ],
            "param": "ambiguous",
            "type_": "bool, 'NaT', default 'raise'"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "A nonexistent time does not exist in a particular timezone where clocks moved forward due to DST."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The behavior is as follows:"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'shift_forward' will shift the nonexistent time forward to the   closest existing time."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'shift_backward' will shift the nonexistent time backward to the   closest existing time."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'NaT' will return NaT where there are nonexistent times."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "timedelta objects will shift nonexistent times by the timedelta."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'raise' will raise an NonExistentTimeError if there are   nonexistent times."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ],
            "param": "nonexistent",
            "type_": "'shift_forward', 'shift_backward, 'NaT', timedelta, default 'raise'"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If the Timestamp is tz-aware and tz is not None."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "TypeError"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [],
            "param": "localized",
            "type_": "Timestamp"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Convert naive Timestamp to local time zone, or remove timezone from timezone-aware Timestamp."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "pandas.Timestamp.tz_localize"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Create a naive timestamp object:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "ts",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "pd",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "Timestamp",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "2020-03-14T15:32:52.192548651",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "ts",
              null,
              ""
            ]
          ],
          "out": "Timestamp('2020-03-14 15:32:52.192548651')"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Add 'Europe/Stockholm' as timezone:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "ts",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "tz_localize",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "tz",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "Europe/Stockholm",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "Timestamp('2020-03-14 15:32:52.192548651+0100', tz='Europe/Stockholm')"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Analogous for "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "pd.NaT"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": ":"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "pd",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "NaT",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "tz_localize",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "NaT"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": null,
  "item_line": null,
  "item_type": "<class 'cython_function_or_method'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Raises",
    "Examples"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": null
  }
}