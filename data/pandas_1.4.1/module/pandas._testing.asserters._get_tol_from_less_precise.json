{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [],
            "param": "check_less_precise",
            "type_": "bool or int"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Tolerance to be used as relative/absolute tolerance."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "float"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Return the tolerance equivalent to the deprecated "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "check_less_precise",
                    "version": null
                  },
                  "value": "check_less_precise"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " parameter."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "pandas._testing.asserters._get_tol_from_less_precise"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "# Using check_less_precise as a bool:",
              "",
              "c1"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "_get_tol_from_less_precise",
              "pandas._testing.asserters._get_tol_from_less_precise",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "False",
              "builtins.bool",
              "kc"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "5e-06"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "_get_tol_from_less_precise",
              "pandas._testing.asserters._get_tol_from_less_precise",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "True",
              "builtins.bool",
              "kc"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "0.0005"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "# Using check_less_precise as an int representing the decimal",
              "",
              "c1"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "# tolerance intended:",
              "",
              "c1"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "_get_tol_from_less_precise",
              "pandas._testing.asserters._get_tol_from_less_precise",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "0.005"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "_get_tol_from_less_precise",
              "pandas._testing.asserters._get_tol_from_less_precise",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "8",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "5e-09"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/pandas/_testing/asserters.py",
  "item_line": 178,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "references": null,
  "refs": [
    "builtins.bool",
    "pandas._testing.asserters._get_tol_from_less_precise"
  ],
  "see_also": [],
  "signature": {
    "value": "_get_tol_from_less_precise(check_less_precise: 'bool | int') -> 'float'"
  }
}