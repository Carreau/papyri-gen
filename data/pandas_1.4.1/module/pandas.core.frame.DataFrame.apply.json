{
  "aliases": [
    "pandas.DataFrame.apply"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Objects passed to the function are Series objects whose index is either the DataFrame's index ("
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "axis=0"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ") or the DataFrame's columns ("
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "axis=1"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "). By default ("
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "result_type=None"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "), the final return type is inferred from the return type of the applied function. Otherwise, it depends on the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "pandas",
                    "path": "pandas.core.computation.common.result_type_many",
                    "version": "1.4.1"
                  },
                  "value": "result_type"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " argument."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Functions that mutate the passed object can produce unexpected behavior or errors and are not supported. See "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "gotchas.udf-mutation"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for more details."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Function to apply to each column or row."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "func",
                "type_": "function"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Axis along which the function is applied:"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "0 or 'index': apply function to each column."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "1 or 'columns': apply function to each row."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "BulletList"
                  }
                ],
                "param": "axis",
                "type_": "{0 or 'index', 1 or 'columns'}, default 0"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Determines if row or column is passed as a Series or ndarray object:"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "raw",
                "type_": "bool, default False"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "These only act when "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "axis=1"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " (columns):"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "result_type",
                "type_": "{'expand', 'reduce', 'broadcast', None}, default None"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Positional arguments to pass to "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "pandas",
                              "path": "pandas.core.arrays.categorical._cat_compare_op.<locals>.func",
                              "version": "1.4.1"
                            },
                            "value": "func"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " in addition to the array/series."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "args",
                "type_": "tuple"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Additional keyword arguments to pass as keywords arguments to "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "pandas",
                              "path": "pandas.core.arrays.categorical._cat_compare_op.<locals>.func",
                              "version": "1.4.1"
                            },
                            "value": "func"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "**kwargs",
                "type_": ""
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Result of applying "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "func"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " along the given axis of the DataFrame."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "",
                "type_": "Series or DataFrame"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Apply a function along an axis of the DataFrame."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            {
              "link": {
                "data": "df",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "pd",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "DataFrame",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "[",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "[",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "4",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "9",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": "]",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "]",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "*",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "3",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "columns",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "[",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "A",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "B",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "]",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "df",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "   A  B\n0  4  9\n1  4  9\n2  4  9"
        },
        "type": "Code2"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "Using a numpy universal function (in this case the same as "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "np.sqrt(df)"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": "):"
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            {
              "link": {
                "data": "df",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "apply",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "pandas",
                    "path": "pandas.compat.numpy",
                    "version": "1.4.1"
                  },
                  "value": "np"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.ufunc",
                    "version": "*"
                  },
                  "value": "sqrt"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "     A    B\n0  2.0  3.0\n1  2.0  3.0\n2  2.0  3.0"
        },
        "type": "Code2"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "Using a reducing function on either axis"
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            {
              "link": {
                "data": "df",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "apply",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "pandas",
                    "path": "pandas.compat.numpy",
                    "version": "1.4.1"
                  },
                  "value": "np"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.sum",
                    "version": "*"
                  },
                  "value": "sum"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "axis",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "0",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "A    12\nB    27\ndtype: int64"
        },
        "type": "Code2"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            {
              "link": {
                "data": "df",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "apply",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "pandas",
                    "path": "pandas.compat.numpy",
                    "version": "1.4.1"
                  },
                  "value": "np"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.sum",
                    "version": "*"
                  },
                  "value": "sum"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "axis",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "1",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "0    13\n1    13\n2    13\ndtype: int64"
        },
        "type": "Code2"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "Returning a list-like will result in a Series"
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            {
              "link": {
                "data": "df",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "apply",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "lambda",
                "type": "str"
              },
              "type": "k"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "x",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ":",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "[",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "1",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "2",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": "]",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "axis",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "1",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "0    [1, 2]\n1    [1, 2]\n2    [1, 2]\ndtype: object"
        },
        "type": "Code2"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "Passing "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "result_type='expand'"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " will expand list-like results to columns of a Dataframe"
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            {
              "link": {
                "data": "df",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "apply",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "lambda",
                "type": "str"
              },
              "type": "k"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "x",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ":",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "[",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "1",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "2",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": "]",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "axis",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "1",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "result_type",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "expand",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "   0  1\n0  1  2\n1  1  2\n2  1  2"
        },
        "type": "Code2"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "Returning a Series inside the function is similar to passing "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "result_type='expand'"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": ". The resulting column names will be the Series index."
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            {
              "link": {
                "data": "df",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "apply",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "lambda",
                "type": "str"
              },
              "type": "k"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "x",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ":",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "pd",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "Series",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "[",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "1",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "2",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": "]",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "index",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "[",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "foo",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "bar",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "]",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "axis",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "1",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "   foo  bar\n0    1    2\n1    1    2\n2    1    2"
        },
        "type": "Code2"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "Passing "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "result_type='broadcast'"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " will ensure the same shape result, whether list-like or scalar is returned by the function, and broadcast it along the axis. The resulting column names will be the originals."
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            {
              "link": {
                "data": "df",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "apply",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "lambda",
                "type": "str"
              },
              "type": "k"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "x",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ":",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "[",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "1",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "2",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": "]",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "axis",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "1",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "result_type",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "broadcast",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "   A  B\n0  1  2\n1  1  2\n2  1  2"
        },
        "type": "Code2"
      }
    ],
    "title": null
  },
  "item_file": "/pandas/core/frame.py",
  "item_line": 8676,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "For elementwise operations."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "pandas",
          "path": "pandas.core.frame.DataFrame.applymap",
          "version": "1.4.1"
        },
        "value": "DataFrame.applymap"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "Only perform aggregating type operations."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "pandas",
          "path": "pandas.core.frame.DataFrame.aggregate",
          "version": "1.4.1"
        },
        "value": "DataFrame.aggregate"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "Only perform transforming type operations."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "pandas",
          "path": "pandas.core.frame.DataFrame.transform",
          "version": "1.4.1"
        },
        "value": "DataFrame.transform"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "apply(self, func: 'AggFuncType', axis: 'Axis' = 0, raw: 'bool' = False, result_type=None, args=(), **kwargs)"
  }
}