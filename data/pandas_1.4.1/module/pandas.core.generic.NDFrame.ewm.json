{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Exactly one parameter: "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "com"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "span"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "halflife"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "alpha"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " must be provided."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "See "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Windowing Operations <window.exponentially_weighted>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for further usage details and examples."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Specify decay in terms of center of mass"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": [
                          "\\alpha = 1 / (1 + com)"
                        ]
                      },
                      "type": "Math"
                    },
                    {
                      "data": {
                        "value": ", for "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "com \\geq 0"
                        ]
                      },
                      "type": "Math"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "com",
            "type_": "float, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Specify decay in terms of span"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": [
                          "\\alpha = 2 / (span + 1)"
                        ]
                      },
                      "type": "Math"
                    },
                    {
                      "data": {
                        "value": ", for "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "span \\geq 1"
                        ]
                      },
                      "type": "Math"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "span",
            "type_": "float, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Specify decay in terms of half-life"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": [
                          "\\alpha = 1 - \\exp\\left(-\\ln(2) / halflife\\right)"
                        ]
                      },
                      "type": "Math"
                    },
                    {
                      "data": {
                        "value": ", for "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "halflife > 0"
                        ]
                      },
                      "type": "Math"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "times"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " is specified, the time unit (str or timedelta) over which an observation decays to half its value. Only applicable to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "mean()"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", and halflife value will not apply to the other functions."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "inline": [
                        {
                          "data": {
                            "value": "1.1.0 "
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    }
                  ],
                  "kind": "versionadded",
                  "title": "TODO"
                },
                "type": "Admonition"
              }
            ],
            "param": "halflife",
            "type_": "float, str, timedelta, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Specify smoothing factor "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "\\alpha"
                        ]
                      },
                      "type": "Math"
                    },
                    {
                      "data": {
                        "value": " directly"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": [
                          "0 < \\alpha \\leq 1"
                        ]
                      },
                      "type": "Math"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "alpha",
            "type_": "float, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Minimum number of observations in window required to have a value; otherwise, result is "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "np.nan"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "min_periods",
            "type_": "int, default 0"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Divide by decaying adjustment factor in beginning periods to account for imbalance in relative weightings (viewing EWMA as a moving average)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "When "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "adjust=True"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " (default), the EW function is calculated using weights   "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "w_i = (1 - \\alpha)^i"
                                  ]
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": ". For example, the EW moving average of the series   [:math"
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "domain": null,
                                  "role": null,
                                  "value": "x_0, x_1, ..., x_t"
                                },
                                "type": "Directive"
                              },
                              {
                                "data": {
                                  "value": "] would be:"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              },
              {
                "data": {
                  "value": "y_t = \\frac { x_t + ( 1 - \\alpha)x_ { t - 1} + ( 1 - \\alpha)^2 x_ { t - 2} + ... + ( 1 - \\alpha)^t x_0} { 1 + ( 1 - \\alpha) + ( 1 - \\alpha)^2 + ... + ( 1 - \\alpha)^t} "
                },
                "type": "BlockMath"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "When "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "adjust=False"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": ", the exponentially weighted function is calculated   recursively:"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              },
              {
                "data": {
                  "value": "\\begin { split} y_0 &= x_0\\\\ y_t &= ( 1 - \\alpha) y_ { t - 1} + \\alpha x_t, \\end { split} "
                },
                "type": "BlockMath"
              }
            ],
            "param": "adjust",
            "type_": "bool, default True"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Ignore missing values when calculating weights."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "When "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "ignore_na=False"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " (default), weights are based on absolute positions.   For example, the weights of "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "x_0"
                                  ]
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " and "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "x_2"
                                  ]
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " used in calculating   the final weighted average of [:math:`x_0`, None, :math:`x_2`] are   "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "(1-\\alpha)^2"
                                  ]
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " and "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "1"
                                  ]
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " if "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "adjust=True"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": ", and   "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "(1-\\alpha)^2"
                                  ]
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " and "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "\\alpha"
                                  ]
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " if "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "adjust=False"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": "."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "When "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "ignore_na=True"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": ", weights are based   on relative positions. For example, the weights of "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "x_0"
                                  ]
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " and "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "x_2"
                                  ]
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": "   used in calculating the final weighted average of   [:math:`x_0`, None, :math:`x_2`] are :math:`1-\\alpha` and :math:`1` if   "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "adjust=True"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": ", and "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "1-\\alpha"
                                  ]
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " and "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "\\alpha"
                                  ]
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " if "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "adjust=False"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": "."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ],
            "param": "ignore_na",
            "type_": "bool, default False"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "0"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " or "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "'index'"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", calculate across the rows."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "1"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " or "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "'columns'"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", calculate across the columns."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "axis",
            "type_": "{0, 1}, default 0"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "children": [
                    {
                      "inline": [
                        {
                          "data": {
                            "value": "1.1.0 "
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    }
                  ],
                  "kind": "versionadded",
                  "title": "TODO"
                },
                "type": "Admonition"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Only applicable to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "mean()"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Times corresponding to the observations. Must be monotonically increasing and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "datetime64[ns]"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " dtype."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If 1-D array like, a sequence with the same shape as the observations."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "inline": [
                        {
                          "data": {
                            "value": "If str, the name of the column in the DataFrame representing the times. "
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    }
                  ],
                  "kind": "deprecated",
                  "title": "1.4.0"
                },
                "type": "Admonition"
              }
            ],
            "param": "times",
            "type_": "str, np.ndarray, Series, default None"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "children": [
                    {
                      "inline": [
                        {
                          "data": {
                            "value": "1.4.0 "
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    }
                  ],
                  "kind": "versionadded",
                  "title": "TODO"
                },
                "type": "Admonition"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Execute the rolling operation per single column or row ("
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "'single'"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ") or over the entire object ("
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "'table'"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ")."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "This argument is only implemented when specifying "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "engine='numba'"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " in the method call."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Only applicable to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "mean()"
                        ]
                      },
                      "type": "Verbatim"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "method",
            "type_": "str {'single', 'table'}, default 'single'"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [],
            "param": "",
            "type_": "``ExponentialMovingWindow`` subclass"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Provide exponentially weighted (EW) calculations."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "pandas.core.frame.NDFrame.ewm"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "df",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "pd",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "DataFrame",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "{",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "B",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "nan",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "}",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "df",
              null,
              ""
            ]
          ],
          "out": "     B\n0  0.0\n1  1.0\n2  2.0\n3  NaN\n4  4.0"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "df",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "ewm",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "com",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "0.5",
              "",
              "mf"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "mean",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "          B\n0  0.000000\n1  0.750000\n2  1.615385\n3  1.615385\n4  3.670213"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "df",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "ewm",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "alpha",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "/",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "mean",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "          B\n0  0.000000\n1  0.750000\n2  1.615385\n3  1.615385\n4  3.670213"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "content": {
                  "value": "adjust"
                }
              },
              "type": "Strong"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "df",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "ewm",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "com",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "0.5",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "adjust",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "True",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "mean",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "          B\n0  0.000000\n1  0.750000\n2  1.615385\n3  1.615385\n4  3.670213"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "df",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "ewm",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "com",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "0.5",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "adjust",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "False",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "mean",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "          B\n0  0.000000\n1  0.666667\n2  1.555556\n3  1.555556\n4  3.650794"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "content": {
                  "value": "ignore_na"
                }
              },
              "type": "Strong"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "df",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "ewm",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "com",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "0.5",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "ignore_na",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "True",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "mean",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "          B\n0  0.000000\n1  0.750000\n2  1.615385\n3  1.615385\n4  3.225000"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "df",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "ewm",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "com",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "0.5",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "ignore_na",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "False",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "mean",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "          B\n0  0.000000\n1  0.750000\n2  1.615385\n3  1.615385\n4  3.670213"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "content": {
                  "value": "times"
                }
              },
              "type": "Strong"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Exponentially weighted mean with weights calculated with a timedelta "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "halflife"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " relative to "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "times"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": "."
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "times",
              "builtins.list",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "2020-01-01",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "2020-01-03",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "2020-01-10",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "2020-01-15",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "2020-01-17",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "df",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "ewm",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "halflife",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "4 days",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "times",
              "builtins.list",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "pd",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "DatetimeIndex",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "times",
              "builtins.list",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "mean",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "          B\n0  0.000000\n1  0.585786\n2  1.523889\n3  1.523889\n4  3.233686"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/pandas/core/generic.py",
  "item_line": 11314,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "refs": [
    "builtins.float",
    "builtins.list",
    "expanding",
    "numpy",
    "rolling"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Provides rolling window calculations."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "rolling",
        "ref": "pandas.core.generic.NDFrame.rolling"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Provides expanding transformations."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "expanding",
        "ref": "pandas.core.generic.NDFrame.expanding"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "ewm(self, com: 'float | None' = None, span: 'float | None' = None, halflife: 'float | TimedeltaConvertibleTypes | None' = None, alpha: 'float | None' = None, min_periods: 'int | None' = 0, adjust: 'bool_t' = True, ignore_na: 'bool_t' = False, axis: 'Axis' = 0, times: 'str | np.ndarray | DataFrame | Series | None' = None, method: 'str' = 'single') -> 'ExponentialMovingWindow'"
  }
}