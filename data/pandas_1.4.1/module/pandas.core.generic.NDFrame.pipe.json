{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Use "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    ".pipe"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " when chaining together functions that expect Series, DataFrames or GroupBy objects. Instead of writing"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ">>> func(g(h(df), arg1=a), arg2=b, arg3=c)  # doctest: +SKIP"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "You can write"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ">>> (df.pipe(h)\n...    .pipe(g, arg1=a)\n...    .pipe(func, arg2=b, arg3=c)\n... )  # doctest: +SKIP"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If you have a function that takes the data as (say) the second argument, pass a tuple indicating which keyword expects the data. For example, suppose "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "f"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " takes its data as "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "arg2"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ":"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ">>> (df.pipe(h)\n...    .pipe(g, arg1=a)\n...    .pipe((func, 'arg2'), arg1=a, arg3=c)\n...  )  # doctest: +SKIP"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Function to apply to the Series/DataFrame. "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "args"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "kwargs"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " are passed into "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "func"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". Alternatively a "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "(callable, data_keyword)"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " tuple where "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "data_keyword"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " is a string indicating the keyword of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "callable"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " that expects the Series/DataFrame."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "func",
                "type_": "function"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Positional arguments passed into "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "func"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "args",
                "type_": "iterable, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A dictionary of keyword arguments passed into "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "func"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "kwargs",
                "type_": "mapping, optional"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [],
                "param": "object",
                "type_": "the return type of ``func``."
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Apply chainable functions that expect Series or DataFrames."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "pandas.core.frame.NDFrame.pipe"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/pandas/core/generic.py",
  "item_line": 5462,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes"
  ],
  "references": null,
  "refs": [
    "DataFrame.apply",
    "DataFrame.applymap",
    "Series.map"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "Apply a function along input axis of DataFrame."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "DataFrame.apply",
          "version": "current-version"
        },
        "value": "DataFrame.apply"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "Apply a function elementwise on a whole DataFrame."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "pandas",
          "path": "pandas.core.frame.DataFrame.applymap",
          "version": "1.4.1"
        },
        "value": "DataFrame.applymap"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "Apply a mapping correspondence on a "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": "class",
                "value": "~pandas.Series"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": "."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "pandas",
          "path": "pandas.core.series.Series.map",
          "version": "1.4.1"
        },
        "value": "Series.map"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "pipe(self, func: 'Callable[..., T] | tuple[Callable[..., T], str]', *args, **kwargs) -> 'T'"
  }
}