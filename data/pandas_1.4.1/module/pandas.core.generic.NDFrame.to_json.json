{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Note NaN's and None will be converted to null and datetime objects will be converted to UNIX timestamps."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The behavior of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "indent=0"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " varies from the stdlib, which does not indent the output but does insert newlines. Currently, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "indent=0"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and the default "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "indent=None"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " are equivalent in pandas, though this may change in a future release."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": [
                    "orient='table'"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " contains a 'pandas_version' field under 'schema'. This stores the version of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "pandas",
                    "path": "pandas",
                    "version": "1.4.1"
                  },
                  "value": "pandas"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " used in the latest revision of the schema."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "String, path object (implementing os.PathLike[str]), or file-like object implementing a write() function. If None, the result is returned as a string."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "path_or_buf",
            "type_": "str, path object, file-like object, or None, default None"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Indication of expected JSON string format."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "Series:"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        },
                        {
                          "data": {
                            "value": [
                              "- default is 'index'",
                              "- allowed values are: {'split', 'records', 'index', 'table'}."
                            ]
                          },
                          "type": "BlockQuote"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "DataFrame:"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        },
                        {
                          "data": {
                            "value": [
                              "- default is 'columns'",
                              "- allowed values are: {'split', 'records', 'index', 'columns',",
                              "  'values', 'table'}."
                            ]
                          },
                          "type": "BlockQuote"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ],
            "param": "orient",
            "type_": "str"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Type of date conversion. 'epoch' = epoch milliseconds, 'iso' = ISO8601. The default depends on the "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "orient",
                          "version": null
                        },
                        "value": "orient"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ". For "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "orient='table'"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", the default is 'iso'. For all other orients, the default is 'epoch'."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "date_format",
            "type_": "{None, 'epoch', 'iso'}"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The number of decimal places to use when encoding floating point values."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "double_precision",
            "type_": "int, default 10"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Force encoded string to be ASCII."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "force_ascii",
            "type_": "bool, default True"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The time unit to encode to, governs timestamp and ISO8601 precision.  One of 's', 'ms', 'us', 'ns' for second, millisecond, microsecond, and nanosecond respectively."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "date_unit",
            "type_": "str, default 'ms' (milliseconds)"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Handler to call if object cannot otherwise be converted to a suitable format for JSON. Should receive a single argument which is the object to convert and return a serialisable object."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "default_handler",
            "type_": "callable, default None"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If 'orient' is 'records' write out line-delimited json format. Will throw ValueError if incorrect 'orient' since others are not list-like."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "lines",
            "type_": "bool, default False"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "For on-the-fly compression of the output data. If 'infer' and 'path_or_buf' path-like, then detect compression from the following extensions: '.gz', '.bz2', '.zip', '.xz', or '.zst' (otherwise no compression). Set to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "None"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " for no compression. Can also be a dict with key "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "'method'"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " set to one of {"
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "'zip'"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "'gzip'"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "'bz2'"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "'zstd'"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "} and other key-value pairs are forwarded to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "zipfile.ZipFile"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "gzip.GzipFile"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "bz2.BZ2File"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", or "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "zstandard.ZstdDecompressor"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", respectively. As an example, the following could be passed for faster compression and to create a reproducible gzip archive: "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "compression={'method': 'gzip', 'compresslevel': 1, 'mtime': 1}"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "inline": [
                        {
                          "data": {
                            "value": "1.4.0 Zstandard support. "
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    }
                  ],
                  "kind": "versionchanged",
                  "title": "TODO"
                },
                "type": "Admonition"
              }
            ],
            "param": "compression",
            "type_": "str or dict, default 'infer'"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Whether to include the index values in the JSON string. Not including the index ("
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "index=False"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ") is only supported when orient is 'split' or 'table'."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "index",
            "type_": "bool, default True"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Length of whitespace used to indent each record."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "inline": [
                        {
                          "data": {
                            "value": "1.0.0 "
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    }
                  ],
                  "kind": "versionadded",
                  "title": "TODO"
                },
                "type": "Admonition"
              }
            ],
            "param": "indent",
            "type_": "int, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Extra options that make sense for a particular storage connection, e.g. host, port, username, password, etc. For HTTP(S) URLs the key-value pairs are forwarded to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "urllib"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " as header options. For other URLs (e.g. starting with \"s3://\", and \"gcs://\") the key-value pairs are forwarded to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "fsspec"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ". Please see "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "fsspec"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "urllib"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " for more details."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "inline": [
                        {
                          "data": {
                            "value": "1.2.0 "
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    }
                  ],
                  "kind": "versionadded",
                  "title": "TODO"
                },
                "type": "Admonition"
              }
            ],
            "param": "storage_options",
            "type_": "dict, optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If path_or_buf is None, returns the resulting json format as a string. Otherwise returns None."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "None or str"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Convert the object to a JSON string."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "pandas.core.frame.NDFrame.to_json"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "json",
              "json",
              "nn"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "df",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "pd",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "DataFrame",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "a",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "b",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "c",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "d",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "index",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "row 1",
              "",
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "row 2",
              "",
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "columns",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "col 1",
              "",
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "col 2",
              "",
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": ""
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "result",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "df",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "to_json",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "orient",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "split",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "parsed",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "json",
              "json",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "loads",
              "json.loads",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "result",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "json",
              "json",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "dumps",
              "json.dumps",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "parsed",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "indent",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ]
          ],
          "out": "{\n    \"columns\": [\n        \"col 1\",\n        \"col 2\"\n    ],\n    \"index\": [\n        \"row 1\",\n        \"row 2\"\n    ],\n    \"data\": [\n        [\n            \"a\",\n            \"b\"\n        ],\n        [\n            \"c\",\n            \"d\"\n        ]\n    ]\n}"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Encoding/decoding a Dataframe using "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "'records'"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " formatted JSON. Note that index labels are not preserved with this encoding."
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "result",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "df",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "to_json",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "orient",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "records",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "parsed",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "json",
              "json",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "loads",
              "json.loads",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "result",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "json",
              "json",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "dumps",
              "json.dumps",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "parsed",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "indent",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ]
          ],
          "out": "[\n    {\n        \"col 1\": \"a\",\n        \"col 2\": \"b\"\n    },\n    {\n        \"col 1\": \"c\",\n        \"col 2\": \"d\"\n    }\n]"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Encoding/decoding a Dataframe using "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "'index'"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " formatted JSON:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "result",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "df",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "to_json",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "orient",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "index",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "parsed",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "json",
              "json",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "loads",
              "json.loads",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "result",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "json",
              "json",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "dumps",
              "json.dumps",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "parsed",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "indent",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ]
          ],
          "out": "{\n    \"row 1\": {\n        \"col 1\": \"a\",\n        \"col 2\": \"b\"\n    },\n    \"row 2\": {\n        \"col 1\": \"c\",\n        \"col 2\": \"d\"\n    }\n}"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Encoding/decoding a Dataframe using "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "'columns'"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " formatted JSON:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "result",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "df",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "to_json",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "orient",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "columns",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "parsed",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "json",
              "json",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "loads",
              "json.loads",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "result",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "json",
              "json",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "dumps",
              "json.dumps",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "parsed",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "indent",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ]
          ],
          "out": "{\n    \"col 1\": {\n        \"row 1\": \"a\",\n        \"row 2\": \"c\"\n    },\n    \"col 2\": {\n        \"row 1\": \"b\",\n        \"row 2\": \"d\"\n    }\n}"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Encoding/decoding a Dataframe using "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "'values'"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " formatted JSON:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "result",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "df",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "to_json",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "orient",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "values",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "parsed",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "json",
              "json",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "loads",
              "json.loads",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "result",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "json",
              "json",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "dumps",
              "json.dumps",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "parsed",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "indent",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ]
          ],
          "out": "[\n    [\n        \"a\",\n        \"b\"\n    ],\n    [\n        \"c\",\n        \"d\"\n    ]\n]"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Encoding with Table Schema:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "result",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "df",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "to_json",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "orient",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "table",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "parsed",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "json",
              "json",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "loads",
              "json.loads",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "result",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "json",
              "json",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "dumps",
              "json.dumps",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "parsed",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "indent",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ]
          ],
          "out": "{\n    \"schema\": {\n        \"fields\": [\n            {\n                \"name\": \"index\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"col 1\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"col 2\",\n                \"type\": \"string\"\n            }\n        ],\n        \"primaryKey\": [\n            \"index\"\n        ],\n        \"pandas_version\": \"1.4.0\"\n    },\n    \"data\": [\n        {\n            \"index\": \"row 1\",\n            \"col 1\": \"a\",\n            \"col 2\": \"b\"\n        },\n        {\n            \"index\": \"row 2\",\n            \"col 1\": \"c\",\n            \"col 2\": \"d\"\n        }\n    ]\n}"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/pandas/core/generic.py",
  "item_line": 2367,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "refs": [
    "json",
    "json.dumps",
    "json.loads",
    "read_json"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Convert a JSON string to pandas object."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "read_json",
        "ref": "pandas.io.json._json.read_json"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "to_json(self, path_or_buf: 'FilePath | WriteBuffer[bytes] | WriteBuffer[str] | None' = None, orient: 'str | None' = None, date_format: 'str | None' = None, double_precision: 'int' = 10, force_ascii: 'bool_t' = True, date_unit: 'str' = 'ms', default_handler: 'Callable[[Any], JSONSerializable] | None' = None, lines: 'bool_t' = False, compression: 'CompressionOptions' = 'infer', index: 'bool_t' = True, indent: 'int | None' = None, storage_options: 'StorageOptions' = None) -> 'str | None'"
  }
}