{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The function passed to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "apply"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " must take a series as its first argument and return a DataFrame, Series or scalar. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "apply"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " will then take care of combining the results back together into a single dataframe or series. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "apply"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is therefore a highly flexible grouping method."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "While "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "apply"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is a very flexible method, its downside is that using it can be quite a bit slower than using more specific methods like "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "agg"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "transform"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". Pandas offers a wide range of method that will be much faster than using "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "apply"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for their specific purposes, so try to use them before reaching for "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "apply"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "inline": [
                  {
                    "data": {
                      "value": "The resulting dtype will reflect the return value of the passed ``func``, see the examples below. "
                    },
                    "type": "Words"
                  }
                ],
                "inner": []
              }
            ],
            "kind": "versionchanged",
            "title": "1.3.0"
          },
          "type": "Admonition"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Functions that mutate the passed object can produce unexpected behavior or errors and are not supported. See "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "gotchas.udf-mutation"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for more details."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "A callable that takes a series as its first argument, and returns a dataframe, a series or a scalar. In addition the callable may take positional and keyword arguments."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "func",
            "type_": "callable"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Optional positional and keyword arguments to pass to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "func"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "args, kwargs",
            "type_": "tuple and dict"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [],
            "param": "applied",
            "type_": "Series or DataFrame"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Apply function "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "func"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " group-wise and combine the results together."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "pandas.core.groupby.SeriesGroupBy.apply"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "s",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "pd",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "Series",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "index",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "a a b",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "split",
              "builtins.str.split",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "g",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "s",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "groupby",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "s",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "index",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": ""
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "From "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "s"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " above we can see that "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "g"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " has two groups, "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "a"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " and "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "b"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": ". Calling "
              },
              "type": "Words"
            },
            {
              "data": {
                "exists": true,
                "kind": "module",
                "reference": {
                  "kind": "module",
                  "module": "pandas",
                  "path": "pandas.core.apply",
                  "version": "1.4.1"
                },
                "value": "apply"
              },
              "type": "Link"
            },
            {
              "data": {
                "value": " in various ways, we can get different grouping results:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Example 1: The function passed to "
              },
              "type": "Words"
            },
            {
              "data": {
                "exists": true,
                "kind": "module",
                "reference": {
                  "kind": "module",
                  "module": "pandas",
                  "path": "pandas.core.apply",
                  "version": "1.4.1"
                },
                "value": "apply"
              },
              "type": "Link"
            },
            {
              "data": {
                "value": " takes a Series as its argument and returns a Series.  "
              },
              "type": "Words"
            },
            {
              "data": {
                "exists": true,
                "kind": "module",
                "reference": {
                  "kind": "module",
                  "module": "pandas",
                  "path": "pandas.core.apply",
                  "version": "1.4.1"
                },
                "value": "apply"
              },
              "type": "Link"
            },
            {
              "data": {
                "value": " combines the result for each group together into a new Series."
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "children": [
            {
              "inline": [
                {
                  "data": {
                    "value": "1.3.0 "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          ],
          "kind": "versionchanged",
          "title": "TODO"
        },
        "type": "Admonition"
      },
      {
        "data": {
          "value": [
            "The resulting dtype will reflect the return value of the passed ``func``."
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "g",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "apply",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "lambda",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "x",
              null,
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "x",
              null,
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "if",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "x",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "name",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "==",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "a",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "else",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "x",
              null,
              ""
            ],
            [
              "/",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "a    0.0\na    2.0\nb    1.0\ndtype: float64"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Example 2: The function passed to "
              },
              "type": "Words"
            },
            {
              "data": {
                "exists": true,
                "kind": "module",
                "reference": {
                  "kind": "module",
                  "module": "pandas",
                  "path": "pandas.core.apply",
                  "version": "1.4.1"
                },
                "value": "apply"
              },
              "type": "Link"
            },
            {
              "data": {
                "value": " takes a Series as its argument and returns a scalar. "
              },
              "type": "Words"
            },
            {
              "data": {
                "exists": true,
                "kind": "module",
                "reference": {
                  "kind": "module",
                  "module": "pandas",
                  "path": "pandas.core.apply",
                  "version": "1.4.1"
                },
                "value": "apply"
              },
              "type": "Link"
            },
            {
              "data": {
                "value": " combines the result for each group together into a Series, including setting the index as appropriate:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "g",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "apply",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "lambda",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "x",
              null,
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "x",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "max",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "x",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "min",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "a    1\nb    0\ndtype: int64"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/pandas/core/groupby/generic.py",
  "item_line": 238,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "refs": [
    "DataFrame.apply",
    "Series.apply",
    "aggregate",
    "builtins.str.split",
    "pipe",
    "transform"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Apply function to the full GroupBy object instead of to each group."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "pipe",
        "ref": null
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Apply aggregate function to the GroupBy object."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "aggregate",
        "ref": null
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Apply function column-by-column to the GroupBy object."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "transform",
        "ref": null
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Apply a function to a Series."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "Series.apply",
        "ref": "pandas.core.series.Series.apply"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Apply a function to each row or column of a DataFrame."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "DataFrame.apply",
        "ref": null
      },
      "type": null
    }
  ],
  "signature": {
    "value": "apply(self, func, *args, **kwargs)"
  }
}