{
  "_content": {
    "Attributes": {
      "children": [
        {
          "data": {
            "desc": [],
            "param": "shape",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "ndim",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "axes",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "values",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "items",
            "type_": ""
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Manage a bunch of labeled 2D mixed-type ndarrays. Essentially it's a lightweight blocked set of labeled data to be manipulated by the DataFrame public API class"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [
        {
          "data": {
            "desc": [],
            "param": "set_axis(axis, new_labels)",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "copy(deep=True)",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "get_dtypes",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "apply(func, axes, block_filter_fn)",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "get_bool_data",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "get_numeric_data",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "get_slice(slice_like, axis)",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "get(label)",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "iget(loc)",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "take(indexer, axis)",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "reindex_axis(new_labels, axis)",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "reindex_indexer(new_labels, indexer, axis)",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "delete(label)",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "insert(loc, label, value)",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "set(label, value)",
            "type_": ""
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "This is "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "not"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " a public API class"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [],
            "param": "blocks: Sequence of Block",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "axes: Sequence of Index",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "verify_integrity: bool, default True",
            "type_": ""
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Core internal data structure to implement DataFrame, Series, etc."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "pandas.core.internals.managers.BaseBlockManager"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/pandas/core/internals/managers.py",
  "item_line": 87,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Attributes",
    "Methods",
    "Parameters",
    "Notes"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": null
  }
}