{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "See "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "api",
                    "module": "scipy",
                    "path": "scipy.interpolate._cubic.CubicSpline",
                    "version": "*"
                  },
                  "value": "scipy.interpolate.CubicSpline"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " for details."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "1-d array containing values of the independent variable. Values must be real, finite and in strictly increasing order."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "xi",
                "type_": "array-like, shape (n,)"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Array containing values of the dependent variable. It can have arbitrary number of dimensions, but the length along "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "axis"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " (see below) must match the length of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "x"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". Values must be finite."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "yi",
                "type_": "array-like"
              },
              {
                "desc": [],
                "param": "x",
                "type_": "scalar or array-like, shape (m,)"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Axis along which "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "y",
                              "version": null
                            },
                            "value": "y"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is assumed to be varying. Meaning that for "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "x[i]"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " the corresponding values are "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "np.take(y, i, axis=axis)"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". Default is 0."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "axis",
                "type_": "int, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Boundary condition type. Two additional equations, given by the boundary conditions, are required to determine all coefficients of polynomials on each segment . If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "pandas",
                              "path": "pandas.core.dtypes.generic.create_pandas_abc_type",
                              "version": "1.4.1"
                            },
                            "value": "bc_type"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is a string, then the specified condition will be applied at both ends of a spline. Available conditions are: * 'not-a-knot' (default): The first and second segment at a curve end   are the same polynomial. It is a good default when there is no   information on boundary conditions. * 'periodic': The interpolated functions is assumed to be periodic   of period "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "x[-1] - x[0]"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". The first and last value of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "y",
                              "version": null
                            },
                            "value": "y"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " must be   identical: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "y[0] == y[-1]"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". This boundary condition will result in   "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "y'[0] == y'[-1]"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "y''[0] == y''[-1]"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". * 'clamped': The first derivative at curves ends are zero. Assuming   a 1D "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "y",
                              "version": null
                            },
                            "value": "y"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ", "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "bc_type=((1, 0.0), (1, 0.0))"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " is the same condition. * 'natural': The second derivative at curve ends are zero. Assuming   a 1D "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "y",
                              "version": null
                            },
                            "value": "y"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ", "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "bc_type=((2, 0.0), (2, 0.0))"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " is the same condition. If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "pandas",
                              "path": "pandas.core.dtypes.generic.create_pandas_abc_type",
                              "version": "1.4.1"
                            },
                            "value": "bc_type"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is a 2-tuple, the first and the second value will be applied at the curve start and end respectively. The tuple values can be one of the previously mentioned strings (except 'periodic') or a tuple "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "(order, deriv_values)"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " allowing to specify arbitrary derivatives at curve ends: * "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "order"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ": the derivative order, 1 or 2. * "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "deriv_value"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ": array-like containing derivative values, shape must   be the same as "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "y",
                              "version": null
                            },
                            "value": "y"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ", excluding "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "axis"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " dimension. For example, if   "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "y",
                              "version": null
                            },
                            "value": "y"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is 1D, then "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "deriv_value"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " must be a scalar. If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "y",
                              "version": null
                            },
                            "value": "y"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is 3D with   the shape (n0, n1, n2) and axis=2, then "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "deriv_value"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " must be 2D   and have the shape (n0, n1)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "bc_type",
                "type_": "string or 2-tuple, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If bool, determines whether to extrapolate to out-of-bounds points based on first and last intervals, or to return NaNs. If 'periodic', periodic extrapolation is used. If None (default), "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "extrapolate"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " is set to 'periodic' for "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "bc_type='periodic'"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " and to True otherwise."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "extrapolate",
                "type_": "{bool, 'periodic', None}, optional"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The result, of shape (m,)"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "y",
                "type_": "scalar or array-like"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Convenience function for cubic spline data interpolator."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "pandas.core.missing._cubicspline_interpolate"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/pandas/core/missing.py",
  "item_line": 626,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "See Also",
    "Returns",
    "References"
  ],
  "references": null,
  "refs": [
    "scipy.interpolate._cubic.CubicHermiteSpline"
  ],
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "scipy.interpolate.CubicHermiteSpline",
          "version": "current-version"
        },
        "value": "scipy.interpolate.CubicHermiteSpline"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "_cubicspline_interpolate(xi, yi, x, axis=0, bc_type='not-a-knot', extrapolate=None)"
  }
}