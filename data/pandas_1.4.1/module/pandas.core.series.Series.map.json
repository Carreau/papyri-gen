{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Used for substituting each value in a Series with another value, that may be derived from a function, a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "dict"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " or a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Series"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "When "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "arg"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is a dictionary, values in Series that are not in the dictionary (as keys) are converted to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "NaN"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". However, if the dictionary is a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "dict"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " subclass that defines "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "__missing__"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " (i.e. provides a method for default values), then this default is used rather than "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "NaN"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Mapping correspondence."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "arg",
            "type_": "function, collections.abc.Mapping subclass or Series"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If 'ignore', propagate NaN values, without passing them to the mapping correspondence."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "na_action",
            "type_": "{None, 'ignore'}, default None"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Same index as caller."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "Series"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Map values of Series according to an input mapping or function."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "pandas.Series.map"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "s",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "pd",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "Series",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "cat",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "dog",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "nan",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "rabbit",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "s",
              null,
              ""
            ]
          ],
          "out": "0      cat\n1      dog\n2      NaN\n3   rabbit\ndtype: object"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": [
                  "map"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " accepts a "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "dict"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " or a "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "Series"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": ". Values that are not found in the "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "dict"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " are converted to "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "NaN"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": ", unless the dict has a default value (e.g. "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "defaultdict"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": "):"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "s",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "map",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "{",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "cat",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "kitten",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "dog",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "puppy",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "}",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "0   kitten\n1    puppy\n2      NaN\n3      NaN\ndtype: object"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "It also accepts a function:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "s",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "map",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "I am a ",
              "",
              "s1"
            ],
            [
              "{}",
              "",
              "si"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "format",
              "builtins.str.format",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "0       I am a cat\n1       I am a dog\n2       I am a nan\n3    I am a rabbit\ndtype: object"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "To avoid applying the function to missing values (and keep them as "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "NaN"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": ") "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "na_action='ignore'"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " can be used:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "s",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "map",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "I am a ",
              "",
              "s1"
            ],
            [
              "{}",
              "",
              "si"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "format",
              "builtins.str.format",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "na_action",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "ignore",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "0     I am a cat\n1     I am a dog\n2            NaN\n3  I am a rabbit\ndtype: object"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/pandas/core/series.py",
  "item_line": 4162,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "refs": [
    "DataFrame.apply",
    "DataFrame.applymap",
    "Series.apply",
    "builtins.float",
    "builtins.str.format",
    "numpy"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "For applying more complex functions on a Series."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "Series.apply",
        "ref": "pandas.core.series.Series.apply"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Apply a function row-/column-wise."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "DataFrame.apply",
        "ref": null
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Apply a function elementwise on a whole DataFrame."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "DataFrame.applymap",
        "ref": "pandas.core.frame.DataFrame.applymap"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "map(self, arg, na_action=None) -> 'Series'"
  }
}