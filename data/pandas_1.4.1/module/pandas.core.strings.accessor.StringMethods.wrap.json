{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "This method has the same keyword parameters and defaults as "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "textwrap.TextWrapper"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Internally, this method uses a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "textwrap.TextWrapper"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " instance with default settings. To achieve behavior matching R's stringr library str_wrap function, use the arguments:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "expand_tabs = False"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "replace_whitespace = True"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "drop_whitespace = True"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "break_long_words = False"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "break_on_hyphens = False"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Maximum line width."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "width",
            "type_": "int"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If True, tab characters will be expanded to spaces (default: True)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "expand_tabs",
            "type_": "bool, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If True, each whitespace character (as defined by string.whitespace) remaining after tab expansion will be replaced by a single space (default: True)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "replace_whitespace",
            "type_": "bool, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If True, whitespace that, after wrapping, happens to end up at the beginning or end of a line is dropped (default: True)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "drop_whitespace",
            "type_": "bool, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If True, then words longer than width will be broken in order to ensure that no lines are longer than width. If it is false, long words will not be broken, and some lines may be longer than width (default: True)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "break_long_words",
            "type_": "bool, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If True, wrapping will occur preferably on whitespace and right after hyphens in compound words, as it is customary in English. If false, only whitespaces will be considered as potentially good places for line breaks, but you need to set break_long_words to false if you want truly insecable words (default: True)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "break_on_hyphens",
            "type_": "bool, optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [],
            "param": "",
            "type_": "Series or Index"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Wrap strings in Series/Index at specified line width."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "pandas.core.series.StringMethods.wrap"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "s",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "pd",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "Series",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "line to be wrapped",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "another line to be wrapped",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "s",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "str",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "wrap",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "12",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "0             line to be\\nwrapped\n1    another line\\nto be\\nwrapped\ndtype: object"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/pandas/core/strings/accessor.py",
  "item_line": 2035,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes",
    "Examples"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "wrap(self, width, **kwargs)"
  }
}