{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Quantile to compute. 0 <= quantile <= 1."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "quantile",
            "type_": "float"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "This optional parameter specifies the interpolation method to use, when the desired quantile lies between two data points "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "i"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "j"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": ":"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "value": [
                    "* linear: `i + (j - i) * fraction`, where `fraction` is the",
                    "  fractional part of the index surrounded by `i` and `j`.",
                    "* lower: `i`.",
                    "* higher: `j`.",
                    "* nearest: `i` or `j` whichever is nearest.",
                    "* midpoint: (`i` + `j`) / 2."
                  ]
                },
                "type": "BlockQuote"
              }
            ],
            "param": "interpolation",
            "type_": "{'linear', 'lower', 'higher', 'midpoint', 'nearest'}"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "For NumPy compatibility and will not have an effect on the result."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "**kwargs",
            "type_": ""
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Return type is the same as the original object with "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "np.float64"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " dtype."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "Series or DataFrame"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Calculate the expanding quantile."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "pandas.core.generic.Expanding.quantile"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/pandas/core/window/expanding.py",
  "item_line": 569,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also"
  ],
  "references": null,
  "refs": [
    "pandas.DataFrame.expanding",
    "pandas.DataFrame.quantile",
    "pandas.Series.expanding",
    "pandas.Series.quantile"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Calling expanding with Series data."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "pandas.Series.expanding",
        "ref": "pandas.core.generic.NDFrame.expanding"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Calling expanding with DataFrames."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "pandas.DataFrame.expanding",
        "ref": "pandas.core.generic.NDFrame.expanding"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Aggregating quantile for Series."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "pandas.Series.quantile",
        "ref": "pandas.core.series.Series.quantile"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Aggregating quantile for DataFrame."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "pandas.DataFrame.quantile",
        "ref": "pandas.core.frame.DataFrame.quantile"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "quantile(self, quantile: 'float', interpolation: 'str' = 'linear', **kwargs)"
  }
}