{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "value": [
              "Because :func:`DataFrame.to_json` uses the string 'index' to denote a",
              "name-less :class:`Index`, this function sets the name of the returned",
              ":class:`DataFrame` to ``None`` when said string is encountered with a",
              "normal :class:`Index`. For a :class:`MultiIndex`, the same limitation",
              "applies to any strings beginning with 'level_'. Therefore, an",
              ":class:`Index` name of 'index'  and :class:`MultiIndex` names starting",
              "with 'level_' are not supported."
            ]
          },
          "type": "BlockQuote"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A JSON table schema"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "json",
                "type_": ""
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Flag controlling precision when decoding string to double values, as dictated by "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "read_json"
                            ]
                          },
                          "type": "Verbatim"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "precise_float",
                "type_": "bool"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If the JSON table schema contains either timezone or timedelta data"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "",
                "type_": "NotImplementedError"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [],
                "param": "df",
                "type_": "DataFrame"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Builds a DataFrame from a given schema"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "pandas.io.json._json.parse_table_schema"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/pandas/io/json/_table_schema.py",
  "item_line": 305,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Raises",
    "Notes",
    "See Also"
  ],
  "references": null,
  "refs": [
    "build_table_schema",
    "pandas.io.json._json.read_json"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "Inverse function."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "pandas",
          "path": "pandas.io.json._table_schema.build_table_schema",
          "version": "1.4.1"
        },
        "value": "build_table_schema"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "pandas",
          "path": "pandas.io.json._json.read_json",
          "version": "1.4.1"
        },
        "value": "pandas.read_json"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "parse_table_schema(json, precise_float)"
  }
}