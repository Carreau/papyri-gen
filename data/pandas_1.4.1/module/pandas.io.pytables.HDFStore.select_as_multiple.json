{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "inline": [
                  {
                    "data": {
                      "value": "Pandas uses PyTables for reading and writing HDF5 files, which allows serializing object - dtype data with pickle when using the \" fixed \" format. Loading pickled data received from untrusted sources can be unsafe. See : https : / / docs.python.org / 3 / library / pickle.html for more. "
                    },
                    "type": "Words"
                  }
                ],
                "inner": []
              }
            ],
            "kind": "warning",
            "title": ""
          },
          "type": "Admonition"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [],
            "param": "keys",
            "type_": "a list of the tables"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "if not supplied)"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "selector",
            "type_": "the table to apply the where criteria (defaults to keys[0]"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "columns",
            "type_": "the columns I want back"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "start",
            "type_": "integer (defaults to None), row number to start selection"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "stop",
            "type_": "integer (defaults to None), row number to stop selection"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "iterator",
            "type_": "bool, return an iterator, default False"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "chunksize",
            "type_": "nrows to include in iteration, return an iterator"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Should automatically close the store when finished."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "auto_close",
            "type_": "bool, default False"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "data": {
            "desc": [],
            "param": "",
            "type_": "raises KeyError if keys or selector is not found or keys is empty"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "",
            "type_": "raises TypeError if keys is not a list or tuple"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "",
            "type_": "raises ValueError if the tables are not ALL THE SAME DIMENSIONS"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Retrieve pandas objects from multiple tables."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "pandas.HDFStore.select_as_multiple"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/pandas/io/pytables.py",
  "item_line": 949,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Raises"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "select_as_multiple(self, keys, where=None, selector=None, columns=None, start=None, stop=None, iterator=False, chunksize=None, auto_close: 'bool' = False)"
  }
}