{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "To remove in the future \u2013\u2013 pandas"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "pandas"
  ],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "content": {
                    "value": "pandas"
                  }
                },
                "type": "Strong"
              },
              {
                "data": {
                  "value": " is a Python package providing fast, flexible, and expressive data structures designed to make working with \"relational\" or \"labeled\" data both easy and intuitive. It aims to be the fundamental high-level building block for doing practical, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "content": {
                    "value": "real world"
                  }
                },
                "type": "Strong"
              },
              {
                "data": {
                  "value": " data analysis in Python. Additionally, it has the broader goal of becoming "
                },
                "type": "Words"
              },
              {
                "data": {
                  "content": {
                    "value": "the most powerful and flexible open source data\nanalysis / manipulation tool available in any language"
                  }
                },
                "type": "Strong"
              },
              {
                "data": {
                  "value": ". It is already well on its way toward this goal."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": "pandas - a powerful data analysis and manipulation library for Python"
    },
    {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Here are just a few of the things that pandas does well:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": [
              "- Easy handling of missing data in floating point as well as non-floating",
              "  point data.",
              "- Size mutability: columns can be inserted and deleted from DataFrame and",
              "  higher dimensional objects",
              "- Automatic and explicit data alignment: objects can be explicitly aligned",
              "  to a set of labels, or the user can simply ignore the labels and let",
              "  `Series`, `DataFrame`, etc. automatically align the data for you in",
              "  computations.",
              "- Powerful, flexible group by functionality to perform split-apply-combine",
              "  operations on data sets, for both aggregating and transforming data.",
              "- Make it easy to convert ragged, differently-indexed data in other Python",
              "  and NumPy data structures into DataFrame objects.",
              "- Intelligent label-based slicing, fancy indexing, and subsetting of large",
              "  data sets.",
              "- Intuitive merging and joining data sets.",
              "- Flexible reshaping and pivoting of data sets.",
              "- Hierarchical labeling of axes (possible to have multiple labels per tick).",
              "- Robust IO tools for loading data from flat files (CSV and delimited),",
              "  Excel files, databases, and saving/loading data from the ultrafast HDF5",
              "  format.",
              "- Time series-specific functionality: date range generation and frequency",
              "  conversion, moving window statistics, date shifting and lagging."
            ]
          },
          "type": "BlockQuote"
        }
      ],
      "title": "Main Features"
    }
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/pandas/__init__.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": null
  }
}