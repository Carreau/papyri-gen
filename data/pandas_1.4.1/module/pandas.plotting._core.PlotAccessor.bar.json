{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "A bar plot is a plot that presents categorical data with rectangular bars with lengths proportional to the values that they represent. A bar plot shows comparisons among discrete categories. One axis of the plot shows the specific categories being compared, and the other axis represents a measured value."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Allows plotting of one column versus another. If not specified, the index of the DataFrame is used."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "x",
            "type_": "label or position, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Allows plotting of one column versus another. If not specified, all numerical columns are used."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "y",
            "type_": "label or position, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The color for each of the DataFrame's columns. Possible values are:"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "children": [
                              {
                                "dd": [
                                  {
                                    "data": {
                                      "inline": [
                                        {
                                          "data": {
                                            "value": "for instance 'red' or '#a98d19'."
                                          },
                                          "type": "Words"
                                        }
                                      ],
                                      "inner": []
                                    },
                                    "type": "Paragraph"
                                  }
                                ],
                                "dt": {
                                  "inline": [
                                    {
                                      "data": {
                                        "value": "A single color string referred to by name, RGB or RGBA code,"
                                      },
                                      "type": "Words"
                                    }
                                  ],
                                  "inner": []
                                }
                              }
                            ]
                          },
                          "type": "DefList"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "children": [
                              {
                                "dd": [
                                  {
                                    "data": {
                                      "inline": [
                                        {
                                          "data": {
                                            "value": "code, which will be used for each column recursively. For     instance ['green','yellow'] each column's bar will be filled in     green or yellow, alternatively. If there is only a single column to     be plotted, then only the first color from the color list will be     used."
                                          },
                                          "type": "Words"
                                        }
                                      ],
                                      "inner": []
                                    },
                                    "type": "Paragraph"
                                  }
                                ],
                                "dt": {
                                  "inline": [
                                    {
                                      "data": {
                                        "value": "A sequence of color strings referred to by name, RGB or RGBA"
                                      },
                                      "type": "Words"
                                    }
                                  ],
                                  "inner": []
                                }
                              }
                            ]
                          },
                          "type": "DefList"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "children": [
                              {
                                "dd": [
                                  {
                                    "data": {
                                      "inline": [
                                        {
                                          "data": {
                                            "value": "A dict of the form {column name"
                                          },
                                          "type": "Words"
                                        }
                                      ],
                                      "inner": []
                                    },
                                    "type": "Paragraph"
                                  }
                                ],
                                "dt": {
                                  "inline": [
                                    {
                                      "data": {
                                        "value": "Adictoftheform{columnname"
                                      },
                                      "type": "Words"
                                    }
                                  ],
                                  "inner": []
                                }
                              }
                            ]
                          },
                          "type": "DefList"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              },
              {
                "data": {
                  "children": [
                    {
                      "inline": [
                        {
                          "data": {
                            "value": "1.1.0 "
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    }
                  ],
                  "kind": "versionadded",
                  "title": "TODO"
                },
                "type": "Admonition"
              }
            ],
            "param": "color",
            "type_": "str, array-like, or dict, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Additional keyword arguments are documented in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "DataFrame.plot"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "**kwargs",
            "type_": ""
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "An ndarray is returned with one "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "matplotlib.axes.Axes"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " per column when "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "subplots=True"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "matplotlib.axes.Axes or np.ndarray of them"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Vertical bar plot."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "pandas.plotting.PlotAccessor.bar"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "value": [
            "Basic plot."
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            ".. plot::",
            "    :context: close-figs"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            ">>> df = pd.DataFrame({'lab':['A', 'B', 'C'], 'val':[10, 30, 20]})",
            ">>> ax = df.plot.bar(x='lab', y='val', rot=0)"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            "Plot a whole dataframe to a bar plot. Each column is assigned a",
            "distinct color, and each row is nested in a group along the",
            "horizontal axis."
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            ".. plot::",
            "    :context: close-figs"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            ">>> speed = [0.1, 17.5, 40, 48, 52, 69, 88]",
            ">>> lifespan = [2, 8, 70, 1.5, 25, 12, 28]",
            ">>> index = ['snail', 'pig', 'elephant',",
            "...          'rabbit', 'giraffe', 'coyote', 'horse']",
            ">>> df = pd.DataFrame({'speed': speed,",
            "...                    'lifespan': lifespan}, index=index)",
            ">>> ax = df.plot.bar(rot=0)"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            "Plot stacked bar charts for the DataFrame"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            ".. plot::",
            "    :context: close-figs"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            ">>> ax = df.plot.bar(stacked=True)"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            "Instead of nesting, the figure can be split by column with",
            "``subplots=True``. In this case, a :class:`numpy.ndarray` of",
            ":class:`matplotlib.axes.Axes` are returned."
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            ".. plot::",
            "    :context: close-figs"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            ">>> axes = df.plot.bar(rot=0, subplots=True)",
            ">>> axes[1].legend(loc=2)  # doctest: +SKIP"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            "If you don't like the default colours, you can specify how you'd",
            "like each column to be colored."
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            ".. plot::",
            "    :context: close-figs"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            ">>> axes = df.plot.bar(",
            "...     rot=0, subplots=True, color={\"speed\": \"red\", \"lifespan\": \"green\"}",
            "... )",
            ">>> axes[1].legend(loc=2)  # doctest: +SKIP"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            "Plot a single column."
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            ".. plot::",
            "    :context: close-figs"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            ">>> ax = df.plot.bar(y='speed', rot=0)"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            "Plot only selected categories for the DataFrame."
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            ".. plot::",
            "    :context: close-figs"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "value": [
            ">>> ax = df.plot.bar(x='lifespan', rot=0)"
          ]
        },
        "type": "BlockQuote"
      }
    ],
    "title": null
  },
  "item_file": "/pandas/plotting/_core.py",
  "item_line": 1043,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Examples"
  ],
  "references": null,
  "refs": [
    "DataFrame.plot",
    "DataFrame.plot.barh",
    "matplotlib.pyplot.bar"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Horizontal bar plot."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "DataFrame.plot.barh",
        "ref": null
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Make plots of a DataFrame."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "DataFrame.plot",
        "ref": null
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Make a bar plot with matplotlib."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "matplotlib.pyplot.bar",
        "ref": "matplotlib.pyplot.bar"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "bar(self, x=None, y=None, **kwargs)"
  }
}