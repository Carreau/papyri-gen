{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "A bar plot is a plot that presents categorical data with rectangular bars with lengths proportional to the values that they represent. A bar plot shows comparisons among discrete categories. One axis of the plot shows the specific categories being compared, and the other axis represents a measured value."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Allows plotting of one column versus another. If not specified, the index of the DataFrame is used."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "x",
                "type_": "label or position, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Allows plotting of one column versus another. If not specified, all numerical columns are used."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "y",
                "type_": "label or position, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The color for each of the DataFrame's columns. Possible values are:"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "dd": [
                                      {
                                        "data": {
                                          "children": [
                                            {
                                              "data": {
                                                "value": "for instance 'red' or '#a98d19'."
                                              },
                                              "type": "Words"
                                            }
                                          ]
                                        },
                                        "type": "Paragraph"
                                      }
                                    ],
                                    "dt": {
                                      "children": [
                                        {
                                          "data": {
                                            "value": "A single color string referred to by name, RGB or RGBA code,"
                                          },
                                          "type": "Words"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "type": "DefList"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "dd": [
                                      {
                                        "data": {
                                          "children": [
                                            {
                                              "data": {
                                                "value": "code, which will be used for each column recursively. For     instance ['green','yellow'] each column's bar will be filled in     green or yellow, alternatively. If there is only a single column to     be plotted, then only the first color from the color list will be     used."
                                              },
                                              "type": "Words"
                                            }
                                          ]
                                        },
                                        "type": "Paragraph"
                                      }
                                    ],
                                    "dt": {
                                      "children": [
                                        {
                                          "data": {
                                            "value": "A sequence of color strings referred to by name, RGB or RGBA"
                                          },
                                          "type": "Words"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "type": "DefList"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "dd": [
                                      {
                                        "data": {
                                          "children": [
                                            {
                                              "data": {
                                                "value": "A dict of the form {column name"
                                              },
                                              "type": "Words"
                                            }
                                          ]
                                        },
                                        "type": "Paragraph"
                                      }
                                    ],
                                    "dt": {
                                      "children": [
                                        {
                                          "data": {
                                            "value": "Adictoftheform{columnname"
                                          },
                                          "type": "Words"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "type": "DefList"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "BulletList"
                  },
                  {
                    "data": {
                      "children": [],
                      "kind": "versionadded",
                      "title": "1.1.0"
                    },
                    "type": "Admonition"
                  }
                ],
                "param": "color",
                "type_": "str, array-like, or dict, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Additional keyword arguments are documented in "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "DataFrame.plot"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "**kwargs",
                "type_": ""
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "An ndarray is returned with one "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "matplotlib.axes.Axes"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " per column when "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "subplots=True"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "",
                "type_": "matplotlib.axes.Axes or np.ndarray of them"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Vertical bar plot."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "pandas.plotting.PlotAccessor.bar"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "children": [
            {
              "data": {
                "children": [
                  {
                    "data": {
                      "value": "Basic plot."
                    },
                    "type": "Words"
                  }
                ]
              },
              "type": "Paragraph"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "argument": "",
                "content": "",
                "name": "plot",
                "options": [
                  [
                    "context",
                    "close-figs"
                  ]
                ]
              },
              "type": "BlockDirective"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> df = pd.DataFrame({'lab':['A', 'B', 'C'], 'val':[10, 30, 20]})\n>>> ax = df.plot.bar(x='lab', y='val', rot=0)"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "children": [
                  {
                    "data": {
                      "value": "Plot a whole dataframe to a bar plot. Each column is assigned a         distinct color, and each row is nested in a group along the         horizontal axis."
                    },
                    "type": "Words"
                  }
                ]
              },
              "type": "Paragraph"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "argument": "",
                "content": "",
                "name": "plot",
                "options": [
                  [
                    "context",
                    "close-figs"
                  ]
                ]
              },
              "type": "BlockDirective"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> speed = [0.1, 17.5, 40, 48, 52, 69, 88]\n>>> lifespan = [2, 8, 70, 1.5, 25, 12, 28]\n>>> index = ['snail', 'pig', 'elephant',\n...          'rabbit', 'giraffe', 'coyote', 'horse']\n>>> df = pd.DataFrame({'speed': speed,\n...                    'lifespan': lifespan}, index=index)\n>>> ax = df.plot.bar(rot=0)"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "children": [
                  {
                    "data": {
                      "value": "Plot stacked bar charts for the DataFrame"
                    },
                    "type": "Words"
                  }
                ]
              },
              "type": "Paragraph"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "argument": "",
                "content": "",
                "name": "plot",
                "options": [
                  [
                    "context",
                    "close-figs"
                  ]
                ]
              },
              "type": "BlockDirective"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> ax = df.plot.bar(stacked=True)"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "children": [
                  {
                    "data": {
                      "value": "Instead of nesting, the figure can be split by column with         "
                    },
                    "type": "Words"
                  },
                  {
                    "data": {
                      "value": [
                        "subplots=True"
                      ]
                    },
                    "type": "Verbatim"
                  },
                  {
                    "data": {
                      "value": ". In this case, a "
                    },
                    "type": "Words"
                  },
                  {
                    "data": {
                      "value": [
                        "numpy.ndarray"
                      ]
                    },
                    "type": "Verbatim"
                  },
                  {
                    "data": {
                      "value": " of         "
                    },
                    "type": "Words"
                  },
                  {
                    "data": {
                      "value": [
                        "matplotlib.axes.Axes"
                      ]
                    },
                    "type": "Verbatim"
                  },
                  {
                    "data": {
                      "value": " are returned."
                    },
                    "type": "Words"
                  }
                ]
              },
              "type": "Paragraph"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "argument": "",
                "content": "",
                "name": "plot",
                "options": [
                  [
                    "context",
                    "close-figs"
                  ]
                ]
              },
              "type": "BlockDirective"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> axes = df.plot.bar(rot=0, subplots=True)\n>>> axes[1].legend(loc=2)  # doctest: +SKIP"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "children": [
                  {
                    "data": {
                      "value": "If you don't like the default colours, you can specify how you'd         like each column to be colored."
                    },
                    "type": "Words"
                  }
                ]
              },
              "type": "Paragraph"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "argument": "",
                "content": "",
                "name": "plot",
                "options": [
                  [
                    "context",
                    "close-figs"
                  ]
                ]
              },
              "type": "BlockDirective"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> axes = df.plot.bar(\n...     rot=0, subplots=True, color={\"speed\": \"red\", \"lifespan\": \"green\"}\n... )\n>>> axes[1].legend(loc=2)  # doctest: +SKIP"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "children": [
                  {
                    "data": {
                      "value": "Plot a single column."
                    },
                    "type": "Words"
                  }
                ]
              },
              "type": "Paragraph"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "argument": "",
                "content": "",
                "name": "plot",
                "options": [
                  [
                    "context",
                    "close-figs"
                  ]
                ]
              },
              "type": "BlockDirective"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> ax = df.plot.bar(y='speed', rot=0)"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "children": [
                  {
                    "data": {
                      "value": "Plot only selected categories for the DataFrame."
                    },
                    "type": "Words"
                  }
                ]
              },
              "type": "Paragraph"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "argument": "",
                "content": "",
                "name": "plot",
                "options": [
                  [
                    "context",
                    "close-figs"
                  ]
                ]
              },
              "type": "BlockDirective"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> ax = df.plot.bar(x='lifespan', rot=0)"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      }
    ],
    "title": null
  },
  "item_file": "/pandas/plotting/_core.py",
  "item_line": 1043,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "Horizontal bar plot."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "DataFrame.plot.barh",
          "version": "current-version"
        },
        "value": "DataFrame.plot.barh"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "Make plots of a DataFrame."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "DataFrame.plot",
          "version": "current-version"
        },
        "value": "DataFrame.plot"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "Make a bar plot with matplotlib."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "matplotlib.pyplot.bar",
          "version": "current-version"
        },
        "value": "matplotlib.pyplot.bar"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "bar(self, x=None, y=None, **kwargs)"
  }
}