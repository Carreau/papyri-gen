{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Make a box-and-whisker plot from DataFrame columns, optionally grouped by some other columns. A box plot is a method for graphically depicting groups of numerical data through their quartiles. The box extends from the Q1 to Q3 quartile values of the data, with a line at the median (Q2). The whiskers extend from the edges of box to show the range of the data. By default, they extend no more than "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "1.5 * IQR (IQR = Q3 - Q1)"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " from the edges of the box, ending at the farthest data point within that interval. Outliers are plotted as separate dots."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "For further details see Wikipedia's entry for "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://en.wikipedia.org/wiki/Box_plot",
                  "value": "boxplot"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The return type depends on the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "return_type",
                    "version": null
                  },
                  "value": "return_type"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " parameter:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Column name or list of names, or vector. Can be any valid input to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "pandas.DataFrame.groupby"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "column",
            "type_": "str or list of str, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Column in the DataFrame to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "pandas.DataFrame.groupby"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ". One box-plot will be done per value of columns in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "by",
                          "version": null
                        },
                        "value": "by"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "by",
            "type_": "str or array-like, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The matplotlib axes to be used by boxplot."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "ax",
            "type_": "object of class matplotlib.axes.Axes, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Tick label font size in points or as a string (e.g., "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "large"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": ")."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "fontsize",
            "type_": "float or str"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The rotation angle of labels (in degrees) with respect to the screen coordinate system."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "rot",
            "type_": "int or float, default 0"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Setting this to True will show the grid."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "grid",
            "type_": "bool, default True"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The size of the figure to create in matplotlib."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "figsize",
            "type_": "A tuple (width, height) in inches"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "For example, (3, 5) will display the subplots using 3 columns and 5 rows, starting from the top-left."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "layout",
            "type_": "tuple (rows, columns), optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The kind of object to return. The default is "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "axes"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'axes' returns the matplotlib axes the boxplot is drawn on."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'dict' returns a dictionary whose values are the matplotlib   Lines of the boxplot."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "'both' returns a namedtuple with the axes and dict."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "when grouping with "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "by"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": ", a Series mapping columns to   "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "return_type"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " is returned."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        },
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "If "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "return_type"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " is "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "None"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": ", a NumPy array   of axes with the same shape as "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "layout"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " is returned."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ],
            "param": "return_type",
            "type_": "{'axes', 'dict', 'both'} or None, default 'axes'"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Backend to use instead of the backend specified in the option "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "plotting.backend"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ". For instance, 'matplotlib'. Alternatively, to specify the "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "plotting.backend"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " for the whole session, set "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "pd.options.plotting.backend"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "inline": [
                        {
                          "data": {
                            "value": "1.0.0 "
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    }
                  ],
                  "kind": "versionadded",
                  "title": "TODO"
                },
                "type": "Admonition"
              }
            ],
            "param": "backend",
            "type_": "str, default None"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "All other plotting keyword arguments to be passed to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "matplotlib.pyplot.boxplot"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "**kwargs",
            "type_": ""
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "See Notes."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "result"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Make a box plot from DataFrame columns."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "pandas.DataFrame.boxplot"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Boxplots can be created for every column in the dataframe by "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "df.boxplot()"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " or indicating the columns to be used:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "args0": [],
          "directive_name": "plot",
          "inner": {
            "inline": [],
            "inner": []
          }
        },
        "type": "BlockDirective"
      },
      {
        "data": {
          "value": [
            ">>> np.random.seed(1234)",
            ">>> df = pd.DataFrame(np.random.randn(10, 4),",
            "...                   columns=['Col1', 'Col2', 'Col3', 'Col4'])",
            ">>> boxplot = df.boxplot(column=['Col1', 'Col2', 'Col3'])  # doctest: +SKIP"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Boxplots of variables distributions grouped by the values of a third variable can be created using the option "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "by"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": ". For instance:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "args0": [],
          "directive_name": "plot",
          "inner": {
            "inline": [],
            "inner": []
          }
        },
        "type": "BlockDirective"
      },
      {
        "data": {
          "value": [
            ">>> df = pd.DataFrame(np.random.randn(10, 2),",
            "...                   columns=['Col1', 'Col2'])",
            ">>> df['X'] = pd.Series(['A', 'A', 'A', 'A', 'A',",
            "...                      'B', 'B', 'B', 'B', 'B'])",
            ">>> boxplot = df.boxplot(by='X')"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "A list of strings (i.e. "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "['X', 'Y']"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": ") can be passed to boxplot in order to group the data by combination of the variables in the x-axis:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "args0": [],
          "directive_name": "plot",
          "inner": {
            "inline": [],
            "inner": []
          }
        },
        "type": "BlockDirective"
      },
      {
        "data": {
          "value": [
            ">>> df = pd.DataFrame(np.random.randn(10, 3),",
            "...                   columns=['Col1', 'Col2', 'Col3'])",
            ">>> df['X'] = pd.Series(['A', 'A', 'A', 'A', 'A',",
            "...                      'B', 'B', 'B', 'B', 'B'])",
            ">>> df['Y'] = pd.Series(['A', 'B', 'A', 'B', 'A',",
            "...                      'B', 'A', 'B', 'A', 'B'])",
            ">>> boxplot = df.boxplot(column=['Col1', 'Col2'], by=['X', 'Y'])"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "The layout of boxplot can be adjusted giving a tuple to "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "layout"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": ":"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "args0": [],
          "directive_name": "plot",
          "inner": {
            "inline": [],
            "inner": []
          }
        },
        "type": "BlockDirective"
      },
      {
        "data": {
          "value": [
            ">>> boxplot = df.boxplot(column=['Col1', 'Col2'], by='X',",
            "...                      layout=(2, 1))"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Additional formatting can be done to the boxplot, like suppressing the grid ("
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "grid=False"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": "), rotating the labels in the x-axis (i.e. "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "rot=45"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": ") or changing the fontsize (i.e. "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "fontsize=15"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": "):"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "args0": [],
          "directive_name": "plot",
          "inner": {
            "inline": [],
            "inner": []
          }
        },
        "type": "BlockDirective"
      },
      {
        "data": {
          "value": [
            ">>> boxplot = df.boxplot(grid=False, rot=45, fontsize=15)  # doctest: +SKIP"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "The parameter "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "return_type"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " can be used to select the type of element returned by "
              },
              "type": "Words"
            },
            {
              "data": {
                "exists": true,
                "kind": "module",
                "reference": {
                  "kind": "module",
                  "module": "pandas",
                  "path": "pandas.plotting._core.boxplot",
                  "version": "1.4.1"
                },
                "value": "boxplot"
              },
              "type": "Link"
            },
            {
              "data": {
                "value": ".  When "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "return_type='axes'"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " is selected, the matplotlib axes on which the boxplot is drawn are returned:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "value": [
            ">>> boxplot = df.boxplot(column=['Col1', 'Col2'], return_type='axes')",
            ">>> type(boxplot)",
            "<class 'matplotlib.axes._subplots.AxesSubplot'>"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "When grouping with "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "by"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": ", a Series mapping columns to "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "return_type"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " is returned:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "value": [
            ">>> boxplot = df.boxplot(column=['Col1', 'Col2'], by='X',",
            "...                      return_type='axes')",
            ">>> type(boxplot)",
            "<class 'pandas.core.series.Series'>"
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "If "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "return_type"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " is "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "None"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": ", a NumPy array of axes with the same shape as "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "layout"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " is returned:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "value": [
            ">>> boxplot = df.boxplot(column=['Col1', 'Col2'], by='X',",
            "...                      return_type=None)",
            ">>> type(boxplot)",
            "<class 'numpy.ndarray'>"
          ]
        },
        "type": "BlockQuote"
      }
    ],
    "title": null
  },
  "item_file": "/pandas/plotting/_core.py",
  "item_line": 494,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "refs": [
    "Series.plot.hist",
    "matplotlib.pyplot.boxplot"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Make a histogram."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "Series.plot.hist",
        "ref": null
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "Matplotlib equivalent plot."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": null,
        "name": "matplotlib.pyplot.boxplot",
        "ref": "matplotlib.pyplot.boxplot"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "boxplot_frame(self, column=None, by=None, ax=None, fontsize=None, rot=0, grid=True, figsize=None, layout=None, return_type=None, backend=None, **kwargs)"
  }
}