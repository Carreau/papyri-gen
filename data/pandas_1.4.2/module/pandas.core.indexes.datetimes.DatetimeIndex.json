{
  "aliases": [
    "pandas.DatetimeIndex"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [],
                "param": "year",
                "type_": ""
              },
              {
                "desc": [],
                "param": "month",
                "type_": ""
              },
              {
                "desc": [],
                "param": "day",
                "type_": ""
              },
              {
                "desc": [],
                "param": "hour",
                "type_": ""
              },
              {
                "desc": [],
                "param": "minute",
                "type_": ""
              },
              {
                "desc": [],
                "param": "second",
                "type_": ""
              },
              {
                "desc": [],
                "param": "microsecond",
                "type_": ""
              },
              {
                "desc": [],
                "param": "nanosecond",
                "type_": ""
              },
              {
                "desc": [],
                "param": "date",
                "type_": ""
              },
              {
                "desc": [],
                "param": "time",
                "type_": ""
              },
              {
                "desc": [],
                "param": "timetz",
                "type_": ""
              },
              {
                "desc": [],
                "param": "dayofyear",
                "type_": ""
              },
              {
                "desc": [],
                "param": "day_of_year",
                "type_": ""
              },
              {
                "desc": [],
                "param": "weekofyear",
                "type_": ""
              },
              {
                "desc": [],
                "param": "week",
                "type_": ""
              },
              {
                "desc": [],
                "param": "dayofweek",
                "type_": ""
              },
              {
                "desc": [],
                "param": "day_of_week",
                "type_": ""
              },
              {
                "desc": [],
                "param": "weekday",
                "type_": ""
              },
              {
                "desc": [],
                "param": "quarter",
                "type_": ""
              },
              {
                "desc": [],
                "param": "tz",
                "type_": ""
              },
              {
                "desc": [],
                "param": "freq",
                "type_": ""
              },
              {
                "desc": [],
                "param": "freqstr",
                "type_": ""
              },
              {
                "desc": [],
                "param": "is_month_start",
                "type_": ""
              },
              {
                "desc": [],
                "param": "is_month_end",
                "type_": ""
              },
              {
                "desc": [],
                "param": "is_quarter_start",
                "type_": ""
              },
              {
                "desc": [],
                "param": "is_quarter_end",
                "type_": ""
              },
              {
                "desc": [],
                "param": "is_year_start",
                "type_": ""
              },
              {
                "desc": [],
                "param": "is_year_end",
                "type_": ""
              },
              {
                "desc": [],
                "param": "is_leap_year",
                "type_": ""
              },
              {
                "desc": [],
                "param": "inferred_freq",
                "type_": ""
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Represented internally as int64, and which can be boxed to Timestamp objects that are subclasses of datetime and carry metadata."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Methods": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [],
                "param": "normalize",
                "type_": ""
              },
              {
                "desc": [],
                "param": "strftime",
                "type_": ""
              },
              {
                "desc": [],
                "param": "snap",
                "type_": ""
              },
              {
                "desc": [],
                "param": "tz_convert",
                "type_": ""
              },
              {
                "desc": [],
                "param": "tz_localize",
                "type_": ""
              },
              {
                "desc": [],
                "param": "round",
                "type_": ""
              },
              {
                "desc": [],
                "param": "floor",
                "type_": ""
              },
              {
                "desc": [],
                "param": "ceil",
                "type_": ""
              },
              {
                "desc": [],
                "param": "to_period",
                "type_": ""
              },
              {
                "desc": [],
                "param": "to_perioddelta",
                "type_": ""
              },
              {
                "desc": [],
                "param": "to_pydatetime",
                "type_": ""
              },
              {
                "desc": [],
                "param": "to_series",
                "type_": ""
              },
              {
                "desc": [],
                "param": "to_frame",
                "type_": ""
              },
              {
                "desc": [],
                "param": "month_name",
                "type_": ""
              },
              {
                "desc": [],
                "param": "day_name",
                "type_": ""
              },
              {
                "desc": [],
                "param": "mean",
                "type_": ""
              },
              {
                "desc": [],
                "param": "std",
                "type_": ""
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "To learn more about the frequency strings, please see "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "this link\n<https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases>"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Optional datetime-like data to construct index with."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "data",
                "type_": "array-like (1-dimensional), optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "One of pandas date offset strings or corresponding objects. The string 'infer' can be passed in order to set the frequency of the index as the inferred frequency upon creation."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "freq",
                "type_": "str or pandas offset object, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Set the Timezone of the data."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "tz",
                "type_": "pytz.timezone or dateutil.tz.tzfile or datetime.tzinfo or str"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Normalize start/end dates to midnight before generating date range."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "normalize",
                "type_": "bool, default False"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Set whether to include "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "start"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "end"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " that are on the boundary. The default includes boundary points on either end."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "closed",
                "type_": "{'left', 'right'}, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "When clocks moved backward due to DST, ambiguous times may arise. For example in Central European Time (UTC+01), when going from 03:00 DST to 02:00 non-DST, 02:30:00 local time occurs both at 00:30:00 UTC and at 01:30:00 UTC. In such a situation, the `ambiguous` parameter dictates how ambiguous times should be handled."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "'infer' will attempt to infer fall dst-transition hours based on   order"
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "bool-ndarray where True signifies a DST time, False signifies a   non-DST time (note that this flag is only applicable for ambiguous   times)"
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "'NaT' will return NaT where there are ambiguous times"
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "'raise' will raise an AmbiguousTimeError if there are ambiguous times."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "BulletList"
                  }
                ],
                "param": "ambiguous",
                "type_": "'infer', bool-ndarray, 'NaT', default 'raise'"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If True, parse dates in "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "data"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " with the day first order."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "dayfirst",
                "type_": "bool, default False"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If True parse dates in "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "data"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " with the year first order."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "yearfirst",
                "type_": "bool, default False"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Note that the only NumPy dtype allowed is \u2018datetime64[ns]\u2019."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "dtype",
                "type_": "numpy.dtype or DatetimeTZDtype or str, default None"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Make a copy of input ndarray."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "copy",
                "type_": "bool, default False"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Name to be stored in the index."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "name",
                "type_": "label, default None"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Immutable ndarray-like of datetime64 data."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "title": null
  },
  "item_file": "/pandas/core/indexes/datetimes.py",
  "item_line": 108,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Attributes",
    "Methods",
    "See Also",
    "Notes"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "The base pandas Index type."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "pandas",
          "path": "pandas.core.indexes.base.Index",
          "version": "1.4.2"
        },
        "value": "Index"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "Index of timedelta64 data."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "pandas",
          "path": "pandas.core.indexes.timedeltas.TimedeltaIndex",
          "version": "1.4.2"
        },
        "value": "TimedeltaIndex"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "Index of Period data."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "pandas",
          "path": "pandas.core.indexes.period.PeriodIndex",
          "version": "1.4.2"
        },
        "value": "PeriodIndex"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "Convert argument to datetime."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "pandas",
          "path": "pandas.core.tools.datetimes.to_datetime",
          "version": "1.4.2"
        },
        "value": "to_datetime"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "Create a fixed-frequency DatetimeIndex."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "pandas",
          "path": "pandas.core.indexes.datetimes.date_range",
          "version": "1.4.2"
        },
        "value": "date_range"
      },
      "type": null
    }
  ],
  "signature": {
    "value": null
  }
}