{
  "aliases": [
    "pandas.plotting.PlotAccessor.hexbin"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Generate a hexagonal binning plot of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "x",
                    "version": null
                  },
                  "value": "x"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " versus "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "y",
                    "version": null
                  },
                  "value": "y"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ". If "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "C",
                    "version": null
                  },
                  "value": "C"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "None"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " (the default), this is a histogram of the number of occurrences of the observations at "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "(x[i], y[i])"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "C",
                    "version": null
                  },
                  "value": "C"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is specified, specifies values at given coordinates "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "(x[i], y[i])"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". These values are accumulated for each hexagonal bin and then reduced according to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "reduce_C_function"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": ", having as default the NumPy's mean function ("
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.mean"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "). (If "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "C",
                    "version": null
                  },
                  "value": "C"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is specified, it must also be a 1-D sequence of the same length as "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "x",
                    "version": null
                  },
                  "value": "x"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "y",
                    "version": null
                  },
                  "value": "y"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ", or a column label.)"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The column label or position for x points."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "x",
                "type_": "int or str"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The column label or position for y points."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "y",
                "type_": "int or str"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The column label or position for the value of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "(x, y)"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " point."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "C",
                "type_": "int or str, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Function of one argument that reduces all the values in a bin to a single number (e.g. "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "np.mean"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ", "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "np.max"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ", "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "np.sum"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ", "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "np.std"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ")."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "reduce_C_function",
                "type_": "callable, default `np.mean`"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The number of hexagons in the x-direction. The corresponding number of hexagons in the y-direction is chosen in a way that the hexagons are approximately regular. Alternatively, gridsize can be a tuple with two elements specifying the number of hexagons in the x-direction and the y-direction."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "gridsize",
                "type_": "int or tuple of (int, int), default 100"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Additional keyword arguments are documented in "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "DataFrame.plot"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "**kwargs",
                "type_": ""
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The matplotlib "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "Axes"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " on which the hexbin is plotted."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "",
                "type_": "matplotlib.AxesSubplot"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Generate a hexagonal binning plot."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "The following examples are generated with random data from a normal distribution."
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "argument": "",
          "content": "",
          "name": "plot",
          "options": [
            [
              "context",
              "close-figs"
            ]
          ]
        },
        "type": "BlockDirective"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> n = 10000\n>>> df = pd.DataFrame({'x': np.random.randn(n),\n...                    'y': np.random.randn(n)})\n>>> ax = df.plot.hexbin(x='x', y='y', gridsize=20)"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "The next example uses "
              },
              "type": "Words"
            },
            {
              "data": {
                "anchor": null,
                "exists": true,
                "kind": "local",
                "reference": {
                  "kind": "local",
                  "module": null,
                  "path": "C",
                  "version": null
                },
                "value": "C"
              },
              "type": "Link"
            },
            {
              "data": {
                "value": " and "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "np.sum"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": " as "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "reduce_C_function"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": ". Note that "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "'observations'"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": " values ranges from 1 to 5 but the result plot shows values up to more than 25. This is because of the "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "reduce_C_function"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": "."
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "argument": "",
          "content": "",
          "name": "plot",
          "options": [
            [
              "context",
              "close-figs"
            ]
          ]
        },
        "type": "BlockDirective"
      },
      {
        "data": {
          "children": [
            {
              "data": {
                "value": ">>> n = 500\n>>> df = pd.DataFrame({\n...     'coord_x': np.random.uniform(-3, 3, size=n),\n...     'coord_y': np.random.uniform(30, 50, size=n),\n...     'observations': np.random.randint(1,5, size=n)\n...     })\n>>> ax = df.plot.hexbin(x='coord_x',\n...                     y='coord_y',\n...                     C='observations',\n...                     reduce_C_function=np.sum,\n...                     gridsize=10,\n...                     cmap=\"viridis\")"
              },
              "type": "BlockVerbatim"
            }
          ]
        },
        "type": "BlockQuote"
      }
    ],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/pandas/plotting/_core.py",
  "item_line": 1671,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "Make plots of a DataFrame."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "DataFrame.plot",
          "version": "current-version"
        },
        "value": "DataFrame.plot"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "Hexagonal binning plot using matplotlib, the matplotlib function that is used under the hood."
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "matplotlib.pyplot.hexbin",
          "version": "current-version"
        },
        "value": "matplotlib.pyplot.hexbin"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "hexbin(self, x, y, C=None, reduce_C_function=None, gridsize=None, **kwargs)"
  }
}