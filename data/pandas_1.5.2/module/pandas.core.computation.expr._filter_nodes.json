{
  "aliases": [
    "pandas.core.computation.expr._filter_nodes"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Filter out AST nodes that are subclasses of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "superclass"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/pandas/core/computation/expr.py",
  "item_line": 188,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "_filter_nodes(superclass, all_nodes=frozenset({<class 'ast.Eq'>, <class 'ast.Mult'>, <class 'ast.Attribute'>, <class 'ast.UnaryOp'>, <class 'ast.Match'>, <class 'ast.AugStore'>, <class 'ast.Expression'>, <class 'ast.MatchAs'>, <class 'ast.NotIn'>, <class 'ast.BitAnd'>, <class 'ast.Store'>, <class 'ast.Await'>, <class 'ast.Expr'>, <class 'ast.AugAssign'>, <class 'ast.Bytes'>, <class 'ast.match_case'>, <class 'ast.NotEq'>, <class 'ast.MatMult'>, <class 'ast.Subscript'>, <class 'ast.Lambda'>, <class 'ast.Raise'>, <class 'ast.FunctionType'>, <class 'ast.Param'>, <class 'ast.MatchOr'>, <class 'ast.comprehension'>, <class 'ast.FloorDiv'>, <class 'ast.Del'>, <class 'ast.Yield'>, <class 'ast.Pass'>, <class 'ast.AnnAssign'>, <class 'ast.NameConstant'>, <class 'ast.pattern'>, <class 'ast.Lt'>, <class 'ast.Div'>, <class 'ast.Starred'>, <class 'ast.IfExp'>, <class 'ast.Try'>, <class 'ast.stmt'>, <class 'ast.type_ignore'>, <class 'ast.excepthandler'>, <class 'ast.unaryop'>, <class 'ast.boolop'>, <class 'ast.YieldFrom'>, <class 'ast.Break'>, <class 'ast.For'>, <class 'ast.Ellipsis'>, <class 'ast.MatchValue'>, <class 'ast.LtE'>, <class 'ast.Mod'>, <class 'ast.Name'>, <class 'ast.Dict'>, <class 'ast.TryStar'>, <class 'ast.FunctionDef'>, <class 'ast.TypeIgnore'>, <class 'ast.ExceptHandler'>, <class 'ast.Invert'>, <class 'ast.And'>, <class 'ast.Compare'>, <class 'ast.Continue'>, <class 'ast.AsyncFor'>, <class 'ast.slice'>, <class 'ast.MatchSingleton'>, <class 'ast.Gt'>, <class 'ast.Pow'>, <class 'ast.List'>, <class 'ast.Set'>, <class 'ast.Assert'>, <class 'ast.AsyncFunctionDef'>, <class 'ast.arguments'>, <class 'ast.Not'>, <class 'ast.Or'>, <class 'ast.Call'>, <class 'ast.expr'>, <class 'ast.While'>, <class 'ast.Index'>, <class 'ast.MatchSequence'>, <class 'ast.GtE'>, <class 'ast.LShift'>, <class 'ast.Tuple'>, <class 'ast.ListComp'>, <class 'ast.Import'>, <class 'ast.ClassDef'>, <class 'ast.arg'>, <class 'ast.UAdd'>, <class 'ast.operator'>, <class 'ast.FormattedValue'>, <class 'ast.BoolOp'>, <class 'ast.If'>, <class 'ast.AST'>, <class 'ast.ExtSlice'>, <class 'ast.MatchMapping'>, <class 'ast.Is'>, <class 'ast.RShift'>, <class 'ast.Slice'>, <class 'ast.SetComp'>, <class 'ast.ImportFrom'>, <class 'ast.Return'>, <class 'ast.keyword'>, <class 'ast.USub'>, <class 'ast.Add'>, <class 'ast.JoinedStr'>, <class 'ast.NamedExpr'>, <class 'ast.With'>, <class 'ast.Module'>, <class 'ast.Suite'>, <class 'ast.MatchClass'>, <class 'ast.IsNot'>, <class 'ast.BitOr'>, <class 'ast.expr_context'>, <class 'ast.DictComp'>, <class 'ast.mod'>, <class 'ast.Global'>, <class 'ast.Delete'>, <class 'ast.Num'>, <class 'ast.alias'>, <class 'ast.cmpop'>, <class 'ast.Sub'>, <class 'ast.Constant'>, <class 'ast.BinOp'>, <class 'ast.AsyncWith'>, <class 'ast.AugLoad'>, <class 'ast.Interactive'>, <class 'ast.MatchStar'>, <class 'ast.In'>, <class 'ast.BitXor'>, <class 'ast.Load'>, <class 'ast.GeneratorExp'>, <class 'ast.Nonlocal'>, <class 'ast.Assign'>, <class 'ast.Str'>, <class 'ast.withitem'>}))"
  }
}