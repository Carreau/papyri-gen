{
  "aliases": [
    "papyri.gen.parse_script"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "the script to tokenize and infer types on"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "script",
              "type": "Param",
              "type_": "str"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Extra namespace to use with jedi's Interpreter. This will be used for implicit imports, for example that "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "np"
                    },
                    {
                      "type": "text",
                      "value": " is interpreted as numpy."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "ns",
              "type": "Param",
              "type_": "dict"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "previous lines that lead to this."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "prev",
              "type": "Param",
              "type_": "str"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "<Multiline Description Here>"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "where",
              "type": "Param",
              "type_": "<Insert Type here>"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "<Multiline Description Here>"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "config",
              "type": "Param",
              "type_": "<Insert Type here>"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "",
              "type": "Param",
              "type_": "List of tuples with:"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "text of the token"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "text:"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "fully qualified name of the type of current token"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "reference",
              "type": "Param",
              "type_": "str"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Parse a script into tokens and use Jedi to infer the fully qualified names of each token."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "papyri/gen.py",
  "item_line": 198,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(script: 'str', ns: 'Dict', prev, config, *, where=None) -> 'Optional[List[Tuple[str, Optional[str]]]]'"
  },
  "type": "DocBlob"
}