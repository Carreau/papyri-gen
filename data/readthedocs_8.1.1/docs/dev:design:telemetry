{
  "aliases": [],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We may want to take some decisions in the future about deprecations and supported versions. Right now we don't have data about the usage of packages and their versions on Read the Docs to be able to make an informed decision."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "",
            "content": "",
            "name": "contents",
            "options": [
              [
                "local",
                ""
              ],
              [
                "depth",
                "3"
              ]
            ]
          },
          "type": "BlockDirective"
        }
      ],
      "level": 0,
      "target": null,
      "title": "Collect Data About Builds"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "dd": [
                  {
                    "data": {
                      "children": [
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "https://www.elastic.co/kibana"
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "We can import data from ES."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "Cloud service provided by Elastic."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "BulletList"
                  }
                ],
                "dt": {
                  "children": [
                    {
                      "data": {
                        "value": "Kibana:"
                      },
                      "type": "Words"
                    }
                  ]
                }
              },
              {
                "dd": [
                  {
                    "data": {
                      "children": [
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "https://superset.apache.org/"
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "We can import data from several DBs (including postgres and ES)."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "Easy to setup locally, but doesn't look like there is cloud provider for it."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "BulletList"
                  }
                ],
                "dt": {
                  "children": [
                    {
                      "data": {
                        "value": "Superset:"
                      },
                      "type": "Words"
                    }
                  ]
                }
              },
              {
                "dd": [
                  {
                    "data": {
                      "children": [
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "https://www.metabase.com/"
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "We can import data from several DBs (including postgres)."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        },
                        {
                          "children": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "Cloud service provided by Metabase."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "BulletList"
                  }
                ],
                "dt": {
                  "children": [
                    {
                      "data": {
                        "value": "Metabase:"
                      },
                      "type": "Words"
                    }
                  ]
                }
              }
            ]
          },
          "type": "DefList"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Summary: We have several tools that can inspect data form a postgres DB, and we also have "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Kibana"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " that works "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "only"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " with ElasticSearch. The data to be collected can be saved in a postgres or ES database. Currently, we are making use of Metabase to get other information, so it's probably the right choice for this task."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Tools"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The following data can be collected after installing all dependencies."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Data to be collected"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We are saving the config file in our database, but to save some space we are saving it only if it's different than the one from a previous build (if it's the same we save a reference to it)."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The config file being saved isn't the original one used by the user, but the result of merging it with its default values."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We may also want to have the original config file, so we know which settings users are using."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Configuration file"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We can get a json with all and root dependencies with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "pip list"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". This will allow us to have the name of the packages and their versions used in the build."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "",
            "content": "$ pip list --pre --local --format json | jq\n# and\n$ pip list --pre --not-required --local --format json | jq\n[\n   {\n      \"name\": \"requests-mock\",\n      \"version\": \"1.8.0\"\n   },\n   {\n      \"name\": \"requests-toolbelt\",\n      \"version\": \"0.9.1\"\n   },\n   {\n      \"name\": \"rstcheck\",\n      \"version\": \"3.3.1\"\n   },\n   {\n      \"name\": \"selectolax\",\n      \"version\": \"0.2.10\"\n   },\n   {\n      \"name\": \"slumber\",\n      \"version\": \"0.7.1\"\n   },\n   {\n      \"name\": \"sphinx-autobuild\",\n      \"version\": \"2020.9.1\"\n   },\n   {\n      \"name\": \"sphinx-hoverxref\",\n      \"version\": \"0.5b1\"\n   },\n]",
            "name": "code-block",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "With the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "--not-required"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " option, pip will list only the root dependencies."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "PIP packages"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We can get a json with all dependencies with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "conda list --json"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". That command gets all the root dependencies and their dependencies (there is no way to list only the root dependencies), so we may be collecting some noise, but we can use "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "pip list"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " as a secondary source."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "",
            "content": "$ conda list --json --name conda-env\n\n[\n   {\n      \"base_url\": \"https://conda.anaconda.org/conda-forge\",\n      \"build_number\": 0,\n      \"build_string\": \"py_0\",\n      \"channel\": \"conda-forge\",\n      \"dist_name\": \"alabaster-0.7.12-py_0\",\n      \"name\": \"alabaster\",\n      \"platform\": \"noarch\",\n      \"version\": \"0.7.12\"\n   },\n   {\n      \"base_url\": \"https://conda.anaconda.org/conda-forge\",\n      \"build_number\": 0,\n      \"build_string\": \"pyh9f0ad1d_0\",\n      \"channel\": \"conda-forge\",\n      \"dist_name\": \"asn1crypto-1.4.0-pyh9f0ad1d_0\",\n      \"name\": \"asn1crypto\",\n      \"platform\": \"noarch\",\n      \"version\": \"1.4.0\"\n   },\n   {\n      \"base_url\": \"https://conda.anaconda.org/conda-forge\",\n      \"build_number\": 3,\n      \"build_string\": \"3\",\n      \"channel\": \"conda-forge\",\n      \"dist_name\": \"python-3.5.4-3\",\n      \"name\": \"python\",\n      \"platform\": \"linux-64\",\n      \"version\": \"3.5.4\"\n   }\n]",
            "name": "code-block",
            "options": []
          },
          "type": "BlockDirective"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Conda packages"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We can get the list from the config file, or we can list the packages installed with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "dpkg --get-selections"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". That command would list all pre-installed packages as well, so we may be getting some noise."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "console",
            "content": "$ dpkg --get-selections\n\nadduser                                         install\napt                                             install\nbase-files                                      install\nbase-passwd                                     install\nbash                                            install\nbinutils                                        install\nbinutils-common:amd64                           install\nbinutils-x86-64-linux-gnu                       install\nbsdutils                                        install\nbuild-essential                                 install",
            "name": "code-block",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We can get the installed version with:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "console",
            "content": "$ dpkg --status python3\n\nPackage: python3\nStatus: install ok installed\nPriority: optional\nSection: python\nInstalled-Size: 189\nMaintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>\nArchitecture: amd64\nMulti-Arch: allowed\nSource: python3-defaults\nVersion: 3.8.2-0ubuntu2\nReplaces: python3-minimal (<< 3.1.2-2)\nProvides: python3-profiler\nDepends: python3.8 (>= 3.8.2-1~), libpython3-stdlib (= 3.8.2-0ubuntu2)\nPre-Depends: python3-minimal (= 3.8.2-0ubuntu2)\nSuggests: python3-doc (>= 3.8.2-0ubuntu2), python3-tk (>= 3.8.2-1~), python3-venv (>= 3.8.2-0ubuntu2)\nDescription: interactive high-level object-oriented language (default python3 version)\nPython, the high-level, interactive object oriented language,\nincludes an extensive class library with lots of goodies for\nnetwork programming, system administration, sounds and graphics.\n.\nThis package is a dependency package, which depends on Debian's default\nPython 3 version (currently v3.8).\nHomepage: https://www.python.org/\nOriginal-Maintainer: Matthias Klose <doko@debian.org>",
            "name": "code-block",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Or with"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "console",
            "content": "$ apt-cache policy python3\n\nInstalled: 3.8.2-0ubuntu2\nCandidate: 3.8.2-0ubuntu2\nVersion table:\n*** 3.8.2-0ubuntu2 500\n      500 http://archive.ubuntu.com/ubuntu focal/main amd64 Packages\n      100 /var/lib/dpkg/status",
            "name": "code-block",
            "options": []
          },
          "type": "BlockDirective"
        }
      ],
      "level": 2,
      "target": null,
      "title": "APT packages"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We can get the Python version from the config file when using a Python environment, and from the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "conda list"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " output when using a Conda environment."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Python"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We can infer the OS version from the build image used in the config file, but since it changes with time, we can get it from the OS itself:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "",
            "content": "$ lsb_release --description\nDescription:    Ubuntu 18.04.5 LTS\n# or\n$ cat /etc/issue\nUbuntu 18.04.5 LTS \\n \\l",
            "name": "code-block",
            "options": []
          },
          "type": "BlockDirective"
        }
      ],
      "level": 2,
      "target": null,
      "title": "OS"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The final information to be saved would consist of:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "organization: the organization id/slug"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "project: the project id/slug"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "version: the version id/slug"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "build: the build id, date, length, status."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "user_config: Original user config file"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "final_config: Final configuration used (merged with defaults)"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "packages.pip: List of pip packages with name and version"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "packages.conda: List of conda packages with name, channel, and version"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "packages.apt: List of apt packages"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "python: Python version used"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "os: Operating system used"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        },
        {
          "data": {
            "argument": "json",
            "content": "{\n  \"organization\": {\n    \"id\": 1,\n    \"slug\": \"org\"\n  },\n  \"project\": {\n    \"id\": 2,\n    \"slug\": \"docs\"\n  },\n  \"version\": {\n    \"id\": 1,\n    \"slug\": \"latest\"\n  },\n  \"build\": {\n    \"id\": 3,\n    \"date/start\": \"2021-04-20-...\",\n    \"length\": \"00:06:34\",\n    \"status\": \"normal\",\n    \"success\": true,\n    \"commit\": \"abcd1234\"\n  },\n  \"config\": {\n    \"user\": {},\n    \"final\": {}\n  },\n  \"packages\": {\n     \"pip\": [{\n        \"name\": \"sphinx\",\n        \"version\": \"3.4.5\"\n     }],\n     \"pip_all\": [\n       {\n          \"name\": \"sphinx\",\n          \"version\": \"3.4.5\"\n       },\n       {\n          \"name\": \"docutils\",\n          \"version\": \"0.16.0\"\n       }\n     ],\n     \"conda\": [{\n        \"name\": \"sphinx\",\n        \"channel\": \"conda-forge\",\n        \"version\": \"0.1\"\n     }],\n     \"apt\": [{\n        \"name\": \"python3-dev\",\n        \"version\": \"3.8.2-0ubuntu2\"\n     }],\n  },\n  \"python\": \"3.7\",\n  \"os\": \"ubuntu-18.04.5\"\n}",
            "name": "code-block",
            "options": []
          },
          "type": "BlockDirective"
        }
      ],
      "level": 2,
      "target": null,
      "title": "Format"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "All this information can be collected after the build has finished, and we can store it in a dedicated database (telemetry), using Django's models."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Since this information isn't sensitive, we should be fine saving this data even if the project/version is deleted. As we don't care about historical data, we can save the information per-version and from their latest build only. And delete old data if it grows too much."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Should we make heavy use of JSON fields? Or try to avoid nesting structures as possible? Like config.user/config.final vs user_config/final_config. Or having several fields in our model instead of just one big json field?"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Storage"
    }
  ],
  "content": {},
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": null,
  "item_line": null,
  "item_type": null,
  "ordered_sections": [],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}