{
  "aliases": [],
  "arbitrary": [
    {
      "children": [],
      "level": 0,
      "target": null,
      "title": "Frequently Asked Questions"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "First, you should check out the Builds tab of your project. That records all of the build attempts that RTD has made to build your project. If you see "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ImportError"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " messages for custom Python modules, see our section on "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "faq:My documentation requires additional dependencies"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If you are still seeing errors because of C library dependencies, please see "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "faq:I get import errors on libraries that depend on C modules"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "My project isn't building correctly"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This often happens because you don't have an "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "index.html"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " file being generated. Make sure you have one of the following files:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "domain": null,
                                  "role": null,
                                  "value": "index.rst"
                                },
                                "type": "Directive"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "domain": null,
                                  "role": null,
                                  "value": "index.md"
                                },
                                "type": "Directive"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ]
          },
          "type": "BlockQuote"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "At the top level of your built documentation, otherwise we aren't able to serve a \"default\" index page."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "To test if your docs actually built correctly, you can navigate to a specific page ("
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "/en/latest/README.html"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " for example)."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Help, my build passed but my documentation page is 404 Not Found!"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "For most Python dependencies, you can can specify a requirements file which details your dependencies. See our guide on "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "guides/reproducible-builds:using a configuration file"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". You can also set your project documentation to install your project itself as a dependency."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Your build may depend on extensions that require additional system packages to be installed. If you are using a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Configuration File <config-file/v2>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " you can "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "add libraries with apt <config-file/v2:build.apt_packages>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " to the Ubuntu-based builder ."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If your project or its dependencies rely on C libraries that cannot be installed this way, see "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "faq:I get import errors on libraries that depend on C modules"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "My documentation requires additional dependencies"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If this is just a dependency issue, see "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "faq:My documentation requires additional dependencies"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Read the Docs offers some settings which can be used for a variety of purposes. To enable these settings, please send an email to support@readthedocs.org and we will change the settings for the project. Read more about these settings "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "here <feature-flags>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "My project requires some additional settings"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "Another use case for this is when you have a module with a C extension."
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              }
            ],
            "kind": "note",
            "title": ""
          },
          "type": "Admonition"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This happens because the build system does not have the dependencies for building your project, such as C libraries needed by some Python packages (e.g. "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "libevent"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "mysql"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "). For libraries that cannot be "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "installed via apt\n<config-file/v2:build.apt_packages>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " in the builder there is another way to successfully build the documentation despite missing dependencies."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "With Sphinx you can use the built-in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "autodoc_mock_imports"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " for mocking. If such libraries are installed via "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "setup.py"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", you also will need to remove all the C-dependent libraries from your "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "install_requires"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " in the RTD environment."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _autodoc_mock_imports: http://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html#confval-autodoc_mock_imports"
          },
          "type": "Unimplemented"
        }
      ],
      "level": 1,
      "target": null,
      "title": "I get import errors on libraries that depend on C modules"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "When RTD builds your project, it sets the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": "envvar",
                  "value": "READTHEDOCS"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " environment variable to the string "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "'True'"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". So within your Sphinx "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "conf.py"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " file, you can vary the behavior based on this. For example:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "import os\non_rtd = os.environ.get('READTHEDOCS') == 'True'\nif on_rtd:\n    html_theme = 'default'\nelse:\n    html_theme = 'nature'"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": "envvar",
                  "value": "READTHEDOCS"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " variable is also available in the Sphinx build environment, and will be set to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "True"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " when building on RTD:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "{% if READTHEDOCS %}\nWoo\n{% endif %}"
          },
          "type": "BlockVerbatim"
        }
      ],
      "level": 1,
      "target": null,
      "title": "How do I change behavior when building with Read the Docs?"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If you did not install the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "test_data"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " fixture during the installation instructions, you will get the following error:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "slumber.exceptions.HttpClientError: Client Error 401: http://localhost:8000/api/v1/version/"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This is because the API admin user does not exist, and so cannot authenticate. You can fix this by loading the test_data:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "./manage.py loaddata test_data"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If you'd prefer not to install the test data, you'll need to provide a database account for the builder to use. You can provide these credentials by editing the following settings:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "SLUMBER_USERNAME = 'test'\nSLUMBER_PASSWORD = 'test'"
          },
          "type": "BlockVerbatim"
        }
      ],
      "level": 1,
      "target": null,
      "title": "`Client Error 401` when building documentation"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We support the concept of subprojects, which allows multiple projects to share a single domain. If you add a subproject to a project, that documentation will be served under the parent project's subdomain or custom domain."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "For example, Kombu is a subproject of Celery, so you can access it on the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "celery.readthedocs.io"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " domain:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "https://celery.readthedocs.io/projects/kombu/en/latest/"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This also works the same for custom domains:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "http://docs..org/projects/kombu/en/latest/"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "You can add subprojects in the project admin dashboard."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "For details on custom domains, see our documentation on "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "/custom_domains"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "How do I host multiple projects on one custom domain?"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Read the Docs will crawl your project looking for a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "conf.py"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". Where it finds the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "conf.py"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", it will run "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "sphinx-build"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " in that directory. So as long as you only have one set of sphinx documentation in your project, it should Just Work."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "You can specify an exact path to your documentation using a Read the Docs "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "config-file/index"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Where do I need to put my docs for RTD to find it?"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We think that our theme is badass, and better than the default for many reasons. Some people don't like change though "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "|:smile:|"
                },
                "type": "SubstitutionRef"
              },
              {
                "data": {
                  "value": ", so there is a hack that will let you keep using the default theme. If you set the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "html_style"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " variable in your "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "conf.py"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", it should default to using the default theme. The value of this doesn't matter, and can be set to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "/default.css"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for default behavior."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "I want to use the Blue/Default Sphinx theme"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "There is a repository for that: https://github.com/readthedocs/sphinx_rtd_theme. Simply follow the instructions in the README."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "I want to use the Read the Docs theme locally"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Image scaling in docutils depends on PIL. PIL is installed in the system that RTD runs on. However, if you are using the virtualenv building option, you will likely need to include PIL in your requirements for your project."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Image scaling doesn't work in my documentation"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "RTD doesn't have explicit support for this. That said, a tool like "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "Disqus"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " (and the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "sphinxcontrib-disqus"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " plugin) can be used for this purpose on RTD."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _Disqus: https://disqus.com/"
          },
          "type": "Unimplemented"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _sphinxcontrib-disqus: https://pypi.python.org/pypi/sphinxcontrib-disqus"
          },
          "type": "Unimplemented"
        }
      ],
      "level": 1,
      "target": null,
      "title": "I want comments in my docs"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "See the section on "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "localization"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "How do I support multiple languages of documentation?"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Yes. One criticism of Sphinx is that its annotated docstrings are too dense and difficult for humans to read. In response, many projects have adopted customized docstring styles that are simultaneously informative and legible. The "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://numpydoc.readthedocs.io/en/latest/format.html#docstring-standard",
                  "value": "NumPy"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://google.github.io/styleguide/pyguide.html#38-comments-and-docstrings",
                  "value": "Google"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": " styles are two popular docstring formats.  Fortunately, the default Read the Docs theme handles both formats just fine, provided your "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "conf.py"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " specifies an appropriate Sphinx extension that knows how to convert your customized docstrings.  Two such extensions are "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://github.com/numpy/numpydoc",
                  "value": "numpydoc"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "http://sphinxcontrib-napoleon.readthedocs.io",
                  "value": "napoleon"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ". Only "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "napoleon"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is able to handle both docstring formats. Its default output more closely matches the format of standard Sphinx annotations, and as a result, it tends to look a bit better with the default theme."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "To use these extensions you need to specify the dependencies on your project by following this "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": "ref",
                        "value": "guide <guides/reproducible-builds:using a configuration file>"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              }
            ],
            "kind": "note",
            "title": ""
          },
          "type": "Admonition"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Does Read the Docs work well with \"legible\" docstrings?"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Yes. The most convenient way to access a Python package for example via "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "Sphinx's autoapi"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " in your documentation is to use the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "Install your project\ninside a virtualenv using setup.py install"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " option in the admin panel of your project. However this assumes that your "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "setup.py"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is in the root of your repository."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If you want to place your package in a different directory or have multiple Python packages in the same project, then create a pip requirements file. You can specify the relative path to your package inside the file. For example you want to keep your Python package in the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "src/python"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " directory, then create a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "requirements.txt"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " file with the following contents:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "src/python/"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Please note that the path must be relative to the working directory where "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "pip"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is launched, rather than the directory where the requirements file is located. Therefore, even if you want to move the requirements file to a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "requirements/"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " directory, the example path above would work."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "You can customize the path to your requirements file and any other installed dependency using a Read the Docs "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "config-file/index"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _Sphinx's autoapi: http://sphinx-doc.org/ext/autodoc.html"
          },
          "type": "Unimplemented"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _pip requirements file: https://pip.pypa.io/en/stable/user_guide.html#requirements-files"
          },
          "type": "Unimplemented"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Can I document a Python package that is not at the root of my repository?"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "To ensure proper installation of a Python package, the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "pip"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "install method <config-file/v2:python.install>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " will automatically upgrade every dependency to its most recent version in case they aren't pinned by the package definition. If instead you'd like to pin your dependencies outside the package, you can add this line to your requirements or environment file (if you are using Conda)."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "In your "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "requirements.txt"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " file:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "# path to the directory containing setup.py relative to the project root\n-e ."
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "In your Conda environment file ("
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "environment.yml"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "):      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "# path to the directory containing setup.py relative to the environment file\n-e .."
          },
          "type": "BlockVerbatim"
        }
      ],
      "level": 1,
      "target": null,
      "title": "I need to install a package in a environment with pinned versions"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Yes. With "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "anaconda-project>=0.8.4"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " you can use the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "Anaconda Project"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " configuration file "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "anaconda-project.yaml"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " (or "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "anaconda-project.yml"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ") directly in place of a Conda environment file by using "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "dependencies:"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " as an alias for "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "packages:"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "I.e., your "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "anaconda-project.yaml"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " file can be used as a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "conda.environment"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " config in the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    ".readthedocs.yaml"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " config file if it contains:      "
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "dependencies:\n  - python=3.9\n  - scipy\n  ..."
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "placeholder": "target",
            "value": ".. _Anaconda Project: https://anaconda-project.readthedocs.io/en/latest/"
          },
          "type": "Unimplemented"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Can I use Anaconda Project and ``anaconda-project.yml``?"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If readers search something related to your docs in Google, it will probably return the most relevant version of your documentation. It may happen that this version is already deprecated and you want to stop Google indexing it as a result, and start suggesting the latest (or newer) one."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "To accomplish this, you can add a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "robots.txt"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " file to your documentation's root so it ends up served at the root URL of your project (for example, https://yourproject.readthedocs.io/robots.txt). We have documented how to set this up in our "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "hosting:Custom robots.txt Pages"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " docs."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "How can I avoid search results having a deprecated version of my docs?"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "See "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Opting out of advertising <advertising/ethical-advertising:Opting Out>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Can I remove advertising from my documentation?"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We don't support allowing folks to change the slug for their project. You can update the name which is shown on the site, but not the actual URL that documentation is served."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The main reason for this is that all existing URLs to the content will break. You can delete and re-create the project with the proper name to get a new slug, but you really shouldn't do this if you have existing inbound links, as it "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "http://www.w3.org/Provider/Style/URI.html",
                  "value": "breaks the internet"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If that isn't enough, you can request the change sending an email to support@readthedocs.org."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "How do I change my project slug (the URL your docs are served at)?"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We don't support allowing folks to change the slug for their versions. But you can rename the branch/tag to achieve this. If that isn't enough, you can request the change sending an email to support@readthedocs.org."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "How do I change the version slug of my project?"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We deploy readthedocs.org from the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "rel"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " branch in our GitHub repository. You can see the latest commits that have been deployed by looking on GitHub: https://github.com/readthedocs/readthedocs.org/commits/rel"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "We also keep an up-to-date "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "changelog </changelog>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "What commit of Read the Docs is in production?"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "According to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://jupyterbook.org/",
                  "value": "its own documentation"
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ","
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "Jupyter Book is an open source project for building beautiful,    publication-quality books and documents from computational material."
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              }
            ]
          },
          "type": "BlockQuote"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Even though "
                },
                "type": "Words"
              },
              {
                "data": {
                  "target": "https://jupyterbook.org/explain/sphinx.html#jupyter-book-is-a-distribution-of-sphinx",
                  "value": "Jupyter Book leverages Sphinx \"for almost everything that it\ndoes\""
                },
                "type": "ExternalLink"
              },
              {
                "data": {
                  "value": ", it purposedly hides Sphinx "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "conf.py"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " files from the user, and instead generates them on the fly from its declarative "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "_config.yml"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". As a result, you need to follow some extra steps to make Jupyter Book work on Read the Docs."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "As described in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "the official documentation <jupyterbook:publish/readthedocs>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", you can manually convert your Jupyter Book project to Sphinx with the following command:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "argument": "console",
            "content": "$ jupyter-book config sphinx path/to/book",
            "name": "code-block",
            "options": []
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "and then commit the resulting "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "conf.py"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " to git. Alternatively, you can set up some automation that does it for every change, for example "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "using pre-commit <jupyterbook:sphinx:convert:pre-commit>"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 1,
      "target": null,
      "title": "How can I deploy Jupyter Book projects on Read the Docs?"
    }
  ],
  "content": {},
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": null,
  "item_line": null,
  "item_type": null,
  "ordered_sections": [],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}