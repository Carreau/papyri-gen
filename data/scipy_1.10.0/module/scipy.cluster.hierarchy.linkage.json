{
  "aliases": [
    "scipy.cluster.hierarchy.linkage"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The input y may be either a 1-D condensed distance matrix or a 2-D array of observation vectors."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If y is a 1-D condensed distance matrix, then y must be a "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "\\binom{n}{2}"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " sized vector, where n is the number of original observations paired in the distance matrix. The behavior of this function is very similar to the MATLAB linkage function."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "A "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "(n-1)"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " by 4 matrix "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Z"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is returned. At the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "i"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": "-th iteration, clusters with indices "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Z[i, 0]"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Z[i, 1]"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " are combined to form cluster "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "n + i"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": ". A cluster with an index less than "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "n"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " corresponds to one of the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "n"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " original observations. The distance between clusters "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Z[i, 0]"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Z[i, 1]"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is given by "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Z[i, 2]"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". The fourth value "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Z[i, 3]"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " represents the number of original observations in the newly formed cluster."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The following linkage methods are used to compute the distance "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "d(s, t)"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " between two clusters "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "s"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "t"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": ". The algorithm begins with a forest of clusters that have yet to be used in the hierarchy being formed. When two clusters "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "s"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "t"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " from this forest are combined into a single cluster "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "u"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "s"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "t"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " are removed from the forest, and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "u"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " is added to the forest. When only one cluster remains in the forest, the algorithm stops, and this cluster becomes the root."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "A distance matrix is maintained at each iteration. The "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "d[i,j]"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " entry corresponds to the distance between cluster "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "i"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "j"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " in the original forest."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "At each iteration, the algorithm must update the distance matrix to reflect the distance of the newly formed cluster u with the remaining clusters in the forest."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Suppose there are "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "|u|"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " original observations "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "u[0], \\ldots, u[|u|-1]"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " in cluster "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "u"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "|v|"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " original objects "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "v[0], \\ldots, v[|v|-1]"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " in cluster "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "v"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": ". Recall, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "s"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "t"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " are combined to form cluster "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "u"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": ". Let "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "v"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " be any remaining cluster in the forest that is not "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "u"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The following are methods for calculating the distance between the newly formed cluster "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "u"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " and each "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "v"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "method='single' assigns"
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        },
                        {
                          "data": {
                            "value": "d(u,v) = \\min(dist(u[i],v[j]))"
                          },
                          "type": "BlockMath"
                        },
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "for all points "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "i"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " in cluster "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "u"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " and     "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "j"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " in cluster "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "v"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": ". This is also known as the     Nearest Point Algorithm."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "method='complete' assigns"
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        },
                        {
                          "data": {
                            "value": "d(u, v) = \\max(dist(u[i],v[j]))"
                          },
                          "type": "BlockMath"
                        },
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "for all points "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "i"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " in cluster u and "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "j"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " in     cluster "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "v"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": ". This is also known by the Farthest Point     Algorithm or Voor Hees Algorithm."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "method='average' assigns"
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        },
                        {
                          "data": {
                            "value": "d(u,v) = \\sum_{ij} \\frac{d(u[i], v[j])}\n                            {(|u|*|v|)}"
                          },
                          "type": "BlockMath"
                        },
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "for all points "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "i"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " and "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "j"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " where "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "|u|"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": "     and "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "|v|"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " are the cardinalities of clusters "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "u"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": "     and "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "v"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": ", respectively. This is also called the UPGMA     algorithm."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "method='weighted' assigns"
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        },
                        {
                          "data": {
                            "value": "d(u,v) = (dist(s,v) + dist(t,v))/2"
                          },
                          "type": "BlockMath"
                        },
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "where cluster u was formed with cluster s and t and v     is a remaining cluster in the forest (also called WPGMA)."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "method='centroid' assigns"
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        },
                        {
                          "data": {
                            "value": "dist(s,t) = ||c_s-c_t||_2"
                          },
                          "type": "BlockMath"
                        },
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "where "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "c_s"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " and "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "c_t"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " are the centroids of     clusters "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "s"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " and "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "t"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": ", respectively. When two     clusters "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "s"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " and "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "t"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " are combined into a new     cluster "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "u"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": ", the new centroid is computed over all the     original objects in clusters "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "s"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " and "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "t"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": ". The     distance then becomes the Euclidean distance between the     centroid of "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "u"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " and the centroid of a remaining cluster     "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "v"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " in the forest. This is also known as the UPGMC     algorithm."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "method='median' assigns "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "d(s,t)"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " like the "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "centroid"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": "     method. When two clusters "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "s"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " and "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "t"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " are combined     into a new cluster "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "u"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": ", the average of centroids s and t     give the new centroid "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "u"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": ". This is also known as the     WPGMC algorithm."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "method='ward' uses the Ward variance minimization algorithm.     The new entry "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "d(u,v)"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " is computed as follows,"
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        },
                        {
                          "data": {
                            "value": "d(u,v) = \\sqrt{\\frac{|v|+|s|}\n                        {T}d(v,s)^2\n                 + \\frac{|v|+|t|}\n                        {T}d(v,t)^2\n                 - \\frac{|v|}\n                        {T}d(s,t)^2}"
                          },
                          "type": "BlockMath"
                        },
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "where "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "u"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " is the newly joined cluster consisting of     clusters "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "s"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " and "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "t"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": ", "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "v"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " is an unused     cluster in the forest, "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "T=|v|+|s|+|t|"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": ", and     "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": "|*|"
                                },
                                "type": "Math"
                              },
                              {
                                "data": {
                                  "value": " is the cardinality of its argument. This is also     known as the incremental algorithm."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ]
          },
          "type": "BlockQuote"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Warning: When the minimum distance pair in the forest is chosen, there may be two or more pairs with the same minimum distance. This implementation may choose a different minimum than the MATLAB version."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "For method 'single', an optimized algorithm based on minimum spanning    tree is implemented. It has time complexity "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": "O(n^2)"
                          },
                          "type": "Math"
                        },
                        {
                          "data": {
                            "value": ".    For methods 'complete', 'average', 'weighted' and 'ward', an algorithm    called nearest-neighbors chain is implemented. It also has time    complexity "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": "O(n^2)"
                          },
                          "type": "Math"
                        },
                        {
                          "data": {
                            "value": ".    For other methods, a naive algorithm is implemented with "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": "O(n^3)"
                          },
                          "type": "Math"
                        },
                        {
                          "data": {
                            "value": "    time complexity.    All algorithms use "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": "O(n^2)"
                          },
                          "type": "Math"
                        },
                        {
                          "data": {
                            "value": " memory.    Refer to  for details about the algorithms."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Methods 'centroid', 'median', and 'ward' are correctly defined only if    Euclidean pairwise metric is used. If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "y",
                              "version": null
                            },
                            "value": "y"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is passed as precomputed    pairwise distances, then it is the user's responsibility to assure that    these distances are in fact Euclidean, otherwise the produced result    will be incorrect."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "EnumeratedList"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A condensed distance matrix. A condensed distance matrix is a flat array containing the upper triangular of the distance matrix. This is the form that "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "pdist"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " returns. Alternatively, a collection of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": "m"
                          },
                          "type": "Math"
                        },
                        {
                          "data": {
                            "value": " observation vectors in "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": "n"
                          },
                          "type": "Math"
                        },
                        {
                          "data": {
                            "value": " dimensions may be passed as an "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": "m"
                          },
                          "type": "Math"
                        },
                        {
                          "data": {
                            "value": " by "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": "n"
                          },
                          "type": "Math"
                        },
                        {
                          "data": {
                            "value": " array. All elements of the condensed distance matrix must be finite, i.e., no NaNs or infs."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "y",
                "type_": "ndarray"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The linkage algorithm to use. See the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "Linkage Methods"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " section below for full descriptions."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "method",
                "type_": "str, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The distance metric to use in the case that y is a collection of observation vectors; ignored otherwise. See the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "pdist"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " function for a list of valid distance metrics. A custom distance function can also be used."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "metric",
                "type_": "str or function, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If True, the linkage matrix will be reordered so that the distance between successive leaves is minimal. This results in a more intuitive tree structure when the data are visualized. defaults to False, because this algorithm can be slow, particularly on large datasets . See also the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "scipy",
                              "path": "scipy.cluster.hierarchy.optimal_leaf_ordering",
                              "version": "1.10.0"
                            },
                            "value": "optimal_leaf_ordering"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " function."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [],
                      "kind": "versionadded",
                      "title": "1.0.0"
                    },
                    "type": "Admonition"
                  }
                ],
                "param": "optimal_ordering",
                "type_": "bool, optional"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The hierarchical clustering encoded as a linkage matrix."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "Z",
                "type_": "ndarray"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Perform hierarchical/agglomerative clustering."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            {
              "link": {
                "data": "from",
                "type": "str"
              },
              "type": "kn"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy",
                    "version": "1.10.0"
                  },
                  "value": "scipy"
                },
                "type": "Link"
              },
              "type": "nn"
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "nn"
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy.cluster",
                    "version": "1.10.0"
                  },
                  "value": "cluster"
                },
                "type": "Link"
              },
              "type": "nn"
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "nn"
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy.cluster.hierarchy",
                    "version": "1.10.0"
                  },
                  "value": "hierarchy"
                },
                "type": "Link"
              },
              "type": "nn"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "import",
                "type": "str"
              },
              "type": "kn"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy.cluster.hierarchy.dendrogram",
                    "version": "1.10.0"
                  },
                  "value": "dendrogram"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy.cluster.hierarchy.linkage",
                    "version": "1.10.0"
                  },
                  "value": "linkage"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": "w"
            },
            {
              "link": {
                "data": "from",
                "type": "str"
              },
              "type": "kn"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib",
                    "version": "*"
                  },
                  "value": "matplotlib"
                },
                "type": "Link"
              },
              "type": "nn"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "import",
                "type": "str"
              },
              "type": "kn"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.pyplot",
                    "version": "*"
                  },
                  "value": "pyplot"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "as",
                "type": "str"
              },
              "type": "k"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.pyplot",
                    "version": "*"
                  },
                  "value": "plt"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": "w"
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "builtins",
                    "path": "builtins.list",
                    "version": "*"
                  },
                  "value": "X"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "[",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "[",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "builtins",
                    "path": "builtins.list",
                    "version": "*"
                  },
                  "value": "i"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "]",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "for",
                "type": "str"
              },
              "type": "k"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "builtins",
                    "path": "builtins.int",
                    "version": "*"
                  },
                  "value": "i"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "in",
                "type": "str"
              },
              "type": "ow"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "[",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "2",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "8",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "0",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "4",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "1",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "9",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "9",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "0",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": "]",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "]",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": ""
        },
        "type": "Code2"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            {
              "link": {
                "data": "Z",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy.cluster.hierarchy.linkage",
                    "version": "1.10.0"
                  },
                  "value": "linkage"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "builtins",
                    "path": "builtins.list",
                    "version": "*"
                  },
                  "value": "X"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "ward",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": "w"
            },
            {
              "link": {
                "data": "fig",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.pyplot",
                    "version": "*"
                  },
                  "value": "plt"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.pyplot.figure",
                    "version": "*"
                  },
                  "value": "figure"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "figsize",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "25",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "10",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": "w"
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "builtins",
                    "path": "builtins.dict",
                    "version": "*"
                  },
                  "value": "dn"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy.cluster.hierarchy.dendrogram",
                    "version": "1.10.0"
                  },
                  "value": "dendrogram"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.ndarray",
                    "version": "*"
                  },
                  "value": "Z"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": ""
        },
        "type": "Code2"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            {
              "link": {
                "data": "Z",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy.cluster.hierarchy.linkage",
                    "version": "1.10.0"
                  },
                  "value": "linkage"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "builtins",
                    "path": "builtins.list",
                    "version": "*"
                  },
                  "value": "X"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "single",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": "'",
                "type": "str"
              },
              "type": "s1"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": "w"
            },
            {
              "link": {
                "data": "fig",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.pyplot",
                    "version": "*"
                  },
                  "value": "plt"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.pyplot.figure",
                    "version": "*"
                  },
                  "value": "figure"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "figsize",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "25",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "10",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": "w"
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "builtins",
                    "path": "builtins.dict",
                    "version": "*"
                  },
                  "value": "dn"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy.cluster.hierarchy.dendrogram",
                    "version": "1.10.0"
                  },
                  "value": "dendrogram"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.ndarray",
                    "version": "*"
                  },
                  "value": "Z"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": "w"
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.pyplot",
                    "version": "*"
                  },
                  "value": "plt"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.pyplot.show",
                    "version": "*"
                  },
                  "value": "show"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": ""
        },
        "type": "Code2"
      },
      {
        "data": {
          "value": {
            "kind": "assets",
            "module": "scipy",
            "path": "fig-scipy.cluster.hierarchy.linkage-0-18ae32e6.png",
            "version": "1.10.0"
          }
        },
        "type": "Fig"
      },
      {
        "data": {
          "value": {
            "kind": "assets",
            "module": "scipy",
            "path": "fig-scipy.cluster.hierarchy.linkage-1-781b72d2.png",
            "version": "1.10.0"
          }
        },
        "type": "Fig"
      }
    ],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/scipy/cluster/hierarchy.py",
  "item_line": 837,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes",
    "See Also",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "data": {
                "value": "pairwise distance metrics"
              },
              "type": "Words"
            }
          ]
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.spatial.distance.pdist",
          "version": "1.10.0"
        },
        "value": "scipy.spatial.distance.pdist"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "linkage(y, method='single', metric='euclidean', optimal_ordering=False)"
  }
}