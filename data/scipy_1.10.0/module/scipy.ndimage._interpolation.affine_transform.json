{
  "aliases": [
    "scipy.ndimage.affine_transform"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Given an output image pixel index vector "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "o"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", the pixel value is determined from the input image at position "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.dot(matrix, o) + offset"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This does 'pull' (or 'backward') resampling, transforming the output space to the input to locate data. Affine transformations are often described in the 'push' (or 'forward') direction, transforming input to output. If you have a matrix for the 'push' transformation, use its inverse ("
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "numpy.linalg.inv"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ") in this function."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The given matrix and offset are used to find for each point in the output the corresponding coordinates in the input by an affine transformation. The value of the input at those coordinates is determined by spline interpolation of the requested order. Points outside the boundaries of the input are filled according to the given mode."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "Previously, the exact interpretation of the affine transformation depended on whether the matrix was supplied as a 1-D or a 2-D array. If a 1-D array was supplied to the matrix parameter, the output pixel value at index "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "o"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " was determined from the input image at position "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "matrix * (o + offset)"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              }
            ],
            "kind": "versionchanged",
            "title": "0.18.0"
          },
          "type": "Admonition"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "For complex-valued "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "input",
                    "version": null
                  },
                  "value": "input"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ", this function transforms the real and imaginary components independently."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "Complex-valued support added."
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              }
            ],
            "kind": "versionadded",
            "title": "1.6.0"
          },
          "type": "Admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The input array."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "input",
                "type_": "array_like"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The inverse coordinate transformation matrix, mapping output coordinates to input coordinates. If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "ndim"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " is the number of dimensions of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "input"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", the given matrix must have one of the following shapes:"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "children": [
                                  {
                                    "data": {
                                      "children": [
                                        {
                                          "data": {
                                            "value": [
                                              "(ndim, ndim)"
                                            ]
                                          },
                                          "type": "Verbatim"
                                        },
                                        {
                                          "data": {
                                            "value": ": the linear transformation matrix for each       output coordinate."
                                          },
                                          "type": "Words"
                                        }
                                      ]
                                    },
                                    "type": "Paragraph"
                                  }
                                ]
                              },
                              {
                                "children": [
                                  {
                                    "data": {
                                      "children": [
                                        {
                                          "data": {
                                            "value": [
                                              "(ndim,)"
                                            ]
                                          },
                                          "type": "Verbatim"
                                        },
                                        {
                                          "data": {
                                            "value": ": assume that the 2-D transformation matrix is       diagonal, with the diagonal specified by the given value. A more       efficient algorithm is then used that exploits the separability       of the problem."
                                          },
                                          "type": "Words"
                                        }
                                      ]
                                    },
                                    "type": "Paragraph"
                                  }
                                ]
                              },
                              {
                                "children": [
                                  {
                                    "data": {
                                      "children": [
                                        {
                                          "data": {
                                            "value": [
                                              "(ndim + 1, ndim + 1)"
                                            ]
                                          },
                                          "type": "Verbatim"
                                        },
                                        {
                                          "data": {
                                            "value": ": assume that the transformation is       specified using homogeneous coordinates . In this case, any       value passed to "
                                          },
                                          "type": "Words"
                                        },
                                        {
                                          "data": {
                                            "value": [
                                              "offset"
                                            ]
                                          },
                                          "type": "Verbatim"
                                        },
                                        {
                                          "data": {
                                            "value": " is ignored."
                                          },
                                          "type": "Words"
                                        }
                                      ]
                                    },
                                    "type": "Paragraph"
                                  }
                                ]
                              },
                              {
                                "children": [
                                  {
                                    "data": {
                                      "children": [
                                        {
                                          "data": {
                                            "value": [
                                              "(ndim, ndim + 1)"
                                            ]
                                          },
                                          "type": "Verbatim"
                                        },
                                        {
                                          "data": {
                                            "value": ": as above, but the bottom row of a       homogeneous transformation matrix is always "
                                          },
                                          "type": "Words"
                                        },
                                        {
                                          "data": {
                                            "value": [
                                              "[0, 0, ..., 1]"
                                            ]
                                          },
                                          "type": "Verbatim"
                                        },
                                        {
                                          "data": {
                                            "value": ",       and may be omitted."
                                          },
                                          "type": "Words"
                                        }
                                      ]
                                    },
                                    "type": "Paragraph"
                                  }
                                ]
                              }
                            ]
                          },
                          "type": "BulletList"
                        }
                      ]
                    },
                    "type": "BlockQuote"
                  }
                ],
                "param": "matrix",
                "type_": "ndarray"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The offset into the array where the transform is applied. If a float, "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "offset",
                              "version": null
                            },
                            "value": "offset"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is the same for each axis. If a sequence, "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "offset",
                              "version": null
                            },
                            "value": "offset"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " should contain one value for each axis."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "offset",
                "type_": "float or sequence, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Shape tuple."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "output_shape",
                "type_": "tuple of ints, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The array in which to place the output, or the dtype of the returned array. By default an array of the same dtype as input will be created."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "output",
                "type_": "array or dtype, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The order of the spline interpolation, default is 3. The order has to be in the range 0-5."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "order",
                "type_": "int, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "mode",
                              "version": null
                            },
                            "value": "mode"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " parameter determines how the input array is extended beyond its boundaries. Default is 'constant'. Behavior for each valid value is as follows (see additional plots and details on "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "boundary modes <ndimage-interpolation-modes>"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "):"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "dd": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "The input is extended by reflecting about the edge of the last     pixel. This mode is also sometimes referred to as half-sample     symmetric."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ],
                          "dt": {
                            "children": [
                              {
                                "data": {
                                  "value": "'reflect' ("
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "domain": null,
                                  "role": null,
                                  "value": "d c b a | a b c d | d c b a"
                                },
                                "type": "Directive"
                              },
                              {
                                "data": {
                                  "value": ")"
                                },
                                "type": "Words"
                              }
                            ]
                          }
                        },
                        {
                          "dd": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "This is a synonym for 'reflect'."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ],
                          "dt": {
                            "children": [
                              {
                                "data": {
                                  "value": "'grid-mirror'"
                                },
                                "type": "Words"
                              }
                            ]
                          }
                        },
                        {
                          "dd": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "The input is extended by filling all values beyond the edge with     the same constant value, defined by the "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "anchor": null,
                                      "exists": true,
                                      "kind": "local",
                                      "reference": {
                                        "kind": "local",
                                        "module": null,
                                        "path": "cval",
                                        "version": null
                                      },
                                      "value": "cval"
                                    },
                                    "type": "Link"
                                  },
                                  {
                                    "data": {
                                      "value": " parameter. No     interpolation is performed beyond the edges of the input."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ],
                          "dt": {
                            "children": [
                              {
                                "data": {
                                  "value": "'constant' ("
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "domain": null,
                                  "role": null,
                                  "value": "k k k k | a b c d | k k k k"
                                },
                                "type": "Directive"
                              },
                              {
                                "data": {
                                  "value": ")"
                                },
                                "type": "Words"
                              }
                            ]
                          }
                        },
                        {
                          "dd": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "The input is extended by filling all values beyond the edge with     the same constant value, defined by the "
                                    },
                                    "type": "Words"
                                  },
                                  {
                                    "data": {
                                      "anchor": null,
                                      "exists": true,
                                      "kind": "local",
                                      "reference": {
                                        "kind": "local",
                                        "module": null,
                                        "path": "cval",
                                        "version": null
                                      },
                                      "value": "cval"
                                    },
                                    "type": "Link"
                                  },
                                  {
                                    "data": {
                                      "value": " parameter. Interpolation     occurs for samples outside the input's extent  as well."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ],
                          "dt": {
                            "children": [
                              {
                                "data": {
                                  "value": "'grid-constant' ("
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "domain": null,
                                  "role": null,
                                  "value": "k k k k | a b c d | k k k k"
                                },
                                "type": "Directive"
                              },
                              {
                                "data": {
                                  "value": ")"
                                },
                                "type": "Words"
                              }
                            ]
                          }
                        },
                        {
                          "dd": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "The input is extended by replicating the last pixel."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ],
                          "dt": {
                            "children": [
                              {
                                "data": {
                                  "value": "'nearest' ("
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "domain": null,
                                  "role": null,
                                  "value": "a a a a | a b c d | d d d d"
                                },
                                "type": "Directive"
                              },
                              {
                                "data": {
                                  "value": ")"
                                },
                                "type": "Words"
                              }
                            ]
                          }
                        },
                        {
                          "dd": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "The input is extended by reflecting about the center of the last     pixel. This mode is also sometimes referred to as whole-sample     symmetric."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ],
                          "dt": {
                            "children": [
                              {
                                "data": {
                                  "value": "'mirror' ("
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "domain": null,
                                  "role": null,
                                  "value": "d c b | a b c d | c b a"
                                },
                                "type": "Directive"
                              },
                              {
                                "data": {
                                  "value": ")"
                                },
                                "type": "Words"
                              }
                            ]
                          }
                        },
                        {
                          "dd": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "The input is extended by wrapping around to the opposite edge."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ],
                          "dt": {
                            "children": [
                              {
                                "data": {
                                  "value": "'grid-wrap' ("
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "domain": null,
                                  "role": null,
                                  "value": "a b c d | a b c d | a b c d"
                                },
                                "type": "Directive"
                              },
                              {
                                "data": {
                                  "value": ")"
                                },
                                "type": "Words"
                              }
                            ]
                          }
                        },
                        {
                          "dd": [
                            {
                              "data": {
                                "children": [
                                  {
                                    "data": {
                                      "value": "The input is extended by wrapping around to the opposite edge, but in a     way such that the last point and initial point exactly overlap. In this     case it is not well defined which sample will be chosen at the point of     overlap."
                                    },
                                    "type": "Words"
                                  }
                                ]
                              },
                              "type": "Paragraph"
                            }
                          ],
                          "dt": {
                            "children": [
                              {
                                "data": {
                                  "value": "'wrap' ("
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "domain": null,
                                  "role": null,
                                  "value": "d b c d | a b c d | b c a b"
                                },
                                "type": "Directive"
                              },
                              {
                                "data": {
                                  "value": ")"
                                },
                                "type": "Words"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "type": "DefList"
                  }
                ],
                "param": "mode",
                "type_": "{'reflect', 'grid-mirror', 'constant', 'grid-constant', 'nearest',            'mirror', 'grid-wrap', 'wrap'}, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Value to fill past edges of input if "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "mode",
                              "version": null
                            },
                            "value": "mode"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is 'constant'. Default is 0.0."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "cval",
                "type_": "scalar, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Determines if the input array is prefiltered with "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "scipy",
                              "path": "scipy.ndimage._interpolation.spline_filter",
                              "version": "1.10.0"
                            },
                            "value": "spline_filter"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " before interpolation. The default is True, which will create a temporary "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "float64"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " array of filtered values if "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "order > 1"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ". If setting this to False, the output will be slightly blurred if "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "order > 1"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ", unless the input is prefiltered, i.e. it is the result of calling "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "scipy",
                              "path": "scipy.ndimage._interpolation.spline_filter",
                              "version": "1.10.0"
                            },
                            "value": "spline_filter"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " on the original input."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "prefilter",
                "type_": "bool, optional"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The transformed input."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "affine_transform",
                "type_": "ndarray"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Apply an affine transformation."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/scipy/ndimage/_interpolation.py",
  "item_line": 464,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes",
    "References"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "affine_transform(input, matrix, offset=0.0, output_shape=None, output=None, order=3, mode='constant', cval=0.0, prefilter=True)"
  }
}