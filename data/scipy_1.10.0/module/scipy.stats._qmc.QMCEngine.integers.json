{
  "aliases": [
    "scipy.stats._qmc.QMCEngine.integers"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "It is safe to just use the same "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "[0, 1)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " to integer mapping with QMC that you would use with MC. You still get unbiasedness, a strong law of large numbers, an asymptotically infinite variance reduction and a finite sample variance bound."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "To convert a sample from "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "[0, 1)"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "[a, b), b>a"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": ", with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "a"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " the lower bounds and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "b"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " the upper bounds, the following transformation is used:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "\\text{floor}((b - a) \\cdot \\text{sample} + a)"
          },
          "type": "BlockMath"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Lowest (signed) integers to be drawn (unless "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "u_bounds=None"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", in which case this parameter is 0 and this value is used for "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "u_bounds",
                              "version": null
                            },
                            "value": "u_bounds"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ")."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "l_bounds",
                "type_": "int or array-like of ints"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If provided, one above the largest (signed) integer to be drawn (see above for behavior if "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "u_bounds=None"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "). If array-like, must contain integer values."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "u_bounds",
                "type_": "int or array-like of ints, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Number of samples to generate in the parameter space. Default is 1."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "n",
                "type_": "int, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If true, sample from the interval "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "[l_bounds, u_bounds]"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " instead of the default "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "[l_bounds, u_bounds)"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". Defaults is False."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "endpoint",
                "type_": "bool, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Number of workers to use for parallel processing. If -1 is given all CPU threads are used. Only supported when using "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "scipy",
                              "path": "scipy.stats._qmc.Halton",
                              "version": "1.10.0"
                            },
                            "value": "Halton"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " Default is 1."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "workers",
                "type_": "int, optional"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "QMC sample."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "sample",
                "type_": "array_like (n, d)"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Draw "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "n",
                    "version": null
                  },
                  "value": "n"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " integers from "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "l_bounds",
                    "version": null
                  },
                  "value": "l_bounds"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " (inclusive) to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "u_bounds",
                    "version": null
                  },
                  "value": "u_bounds"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " (exclusive), or if endpoint=True, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "l_bounds",
                    "version": null
                  },
                  "value": "l_bounds"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " (inclusive) to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "u_bounds",
                    "version": null
                  },
                  "value": "u_bounds"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " (inclusive)."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/scipy/stats/_qmc.py",
  "item_line": 770,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "integers(self, l_bounds: 'npt.ArrayLike', *, u_bounds: 'Optional[npt.ArrayLike]' = None, n: 'IntNumber' = 1, endpoint: 'bool' = False, workers: 'IntNumber' = 1) -> 'np.ndarray'"
  }
}