{
  "aliases": [
    "scipy.stats._sobol._initialize_direction_numbers"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "Direction numbers obtained using the search criterion D(6)     up to the dimension 21201. This is the recommended choice by the authors."
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "Original data can be found at https://web.maths.unsw.edu.au/~fkuo/sobol/.     For additional details on the quantities involved, see [1]."
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "dd": [
                        {
                          "data": {
                            "children": [
                              {
                                "data": {
                                  "value": "quasirandom sequence generator. ACM Trans. Math. Softw., 29(1):49-57,         Mar. 2003."
                                },
                                "type": "Words"
                              }
                            ]
                          },
                          "type": "Paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "data": {
                              "value": "[1] S. Joe and F. Y. Kuo. Remark on algorithm 659: Implementing sobol's"
                            },
                            "type": "Words"
                          }
                        ]
                      }
                    }
                  ]
                },
                "type": "DefList"
              },
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "The C-code generated from putting the numbers in as literals is obscenely     large/inefficient. The data file was thus packaged and save as an .npz data     file for fast loading using the following code (this assumes that the file     https://web.maths.unsw.edu.au/~fkuo/sobol/new-joe-kuo-6.21201 is present in     the working directory):"
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "children": [
                          {
                            "data": {
                              "value": "import pandas as pd         import numpy as np"
                            },
                            "type": "Words"
                          }
                        ]
                      },
                      "type": "Paragraph"
                    },
                    {
                      "data": {
                        "children": [
                          {
                            "data": {
                              "value": "# read in file content         with open(\"./new-joe-kuo-6.21201\", \"r\") as f:             lines = f.readlines()"
                            },
                            "type": "Words"
                          }
                        ]
                      },
                      "type": "Paragraph"
                    },
                    {
                      "data": {
                        "children": [
                          {
                            "data": {
                              "value": "rows = []"
                            },
                            "type": "Words"
                          }
                        ]
                      },
                      "type": "Paragraph"
                    },
                    {
                      "data": {
                        "children": [
                          {
                            "data": {
                              "value": "# parse data from file line by line         for l in lines[1:]:             nums = [int(n) for n in l.replace(\""
                            },
                            "type": "Words"
                          }
                        ]
                      },
                      "type": "Paragraph"
                    }
                  ]
                },
                "type": "BlockQuote"
              }
            ]
          },
          "type": "BlockQuote"
        },
        {
          "data": {
            "children": [
              {
                "dd": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "d, s, a = nums[:3]             vs = {f\"v{i}\": int(v) for i,v in enumerate(nums[3:])}             rows.append({\"d\": d, \"s\": s, \"a\": a, **vs})"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "dt": {
                  "children": [
                    {
                      "data": {
                        "value": "\", \"\").split()]"
                      },
                      "type": "Words"
                    }
                  ]
                }
              }
            ]
          },
          "type": "DefList"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "# read in as dataframe, explicitly use zero values         df = pd.DataFrame(rows).fillna(0).astype(int)"
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "# perform conversion         df[\"poly\"] = 2 * df[\"a\"] + 2 ** df[\"s\"] + 1"
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "# ensure columns are properly ordered         vs = df[[f\"v{i}\" for i in range(18)]].values"
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "# add the degenerate d=1 column (not included in the data file)         vs = np.vstack([vs[0][np.newaxis, :], vs])         poly = np.concatenate([[1], df[\"poly\"].values])"
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "# save as compressed .npz file to minimize size of distribution         np.savez_compressed(\"./_sobol_direction_numbers\", vinit=vs, poly=poly)"
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              }
            ]
          },
          "type": "BlockQuote"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Direction numbers arrays to fill."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "poly, vinit",
                "type_": "np.ndarray"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Which dtype to use."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "dtype",
                "type_": "{np.uint32, np.uint64}"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Load direction numbers into two arrays."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": null,
  "item_line": null,
  "item_type": "<class 'builtin_function_or_method'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Notes"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}