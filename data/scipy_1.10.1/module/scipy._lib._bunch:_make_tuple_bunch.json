{
  "aliases": [
    "scipy.stats._crosstab._make_tuple_bunch"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This function creates a subclass of tuple that acts like a namedtuple and that has additional attributes."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The additional attributes are listed in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "extra_field_names",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "extra_field_names"
            },
            {
              "type": "text",
              "value": ".  The values assigned to these attributes are not part of the tuple."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The reason this function exists is to allow functions in SciPy that currently return a tuple or a namedtuple to returned objects that have additional attributes, while maintaining backwards compatibility."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "This should only be used to enhance "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "existing"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " functions in SciPy. New functions are free to create objects as return values without having to maintain backwards compatibility with an old tuple or namedtuple return value."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "There are restrictions on the names that may be used in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "field_names",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "field_names"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "extra_field_names",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "extra_field_names"
            },
            {
              "type": "text",
              "value": ":"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The names must be unique--no duplicates allowed."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The names must be valid Python identifiers, and must not begin with   an underscore."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The names must not be Python keywords (e.g. 'def', 'and', etc., are   not allowed)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": false,
          "spread": false,
          "start": 1,
          "type": "list"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The name of the type."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "typename",
              "type": "Param",
              "type_": "str"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "List of names of the values to be stored in the tuple. These names will also be attributes of instances, so the values in the tuple can be accessed by indexing or as attributes.  At least one name is required.  See the Notes for additional restrictions."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "field_names",
              "type": "Param",
              "type_": "list of str"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "List of names of values that will be stored as attributes of the object.  See the notes for additional restrictions."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "extra_field_names",
              "type": "Param",
              "type_": "list of str, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The new class."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cls",
              "type": "Param",
              "type_": "type"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Create a namedtuple-like class with additional attributes."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from scipy._lib._bunch import _make_tuple_bunch"
      },
      {
        "type": "text",
        "value": "Create a class that acts like a namedtuple with length 2 (with field\nnames `x` and `y`) that will also have the attributes `w` and `beta`:"
      },
      {
        "type": "code",
        "value": "Result = _make_tuple_bunch('Result', ['x', 'y'], ['w', 'beta'])"
      },
      {
        "type": "text",
        "value": "`Result` is the new class.  We call it with keyword arguments to create\na new instance with given values."
      },
      {
        "type": "code",
        "value": "result1 = Result(x=1, y=2, w=99, beta=0.5)\nresult1"
      },
      {
        "type": "text",
        "value": "`result1` acts like a tuple of length 2:"
      },
      {
        "type": "code",
        "value": "len(result1)"
      },
      {
        "type": "code",
        "value": "result1[:]"
      },
      {
        "type": "text",
        "value": "The values assigned when the instance was created are available as\nattributes:"
      },
      {
        "type": "code",
        "value": "result1.y"
      },
      {
        "type": "code",
        "value": "result1.beta"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/_lib/_bunch.py",
  "item_line": 33,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(typename, field_names, extra_field_names=None, module=None)"
  },
  "type": "DocBlob"
}