{
  "aliases": [
    "scipy.cluster.hierarchy.DisjointSet"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The number of subsets."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "n_subsets",
              "type": "Param",
              "type_": "int"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionadded 1.6.0"
                }
              ],
              "type": "admonitionTitle"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "add",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [],
              "param": "merge",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [],
              "param": "connected",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [],
              "param": "subset",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [],
              "param": "subsets",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [],
              "param": "__getitem__",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This class implements the disjoint set , also known as the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "union-find"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " or "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "merge-find"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " data structure. The "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "find"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " operation (implemented in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "__getitem__",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "__getitem__"
            },
            {
              "type": "text",
              "value": ") implements the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "path halving"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " variant. The "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "merge"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " method implements the "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "merge by size"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " variant."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Disjoint set data structure for incremental connectivity queries."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from scipy.cluster.hierarchy import DisjointSet"
      },
      {
        "type": "text",
        "value": "Initialize a disjoint set:"
      },
      {
        "type": "code",
        "value": "disjoint_set = DisjointSet([1, 2, 3, 'a', 'b'])"
      },
      {
        "type": "text",
        "value": "Merge some subsets:"
      },
      {
        "type": "code",
        "value": "disjoint_set.merge(1, 2)"
      },
      {
        "type": "code",
        "value": "disjoint_set.merge(3, 'a')"
      },
      {
        "type": "code",
        "value": "disjoint_set.merge('a', 'b')"
      },
      {
        "type": "code",
        "value": "disjoint_set.merge('b', 'b')"
      },
      {
        "type": "text",
        "value": "Find root elements:"
      },
      {
        "type": "code",
        "value": "disjoint_set[2]"
      },
      {
        "type": "code",
        "value": "disjoint_set['b']"
      },
      {
        "type": "text",
        "value": "Test connectivity:"
      },
      {
        "type": "code",
        "value": "disjoint_set.connected(1, 2)"
      },
      {
        "type": "code",
        "value": "disjoint_set.connected(1, 'b')"
      },
      {
        "type": "text",
        "value": "List elements in disjoint set:"
      },
      {
        "type": "code",
        "value": "list(disjoint_set)"
      },
      {
        "type": "text",
        "value": "Get the subset containing 'a':"
      },
      {
        "type": "code",
        "value": "disjoint_set.subset('a')"
      },
      {
        "type": "text",
        "value": "Get all subsets in the disjoint set:"
      },
      {
        "type": "code",
        "value": "disjoint_set.subsets()"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/_lib/_disjoint_set.py",
  "item_line": 6,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Attributes",
    "Methods",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}