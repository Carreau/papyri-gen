{
  "aliases": [
    "scipy.fft._backend.ua.determine_backend"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This is useful for functions that call multimethods without any dispatchable arguments. You can use "
            },
            {
              "type": "inlineCode",
              "value": "determine_backend"
            },
            {
              "type": "text",
              "value": " to ensure the same backend is used everywhere in a block of multimethod calls."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Support is determined by the "
            },
            {
              "type": "inlineCode",
              "value": "__ua_convert__"
            },
            {
              "type": "text",
              "value": " protocol. Backends not supporting the type must return "
            },
            {
              "type": "inlineCode",
              "value": "NotImplemented"
            },
            {
              "type": "text",
              "value": " from their "
            },
            {
              "type": "inlineCode",
              "value": "__ua_convert__"
            },
            {
              "type": "text",
              "value": " if they don't support input of that type."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The value being tested"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "value",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The dispatch type associated with "
                    },
                    {
                      "type": "inlineCode",
                      "value": "value"
                    },
                    {
                      "type": "text",
                      "value": ", aka \""
                    },
                    {
                      "type": "inlineCode",
                      "value": "marking <MarkingGlossary>"
                    },
                    {
                      "type": "text",
                      "value": "\"."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dispatch_type",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The domain to query for backends and set."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "domain: string",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether or not to allow coercion to the backend's types. Implies "
                    },
                    {
                      "type": "inlineCode",
                      "value": "only"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "coerce: bool",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether or not this should be the last backend to try."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "only: bool",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Set the backend to the first active backend that supports "
            },
            {
              "type": "inlineCode",
              "value": "value"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Suppose we have two backends ``BackendA`` and ``BackendB`` each supporting\ndifferent types, ``TypeA`` and ``TypeB``. Neither supporting the other type:"
      },
      {
        "type": "code",
        "value": "with ua.set_backend(ex.BackendA):\n    ex.call_multimethod(ex.TypeB(), ex.TypeB())"
      },
      {
        "type": "text",
        "value": "Now consider a multimethod that creates a new object of ``TypeA``, or\n``TypeB`` depending on the active backend."
      },
      {
        "type": "code",
        "value": "with ua.set_backend(ex.BackendA), ua.set_backend(ex.BackendB):\n        res = ex.creation_multimethod()\n        ex.call_multimethod(res, ex.TypeA())"
      },
      {
        "type": "text",
        "value": "``res`` is an object of ``TypeB`` because ``BackendB`` is set in the\ninnermost with statement. So, ``call_multimethod`` fails since the types\ndon't match."
      },
      {
        "type": "text",
        "value": "Instead, we need to first find a backend suitable for all of our objects."
      },
      {
        "type": "code",
        "value": ">>> with ua.set_backend(ex.BackendA), ua.set_backend(ex.BackendB):\n>>>     x = ex.TypeA()\n>>>     with ua.determine_backend(x, \"mark\", domain=\"ua_examples\"):\n>>>         res = ex.creation_multimethod()\n>>>         ex.call_multimethod(res, x)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/_lib/_uarray/_backend.py",
  "item_line": 543,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "For when you know which backend to set"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "set_backend",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "set_backend"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(value, dispatch_type, *, domain, only=True, coerce=False)"
  },
  "type": "DocBlob"
}