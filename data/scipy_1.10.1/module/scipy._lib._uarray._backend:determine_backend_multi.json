{
  "aliases": [
    "scipy.fft._backend.ua.determine_backend_multi"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This is useful for functions that call multimethods without any dispatchable arguments. You can use "
            },
            {
              "type": "inlineCode",
              "value": "determine_backend_multi"
            },
            {
              "type": "text",
              "value": " to ensure the same backend is used everywhere in a block of multimethod calls involving multiple arrays."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Support is determined by the "
            },
            {
              "type": "inlineCode",
              "value": "__ua_convert__"
            },
            {
              "type": "text",
              "value": " protocol. Backends not supporting the type must return "
            },
            {
              "type": "inlineCode",
              "value": "NotImplemented"
            },
            {
              "type": "text",
              "value": " from their "
            },
            {
              "type": "inlineCode",
              "value": "__ua_convert__"
            },
            {
              "type": "text",
              "value": " if they don't support input of that type."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The dispatchables that must be supported"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dispatchables: Sequence[Union[uarray.Dispatchable, Any]]",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The domain to query for backends and set."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "domain: string",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether or not to allow coercion to the backend's types. Implies "
                    },
                    {
                      "type": "inlineCode",
                      "value": "only"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "coerce: bool",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether or not this should be the last backend to try."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "only: bool",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The default dispatch type associated with "
                    },
                    {
                      "type": "inlineCode",
                      "value": "dispatchables"
                    },
                    {
                      "type": "text",
                      "value": ", aka \""
                    },
                    {
                      "type": "inlineCode",
                      "value": "marking <MarkingGlossary>"
                    },
                    {
                      "type": "text",
                      "value": "\"."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dispatch_type: Optional[Any]",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Set a backend supporting all "
            },
            {
              "type": "inlineCode",
              "value": "dispatchables"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": ":func:`determine_backend` allows the backend to be set from a single\nobject. :func:`determine_backend_multi` allows multiple objects to be\nchecked simultaneously for support in the backend. Suppose we have a\n``BackendAB`` which supports ``TypeA`` and ``TypeB`` in the same call,\nand a ``BackendBC`` that doesn't support ``TypeA``."
      },
      {
        "type": "code",
        "value": ">>> with ua.set_backend(ex.BackendAB), ua.set_backend(ex.BackendBC):\n>>>     a, b = ex.TypeA(), ex.TypeB()\n>>>     with ua.determine_backend_multi(\n>>>         [ua.Dispatchable(a, \"mark\"), ua.Dispatchable(b, \"mark\")],\n>>>         domain=\"ua_examples\"\n>>>     ):\n>>>         res = ex.creation_multimethod()\n>>>         ex.call_multimethod(res, a, b)"
      },
      {
        "type": "text",
        "value": "This won't call ``BackendBC`` because it doesn't support ``TypeA``."
      },
      {
        "type": "text",
        "value": "We can also use leave out the ``ua.Dispatchable`` if we specify the\ndefault ``dispatch_type`` for the ``dispatchables`` argument."
      },
      {
        "type": "code",
        "value": ">>> with ua.set_backend(ex.BackendAB), ua.set_backend(ex.BackendBC):\n>>>     a, b = ex.TypeA(), ex.TypeB()\n>>>     with ua.determine_backend_multi(\n>>>         [a, b], dispatch_type=\"mark\", domain=\"ua_examples\"\n>>>     ):\n>>>         res = ex.creation_multimethod()\n>>>         ex.call_multimethod(res, a, b)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/_lib/_uarray/_backend.py",
  "item_line": 617,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "For a single dispatch value"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "determine_backend",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "determine_backend"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "For when you know which backend to set"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "set_backend",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "set_backend"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(dispatchables, *, domain, only=True, coerce=False, **kwargs)"
  },
  "type": "DocBlob"
}