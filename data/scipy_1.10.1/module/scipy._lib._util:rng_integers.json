{
  "aliases": [
    "scipy.cluster.vq.rng_integers"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return random integers from the \"discrete uniform\" distribution of the specified dtype. If high is None (the default), then results are from 0 to low."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Random number generator. If None, then the np.random.RandomState singleton is used."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "gen",
              "type": "Param",
              "type_": "{None, np.random.RandomState, np.random.Generator}"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Lowest (signed) integers to be drawn from the distribution (unless high=None, in which case this parameter is 0 and this value is used for high)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "low",
              "type": "Param",
              "type_": "int or array-like of ints"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If provided, one above the largest (signed) integer to be drawn from the distribution (see above for behavior if high=None). If array-like, must contain integer values."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "high",
              "type": "Param",
              "type_": "int or array-like of ints"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Output shape. If the given shape is, e.g., (m, n, k), then m * n * k samples are drawn. Default is None, in which case a single value is returned."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "size",
              "type": "Param",
              "type_": "array-like of ints, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Desired dtype of the result. All dtypes are determined by their name, i.e., 'int64', 'int', etc, so byteorder is not available and a specific precision may have different C types depending on the platform. The default value is "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "np.int_"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dtype",
              "type": "Param",
              "type_": "{str, dtype}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, sample from the interval [low, high] instead of the default [low, high) Defaults to False."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "endpoint",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "size-shaped array of random integers from the appropriate distribution, or a single such random int if size not provided."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "out: int or ndarray of ints"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return random integers from low (inclusive) to high (exclusive), or if endpoint=True, low (inclusive) to high (inclusive). Replaces "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "RandomState.randint"
            },
            {
              "type": "text",
              "value": " (with endpoint=False) and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "RandomState.random_integers"
            },
            {
              "type": "text",
              "value": " (with endpoint=True)."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/_lib/_util.py",
  "item_line": 449,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(gen, low, high=None, size=None, dtype='int64', endpoint=False)"
  },
  "type": "DocBlob"
}