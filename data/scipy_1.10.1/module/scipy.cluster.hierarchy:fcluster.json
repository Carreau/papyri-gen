{
  "aliases": [
    "scipy.cluster.hierarchy.fcluster"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The hierarchical clustering encoded with the matrix returned by the "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "linkage"
                    },
                    {
                      "type": "text",
                      "value": " function."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "Z",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "this is the threshold to apply when forming flat clusters."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "For criteria 'inconsistent', 'distance' or 'monocrit',"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "this would be max number of clusters requested."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "For 'maxclust' or 'maxclust_monocrit' criteria,"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    }
                  ],
                  "type": "DefList"
                }
              ],
              "param": "t",
              "type": "Param",
              "type_": "scalar"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The criterion to use in forming flat clusters. This can be any of the following values:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "dd": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "If a cluster node and all its       descendants have an inconsistent value less than or equal       to "
                                },
                                {
                                  "anchor": null,
                                  "exists": true,
                                  "kind": "local",
                                  "reference": {
                                    "kind": "local",
                                    "module": null,
                                    "path": "t",
                                    "type": "RefInfo",
                                    "version": null
                                  },
                                  "type": "Link",
                                  "value": "t"
                                },
                                {
                                  "type": "text",
                                  "value": ", then all its leaf descendants belong to the       same flat cluster. When no non-singleton cluster meets       this criterion, every node is assigned to its own       cluster. (Default)"
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "dt": {
                            "children": [
                              {
                                "type": "inlineCode",
                                "value": "inconsistent"
                              },
                              {
                                "type": "text",
                                "value": " :"
                              }
                            ],
                            "type": "paragraph"
                          },
                          "type": "DefListItem"
                        },
                        {
                          "dd": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "Forms flat clusters so that the original       observations in each flat cluster have no greater a       cophenetic distance than "
                                },
                                {
                                  "anchor": null,
                                  "exists": true,
                                  "kind": "local",
                                  "reference": {
                                    "kind": "local",
                                    "module": null,
                                    "path": "t",
                                    "type": "RefInfo",
                                    "version": null
                                  },
                                  "type": "Link",
                                  "value": "t"
                                },
                                {
                                  "type": "text",
                                  "value": "."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "dt": {
                            "children": [
                              {
                                "type": "inlineCode",
                                "value": "distance"
                              },
                              {
                                "type": "text",
                                "value": " :"
                              }
                            ],
                            "type": "paragraph"
                          },
                          "type": "DefListItem"
                        },
                        {
                          "dd": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "Finds a minimum threshold "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "r"
                                },
                                {
                                  "type": "text",
                                  "value": " so that       the cophenetic distance between any two original       observations in the same flat cluster is no more than       "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "r"
                                },
                                {
                                  "type": "text",
                                  "value": " and no more than "
                                },
                                {
                                  "anchor": null,
                                  "exists": true,
                                  "kind": "local",
                                  "reference": {
                                    "kind": "local",
                                    "module": null,
                                    "path": "t",
                                    "type": "RefInfo",
                                    "version": null
                                  },
                                  "type": "Link",
                                  "value": "t"
                                },
                                {
                                  "type": "text",
                                  "value": " flat clusters are formed."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "dt": {
                            "children": [
                              {
                                "type": "inlineCode",
                                "value": "maxclust"
                              },
                              {
                                "type": "text",
                                "value": " :"
                              }
                            ],
                            "type": "paragraph"
                          },
                          "type": "DefListItem"
                        },
                        {
                          "dd": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "Forms a flat cluster from a cluster node c       with index i when "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "monocrit[j] <= t"
                                },
                                {
                                  "type": "text",
                                  "value": "."
                                }
                              ],
                              "type": "paragraph"
                            },
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "For example, to threshold on the maximum mean distance       as computed in the inconsistency matrix R with a       threshold of 0.8 do            "
                                }
                              ],
                              "type": "paragraph"
                            },
                            {
                              "type": "code",
                              "value": "MR = maxRstat(Z, R, 3)\nfcluster(Z, t=0.8, criterion='monocrit', monocrit=MR)"
                            }
                          ],
                          "dt": {
                            "children": [
                              {
                                "type": "inlineCode",
                                "value": "monocrit"
                              },
                              {
                                "type": "text",
                                "value": " :"
                              }
                            ],
                            "type": "paragraph"
                          },
                          "type": "DefListItem"
                        },
                        {
                          "dd": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "Forms a flat cluster from a       non-singleton cluster node "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "c"
                                },
                                {
                                  "type": "text",
                                  "value": " when "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "monocrit[i] <=\n      r"
                                },
                                {
                                  "type": "text",
                                  "value": " for all cluster indices "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "i"
                                },
                                {
                                  "type": "text",
                                  "value": " below and including       "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "c"
                                },
                                {
                                  "type": "text",
                                  "value": ". "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "r"
                                },
                                {
                                  "type": "text",
                                  "value": " is minimized such that no more than "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "t"
                                },
                                {
                                  "type": "text",
                                  "value": "       flat clusters are formed. monocrit must be       monotonic. For example, to minimize the threshold t on       maximum inconsistency values so that no more than 3 flat       clusters are formed, do            "
                                }
                              ],
                              "type": "paragraph"
                            },
                            {
                              "type": "code",
                              "value": "MI = maxinconsts(Z, R)\nfcluster(Z, t=3, criterion='maxclust_monocrit', monocrit=MI)"
                            }
                          ],
                          "dt": {
                            "children": [
                              {
                                "type": "inlineCode",
                                "value": "maxclust_monocrit"
                              },
                              {
                                "type": "text",
                                "value": " :"
                              }
                            ],
                            "type": "paragraph"
                          },
                          "type": "DefListItem"
                        }
                      ],
                      "type": "DefList"
                    }
                  ],
                  "type": "blockquote"
                }
              ],
              "param": "criterion",
              "type": "Param",
              "type_": "str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The maximum depth to perform the inconsistency calculation. It has no meaning for the other criteria. Default is 2."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "depth",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The inconsistency matrix to use for the 'inconsistent' criterion. This matrix is computed if not provided."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "R",
              "type": "Param",
              "type_": "ndarray, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An array of length n-1. "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "monocrit[i]"
                    },
                    {
                      "type": "text",
                      "value": " is the statistics upon which non-singleton i is thresholded. The monocrit vector must be monotonic, i.e., given a node c with index i, for all node indices j corresponding to nodes below c, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "monocrit[i] >= monocrit[j]"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "monocrit",
              "type": "Param",
              "type_": "ndarray, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An array of length "
                    },
                    {
                      "type": "inlineCode",
                      "value": "n"
                    },
                    {
                      "type": "text",
                      "value": ". "
                    },
                    {
                      "type": "inlineCode",
                      "value": "T[i]"
                    },
                    {
                      "type": "text",
                      "value": " is the flat cluster number to which original observation "
                    },
                    {
                      "type": "inlineCode",
                      "value": "i"
                    },
                    {
                      "type": "text",
                      "value": " belongs."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "fcluster",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Form flat clusters from the hierarchical clustering defined by the given linkage matrix."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from scipy.cluster.hierarchy import ward, fcluster\nfrom scipy.spatial.distance import pdist"
      },
      {
        "type": "text",
        "value": "All cluster linkage methods - e.g., `scipy.cluster.hierarchy.ward`\ngenerate a linkage matrix ``Z`` as their output:"
      },
      {
        "type": "code",
        "value": "X = [[0, 0], [0, 1], [1, 0],\n     [0, 4], [0, 3], [1, 4],\n     [4, 0], [3, 0], [4, 1],\n     [4, 4], [3, 4], [4, 3]]"
      },
      {
        "type": "code",
        "value": "Z = ward(pdist(X))"
      },
      {
        "type": "code",
        "value": "Z"
      },
      {
        "type": "text",
        "value": "This matrix represents a dendrogram, where the first and second elements\nare the two clusters merged at each step, the third element is the\ndistance between these clusters, and the fourth element is the size of\nthe new cluster - the number of original data points included."
      },
      {
        "type": "text",
        "value": "`scipy.cluster.hierarchy.fcluster` can be used to flatten the\ndendrogram, obtaining as a result an assignation of the original data\npoints to single clusters."
      },
      {
        "type": "text",
        "value": "This assignation mostly depends on a distance threshold ``t`` - the maximum\ninter-cluster distance allowed:"
      },
      {
        "type": "code",
        "value": "fcluster(Z, t=0.9, criterion='distance')"
      },
      {
        "type": "code",
        "value": "fcluster(Z, t=1.1, criterion='distance')"
      },
      {
        "type": "code",
        "value": "fcluster(Z, t=3, criterion='distance')"
      },
      {
        "type": "code",
        "value": "fcluster(Z, t=9, criterion='distance')"
      },
      {
        "type": "text",
        "value": "In the first case, the threshold ``t`` is too small to allow any two\nsamples in the data to form a cluster, so 12 different clusters are\nreturned."
      },
      {
        "type": "text",
        "value": "In the second case, the threshold is large enough to allow the first\n4 points to be merged with their nearest neighbors. So, here, only 8\nclusters are returned."
      },
      {
        "type": "text",
        "value": "The third case, with a much higher threshold, allows for up to 8 data\npoints to be connected - so 4 clusters are returned here."
      },
      {
        "type": "text",
        "value": "Lastly, the threshold of the fourth case is large enough to allow for\nall data points to be merged together - so a single cluster is returned."
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/cluster/hierarchy.py",
  "item_line": 2428,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "for information about hierarchical clustering methods work."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "linkage",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "linkage"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(Z, t, criterion='inconsistent', depth=2, R=None, monocrit=None)"
  },
  "type": "DocBlob"
}