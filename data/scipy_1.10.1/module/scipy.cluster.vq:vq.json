{
  "aliases": [
    "scipy.cluster.vq.vq"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Assigns a code from a code book to each observation. Each observation vector in the 'M' by 'N' "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "obs",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "obs"
            },
            {
              "type": "text",
              "value": " array is compared with the centroids in the code book and assigned the code of the closest centroid."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The features in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "obs",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "obs"
            },
            {
              "type": "text",
              "value": " should have unit variance, which can be achieved by passing them through the whiten function. The code book can be created with the k-means algorithm or a different encoding algorithm."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Each row of the 'M' x 'N' array is an observation. The columns are the \"features\" seen during each observation. The features must be whitened first using the whiten function or something equivalent."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "obs",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The code book is usually generated using the k-means algorithm. Each row of the array holds a different code, and the columns are the features of the code."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "code",
                      "value": ">>> #              f0    f1    f2   f3\n>>> code_book = [\n...             [  1.,   2.,   3.,   4.],  #c0\n...             [  1.,   2.,   3.,   4.],  #c1\n...             [  1.,   2.,   3.,   4.]]  #c2"
                    }
                  ],
                  "type": "blockquote"
                }
              ],
              "param": "code_book",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether to check that the input matrices contain only finite numbers. Disabling may give a performance gain, but may result in problems (crashes, non-termination) if the inputs do contain infinities or NaNs. Default: True"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "check_finite",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A length M array holding the code book index for each observation."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "code",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The distortion (distance) between the observation and its nearest code."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dist",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Assign codes from a code book to observations."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy.cluster.vq import vq\ncode_book = np.array([[1.,1.,1.],\n                      [2.,2.,2.]])\nfeatures  = np.array([[  1.9,2.3,1.7],\n                      [  1.5,2.5,2.2],\n                      [  0.8,0.6,1.7]])\nvq(features,code_book)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/cluster/vq.py",
  "item_line": 143,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(obs, code_book, check_finite=True)"
  },
  "type": "DocBlob"
}