{
  "aliases": [
    "scipy.fft.register_backend"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Registered backends have the lowest priority and will be tried after the global backend."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The backend to use. Can either be a "
                    },
                    {
                      "type": "inlineCode",
                      "value": "str"
                    },
                    {
                      "type": "text",
                      "value": " containing the name of a known backend {'scipy'} or an object that implements the uarray protocol."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "backend",
              "type": "Param",
              "type_": "{object, 'scipy'}"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "",
              "type": "Param",
              "type_": "ValueError: If the backend does not implement ``numpy.scipy.fft``."
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Register a backend for permanent use."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "We can register a new fft backend:"
      },
      {
        "type": "code",
        "value": "from scipy.fft import fft, register_backend, set_global_backend\nclass NoopBackend:  # Define an invalid Backend\n    __ua_domain__ = \"numpy.scipy.fft\"\n    def __ua_function__(self, func, args, kwargs):\n         return NotImplemented\nset_global_backend(NoopBackend())  # Set the invalid backend as global\nregister_backend(\"scipy\")  # Register a new backend\nfft([1])  # The registered backend is called because the global backend returns `NotImplemented`"
      },
      {
        "type": "code",
        "value": "set_global_backend(\"scipy\")  # Restore global backend to default"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/fft/_backend.py",
  "item_line": 92,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Raises",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(backend)"
  },
  "type": "DocBlob"
}