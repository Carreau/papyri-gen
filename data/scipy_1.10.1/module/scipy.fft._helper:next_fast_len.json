{
  "aliases": [
    "scipy.fft.next_fast_len"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "SciPy's FFT algorithms gain their speed by a recursive divide and conquer strategy. This relies on efficient functions for small prime factors of the input length. Thus, the transforms are fastest when using composites of the prime factors handled by the fft implementation. If there are efficient functions for all radices <= "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "n"
            },
            {
              "type": "text",
              "value": ", then the result will be a number "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "x"
            },
            {
              "type": "text",
              "value": " >= "
            },
            {
              "type": "inlineCode",
              "value": "target"
            },
            {
              "type": "text",
              "value": " with only prime factors < "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "n"
            },
            {
              "type": "text",
              "value": ". (Also known as "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "n"
            },
            {
              "type": "text",
              "value": "-smooth numbers)"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The result of this function may change in future as performance considerations change, for example, if new prime factors are added."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Calling "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "scipy",
                "path": "scipy.fft",
                "type": "RefInfo",
                "version": "1.10.1"
              },
              "type": "Link",
              "value": "fft"
            },
            {
              "type": "text",
              "value": " or "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "ifft"
            },
            {
              "type": "text",
              "value": " with real input data performs an "
            },
            {
              "type": "inlineCode",
              "value": "'R2C'"
            },
            {
              "type": "text",
              "value": " transform internally."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Length to start searching from. Must be a positive integer."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "target",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "True if the FFT involves real input or output (e.g., "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "rfft"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "hfft"
                    },
                    {
                      "type": "text",
                      "value": " but not "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "scipy",
                        "path": "scipy.fft",
                        "type": "RefInfo",
                        "version": "1.10.1"
                      },
                      "type": "Link",
                      "value": "fft"
                    },
                    {
                      "type": "text",
                      "value": "). Defaults to False."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "real",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The smallest fast length greater than or equal to "
                    },
                    {
                      "type": "inlineCode",
                      "value": "target"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "int"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Find the next fast size of input data to "
            },
            {
              "type": "inlineCode",
              "value": "fft"
            },
            {
              "type": "text",
              "value": ", for zero-padding, etc."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "On a particular machine, an FFT of prime length takes 11.4 ms:"
      },
      {
        "type": "code",
        "value": "from scipy import fft\nimport numpy as np\nrng = np.random.default_rng()\nmin_len = 93059  # prime length is worst case for speed\na = rng.standard_normal(min_len)\nb = fft.fft(a)"
      },
      {
        "type": "text",
        "value": "Zero-padding to the next regular length reduces computation time to\n1.6 ms, a speedup of 7.3 times:"
      },
      {
        "type": "code",
        "value": "fft.next_fast_len(min_len, real=True)"
      },
      {
        "type": "code",
        "value": "b = fft.fft(a, 93312)"
      },
      {
        "type": "text",
        "value": "Rounding up to the next power of 2 is not optimal, taking 3.0 ms to\ncompute; 1.9 times longer than the size given by ``next_fast_len``:"
      },
      {
        "type": "code",
        "value": "b = fft.fft(a, 131072)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": null,
  "item_line": null,
  "item_type": "<class 'functools._lru_cache_wrapper'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}