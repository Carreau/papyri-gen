{
  "aliases": [
    "scipy.fft.dst"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "warning For ``type in {2, 3}``, ``norm=\"ortho\"`` breaks the direct"
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "correspondence with the direct Fourier transform. To recover it you must specify "
                },
                {
                  "type": "inlineCode",
                  "value": "orthogonalize=False"
                },
                {
                  "type": "text",
                  "value": "."
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For "
            },
            {
              "type": "inlineCode",
              "value": "norm=\"ortho\""
            },
            {
              "type": "text",
              "value": " both the "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "dst",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "dst"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "idst"
            },
            {
              "type": "text",
              "value": " are scaled by the same overall factor in both directions. By default, the transform is also orthogonalized which for types 2 and 3 means the transform definition is modified to give orthogonality of the DST matrix (see below)."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For "
            },
            {
              "type": "inlineCode",
              "value": "norm=\"backward\""
            },
            {
              "type": "text",
              "value": ", there is no scaling on the "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "dst",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "dst"
            },
            {
              "type": "text",
              "value": " and the "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "idst"
            },
            {
              "type": "text",
              "value": " is scaled by "
            },
            {
              "type": "inlineCode",
              "value": "1/N"
            },
            {
              "type": "text",
              "value": " where "
            },
            {
              "type": "inlineCode",
              "value": "N"
            },
            {
              "type": "text",
              "value": " is the \"logical\" size of the DST."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "There are, theoretically, 8 types of the DST for different combinations of even/odd boundary conditions and boundary off sets , only the first 4 types are implemented in SciPy."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "Type I"
                }
              ],
              "type": "strong"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "There are several definitions of the DST-I; we use the following for "
            },
            {
              "type": "inlineCode",
              "value": "norm=\"backward\""
            },
            {
              "type": "text",
              "value": ". DST-I assumes the input is odd around "
            },
            {
              "type": "inlineMath",
              "value": "n=-1"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineMath",
              "value": "n=N"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "y_k = 2 \\sum_{n=0}^{N-1} x_n \\sin\\left(\\frac{\\pi(k+1)(n+1)}{N+1}\\right)"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Note that the DST-I is only supported for input size > 1. The (unnormalized) DST-I is its own inverse, up to a factor "
            },
            {
              "type": "inlineMath",
              "value": "2(N+1)"
            },
            {
              "type": "text",
              "value": ". The orthonormalized DST-I is exactly its own inverse."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "inlineCode",
              "value": "orthogonalize"
            },
            {
              "type": "text",
              "value": " has no effect here, as the DST-I matrix is already orthogonal up to a scale factor of "
            },
            {
              "type": "inlineCode",
              "value": "2N"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "Type II"
                }
              ],
              "type": "strong"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "There are several definitions of the DST-II; we use the following for "
            },
            {
              "type": "inlineCode",
              "value": "norm=\"backward\""
            },
            {
              "type": "text",
              "value": ". DST-II assumes the input is odd around "
            },
            {
              "type": "inlineMath",
              "value": "n=-1/2"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineMath",
              "value": "n=N-1/2"
            },
            {
              "type": "text",
              "value": "; the output is odd around "
            },
            {
              "type": "inlineMath",
              "value": "k=-1"
            },
            {
              "type": "text",
              "value": " and even around "
            },
            {
              "type": "inlineMath",
              "value": "k=N-1"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "y_k = 2 \\sum_{n=0}^{N-1} x_n \\sin\\left(\\frac{\\pi(k+1)(2n+1)}{2N}\\right)"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "If "
            },
            {
              "type": "inlineCode",
              "value": "orthogonalize=True"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "y[0]"
            },
            {
              "type": "text",
              "value": " is divided "
            },
            {
              "type": "inlineMath",
              "value": "\\sqrt{2}"
            },
            {
              "type": "text",
              "value": " which, when combined with "
            },
            {
              "type": "inlineCode",
              "value": "norm=\"ortho\""
            },
            {
              "type": "text",
              "value": ", makes the corresponding matrix of coefficients orthonormal ("
            },
            {
              "type": "inlineCode",
              "value": "O @ O.T = np.eye(N)"
            },
            {
              "type": "text",
              "value": ")."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "Type III"
                }
              ],
              "type": "strong"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "There are several definitions of the DST-III, we use the following (for "
            },
            {
              "type": "inlineCode",
              "value": "norm=\"backward\""
            },
            {
              "type": "text",
              "value": "). DST-III assumes the input is odd around "
            },
            {
              "type": "inlineMath",
              "value": "n=-1"
            },
            {
              "type": "text",
              "value": " and even around "
            },
            {
              "type": "inlineMath",
              "value": "n=N-1"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "y_k = (-1)^k x_{N-1} + 2 \\sum_{n=0}^{N-2} x_n \\sin\\left(\n\\frac{\\pi(2k+1)(n+1)}{2N}\\right)"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "If "
            },
            {
              "type": "inlineCode",
              "value": "orthogonalize=True"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "x[0]"
            },
            {
              "type": "text",
              "value": " is multiplied by "
            },
            {
              "type": "inlineMath",
              "value": "\\sqrt{2}"
            },
            {
              "type": "text",
              "value": " which, when combined with "
            },
            {
              "type": "inlineCode",
              "value": "norm=\"ortho\""
            },
            {
              "type": "text",
              "value": ", makes the corresponding matrix of coefficients orthonormal ("
            },
            {
              "type": "inlineCode",
              "value": "O @ O.T = np.eye(N)"
            },
            {
              "type": "text",
              "value": ")."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The (unnormalized) DST-III is the inverse of the (unnormalized) DST-II, up to a factor "
            },
            {
              "type": "inlineMath",
              "value": "2N"
            },
            {
              "type": "text",
              "value": ". The orthonormalized DST-III is exactly the inverse of the orthonormalized DST-II."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "Type IV"
                }
              ],
              "type": "strong"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "There are several definitions of the DST-IV, we use the following (for "
            },
            {
              "type": "inlineCode",
              "value": "norm=\"backward\""
            },
            {
              "type": "text",
              "value": "). DST-IV assumes the input is odd around "
            },
            {
              "type": "inlineMath",
              "value": "n=-0.5"
            },
            {
              "type": "text",
              "value": " and even around "
            },
            {
              "type": "inlineMath",
              "value": "n=N-0.5"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "y_k = 2 \\sum_{n=0}^{N-1} x_n \\sin\\left(\\frac{\\pi(2k+1)(2n+1)}{4N}\\right)"
        },
        {
          "children": [
            {
              "type": "inlineCode",
              "value": "orthogonalize"
            },
            {
              "type": "text",
              "value": " has no effect here, as the DST-IV matrix is already orthogonal up to a scale factor of "
            },
            {
              "type": "inlineCode",
              "value": "2N"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The (unnormalized) DST-IV is its own inverse, up to a factor "
            },
            {
              "type": "inlineMath",
              "value": "2N"
            },
            {
              "type": "text",
              "value": ". The orthonormalized DST-IV is exactly its own inverse."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The input array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Type of the DST (see Notes). Default type is 2."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "type",
              "type": "Param",
              "type_": "{1, 2, 3, 4}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Length of the transform. If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "n < x.shape[axis]"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": " is truncated.  If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "n > x.shape[axis]"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": " is zero-padded. The default results in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "n = x.shape[axis]"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "n",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Axis along which the dst is computed; the default is over the last axis (i.e., "
                    },
                    {
                      "type": "inlineCode",
                      "value": "axis=-1"
                    },
                    {
                      "type": "text",
                      "value": ")."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axis",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Normalization mode (see Notes). Default is \"backward\"."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "norm",
              "type": "Param",
              "type_": "{\"backward\", \"ortho\", \"forward\"}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, the contents of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": " can be destroyed; the default is False."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "overwrite_x",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Maximum number of workers to use for parallel computation. If negative, the value wraps around from "
                    },
                    {
                      "type": "inlineCode",
                      "value": "os.cpu_count()"
                    },
                    {
                      "type": "text",
                      "value": ". See "
                    },
                    {
                      "type": "inlineCode",
                      "value": "~scipy.fft.fft"
                    },
                    {
                      "type": "text",
                      "value": " for more details."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "workers",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether to use the orthogonalized DST variant (see Notes). Defaults to "
                    },
                    {
                      "type": "inlineCode",
                      "value": "True"
                    },
                    {
                      "type": "text",
                      "value": " when "
                    },
                    {
                      "type": "inlineCode",
                      "value": "norm=\"ortho\""
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "False"
                    },
                    {
                      "type": "text",
                      "value": " otherwise."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.8.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "orthogonalize",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The transformed input array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dst",
              "type": "Param",
              "type_": "ndarray of reals"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return the Discrete Sine Transform of arbitrary type sequence x."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/fft/_realtransforms.py",
  "item_line": 498,
  "item_type": "<class 'uarray._Function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "References"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Inverse DST"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "idst",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "idst"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}