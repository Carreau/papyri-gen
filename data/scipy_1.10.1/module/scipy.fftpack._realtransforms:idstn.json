{
  "aliases": [
    "scipy.fftpack.idstn"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "For full details of the IDST types and normalization modes, as well as references, see "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "idst"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The input array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Type of the DST (see Notes). Default type is 2."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "type",
              "type": "Param",
              "type_": "{1, 2, 3, 4}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The shape of the result.  If both "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "shape",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "shape"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "axes",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "axes"
                    },
                    {
                      "type": "text",
                      "value": " (see below) are None, "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "shape",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "shape"
                    },
                    {
                      "type": "text",
                      "value": " is "
                    },
                    {
                      "type": "inlineCode",
                      "value": "x.shape"
                    },
                    {
                      "type": "text",
                      "value": "; if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "shape",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "shape"
                    },
                    {
                      "type": "text",
                      "value": " is None but "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "axes",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "axes"
                    },
                    {
                      "type": "text",
                      "value": " is not None, then "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "shape",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "shape"
                    },
                    {
                      "type": "text",
                      "value": " is "
                    },
                    {
                      "type": "inlineCode",
                      "value": "numpy.take(x.shape, axes, axis=0)"
                    },
                    {
                      "type": "text",
                      "value": ". If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "shape[i] > x.shape[i]"
                    },
                    {
                      "type": "text",
                      "value": ", the ith dimension is padded with zeros. If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "shape[i] < x.shape[i]"
                    },
                    {
                      "type": "text",
                      "value": ", the ith dimension is truncated to length "
                    },
                    {
                      "type": "inlineCode",
                      "value": "shape[i]"
                    },
                    {
                      "type": "text",
                      "value": ". If any element of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "shape",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "shape"
                    },
                    {
                      "type": "text",
                      "value": " is -1, the size of the corresponding dimension of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": " is used."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "shape",
              "type": "Param",
              "type_": "int or array_like of ints or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Axes along which the IDST is computed. The default is over all axes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axes",
              "type": "Param",
              "type_": "int or array_like of ints or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Normalization mode (see Notes). Default is None."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "norm",
              "type": "Param",
              "type_": "{None, 'ortho'}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, the contents of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": " can be destroyed; the default is False."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "overwrite_x",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The transformed input array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "y",
              "type": "Param",
              "type_": "ndarray of real"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return multidimensional Discrete Sine Transform along the specified axes."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy.fftpack import dstn, idstn\nrng = np.random.default_rng()\ny = rng.standard_normal((16, 16))\nnp.allclose(y, idstn(dstn(y, norm='ortho'), norm='ortho'))"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/fftpack/_realtransforms.py",
  "item_line": 179,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "multidimensional DST"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "dstn",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "dstn"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(x, type=2, shape=None, axes=None, norm=None, overwrite_x=False)"
  },
  "type": "DocBlob"
}