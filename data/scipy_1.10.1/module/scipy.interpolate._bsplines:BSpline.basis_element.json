{
  "aliases": [
    "scipy.interpolate.BSpline.basis_element"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The degree of the B-spline, "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "k"
            },
            {
              "type": "text",
              "value": ", is inferred from the length of "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "t",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "t"
            },
            {
              "type": "text",
              "value": " as "
            },
            {
              "type": "inlineCode",
              "value": "len(t)-2"
            },
            {
              "type": "text",
              "value": ". The knot vector is constructed by appending and prepending "
            },
            {
              "type": "inlineCode",
              "value": "k+1"
            },
            {
              "type": "text",
              "value": " elements to internal knots "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "t",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "t"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "internal knots"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "t",
              "type": "Param",
              "type_": "ndarray, shape (k+2,)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "whether to extrapolate beyond the base interval, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "t[0] .. t[k+1]"
                    },
                    {
                      "type": "text",
                      "value": ", or to return nans. If 'periodic', periodic extrapolation is used. Default is True."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "extrapolate",
              "type": "Param",
              "type_": "bool or 'periodic', optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A callable representing a B-spline basis element for the knot vector "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "t",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "t"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "basis_element",
              "type": "Param",
              "type_": "callable"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return a B-spline basis element "
            },
            {
              "type": "inlineCode",
              "value": "B(x | t[0], ..., t[k+1])"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Construct a cubic B-spline:"
      },
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy.interpolate import BSpline\nb = BSpline.basis_element([0, 1, 2, 3, 4])\nk = b.k\nb.t[k:-k]"
      },
      {
        "type": "code",
        "value": "k"
      },
      {
        "type": "text",
        "value": "Construct a quadratic B-spline on ``[0, 1, 1, 2]``, and compare\nto its explicit form:"
      },
      {
        "type": "code",
        "value": "t = [0, 1, 1, 2]\nb = BSpline.basis_element(t)\ndef f(x):\n    return np.where(x < 1, x*x, (2. - x)**2)"
      },
      {
        "type": "code",
        "value": "import matplotlib.pyplot as plt\nfig, ax = plt.subplots()\nx = np.linspace(0, 2, 51)\nax.plot(x, b(x), 'g', lw=3)\nax.plot(x, f(x), 'r', lw=8, alpha=0.4)\nax.grid(True)\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.interpolate._bsplines:BSpline.basis_element-0-2705cab5.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/interpolate/_bsplines.py",
  "item_line": 273,
  "item_type": "<class 'classmethod'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}