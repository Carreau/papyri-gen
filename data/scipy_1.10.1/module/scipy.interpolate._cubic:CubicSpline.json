{
  "aliases": [
    "scipy.interpolate.CubicSpline"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Breakpoints. The same "
                    },
                    {
                      "type": "inlineCode",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": " which was passed to the constructor."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x",
              "type": "Param",
              "type_": "ndarray, shape (n,)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Coefficients of the polynomials on each segment. The trailing dimensions match the dimensions of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "y",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "y"
                    },
                    {
                      "type": "text",
                      "value": ", excluding "
                    },
                    {
                      "type": "inlineCode",
                      "value": "axis"
                    },
                    {
                      "type": "text",
                      "value": ". For example, if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "y",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "y"
                    },
                    {
                      "type": "text",
                      "value": " is 1-d, then "
                    },
                    {
                      "type": "inlineCode",
                      "value": "c[k, i]"
                    },
                    {
                      "type": "text",
                      "value": " is a coefficient for "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(x-x[i])**(3-k)"
                    },
                    {
                      "type": "text",
                      "value": " on the segment between "
                    },
                    {
                      "type": "inlineCode",
                      "value": "x[i]"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "x[i+1]"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "c",
              "type": "Param",
              "type_": "ndarray, shape (4, n-1, ...)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Interpolation axis. The same axis which was passed to the constructor."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axis",
              "type": "Param",
              "type_": "int"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Interpolate data with a piecewise cubic polynomial which is twice continuously differentiable . The result is represented as a "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "PPoly"
            },
            {
              "type": "text",
              "value": " instance with breakpoints matching the given data."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "__call__",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [],
              "param": "derivative",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [],
              "param": "antiderivative",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [],
              "param": "integrate",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [],
              "param": "roots",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Parameters "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "bc_type",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "bc_type"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineCode",
              "value": "extrapolate"
            },
            {
              "type": "text",
              "value": " work independently, i.e. the former controls only construction of a spline, and the latter only evaluation."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "When a boundary condition is 'not-a-knot' and n = 2, it is replaced by a condition that the first derivative is equal to the linear interpolant slope. When both boundary conditions are 'not-a-knot' and n = 3, the solution is sought as a parabola passing through given points."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "When 'not-a-knot' boundary conditions is applied to both ends, the resulting spline will be the same as returned by "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "splrep"
            },
            {
              "type": "text",
              "value": " (with "
            },
            {
              "type": "inlineCode",
              "value": "s=0"
            },
            {
              "type": "text",
              "value": ") and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "InterpolatedUnivariateSpline"
            },
            {
              "type": "text",
              "value": ", but these two methods use a representation in B-spline basis."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionadded 0.18.0"
                }
              ],
              "type": "admonitionTitle"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "1-D array containing values of the independent variable. Values must be real, finite and in strictly increasing order."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x",
              "type": "Param",
              "type_": "array_like, shape (n,)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Array containing values of the dependent variable. It can have arbitrary number of dimensions, but the length along "
                    },
                    {
                      "type": "inlineCode",
                      "value": "axis"
                    },
                    {
                      "type": "text",
                      "value": " (see below) must match the length of "
                    },
                    {
                      "type": "inlineCode",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": ". Values must be finite."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "y",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Axis along which "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "y",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "y"
                    },
                    {
                      "type": "text",
                      "value": " is assumed to be varying. Meaning that for "
                    },
                    {
                      "type": "inlineCode",
                      "value": "x[i]"
                    },
                    {
                      "type": "text",
                      "value": " the corresponding values are "
                    },
                    {
                      "type": "inlineCode",
                      "value": "np.take(y, i, axis=axis)"
                    },
                    {
                      "type": "text",
                      "value": ". Default is 0."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axis",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Boundary condition type. Two additional equations, given by the boundary conditions, are required to determine all coefficients of polynomials on each segment ."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "bc_type",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "bc_type"
                    },
                    {
                      "type": "text",
                      "value": " is a string, then the specified condition will be applied at both ends of a spline. Available conditions are:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "'not-a-knot' (default): The first and second segment at a curve end   are the same polynomial. It is a good default when there is no   information on boundary conditions."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "'periodic': The interpolated functions is assumed to be periodic   of period "
                            },
                            {
                              "type": "inlineCode",
                              "value": "x[-1] - x[0]"
                            },
                            {
                              "type": "text",
                              "value": ". The first and last value of "
                            },
                            {
                              "anchor": null,
                              "exists": true,
                              "kind": "local",
                              "reference": {
                                "kind": "local",
                                "module": null,
                                "path": "y",
                                "type": "RefInfo",
                                "version": null
                              },
                              "type": "Link",
                              "value": "y"
                            },
                            {
                              "type": "text",
                              "value": " must be   identical: "
                            },
                            {
                              "type": "inlineCode",
                              "value": "y[0] == y[-1]"
                            },
                            {
                              "type": "text",
                              "value": ". This boundary condition will result in   "
                            },
                            {
                              "type": "inlineCode",
                              "value": "y'[0] == y'[-1]"
                            },
                            {
                              "type": "text",
                              "value": " and "
                            },
                            {
                              "type": "inlineCode",
                              "value": "y''[0] == y''[-1]"
                            },
                            {
                              "type": "text",
                              "value": "."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "'clamped': The first derivative at curves ends are zero. Assuming   a 1D "
                            },
                            {
                              "anchor": null,
                              "exists": true,
                              "kind": "local",
                              "reference": {
                                "kind": "local",
                                "module": null,
                                "path": "y",
                                "type": "RefInfo",
                                "version": null
                              },
                              "type": "Link",
                              "value": "y"
                            },
                            {
                              "type": "text",
                              "value": ", "
                            },
                            {
                              "type": "inlineCode",
                              "value": "bc_type=((1, 0.0), (1, 0.0))"
                            },
                            {
                              "type": "text",
                              "value": " is the same condition."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "'natural': The second derivative at curve ends are zero. Assuming   a 1D "
                            },
                            {
                              "anchor": null,
                              "exists": true,
                              "kind": "local",
                              "reference": {
                                "kind": "local",
                                "module": null,
                                "path": "y",
                                "type": "RefInfo",
                                "version": null
                              },
                              "type": "Link",
                              "value": "y"
                            },
                            {
                              "type": "text",
                              "value": ", "
                            },
                            {
                              "type": "inlineCode",
                              "value": "bc_type=((2, 0.0), (2, 0.0))"
                            },
                            {
                              "type": "text",
                              "value": " is the same condition."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "bc_type",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "bc_type"
                    },
                    {
                      "type": "text",
                      "value": " is a 2-tuple, the first and the second value will be applied at the curve start and end respectively. The tuple values can be one of the previously mentioned strings (except 'periodic') or a tuple "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "(order, deriv_values)"
                    },
                    {
                      "type": "text",
                      "value": " allowing to specify arbitrary derivatives at curve ends:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": "order"
                            },
                            {
                              "type": "text",
                              "value": ": the derivative order, 1 or 2."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": "deriv_value"
                            },
                            {
                              "type": "text",
                              "value": ": array_like containing derivative values, shape must   be the same as "
                            },
                            {
                              "anchor": null,
                              "exists": true,
                              "kind": "local",
                              "reference": {
                                "kind": "local",
                                "module": null,
                                "path": "y",
                                "type": "RefInfo",
                                "version": null
                              },
                              "type": "Link",
                              "value": "y"
                            },
                            {
                              "type": "text",
                              "value": ", excluding "
                            },
                            {
                              "type": "inlineCode",
                              "value": "axis"
                            },
                            {
                              "type": "text",
                              "value": " dimension. For example, if   "
                            },
                            {
                              "anchor": null,
                              "exists": true,
                              "kind": "local",
                              "reference": {
                                "kind": "local",
                                "module": null,
                                "path": "y",
                                "type": "RefInfo",
                                "version": null
                              },
                              "type": "Link",
                              "value": "y"
                            },
                            {
                              "type": "text",
                              "value": " is 1-D, then "
                            },
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": "deriv_value"
                            },
                            {
                              "type": "text",
                              "value": " must be a scalar. If "
                            },
                            {
                              "anchor": null,
                              "exists": true,
                              "kind": "local",
                              "reference": {
                                "kind": "local",
                                "module": null,
                                "path": "y",
                                "type": "RefInfo",
                                "version": null
                              },
                              "type": "Link",
                              "value": "y"
                            },
                            {
                              "type": "text",
                              "value": " is 3-D with   the shape (n0, n1, n2) and axis=2, then "
                            },
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": "deriv_value"
                            },
                            {
                              "type": "text",
                              "value": " must be 2-D   and have the shape (n0, n1)."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                }
              ],
              "param": "bc_type",
              "type": "Param",
              "type_": "string or 2-tuple, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If bool, determines whether to extrapolate to out-of-bounds points based on first and last intervals, or to return NaNs. If 'periodic', periodic extrapolation is used. If None (default), "
                    },
                    {
                      "type": "inlineCode",
                      "value": "extrapolate"
                    },
                    {
                      "type": "text",
                      "value": " is set to 'periodic' for "
                    },
                    {
                      "type": "inlineCode",
                      "value": "bc_type='periodic'"
                    },
                    {
                      "type": "text",
                      "value": " and to True otherwise."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "extrapolate",
              "type": "Param",
              "type_": "{bool, 'periodic', None}, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Cubic spline data interpolator."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "In this example the cubic spline is used to interpolate a sampled sinusoid.\nYou can see that the spline continuity property holds for the first and\nsecond derivatives and violates only for the third derivative."
      },
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy.interpolate import CubicSpline\nimport matplotlib.pyplot as plt\nx = np.arange(10)\ny = np.sin(x)\ncs = CubicSpline(x, y)\nxs = np.arange(-0.5, 9.6, 0.1)\nfig, ax = plt.subplots(figsize=(6.5, 4))\nax.plot(x, y, 'o', label='data')\nax.plot(xs, np.sin(xs), label='true')\nax.plot(xs, cs(xs), label=\"S\")\nax.plot(xs, cs(xs, 1), label=\"S'\")\nax.plot(xs, cs(xs, 2), label=\"S''\")\nax.plot(xs, cs(xs, 3), label=\"S'''\")\nax.set_xlim(-0.5, 9.5)\nax.legend(loc='lower left', ncol=2)\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.interpolate._cubic:CubicSpline-0-d45e3775.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      },
      {
        "type": "text",
        "value": "In the second example, the unit circle is interpolated with a spline. A\nperiodic boundary condition is used. You can see that the first derivative\nvalues, ds/dx=0, ds/dy=1 at the periodic point (1, 0) are correctly\ncomputed. Note that a circle cannot be exactly represented by a cubic\nspline. To increase precision, more breakpoints would be required."
      },
      {
        "type": "code",
        "value": "theta = 2 * np.pi * np.linspace(0, 1, 5)\ny = np.c_[np.cos(theta), np.sin(theta)]\ncs = CubicSpline(theta, y, bc_type='periodic')\nprint(\"ds/dx={:.1f} ds/dy={:.1f}\".format(cs(0, 1)[0], cs(0, 1)[1]))"
      },
      {
        "type": "code",
        "value": "xs = 2 * np.pi * np.linspace(0, 1, 100)\nfig, ax = plt.subplots(figsize=(6.5, 4))\nax.plot(y[:, 0], y[:, 1], 'o', label='data')\nax.plot(np.cos(xs), np.sin(xs), label='true')\nax.plot(cs(xs)[:, 0], cs(xs)[:, 1], label='spline')\nax.axes.set_aspect('equal')\nax.legend(loc='center')\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.interpolate._cubic:CubicSpline-1-4d899056.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      },
      {
        "type": "text",
        "value": "The third example is the interpolation of a polynomial y = x**3 on the\ninterval 0 <= x<= 1. A cubic spline can represent this function exactly.\nTo achieve that we need to specify values and first derivatives at\nendpoints of the interval. Note that y' = 3 * x**2 and thus y'(0) = 0 and\ny'(1) = 3."
      },
      {
        "type": "code",
        "value": "cs = CubicSpline([0, 1], [0, 1], bc_type=((1, 0), (1, 3)))\nx = np.linspace(0, 1)\nnp.allclose(x**3, cs(x))"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/interpolate/_cubic.py",
  "item_line": 468,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Attributes",
    "Methods",
    "See Also",
    "Notes",
    "Examples",
    "References"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Akima 1D interpolator."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "Akima1DInterpolator",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "Akima1DInterpolator"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "PCHIP 1-D monotonic cubic interpolator."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "PchipInterpolator",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "PchipInterpolator"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Piecewise polynomial in terms of coefficients and breakpoints."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "PPoly",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "PPoly"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}