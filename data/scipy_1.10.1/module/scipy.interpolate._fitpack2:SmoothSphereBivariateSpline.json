{
  "aliases": [
    "scipy.interpolate.SmoothSphereBivariateSpline"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionadded 0.11.0"
                }
              ],
              "type": "admonitionTitle"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "For more information, see the "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "FITPACK_"
            },
            {
              "type": "text",
              "value": " site about this function."
            }
          ],
          "type": "paragraph"
        },
        {
          "placeholder": "target",
          "type": "Unimplemented",
          "value": ".. _FITPACK: http://www.netlib.org/dierckx/sphere.f"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "1-D sequences of data points (order is not important). Coordinates must be given in radians. Theta must lie within the interval "
                    },
                    {
                      "type": "inlineCode",
                      "value": "[0, pi]"
                    },
                    {
                      "type": "text",
                      "value": ", and phi must lie within the interval "
                    },
                    {
                      "type": "inlineCode",
                      "value": "[0, 2pi]"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "theta, phi, r",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Positive 1-D sequence of weights."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "w",
              "type": "Param",
              "type_": "array_like, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Positive smoothing factor defined for estimation condition: "
                    },
                    {
                      "type": "inlineCode",
                      "value": "sum((w(i)*(r(i) - s(theta(i), phi(i))))**2, axis=0) <= s"
                    },
                    {
                      "type": "text",
                      "value": " Default "
                    },
                    {
                      "type": "inlineCode",
                      "value": "s=len(w)"
                    },
                    {
                      "type": "text",
                      "value": " which should be a good value if "
                    },
                    {
                      "type": "inlineCode",
                      "value": "1/w[i]"
                    },
                    {
                      "type": "text",
                      "value": " is an estimate of the standard deviation of "
                    },
                    {
                      "type": "inlineCode",
                      "value": "r[i]"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "s",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A threshold for determining the effective rank of an over-determined linear system of equations. "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "eps",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "eps"
                    },
                    {
                      "type": "text",
                      "value": " should have a value within the open interval "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(0, 1)"
                    },
                    {
                      "type": "text",
                      "value": ", the default is 1e-16."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "eps",
              "type": "Param",
              "type_": "float, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Smooth bivariate spline approximation in spherical coordinates."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Suppose we have global data on a coarse grid (the input data does not\nhave to be on a grid):"
      },
      {
        "type": "code",
        "value": "import numpy as np\ntheta = np.linspace(0., np.pi, 7)\nphi = np.linspace(0., 2*np.pi, 9)\ndata = np.empty((theta.shape[0], phi.shape[0]))\ndata[:,0], data[0,:], data[-1,:] = 0., 0., 0.\ndata[1:-1,1], data[1:-1,-1] = 1., 1.\ndata[1,1:-1], data[-2,1:-1] = 1., 1.\ndata[2:-2,2], data[2:-2,-2] = 2., 2.\ndata[2,2:-2], data[-3,2:-2] = 2., 2.\ndata[3,3:-2] = 3.\ndata = np.roll(data, 4, 1)"
      },
      {
        "type": "text",
        "value": "We need to set up the interpolator object"
      },
      {
        "type": "code",
        "value": "lats, lons = np.meshgrid(theta, phi)\nfrom scipy.interpolate import SmoothSphereBivariateSpline\nlut = SmoothSphereBivariateSpline(lats.ravel(), lons.ravel(),\n                                  data.T.ravel(), s=3.5)"
      },
      {
        "type": "text",
        "value": "As a first test, we'll see what the algorithm returns when run on the\ninput coordinates"
      },
      {
        "type": "code",
        "value": "data_orig = lut(theta, phi)"
      },
      {
        "type": "text",
        "value": "Finally we interpolate the data to a finer grid"
      },
      {
        "type": "code",
        "value": "fine_lats = np.linspace(0., np.pi, 70)\nfine_lons = np.linspace(0., 2 * np.pi, 90)"
      },
      {
        "type": "code",
        "value": "data_smth = lut(fine_lats, fine_lons)"
      },
      {
        "type": "code",
        "value": "import matplotlib.pyplot as plt\nfig = plt.figure()\nax1 = fig.add_subplot(131)\nax1.imshow(data, interpolation='nearest')\nax2 = fig.add_subplot(132)\nax2.imshow(data_orig, interpolation='nearest')\nax3 = fig.add_subplot(133)\nax3.imshow(data_smth, interpolation='nearest')\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.interpolate._fitpack2:SmoothSphereBivariateSpline-0-8642e10f.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/interpolate/_fitpack2.py",
  "item_line": 1626,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a base class for bivariate splines."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "BivariateSpline",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "BivariateSpline"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a smooth univariate spline to fit a given set of data points."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "UnivariateSpline",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "UnivariateSpline"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a smoothing bivariate spline through the given points"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "SmoothBivariateSpline",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "SmoothBivariateSpline"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a bivariate spline using weighted least-squares fitting"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "LSQBivariateSpline",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "LSQBivariateSpline"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a bivariate spline over a rectangular mesh on a sphere"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "RectSphereBivariateSpline",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "RectSphereBivariateSpline"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a bivariate spline in spherical coordinates using weighted least-squares fitting"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "LSQSphereBivariateSpline",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "LSQSphereBivariateSpline"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a bivariate spline over a rectangular mesh."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "RectBivariateSpline",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "RectBivariateSpline"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a function to find a bivariate B-spline representation of a surface"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.interpolate._fitpack_impl:bisplrep",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "bisplrep"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a function to evaluate a bivariate B-spline and its derivatives"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.interpolate._fitpack_impl:bisplev",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "bisplev"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}