{
  "aliases": [
    "scipy.interpolate.UnivariateSpline"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Fits a spline y = spl(x) of degree "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "k",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "k"
            },
            {
              "type": "text",
              "value": " to the provided "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "x",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "x"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "y",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "y"
            },
            {
              "type": "text",
              "value": " data.  "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "s",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "s"
            },
            {
              "type": "text",
              "value": " specifies the number of knots by specifying a smoothing condition."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The number of data points must be larger than the spline degree "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "k",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "k"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "NaN handling"
                }
              ],
              "type": "strong"
            },
            {
              "type": "text",
              "value": ": If the input arrays contain "
            },
            {
              "type": "inlineCode",
              "value": "nan"
            },
            {
              "type": "text",
              "value": " values, the result is not useful, since the underlying spline fitting routines cannot deal with "
            },
            {
              "type": "inlineCode",
              "value": "nan"
            },
            {
              "type": "text",
              "value": ". A workaround is to use zero weights for not-a-number data points:"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": ">>> import numpy as np\n>>> from scipy.interpolate import UnivariateSpline\n>>> x, y = np.array([1, 2, 3, 4]), np.array([1, np.nan, 3, 4])\n>>> w = np.isnan(y)\n>>> y[w] = 0.\n>>> spl = UnivariateSpline(x, y, w=~w)"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Notice the need to replace a "
            },
            {
              "type": "inlineCode",
              "value": "nan"
            },
            {
              "type": "text",
              "value": " by a numerical value (precise value does not matter as long as the corresponding weight is zero.)"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "1-D array of independent input data. Must be increasing; must be strictly increasing if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "s",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "s"
                    },
                    {
                      "type": "text",
                      "value": " is 0."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x",
              "type": "Param",
              "type_": "(N,) array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "1-D array of dependent input data, of the same length as "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "y",
              "type": "Param",
              "type_": "(N,) array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Weights for spline fitting.  Must be positive.  If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "w",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "w"
                    },
                    {
                      "type": "text",
                      "value": " is None, weights are all 1. Default is None."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "w",
              "type": "Param",
              "type_": "(N,) array_like, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "2-sequence specifying the boundary of the approximation interval. If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "bbox",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "bbox"
                    },
                    {
                      "type": "text",
                      "value": " is None, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "bbox=[x[0], x[-1]]"
                    },
                    {
                      "type": "text",
                      "value": ". Default is None."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "bbox",
              "type": "Param",
              "type_": "(2,) array_like, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Degree of the smoothing spline.  Must be 1 <= "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "k",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "k"
                    },
                    {
                      "type": "text",
                      "value": " <= 5. "
                    },
                    {
                      "type": "inlineCode",
                      "value": "k = 3"
                    },
                    {
                      "type": "text",
                      "value": " is a cubic spline. Default is 3."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "k",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Positive smoothing factor used to choose the number of knots.  Number of knots will be increased until the smoothing condition is satisfied      "
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "type": "code",
                  "value": "sum((w[i] * (y[i]-spl(x[i])))**2, axis=0) <= s"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "However, because of numerical issues, the actual condition is      "
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "type": "code",
                  "value": "abs(sum((w[i] * (y[i]-spl(x[i])))**2, axis=0) - s) < 0.001 * s"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "s",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "s"
                    },
                    {
                      "type": "text",
                      "value": " is None, "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "s",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "s"
                    },
                    {
                      "type": "text",
                      "value": " will be set as "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "len(w)"
                    },
                    {
                      "type": "text",
                      "value": " for a smoothing spline that uses all data points. If 0, spline will interpolate through all data points. This is equivalent to "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "InterpolatedUnivariateSpline"
                    },
                    {
                      "type": "text",
                      "value": ". Default is None. The user can use the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "s",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "s"
                    },
                    {
                      "type": "text",
                      "value": " to control the tradeoff between closeness and smoothness of fit. Larger "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "s",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "s"
                    },
                    {
                      "type": "text",
                      "value": " means more smoothing while smaller values of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "s",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "s"
                    },
                    {
                      "type": "text",
                      "value": " indicate less smoothing. Recommended values of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "s",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "s"
                    },
                    {
                      "type": "text",
                      "value": " depend on the weights, "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "w",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "w"
                    },
                    {
                      "type": "text",
                      "value": ". If the weights represent the inverse of the standard-deviation of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "y",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "y"
                    },
                    {
                      "type": "text",
                      "value": ", then a good "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "s",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "s"
                    },
                    {
                      "type": "text",
                      "value": " value should be found in the range (m-sqrt(2*m),m+sqrt(2*m)) where m is the number of datapoints in "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "y",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "y"
                    },
                    {
                      "type": "text",
                      "value": ", and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "w",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "w"
                    },
                    {
                      "type": "text",
                      "value": ". This means "
                    },
                    {
                      "type": "inlineCode",
                      "value": "s = len(w)"
                    },
                    {
                      "type": "text",
                      "value": " should be a good value if "
                    },
                    {
                      "type": "inlineCode",
                      "value": "1/w[i]"
                    },
                    {
                      "type": "text",
                      "value": " is an estimate of the standard deviation of "
                    },
                    {
                      "type": "inlineCode",
                      "value": "y[i]"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "s",
              "type": "Param",
              "type_": "float or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Controls the extrapolation mode for elements not in the interval defined by the knot sequence."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "if ext=0 or 'extrapolate', return the extrapolated value."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "if ext=1 or 'zeros', return 0"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "if ext=2 or 'raise', raise a ValueError"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "if ext=3 of 'const', return the boundary value."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Default is 0."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "ext",
              "type": "Param",
              "type_": "int or str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether to check that the input arrays contain only finite numbers. Disabling may give a performance gain, but may result in problems (crashes, non-termination or non-sensical results) if the inputs do contain infinities or NaNs. Default is False."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "check_finite",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "1-D smoothing spline fit to a given set of data points."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.interpolate import UnivariateSpline\nrng = np.random.default_rng()\nx = np.linspace(-3, 3, 50)\ny = np.exp(-x**2) + 0.1 * rng.standard_normal(50)\nplt.plot(x, y, 'ro', ms=5)"
      },
      {
        "type": "text",
        "value": "Use the default value for the smoothing parameter:"
      },
      {
        "type": "code",
        "value": "spl = UnivariateSpline(x, y)\nxs = np.linspace(-3, 3, 1000)\nplt.plot(xs, spl(xs), 'g', lw=3)"
      },
      {
        "type": "text",
        "value": "Manually change the amount of smoothing:"
      },
      {
        "type": "code",
        "value": "spl.set_smoothing_factor(0.5)\nplt.plot(xs, spl(xs), 'b', lw=3)\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.interpolate._fitpack2:UnivariateSpline-0-9003b681.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/interpolate/_fitpack2.py",
  "item_line": 71,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a base class for bivariate splines."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "BivariateSpline",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "BivariateSpline"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a smoothing bivariate spline through the given points"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "SmoothBivariateSpline",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "SmoothBivariateSpline"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a bivariate spline using weighted least-squares fitting"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "LSQBivariateSpline",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "LSQBivariateSpline"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a bivariate spline over a rectangular mesh on a sphere"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "RectSphereBivariateSpline",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "RectSphereBivariateSpline"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a smoothing bivariate spline in spherical coordinates"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "SmoothSphereBivariateSpline",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "SmoothSphereBivariateSpline"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a bivariate spline in spherical coordinates using weighted least-squares fitting"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "LSQSphereBivariateSpline",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "LSQSphereBivariateSpline"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a bivariate spline over a rectangular mesh"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "RectBivariateSpline",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "RectBivariateSpline"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a interpolating univariate spline for a given set of data points."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "InterpolatedUnivariateSpline",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "InterpolatedUnivariateSpline"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a function to find a bivariate B-spline representation of a surface"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.interpolate._fitpack_impl:bisplrep",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "bisplrep"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a function to evaluate a bivariate B-spline and its derivatives"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.interpolate._fitpack_impl:bisplev",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "bisplev"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a function to find the B-spline representation of a 1-D curve"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "splrep",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "splrep"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a function to evaluate a B-spline or its derivatives"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "splev",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "splev"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a function to find the roots of a cubic B-spline"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "sproot",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "sproot"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a function to evaluate the definite integral of a B-spline between two given points"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "splint",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "splint"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "a function to evaluate all derivatives of a B-spline"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "spalde",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "spalde"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}