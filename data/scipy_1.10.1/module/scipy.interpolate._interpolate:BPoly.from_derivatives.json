{
  "aliases": [
    "scipy.interpolate.BPoly.from_derivatives"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "If "
            },
            {
              "type": "inlineCode",
              "value": "k"
            },
            {
              "type": "text",
              "value": " derivatives are specified at a breakpoint "
            },
            {
              "type": "inlineCode",
              "value": "x"
            },
            {
              "type": "text",
              "value": ", the constructed polynomial is exactly "
            },
            {
              "type": "inlineCode",
              "value": "k"
            },
            {
              "type": "text",
              "value": " times continuously differentiable at "
            },
            {
              "type": "inlineCode",
              "value": "x"
            },
            {
              "type": "text",
              "value": ", unless the "
            },
            {
              "type": "inlineCode",
              "value": "order"
            },
            {
              "type": "text",
              "value": " is provided explicitly. In the latter case, the smoothness of the polynomial at the breakpoint is controlled by the "
            },
            {
              "type": "inlineCode",
              "value": "order"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Deduces the number of derivatives to match at each end from "
            },
            {
              "type": "inlineCode",
              "value": "order"
            },
            {
              "type": "text",
              "value": " and the number of derivatives available. If possible it uses the same number of derivatives from each end; if the number is odd it tries to take the extra one from y2. In any case if not enough derivatives are available at one end or another it draws enough to make up the total from the other end."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "If the order is too high and not enough derivatives are available, an exception is raised."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "sorted 1-D array of x-coordinates"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "xi",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "yi[i][j]"
                    },
                    {
                      "type": "text",
                      "value": " is the "
                    },
                    {
                      "type": "inlineCode",
                      "value": "j``th derivative known at ``xi[i]"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "yi",
              "type": "Param",
              "type_": "array_like or list of array_likes"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Specifies the degree of local polynomials. If not None, some derivatives are ignored."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "orders",
              "type": "Param",
              "type_": "None or int or array_like of ints. Default: None."
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If bool, determines whether to extrapolate to out-of-bounds points based on first and last intervals, or to return NaNs. If 'periodic', periodic extrapolation is used. Default is True."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "extrapolate",
              "type": "Param",
              "type_": "bool or 'periodic', optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Construct a piecewise polynomial in the Bernstein basis, compatible with the specified values and derivatives at breakpoints."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from scipy.interpolate import BPoly\nBPoly.from_derivatives([0, 1], [[1, 2], [3, 4]])"
      },
      {
        "type": "text",
        "value": "Creates a polynomial `f(x)` of degree 3, defined on `[0, 1]`\nsuch that `f(0) = 1, df/dx(0) = 2, f(1) = 3, df/dx(1) = 4`"
      },
      {
        "type": "code",
        "value": "BPoly.from_derivatives([0, 1, 2], [[0, 1], [0], [2]])"
      },
      {
        "type": "text",
        "value": "Creates a piecewise polynomial `f(x)`, such that\n`f(0) = f(1) = 0`, `f(2) = 2`, and `df/dx(0) = 1`.\nBased on the number of derivatives provided, the order of the\nlocal polynomials is 2 on `[0, 1]` and 1 on `[1, 2]`.\nNotice that no restriction is imposed on the derivatives at\n``x = 1`` and ``x = 2``."
      },
      {
        "type": "text",
        "value": "Indeed, the explicit form of the polynomial is::"
      },
      {
        "type": "text",
        "value": "    f(x) = | x * (1 - x),  0 <= x < 1\n           | 2 * (x - 1),  1 <= x <= 2"
      },
      {
        "type": "text",
        "value": "So that f'(1-0) = -1 and f'(1+0) = 2"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/interpolate/_interpolate.py",
  "item_line": 1784,
  "item_type": "<class 'classmethod'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}