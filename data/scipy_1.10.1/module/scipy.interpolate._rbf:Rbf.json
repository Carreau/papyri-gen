{
  "aliases": [
    "scipy.interpolate.Rbf"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The number of data points (as determined by the input arrays)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "N",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The 1-D array of data values at each of the data coordinates "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "xi",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "xi"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "di",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The 2-D array of data coordinates."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "xi",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The radial basis function. See description under Parameters."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "function",
              "type": "Param",
              "type_": "str or callable"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Parameter used by gaussian or multiquadrics functions. See Parameters."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "epsilon",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Smoothing parameter. See description under Parameters."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "smooth",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The distance function. See description under Parameters."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "norm",
              "type": "Param",
              "type_": "str or callable"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Mode of the interpolation. See description under Parameters."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "mode",
              "type": "Param",
              "type_": "str"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A 1-D array of node values for the interpolation."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "nodes",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [],
              "param": "A",
              "type": "Param",
              "type_": "internal property, do not use"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "note "
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "Rbf"
                },
                {
                  "type": "text",
                  "value": " is legacy code, for new usage please use "
                },
                {
                  "domain": null,
                  "role": null,
                  "type": "Directive",
                  "value": "RBFInterpolator"
                },
                {
                  "type": "text",
                  "value": " instead."
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "x, y, z, ..., d, where x, y, z, ... are the coordinates of the nodes and d is the array of values at the nodes"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "*args",
              "type": "Param",
              "type_": "arrays"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The radial basis function, based on the radius, r, given by the norm (default is Euclidean distance); the default is 'multiquadric'      "
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "type": "code",
                  "value": "'multiquadric': sqrt((r/self.epsilon)**2 + 1)\n'inverse': 1.0/sqrt((r/self.epsilon)**2 + 1)\n'gaussian': exp(-(r/self.epsilon)**2)\n'linear': r\n'cubic': r**3\n'quintic': r**5\n'thin_plate': r**2 * log(r)"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If callable, then it must take 2 arguments (self, r). The epsilon parameter will be available as self.epsilon. Other keyword arguments passed in will be available as well."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "function",
              "type": "Param",
              "type_": "str or callable, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Adjustable constant for gaussian or multiquadrics functions - defaults to approximate average distance between nodes (which is a good start)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "epsilon",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Values greater than zero increase the smoothness of the approximation. 0 is for interpolation (default), the function will always go through the nodal points in this case."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "smooth",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A function that returns the 'distance' between two points, with inputs as arrays of positions (x, y, z, ...), and an output as an array of distance. E.g., the default: 'euclidean', such that the result is a matrix of the distances from each point in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "x1"
                    },
                    {
                      "type": "text",
                      "value": " to each point in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "x2"
                    },
                    {
                      "type": "text",
                      "value": ". For more options, see documentation of "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "scipy.spatial.distances.cdist"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "norm",
              "type": "Param",
              "type_": "str, callable, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Mode of the interpolation, can be '1-D' (default) or 'N-D'. When it is '1-D' the data "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "scipy",
                        "path": "scipy.sparse.linalg._expm_multiply:LazyOperatorNormInfo.d",
                        "type": "RefInfo",
                        "version": "1.10.1"
                      },
                      "type": "Link",
                      "value": "d"
                    },
                    {
                      "type": "text",
                      "value": " will be considered as 1-D and flattened internally. When it is 'N-D' the data "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "scipy",
                        "path": "scipy.sparse.linalg._expm_multiply:LazyOperatorNormInfo.d",
                        "type": "RefInfo",
                        "version": "1.10.1"
                      },
                      "type": "Link",
                      "value": "d"
                    },
                    {
                      "type": "text",
                      "value": " is assumed to be an array of shape (n_samples, m), where m is the dimension of the target domain."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "mode",
              "type": "Param",
              "type_": "str, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A class for radial basis function interpolation of functions from N-D scattered data to an M-D domain."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy.interpolate import Rbf\nrng = np.random.default_rng()\nx, y, z, d = rng.random((4, 50))\nrbfi = Rbf(x, y, z, d)  # radial basis function interpolator instance\nxi = yi = zi = np.linspace(0, 1, 20)\ndi = rbfi(xi, yi, zi)   # interpolated values\ndi.shape"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/interpolate/_rbf.py",
  "item_line": 55,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Signature",
    "Summary",
    "Extended Summary",
    "Parameters",
    "Attributes",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "RBFInterpolator",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "RBFInterpolator"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "Rbf(*args, **kwargs)"
  },
  "type": "DocBlob"
}