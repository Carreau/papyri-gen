{
  "aliases": [
    "scipy.io.FortranFile.read_record"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "If the record contains a multidimensional array, you can specify the size in the dtype. For example      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "INTEGER var(5,4)"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "can be read with      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "read_record('(4,5)i4').T"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Note that this function does "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "not"
                }
              ],
              "type": "strong"
            },
            {
              "type": "text",
              "value": " assume the file data is in Fortran column major order, so you need to (i) swap the order of dimensions when reading and (ii) transpose the resulting array."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Alternatively, you can read the data as a 1-D array and handle the ordering yourself. For example      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "read_record('i4').reshape(5, 4, order='F')"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For records that contain several variables or mixed types (as opposed to single scalar or array types), give them as separate arguments      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "double precision :: a\ninteger :: b\nwrite(1) a, b\n\nrecord = f.read_record('<f4', '<i4')\na = record[0]  # first number\nb = record[1]  # second number"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "and if any of the variables are arrays, the shape can be specified as the third item in the relevant dtype      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "double precision :: a\ninteger :: b(3,4)\nwrite(1) a, b\n\nrecord = f.read_record('<f4', np.dtype(('<i4', (4, 3))))\na = record[0]\nb = record[1].T"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "NumPy also supports a short syntax for this kind of type      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "record = f.read_record('<f4', '(3,3)<i4')"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Data type(s) specifying the size and endiness of the data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "*dtypes",
              "type": "Param",
              "type_": "dtypes, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "To signal that no further records are available"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "FortranEOFError"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "To signal that the end of the file was encountered part-way through a record"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "FortranFormattingError"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A 1-D array object."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "data",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Reads a record of a given type from the file."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/io/_fortran.py",
  "item_line": 170,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Raises",
    "Notes",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.io._fortran:FortranFile.read_reals",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "read_reals"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.io._fortran:FortranFile.read_ints",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "read_ints"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self, *dtypes, **kwargs)"
  },
  "type": "DocBlob"
}