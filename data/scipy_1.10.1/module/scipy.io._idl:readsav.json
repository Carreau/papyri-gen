{
  "aliases": [
    "scipy.io.readsav"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Name of the IDL save file."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "file_name",
              "type": "Param",
              "type_": "str"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Dictionary in which to insert .sav file variables."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "idict",
              "type": "Param",
              "type_": "dict, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "By default, the object return is not a Python dictionary, but a case-insensitive dictionary with item, attribute, and call access to variables. To get a standard Python dictionary, set this option to True."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "python_dict",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "This option only has an effect for .sav files written with the /compress option. If a file name is specified, compressed .sav files are uncompressed to this file. Otherwise, readsav will use the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "api",
                        "module": "tempfile",
                        "path": "tempfile",
                        "type": "RefInfo",
                        "version": "*"
                      },
                      "type": "Link",
                      "value": "tempfile"
                    },
                    {
                      "type": "text",
                      "value": " module to determine a temporary filename automatically, and will remove the temporary file upon successfully reading it in."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "uncompressed_file_name",
              "type": "Param",
              "type_": "str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether to print out information about the save file, including the records read, and available variables."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "verbose",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "python_dict",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "python_dict"
                    },
                    {
                      "type": "text",
                      "value": " is set to False (default), this function returns a case-insensitive dictionary with item, attribute, and call access to variables. If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "python_dict",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "python_dict"
                    },
                    {
                      "type": "text",
                      "value": " is set to True, this function returns a Python dictionary with all variable names in lowercase. If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "idict",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "idict"
                    },
                    {
                      "type": "text",
                      "value": " was specified, then variables are written to the dictionary specified, and the updated dictionary is returned."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "idl_dict",
              "type": "Param",
              "type_": "AttrDict or dict"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Read an IDL .sav file."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from os.path import dirname, join as pjoin\nimport scipy.io as sio\nfrom scipy.io import readsav"
      },
      {
        "type": "text",
        "value": "Get the filename for an example .sav file from the tests/data directory."
      },
      {
        "type": "code",
        "value": "data_dir = pjoin(dirname(sio.__file__), 'tests', 'data')\nsav_fname = pjoin(data_dir, 'array_float32_1d.sav')"
      },
      {
        "type": "text",
        "value": "Load the .sav file contents."
      },
      {
        "type": "code",
        "value": "sav_data = readsav(sav_fname)"
      },
      {
        "type": "text",
        "value": "Get keys of the .sav file contents."
      },
      {
        "type": "code",
        "value": "print(sav_data.keys())"
      },
      {
        "type": "text",
        "value": "Access a content with a key."
      },
      {
        "type": "code",
        "value": "print(sav_data['array1d'])"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/io/_idl.py",
  "item_line": 675,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(file_name, idict=None, python_dict=False, uncompressed_file_name=None, verbose=False)"
  },
  "type": "DocBlob"
}