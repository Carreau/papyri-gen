{
  "aliases": [
    "scipy.linalg.solve_toeplitz"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The Toeplitz matrix has constant diagonals, with c as its first column and r as its first row. If r is not given, "
            },
            {
              "type": "inlineCode",
              "value": "r == conjugate(c)"
            },
            {
              "type": "text",
              "value": " is assumed."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The solution is computed using Levinson-Durbin recursion, which is faster than generic least-squares methods, but can be less numerically stable."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The vector "
                    },
                    {
                      "type": "inlineCode",
                      "value": "c"
                    },
                    {
                      "type": "text",
                      "value": ", or a tuple of arrays ("
                    },
                    {
                      "type": "inlineCode",
                      "value": "c"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "inlineCode",
                      "value": "r"
                    },
                    {
                      "type": "text",
                      "value": "). Whatever the actual shape of "
                    },
                    {
                      "type": "inlineCode",
                      "value": "c"
                    },
                    {
                      "type": "text",
                      "value": ", it will be converted to a 1-D array. If not supplied, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "r = conjugate(c)"
                    },
                    {
                      "type": "text",
                      "value": " is assumed; in this case, if c[0] is real, the Toeplitz matrix is Hermitian. r[0] is ignored; the first row of the Toeplitz matrix is "
                    },
                    {
                      "type": "inlineCode",
                      "value": "[c[0], r[1:]]"
                    },
                    {
                      "type": "text",
                      "value": ". Whatever the actual shape of "
                    },
                    {
                      "type": "inlineCode",
                      "value": "r"
                    },
                    {
                      "type": "text",
                      "value": ", it will be converted to a 1-D array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "c_or_cr",
              "type": "Param",
              "type_": "array_like or tuple of (array_like, array_like)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Right-hand side in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "T x = b"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "b",
              "type": "Param",
              "type_": "(M,) or (M, K) array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether to check that the input matrices contain only finite numbers. Disabling may give a performance gain, but may result in problems (result entirely NaNs) if the inputs do contain infinities or NaNs."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "check_finite",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The solution to the system "
                    },
                    {
                      "type": "inlineCode",
                      "value": "T x = b"
                    },
                    {
                      "type": "text",
                      "value": ". Shape of return matches shape of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "b",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "b"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x",
              "type": "Param",
              "type_": "(M,) or (M, K) ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Solve a Toeplitz system using Levinson Recursion"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Solve the Toeplitz system T x = b, where::"
      },
      {
        "type": "text",
        "value": "        [ 1 -1 -2 -3]       [1]\n    T = [ 3  1 -1 -2]   b = [2]\n        [ 6  3  1 -1]       [2]\n        [10  6  3  1]       [5]"
      },
      {
        "type": "text",
        "value": "To specify the Toeplitz matrix, only the first column and the first\nrow are needed."
      },
      {
        "type": "code",
        "value": "import numpy as np\nc = np.array([1, 3, 6, 10])    # First column of T\nr = np.array([1, -1, -2, -3])  # First row of T\nb = np.array([1, 2, 2, 5])"
      },
      {
        "type": "code",
        "value": "from scipy.linalg import solve_toeplitz, toeplitz\nx = solve_toeplitz((c, r), b)\nx"
      },
      {
        "type": "text",
        "value": "Check the result by creating the full Toeplitz matrix and\nmultiplying it by `x`.  We should get `b`."
      },
      {
        "type": "code",
        "value": "T = toeplitz(c, r)\nT.dot(x)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/linalg/_basic.py",
  "item_line": 607,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Toeplitz matrix"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "toeplitz",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "toeplitz"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(c_or_cr, b, check_finite=True)"
  },
  "type": "DocBlob"
}