{
  "aliases": [
    "scipy.linalg.qr_multiply"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Calculate the decomposition "
            },
            {
              "type": "inlineCode",
              "value": "A = Q R"
            },
            {
              "type": "text",
              "value": " where Q is unitary/orthogonal and R upper triangular. Multiply Q with a vector or a matrix c."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This is an interface to the LAPACK routines "
            },
            {
              "type": "inlineCode",
              "value": "?GEQRF"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "?ORMQR"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "?UNMQR"
            },
            {
              "type": "text",
              "value": ", and "
            },
            {
              "type": "inlineCode",
              "value": "?GEQP3"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionadded 0.11.0"
                }
              ],
              "type": "admonitionTitle"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Input array"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "a",
              "type": "Param",
              "type_": "(M, N), array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Input array to be multiplied by "
                    },
                    {
                      "type": "inlineCode",
                      "value": "q"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "c",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "Q @ c"
                    },
                    {
                      "type": "text",
                      "value": " is returned if mode is 'left', "
                    },
                    {
                      "type": "inlineCode",
                      "value": "c @ Q"
                    },
                    {
                      "type": "text",
                      "value": " is returned if mode is 'right'. The shape of c must be appropriate for the matrix multiplications, if mode is 'left', "
                    },
                    {
                      "type": "inlineCode",
                      "value": "min(a.shape) == c.shape[0]"
                    },
                    {
                      "type": "text",
                      "value": ", if mode is 'right', "
                    },
                    {
                      "type": "inlineCode",
                      "value": "a.shape[0] == c.shape[1]"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "mode",
              "type": "Param",
              "type_": "{'left', 'right'}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether or not factorization should include pivoting for rank-revealing qr decomposition, see the documentation of qr."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "pivoting",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether Q should be complex-conjugated. This might be faster than explicit conjugation."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "conjugate",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether data in a is overwritten (may improve performance)"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "overwrite_a",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether data in c is overwritten (may improve performance). If this is used, c must be big enough to keep the result, i.e. "
                    },
                    {
                      "type": "inlineCode",
                      "value": "c.shape[0]"
                    },
                    {
                      "type": "text",
                      "value": " = "
                    },
                    {
                      "type": "inlineCode",
                      "value": "a.shape[0]"
                    },
                    {
                      "type": "text",
                      "value": " if mode is 'left'."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "overwrite_c",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Raised if QR decomposition fails."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "LinAlgError"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The product of "
                    },
                    {
                      "type": "inlineCode",
                      "value": "Q"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "c"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "CQ",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "R array of the resulting QR factorization where "
                    },
                    {
                      "type": "inlineCode",
                      "value": "K = min(M, N)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "R",
              "type": "Param",
              "type_": "(K, N), ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Integer pivot array. Only returned when "
                    },
                    {
                      "type": "inlineCode",
                      "value": "pivoting=True"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "P",
              "type": "Param",
              "type_": "(N,) ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Calculate the QR decomposition and multiply Q with a matrix."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy.linalg import qr_multiply, qr\nA = np.array([[1, 3, 3], [2, 3, 2], [2, 3, 3], [1, 3, 2]])\nqc, r1, piv1 = qr_multiply(A, 2*np.eye(4), pivoting=1)\nqc"
      },
      {
        "type": "code",
        "value": "r1"
      },
      {
        "type": "code",
        "value": "piv1"
      },
      {
        "type": "code",
        "value": "q2, r2, piv2 = qr(A, mode='economic', pivoting=1)\nnp.allclose(2*q2 - qc, np.zeros((4, 3)))"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/linalg/_decomp_qr.py",
  "item_line": 178,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(a, c, mode='right', pivoting=False, conjugate=False, overwrite_a=False, overwrite_c=False)"
  },
  "type": "DocBlob"
}