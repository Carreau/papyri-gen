{
  "aliases": [
    "scipy.linalg.svd"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Factorizes the matrix "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "a",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "a"
            },
            {
              "type": "text",
              "value": " into two unitary matrices "
            },
            {
              "type": "inlineCode",
              "value": "U"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineCode",
              "value": "Vh"
            },
            {
              "type": "text",
              "value": ", and a 1-D array "
            },
            {
              "type": "inlineCode",
              "value": "s"
            },
            {
              "type": "text",
              "value": " of singular values (real, non-negative) such that "
            },
            {
              "type": "inlineCode",
              "value": "a == U @ S @ Vh"
            },
            {
              "type": "text",
              "value": ", where "
            },
            {
              "type": "inlineCode",
              "value": "S"
            },
            {
              "type": "text",
              "value": " is a suitably shaped matrix of zeros with main diagonal "
            },
            {
              "type": "inlineCode",
              "value": "s"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Matrix to decompose."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "a",
              "type": "Param",
              "type_": "(M, N) array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True (default), "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "U",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "U"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "Vh",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "Vh"
                    },
                    {
                      "type": "text",
                      "value": " are of shape "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(M, M)"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(N, N)"
                    },
                    {
                      "type": "text",
                      "value": ". If False, the shapes are "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(M, K)"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(K, N)"
                    },
                    {
                      "type": "text",
                      "value": ", where "
                    },
                    {
                      "type": "inlineCode",
                      "value": "K = min(M, N)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "full_matrices",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether to compute also "
                    },
                    {
                      "type": "inlineCode",
                      "value": "U"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "Vh"
                    },
                    {
                      "type": "text",
                      "value": " in addition to "
                    },
                    {
                      "type": "inlineCode",
                      "value": "s"
                    },
                    {
                      "type": "text",
                      "value": ". Default is True."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "compute_uv",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether to overwrite "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": "; may improve performance. Default is False."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "overwrite_a",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether to check that the input matrix contains only finite numbers. Disabling may give a performance gain, but may result in problems (crashes, non-termination) if the inputs do contain infinities or NaNs."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "check_finite",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether to use the more efficient divide-and-conquer approach ("
                    },
                    {
                      "type": "inlineCode",
                      "value": "'gesdd'"
                    },
                    {
                      "type": "text",
                      "value": ") or general rectangular approach ("
                    },
                    {
                      "type": "inlineCode",
                      "value": "'gesvd'"
                    },
                    {
                      "type": "text",
                      "value": ") to compute the SVD. MATLAB and Octave use the "
                    },
                    {
                      "type": "inlineCode",
                      "value": "'gesvd'"
                    },
                    {
                      "type": "text",
                      "value": " approach. Default is "
                    },
                    {
                      "type": "inlineCode",
                      "value": "'gesdd'"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 0.18"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "lapack_driver",
              "type": "Param",
              "type_": "{'gesdd', 'gesvd'}, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If SVD computation does not converge."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "LinAlgError"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Unitary matrix having left singular vectors as columns. Of shape "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(M, M)"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(M, K)"
                    },
                    {
                      "type": "text",
                      "value": ", depending on "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "full_matrices",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "full_matrices"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "U",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The singular values, sorted in non-increasing order. Of shape (K,), with "
                    },
                    {
                      "type": "inlineCode",
                      "value": "K = min(M, N)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "s",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Unitary matrix having right singular vectors as rows. Of shape "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(N, N)"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(K, N)"
                    },
                    {
                      "type": "text",
                      "value": " depending on "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "full_matrices",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "full_matrices"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "Vh",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [],
              "param": "",
              "type": "Param",
              "type_": "For ``compute_uv=False``, only ``s`` is returned."
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Singular Value Decomposition."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy import linalg\nrng = np.random.default_rng()\nm, n = 9, 6\na = rng.standard_normal((m, n)) + 1.j*rng.standard_normal((m, n))\nU, s, Vh = linalg.svd(a)\nU.shape,  s.shape, Vh.shape"
      },
      {
        "type": "text",
        "value": "Reconstruct the original matrix from the decomposition:"
      },
      {
        "type": "code",
        "value": "sigma = np.zeros((m, n))\nfor i in range(min(m, n)):\n    sigma[i, i] = s[i]\na1 = np.dot(U, np.dot(sigma, Vh))\nnp.allclose(a, a1)"
      },
      {
        "type": "text",
        "value": "Alternatively, use ``full_matrices=False`` (notice that the shape of\n``U`` is then ``(m, n)`` instead of ``(m, m)``):"
      },
      {
        "type": "code",
        "value": "U, s, Vh = linalg.svd(a, full_matrices=False)\nU.shape, s.shape, Vh.shape"
      },
      {
        "type": "code",
        "value": "S = np.diag(s)\nnp.allclose(a, np.dot(U, np.dot(S, Vh)))"
      },
      {
        "type": "code",
        "value": "s2 = linalg.svd(a, compute_uv=False)\nnp.allclose(s, s2)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/linalg/_decomp_svd.py",
  "item_line": 13,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Compute singular values of a matrix."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.linalg._decomp_svd:svdvals",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "svdvals"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Construct the Sigma matrix, given the vector s."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.linalg._decomp_svd:diagsvd",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "diagsvd"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(a, full_matrices=True, compute_uv=True, overwrite_a=False, check_finite=True, lapack_driver='gesdd')"
  },
  "type": "DocBlob"
}