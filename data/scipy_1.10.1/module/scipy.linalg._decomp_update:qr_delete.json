{
  "aliases": [
    "scipy.linalg.qr_delete"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "If "
            },
            {
              "type": "inlineCode",
              "value": "A = Q R"
            },
            {
              "type": "text",
              "value": " is the QR factorization of "
            },
            {
              "type": "inlineCode",
              "value": "A"
            },
            {
              "type": "text",
              "value": ", return the QR factorization of "
            },
            {
              "type": "inlineCode",
              "value": "A"
            },
            {
              "type": "text",
              "value": " where "
            },
            {
              "type": "inlineCode",
              "value": "p"
            },
            {
              "type": "text",
              "value": " rows or columns have been removed starting at row or column "
            },
            {
              "type": "inlineCode",
              "value": "k"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This routine does not guarantee that the diagonal entries of "
            },
            {
              "type": "inlineCode",
              "value": "R1"
            },
            {
              "type": "text",
              "value": " are positive."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionadded 0.16.0"
                }
              ],
              "type": "admonitionTitle"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Unitary/orthogonal matrix from QR decomposition."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "Q",
              "type": "Param",
              "type_": "(M, M) or (M, N) array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Upper triangular matrix from QR decomposition."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "R",
              "type": "Param",
              "type_": "(M, N) or (N, N) array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Index of the first row or column to delete."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "k",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of rows or columns to delete, defaults to 1."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "p",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Determines if rows or columns will be deleted, defaults to 'row'"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "which: {'row', 'col'}, optional",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, consume Q and R, overwriting their contents with their downdated versions, and returning approriately sized views. Defaults to False."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "overwrite_qr",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether to check that the input matrix contains only finite numbers. Disabling may give a performance gain, but may result in problems (crashes, non-termination) if the inputs do contain infinities or NaNs. Default is True."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "check_finite",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Updated unitary/orthogonal factor"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "Q1",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Updated upper triangular factor"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "R1",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "QR downdate on row or column deletions"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy import linalg\na = np.array([[  3.,  -2.,  -2.],\n              [  6.,  -9.,  -3.],\n              [ -3.,  10.,   1.],\n              [  6.,  -7.,   4.],\n              [  7.,   8.,  -6.]])\nq, r = linalg.qr(a)"
      },
      {
        "type": "text",
        "value": "Given this QR decomposition, update q and r when 2 rows are removed."
      },
      {
        "type": "code",
        "value": "q1, r1 = linalg.qr_delete(q, r, 2, 2, 'row', False)\nq1"
      },
      {
        "type": "code",
        "value": "r1"
      },
      {
        "type": "text",
        "value": "The update is equivalent, but faster than the following."
      },
      {
        "type": "code",
        "value": "a1 = np.delete(a, slice(2,4), 0)\na1"
      },
      {
        "type": "code",
        "value": "q_direct, r_direct = linalg.qr(a1)"
      },
      {
        "type": "text",
        "value": "Check that we have equivalent results:"
      },
      {
        "type": "code",
        "value": "np.dot(q1, r1)"
      },
      {
        "type": "code",
        "value": "np.allclose(np.dot(q1, r1), a1)"
      },
      {
        "type": "text",
        "value": "And the updated Q is still unitary:"
      },
      {
        "type": "code",
        "value": "np.allclose(np.dot(q1.T, q1), np.eye(3))"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": null,
  "item_line": null,
  "item_type": "<class 'builtin_function_or_method'>",
  "ordered_sections": [
    "Signature",
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "qr",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "qr"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.linalg._decomp_qr:qr_multiply",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "qr_multiply"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.linalg._decomp_update:qr_insert",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "qr_insert"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.linalg._decomp_update:qr_update",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "qr_update"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "qr_delete(Q, R, k, int p=1, which=u'row', overwrite_qr=False, check_finite=True)"
  },
  "type": "DocBlob"
}