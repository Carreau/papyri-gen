{
  "aliases": [
    "scipy.ndimage.gaussian_filter"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The multidimensional filter is implemented as a sequence of 1-D convolution filters. The intermediate arrays are stored in the same data type as the output. Therefore, for output types with a limited precision, the results may be imprecise because intermediate results may be stored with insufficient precision."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The Gaussian kernel will have size "
            },
            {
              "type": "inlineCode",
              "value": "2*radius + 1"
            },
            {
              "type": "text",
              "value": " along each axis where "
            },
            {
              "type": "inlineCode",
              "value": "radius = round(truncate * sigma)"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The input array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "input",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Standard deviation for Gaussian kernel. The standard deviations of the Gaussian filter are given for each axis as a sequence, or as a single number, in which case it is equal for all axes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "sigma",
              "type": "Param",
              "type_": "scalar or sequence of scalars"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The order of the filter along each axis is given as a sequence of integers, or as a single number. An order of 0 corresponds to convolution with a Gaussian kernel. A positive order corresponds to convolution with that derivative of a Gaussian."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "order",
              "type": "Param",
              "type_": "int or sequence of ints, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The array in which to place the output, or the dtype of the returned array. By default an array of the same dtype as input will be created."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "output",
              "type": "Param",
              "type_": "array or dtype, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "mode",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "mode"
                    },
                    {
                      "type": "text",
                      "value": " parameter determines how the input array is extended when the filter overlaps a border. By passing a sequence of modes with length equal to the number of dimensions of the input array, different modes can be specified along each axis. Default value is 'reflect'. The valid values and their behavior is as follows:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "The input is extended by reflecting about the edge of the last     pixel. This mode is also sometimes referred to as half-sample     symmetric."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "'reflect' ("
                          },
                          {
                            "domain": null,
                            "role": null,
                            "type": "Directive",
                            "value": "d c b a | a b c d | d c b a"
                          },
                          {
                            "type": "text",
                            "value": ")"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "The input is extended by filling all values beyond the edge with     the same constant value, defined by the "
                            },
                            {
                              "anchor": null,
                              "exists": true,
                              "kind": "local",
                              "reference": {
                                "kind": "local",
                                "module": null,
                                "path": "cval",
                                "type": "RefInfo",
                                "version": null
                              },
                              "type": "Link",
                              "value": "cval"
                            },
                            {
                              "type": "text",
                              "value": " parameter."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "'constant' ("
                          },
                          {
                            "domain": null,
                            "role": null,
                            "type": "Directive",
                            "value": "k k k k | a b c d | k k k k"
                          },
                          {
                            "type": "text",
                            "value": ")"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "The input is extended by replicating the last pixel."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "'nearest' ("
                          },
                          {
                            "domain": null,
                            "role": null,
                            "type": "Directive",
                            "value": "a a a a | a b c d | d d d d"
                          },
                          {
                            "type": "text",
                            "value": ")"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "The input is extended by reflecting about the center of the last     pixel. This mode is also sometimes referred to as whole-sample     symmetric."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "'mirror' ("
                          },
                          {
                            "domain": null,
                            "role": null,
                            "type": "Directive",
                            "value": "d c b | a b c d | c b a"
                          },
                          {
                            "type": "text",
                            "value": ")"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "The input is extended by wrapping around to the opposite edge."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "'wrap' ("
                          },
                          {
                            "domain": null,
                            "role": null,
                            "type": "Directive",
                            "value": "a b c d | a b c d | a b c d"
                          },
                          {
                            "type": "text",
                            "value": ")"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    }
                  ],
                  "type": "DefList"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "For consistency with the interpolation functions, the following mode names can also be used:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "This is a synonym for 'constant'."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "'grid-constant'"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "This is a synonym for 'reflect'."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "'grid-mirror'"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "This is a synonym for 'wrap'."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "'grid-wrap'"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    }
                  ],
                  "type": "DefList"
                }
              ],
              "param": "mode",
              "type": "Param",
              "type_": "str or sequence, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Value to fill past edges of input if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "mode",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "mode"
                    },
                    {
                      "type": "text",
                      "value": " is 'constant'. Default is 0.0."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cval",
              "type": "Param",
              "type_": "scalar, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Truncate the filter at this many standard deviations. Default is 4.0."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "truncate",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Radius of the Gaussian kernel. The radius are given for each axis as a sequence, or as a single number, in which case it is equal for all axes. If specified, the size of the kernel along each axis will be "
                    },
                    {
                      "type": "inlineCode",
                      "value": "2*radius + 1"
                    },
                    {
                      "type": "text",
                      "value": ", and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "truncate",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "truncate"
                    },
                    {
                      "type": "text",
                      "value": " is ignored. Default is None."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "radius",
              "type": "Param",
              "type_": "None or int or sequence of ints, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Returned array of same shape as "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "input",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "input"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "gaussian_filter",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Multidimensional Gaussian filter."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from scipy.ndimage import gaussian_filter\nimport numpy as np\na = np.arange(50, step=2).reshape((5,5))\na"
      },
      {
        "type": "code",
        "value": "gaussian_filter(a, sigma=1)"
      },
      {
        "type": "code",
        "value": "from scipy import datasets\nimport matplotlib.pyplot as plt\nfig = plt.figure()\nplt.gray()  # show the filtered result in grayscale\nax1 = fig.add_subplot(121)  # left side\nax2 = fig.add_subplot(122)  # right side\nascent = datasets.ascent()\nresult = gaussian_filter(ascent, sigma=5)\nax1.imshow(ascent)\nax2.imshow(result)\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.ndimage._filters:gaussian_filter-0-9fd30a90.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/ndimage/_filters.py",
  "item_line": 279,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(input, sigma, order=0, output=None, mode='reflect', cval=0.0, truncate=4.0, *, radius=None)"
  },
  "type": "DocBlob"
}