{
  "aliases": [
    "scipy.ndimage.generate_binary_structure"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "scipy",
                "path": "scipy.ndimage._morphology:generate_binary_structure",
                "type": "RefInfo",
                "version": "1.10.1"
              },
              "type": "Link",
              "value": "generate_binary_structure"
            },
            {
              "type": "text",
              "value": " can only create structuring elements with dimensions equal to 3, i.e., minimal dimensions. For larger structuring elements, that are useful e.g., for eroding large objects, one may either use "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "scipy",
                "path": "scipy.ndimage._morphology:iterate_structure",
                "type": "RefInfo",
                "version": "1.10.1"
              },
              "type": "Link",
              "value": "iterate_structure"
            },
            {
              "type": "text",
              "value": ", or create directly custom arrays with numpy functions such as "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "api",
                "module": "numpy",
                "path": "numpy:ones",
                "type": "RefInfo",
                "version": "*"
              },
              "type": "Link",
              "value": "numpy.ones"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of dimensions of the array to which the structuring element will be applied, as returned by "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "np.ndim"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "rank",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "connectivity",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "connectivity"
                    },
                    {
                      "type": "text",
                      "value": " determines which elements of the output array belong to the structure, i.e., are considered as neighbors of the central element. Elements up to a squared distance of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "connectivity",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "connectivity"
                    },
                    {
                      "type": "text",
                      "value": " from the center are considered neighbors. "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "connectivity",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "connectivity"
                    },
                    {
                      "type": "text",
                      "value": " may range from 1 (no diagonal elements are neighbors) to "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "rank",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "rank"
                    },
                    {
                      "type": "text",
                      "value": " (all elements are neighbors)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "connectivity",
              "type": "Param",
              "type_": "int"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Structuring element which may be used for binary morphological operations, with "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "rank",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "rank"
                    },
                    {
                      "type": "text",
                      "value": " dimensions and all dimensions equal to 3."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "output",
              "type": "Param",
              "type_": "ndarray of bools"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Generate a binary structure for binary morphological operations."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from scipy import ndimage\nimport numpy as np\nstruct = ndimage.generate_binary_structure(2, 1)\nstruct"
      },
      {
        "type": "code",
        "value": "a = np.zeros((5,5))\na[2, 2] = 1\na"
      },
      {
        "type": "code",
        "value": "b = ndimage.binary_dilation(a, structure=struct).astype(a.dtype)\nb"
      },
      {
        "type": "code",
        "value": "ndimage.binary_dilation(b, structure=struct).astype(a.dtype)"
      },
      {
        "type": "code",
        "value": "struct = ndimage.generate_binary_structure(2, 2)\nstruct"
      },
      {
        "type": "code",
        "value": "struct = ndimage.generate_binary_structure(3, 1)\nstruct # no diagonal elements"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/ndimage/_morphology.py",
  "item_line": 124,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.ndimage._morphology:iterate_structure",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "iterate_structure"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.ndimage._morphology:binary_dilation",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "binary_dilation"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "binary_erosion",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "binary_erosion"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(rank, connectivity)"
  },
  "type": "DocBlob"
}