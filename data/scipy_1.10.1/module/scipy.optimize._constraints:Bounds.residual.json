{
  "aliases": [
    "scipy.optimize.Bounds.residual"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "For a bound constraint of the form      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "lb <= x <= ub"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "the lower and upper residuals between "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "x"
            },
            {
              "type": "text",
              "value": " and the bounds are values "
            },
            {
              "type": "inlineCode",
              "value": "sl"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineCode",
              "value": "sb"
            },
            {
              "type": "text",
              "value": " such that      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "lb + sl == x == ub - sb"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "When all elements of "
            },
            {
              "type": "inlineCode",
              "value": "sl"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineCode",
              "value": "sb"
            },
            {
              "type": "text",
              "value": " are positive, all elements of "
            },
            {
              "type": "inlineCode",
              "value": "x"
            },
            {
              "type": "text",
              "value": " lie within the bounds; a negative element in "
            },
            {
              "type": "inlineCode",
              "value": "sl"
            },
            {
              "type": "text",
              "value": " or "
            },
            {
              "type": "inlineCode",
              "value": "sb"
            },
            {
              "type": "text",
              "value": " indicates that the corresponding element of "
            },
            {
              "type": "inlineCode",
              "value": "x"
            },
            {
              "type": "text",
              "value": " is out of bounds."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Vector of independent variables"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x: array_like",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The lower and upper residuals"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "sl, sb",
              "type": "Param",
              "type_": "array-like"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Calculate the residual (slack) between the input and the bounds"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/optimize/_constraints.py",
  "item_line": 263,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self, x)"
  },
  "type": "DocBlob"
}