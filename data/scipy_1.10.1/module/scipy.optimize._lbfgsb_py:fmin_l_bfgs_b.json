{
  "aliases": [
    "scipy.optimize.fmin_l_bfgs_b"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "License of L-BFGS-B (FORTRAN code):"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The version included here (in fortran code) is 3.0 (released April 25, 2011). It was written by Ciyou Zhu, Richard Byrd, and Jorge Nocedal <nocedal@ece.nwu.edu>. It carries the following condition for use:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "This software is freely available, but we expect that all publications describing work using this software, or all commercial products using it, quote at least one of the references given below. This software is released under the BSD License."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Function to minimize."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "func",
              "type": "Param",
              "type_": "callable f(x,*args)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Initial guess."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x0",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The gradient of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "func",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "func"
                    },
                    {
                      "type": "text",
                      "value": ". If None, then "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "func",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "func"
                    },
                    {
                      "type": "text",
                      "value": " returns the function value and the gradient ("
                    },
                    {
                      "type": "inlineCode",
                      "value": "f, g = func(x, *args)"
                    },
                    {
                      "type": "text",
                      "value": "), unless "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "approx_grad",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "approx_grad"
                    },
                    {
                      "type": "text",
                      "value": " is True in which case "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "func",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "func"
                    },
                    {
                      "type": "text",
                      "value": " returns only "
                    },
                    {
                      "type": "inlineCode",
                      "value": "f"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "fprime",
              "type": "Param",
              "type_": "callable fprime(x,*args), optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Arguments to pass to "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "func",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "func"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "fprime",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "fprime"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "args",
              "type": "Param",
              "type_": "sequence, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether to approximate the gradient numerically (in which case "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "func",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "func"
                    },
                    {
                      "type": "text",
                      "value": " returns only the function value)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "approx_grad",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "(min, max)"
                    },
                    {
                      "type": "text",
                      "value": " pairs for each element in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": ", defining the bounds on that parameter. Use None or +-inf for one of "
                    },
                    {
                      "type": "inlineCode",
                      "value": "min"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "type": "inlineCode",
                      "value": "max"
                    },
                    {
                      "type": "text",
                      "value": " when there is no bound in that direction."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "bounds",
              "type": "Param",
              "type_": "list, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The maximum number of variable metric corrections used to define the limited memory matrix. (The limited memory BFGS method does not store the full hessian but uses this many terms in an approximation to it.)"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "m",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The iteration stops when "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(f^k - f^{k+1})/max{|f^k|,|f^{k+1}|,1} <= factr * eps"
                    },
                    {
                      "type": "text",
                      "value": ", where "
                    },
                    {
                      "type": "inlineCode",
                      "value": "eps"
                    },
                    {
                      "type": "text",
                      "value": " is the machine precision, which is automatically generated by the code. Typical values for "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "factr",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "factr"
                    },
                    {
                      "type": "text",
                      "value": " are: 1e12 for low accuracy; 1e7 for moderate accuracy; 10.0 for extremely high accuracy. See Notes for relationship to "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "ftol"
                    },
                    {
                      "type": "text",
                      "value": ", which is exposed (instead of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "factr",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "factr"
                    },
                    {
                      "type": "text",
                      "value": ") by the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "api",
                        "module": "scipy.optimize._minimize",
                        "path": "scipy.optimize._minimize:minimize",
                        "type": "RefInfo",
                        "version": "*"
                      },
                      "type": "Link",
                      "value": "scipy.optimize.minimize"
                    },
                    {
                      "type": "text",
                      "value": " interface to L-BFGS-B."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "factr",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The iteration will stop when "
                    },
                    {
                      "type": "inlineCode",
                      "value": "max{|proj g_i | i = 1, ..., n} <= pgtol"
                    },
                    {
                      "type": "text",
                      "value": " where "
                    },
                    {
                      "type": "inlineCode",
                      "value": "pg_i"
                    },
                    {
                      "type": "text",
                      "value": " is the i-th component of the projected gradient."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "pgtol",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Step size used when "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "approx_grad",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "approx_grad"
                    },
                    {
                      "type": "text",
                      "value": " is True, for numerically calculating the gradient"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "epsilon",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Controls the frequency of output. "
                    },
                    {
                      "type": "inlineCode",
                      "value": "iprint < 0"
                    },
                    {
                      "type": "text",
                      "value": " means no output; "
                    },
                    {
                      "type": "inlineCode",
                      "value": "iprint = 0"
                    },
                    {
                      "type": "text",
                      "value": "    print only one line at the last iteration; "
                    },
                    {
                      "type": "inlineCode",
                      "value": "0 < iprint < 99"
                    },
                    {
                      "type": "text",
                      "value": " print also f and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "|proj g|"
                    },
                    {
                      "type": "text",
                      "value": " every iprint iterations; "
                    },
                    {
                      "type": "inlineCode",
                      "value": "iprint = 99"
                    },
                    {
                      "type": "text",
                      "value": "   print details of every iteration except n-vectors; "
                    },
                    {
                      "type": "inlineCode",
                      "value": "iprint = 100"
                    },
                    {
                      "type": "text",
                      "value": "  print also the changes of active set and final x; "
                    },
                    {
                      "type": "inlineCode",
                      "value": "iprint > 100"
                    },
                    {
                      "type": "text",
                      "value": "  print details of every iteration including x and g."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "iprint",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If zero, then no output. If a positive number, then this over-rides "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "iprint",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "iprint"
                    },
                    {
                      "type": "text",
                      "value": " (i.e., "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "iprint",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "iprint"
                    },
                    {
                      "type": "text",
                      "value": " gets the value of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "disp",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "disp"
                    },
                    {
                      "type": "text",
                      "value": ")."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "disp",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Maximum number of function evaluations. Note that this function may violate the limit because of evaluating gradients by numerical differentiation."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "maxfun",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Maximum number of iterations."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "maxiter",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Called after each iteration, as "
                    },
                    {
                      "type": "inlineCode",
                      "value": "callback(xk)"
                    },
                    {
                      "type": "text",
                      "value": ", where "
                    },
                    {
                      "type": "inlineCode",
                      "value": "xk"
                    },
                    {
                      "type": "text",
                      "value": " is the current parameter vector."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "callback",
              "type": "Param",
              "type_": "callable, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Maximum number of line search steps (per iteration). Default is 20."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "maxls",
              "type": "Param",
              "type_": "int, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Estimated position of the minimum."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Value of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "func",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "func"
                    },
                    {
                      "type": "text",
                      "value": " at the minimum."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "f",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Information dictionary."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "d['warnflag'] is"
                            }
                          ],
                          "type": "paragraph"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "0 if converged,"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              "spread": false,
                              "type": "listItem"
                            },
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "1 if too many function evaluations or too many iterations,"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              "spread": false,
                              "type": "listItem"
                            },
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "2 if stopped for another reason, given in d['task']"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              "spread": false,
                              "type": "listItem"
                            }
                          ],
                          "ordered": false,
                          "spread": false,
                          "start": 1,
                          "type": "list"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "d['grad'] is the gradient at the minimum (should be 0 ish)"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "d['funcalls'] is the number of function calls made."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "d['nit'] is the number of iterations."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                }
              ],
              "param": "d",
              "type": "Param",
              "type_": "dict"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Minimize a function func using the L-BFGS-B algorithm."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/optimize/_lbfgsb_py.py",
  "item_line": 48,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "References"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Interface to minimization algorithms for multivariate functions. See the 'L-BFGS-B' "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "method"
            },
            {
              "type": "text",
              "value": " in particular. Note that the "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "ftol"
            },
            {
              "type": "text",
              "value": " option is made available via that interface, while "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "factr"
            },
            {
              "type": "text",
              "value": " is provided via this interface, where "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "factr"
            },
            {
              "type": "text",
              "value": " is the factor multiplying the default machine floating-point precision to arrive at "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "ftol"
            },
            {
              "type": "text",
              "value": ": "
            },
            {
              "type": "inlineCode",
              "value": "ftol = factr * numpy.finfo(float).eps"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.optimize._shgo:SHGO.minimize",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "minimize"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(func, x0, fprime=None, args=(), approx_grad=0, bounds=None, m=10, factr=10000000.0, pgtol=1e-05, epsilon=1e-08, iprint=-1, maxfun=15000, maxiter=15000, disp=None, callback=None, maxls=20)"
  },
  "type": "DocBlob"
}