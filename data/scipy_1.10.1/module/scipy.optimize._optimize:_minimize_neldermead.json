{
  "aliases": [
    "scipy.optimize._minimize._minimize_neldermead"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Set to True to print convergence messages."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "disp",
              "type": "Param",
              "type_": "bool"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Maximum allowed number of iterations and function evaluations. Will default to "
                    },
                    {
                      "type": "inlineCode",
                      "value": "N*200"
                    },
                    {
                      "type": "text",
                      "value": ", where "
                    },
                    {
                      "type": "inlineCode",
                      "value": "N"
                    },
                    {
                      "type": "text",
                      "value": " is the number of variables, if neither "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "maxiter",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "maxiter"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "maxfev",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "maxfev"
                    },
                    {
                      "type": "text",
                      "value": " is set. If both "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "maxiter",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "maxiter"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "maxfev",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "maxfev"
                    },
                    {
                      "type": "text",
                      "value": " are set, minimization will stop at the first reached."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "maxiter, maxfev",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Set to True to return a list of the best solution at each of the iterations."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "return_all",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Initial simplex. If given, overrides "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "x0"
                    },
                    {
                      "type": "text",
                      "value": ". "
                    },
                    {
                      "type": "inlineCode",
                      "value": "initial_simplex[j,:]"
                    },
                    {
                      "type": "text",
                      "value": " should contain the coordinates of the jth vertex of the "
                    },
                    {
                      "type": "inlineCode",
                      "value": "N+1"
                    },
                    {
                      "type": "text",
                      "value": " vertices in the simplex, where "
                    },
                    {
                      "type": "inlineCode",
                      "value": "N"
                    },
                    {
                      "type": "text",
                      "value": " is the dimension."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "initial_simplex",
              "type": "Param",
              "type_": "array_like of shape (N + 1, N)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Absolute error in xopt between iterations that is acceptable for convergence."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "xatol",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Absolute error in func(xopt) between iterations that is acceptable for convergence."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "fatol",
              "type": "Param",
              "type_": "number, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Adapt algorithm parameters to dimensionality of problem. Useful for high-dimensional minimization ."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "adaptive",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Bounds on variables. There are two ways to specify the bounds:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "Instance of "
                                },
                                {
                                  "domain": null,
                                  "role": null,
                                  "type": "Directive",
                                  "value": "Bounds"
                                },
                                {
                                  "type": "text",
                                  "value": " class."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "Sequence of "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "(min, max)"
                                },
                                {
                                  "type": "text",
                                  "value": " pairs for each element in "
                                },
                                {
                                  "domain": null,
                                  "role": null,
                                  "type": "Directive",
                                  "value": "x"
                                },
                                {
                                  "type": "text",
                                  "value": ". None        is used to specify no bound."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        }
                      ],
                      "ordered": true,
                      "spread": false,
                      "start": 1,
                      "type": "list"
                    }
                  ],
                  "type": "blockquote"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Note that this just clips all vertices in simplex based on the bounds."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "bounds",
              "type": "Param",
              "type_": "sequence or `Bounds`, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Minimization of scalar function of one or more variables using the Nelder-Mead algorithm."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/optimize/_optimize.py",
  "item_line": 708,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "References"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(func, x0, args=(), callback=None, maxiter=None, maxfev=None, disp=False, return_all=False, initial_simplex=None, xatol=0.0001, fatol=0.0001, adaptive=False, bounds=None, **unknown_options)"
  },
  "type": "DocBlob"
}