{
  "aliases": [
    "scipy.optimize.fmin_cg"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This conjugate gradient algorithm is based on that of Polak and Ribiere ."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Conjugate gradient methods tend to work better when:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "f",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "f"
                    },
                    {
                      "type": "text",
                      "value": " has a unique global minimizing point, and no local minima or    other stationary points,"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "f",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "f"
                    },
                    {
                      "type": "text",
                      "value": " is, at least locally, reasonably well approximated by a    quadratic function of the variables,"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "f",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "f"
                    },
                    {
                      "type": "text",
                      "value": " is continuous and has a continuous gradient,"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "fprime",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "fprime"
                    },
                    {
                      "type": "text",
                      "value": " is not too large, e.g., has a norm less than 1000,"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The initial guess, "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x0",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x0"
                    },
                    {
                      "type": "text",
                      "value": ", is reasonably close to "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "f",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "f"
                    },
                    {
                      "type": "text",
                      "value": " 's global    minimizing point, "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "xopt",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "xopt"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": true,
          "spread": false,
          "start": 1,
          "type": "list"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Objective function to be minimized. Here "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": " must be a 1-D array of the variables that are to be changed in the search for a minimum, and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "args",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "args"
                    },
                    {
                      "type": "text",
                      "value": " are the other (fixed) parameters of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "f",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "f"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "f",
              "type": "Param",
              "type_": "callable, ``f(x, *args)``"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A user-supplied initial estimate of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "xopt",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "xopt"
                    },
                    {
                      "type": "text",
                      "value": ", the optimal value of "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": ". It must be a 1-D array of values."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x0",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A function that returns the gradient of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "f",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "f"
                    },
                    {
                      "type": "text",
                      "value": " at "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": ". Here "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "args",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "args"
                    },
                    {
                      "type": "text",
                      "value": " are as described above for "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "f",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "f"
                    },
                    {
                      "type": "text",
                      "value": ". The returned value must be a 1-D array. Defaults to None, in which case the gradient is approximated numerically (see "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "epsilon",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "epsilon"
                    },
                    {
                      "type": "text",
                      "value": ", below)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "fprime",
              "type": "Param",
              "type_": "callable, ``fprime(x, *args)``, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Parameter values passed to "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "f",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "f"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "fprime",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "fprime"
                    },
                    {
                      "type": "text",
                      "value": ". Must be supplied whenever additional fixed parameters are needed to completely specify the functions "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "f",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "f"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "fprime",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "fprime"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "args",
              "type": "Param",
              "type_": "tuple, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Stop when the norm of the gradient is less than "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "gtol",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "gtol"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "gtol",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Order to use for the norm of the gradient ("
                    },
                    {
                      "type": "inlineCode",
                      "value": "-np.Inf"
                    },
                    {
                      "type": "text",
                      "value": " is min, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "np.Inf"
                    },
                    {
                      "type": "text",
                      "value": " is max)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "norm",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Step size(s) to use when "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "fprime",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "fprime"
                    },
                    {
                      "type": "text",
                      "value": " is approximated numerically. Can be a scalar or a 1-D array. Defaults to "
                    },
                    {
                      "type": "inlineCode",
                      "value": "sqrt(eps)"
                    },
                    {
                      "type": "text",
                      "value": ", with eps the floating point machine precision.  Usually "
                    },
                    {
                      "type": "inlineCode",
                      "value": "sqrt(eps)"
                    },
                    {
                      "type": "text",
                      "value": " is about 1.5e-8."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "epsilon",
              "type": "Param",
              "type_": "float or ndarray, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Maximum number of iterations to perform. Default is "
                    },
                    {
                      "type": "inlineCode",
                      "value": "200 * len(x0)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "maxiter",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, return "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "fopt",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "fopt"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "func_calls",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "func_calls"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "grad_calls",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "grad_calls"
                    },
                    {
                      "type": "text",
                      "value": ", and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "warnflag",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "warnflag"
                    },
                    {
                      "type": "text",
                      "value": " in addition to "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "xopt",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "xopt"
                    },
                    {
                      "type": "text",
                      "value": ".  See the Returns section below for additional information on optional return values."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "full_output",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, return a convergence message, followed by "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "xopt",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "xopt"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "disp",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, add to the returned values the results of each iteration."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "retall",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An optional user-supplied function, called after each iteration. Called as "
                    },
                    {
                      "type": "inlineCode",
                      "value": "callback(xk)"
                    },
                    {
                      "type": "text",
                      "value": ", where "
                    },
                    {
                      "type": "inlineCode",
                      "value": "xk"
                    },
                    {
                      "type": "text",
                      "value": " is the current value of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x0",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x0"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "callback",
              "type": "Param",
              "type_": "callable, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Parameters which minimize f, i.e., "
                    },
                    {
                      "type": "inlineCode",
                      "value": "f(xopt) == fopt"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "xopt",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Minimum value found, f(xopt). Only returned if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "full_output",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "full_output"
                    },
                    {
                      "type": "text",
                      "value": " is True."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "fopt",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The number of function_calls made. Only returned if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "full_output",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "full_output"
                    },
                    {
                      "type": "text",
                      "value": " is True."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "func_calls",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The number of gradient calls made. Only returned if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "full_output",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "full_output"
                    },
                    {
                      "type": "text",
                      "value": " is True."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "grad_calls",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Integer value with warning status, only returned if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "full_output",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "full_output"
                    },
                    {
                      "type": "text",
                      "value": " is True."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "warnflag",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "List of arrays, containing the results at each iteration. Only returned if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "retall",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "retall"
                    },
                    {
                      "type": "text",
                      "value": " is True."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "allvecs",
              "type": "Param",
              "type_": "list of ndarray, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Minimize a function using a nonlinear conjugate gradient algorithm."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Example 1: seek the minimum value of the expression\n``a*u**2 + b*u*v + c*v**2 + d*u + e*v + f`` for given values\nof the parameters and an initial guess ``(u, v) = (0, 0)``."
      },
      {
        "type": "code",
        "value": "import numpy as np\nargs = (2, 3, 7, 8, 9, 10)  # parameter values\ndef f(x, *args):\n    u, v = x\n    a, b, c, d, e, f = args\n    return a*u**2 + b*u*v + c*v**2 + d*u + e*v + f\ndef gradf(x, *args):\n    u, v = x\n    a, b, c, d, e, f = args\n    gu = 2*a*u + b*v + d     # u-component of the gradient\n    gv = b*u + 2*c*v + e     # v-component of the gradient\n    return np.asarray((gu, gv))\nx0 = np.asarray((0, 0))  # Initial guess.\nfrom scipy import optimize\nres1 = optimize.fmin_cg(f, x0, fprime=gradf, args=args)"
      },
      {
        "type": "code",
        "value": "res1"
      },
      {
        "type": "text",
        "value": "Example 2: solve the same problem using the `minimize` function.\n(This `myopts` dictionary shows all of the available options,\nalthough in practice only non-default values would be needed.\nThe returned value will be a dictionary.)"
      },
      {
        "type": "code",
        "value": "opts = {'maxiter' : None,    # default value.\n        'disp' : True,    # non-default value.\n        'gtol' : 1e-5,    # default value.\n        'norm' : np.inf,  # default value.\n        'eps' : 1.4901161193847656e-08}  # default value.\nres2 = optimize.minimize(f, x0, jac=gradf, args=args,\n                         method='CG', options=opts)"
      },
      {
        "type": "code",
        "value": "res2.x  # minimum found"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/optimize/_optimize.py",
  "item_line": 1471,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "common interface to all "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "scipy.optimize"
            },
            {
              "type": "text",
              "value": " algorithms for unconstrained and constrained minimization of multivariate functions. It provides an alternative way to call "
            },
            {
              "type": "inlineCode",
              "value": "fmin_cg"
            },
            {
              "type": "text",
              "value": ", by specifying "
            },
            {
              "type": "inlineCode",
              "value": "method='CG'"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.optimize._shgo:SHGO.minimize",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "minimize"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(f, x0, fprime=None, args=(), gtol=1e-05, norm=inf, epsilon=1.4901161193847656e-08, maxiter=None, full_output=0, disp=1, retall=0, callback=None)"
  },
  "type": "DocBlob"
}