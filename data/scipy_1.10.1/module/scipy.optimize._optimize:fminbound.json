{
  "aliases": [
    "scipy.optimize.fminbound"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Finds a local minimizer of the scalar function "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "func",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "func"
            },
            {
              "type": "text",
              "value": " in the interval x1 < xopt < x2 using Brent's method. (See "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "brent"
            },
            {
              "type": "text",
              "value": " for auto-bracketing.)"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Objective function to be minimized (must accept and return scalars)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "func",
              "type": "Param",
              "type_": "callable f(x,*args)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Finite optimization bounds."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x1, x2",
              "type": "Param",
              "type_": "float or array scalar"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Extra arguments passed to function."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "args",
              "type": "Param",
              "type_": "tuple, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The convergence tolerance."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "xtol",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Maximum number of function evaluations allowed."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "maxfun",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, return optional outputs."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "full_output",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [],
              "param": "disp",
              "type": "Param",
              "type_": "int, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Parameters (over given interval) which minimize the objective function."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "xopt",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The function value evaluated at the minimizer."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "fval",
              "type": "Param",
              "type_": "number"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An error flag (0 if converged, 1 if maximum number of function calls reached)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "ierr",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The number of function calls made."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "numfunc",
              "type": "Param",
              "type_": "int"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Bounded minimization for scalar functions."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "`fminbound` finds the minimizer of the function in the given range.\nThe following examples illustrate this."
      },
      {
        "type": "code",
        "value": "from scipy import optimize\ndef f(x):\n    return (x-1)**2\nminimizer = optimize.fminbound(f, -4, 4)\nminimizer"
      },
      {
        "type": "code",
        "value": "minimum = f(minimizer)\nminimum"
      },
      {
        "type": "code",
        "value": "minimizer = optimize.fminbound(f, 3, 4)\nminimizer"
      },
      {
        "type": "code",
        "value": "minimum = f(minimizer)\nminimum"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/optimize/_optimize.py",
  "item_line": 2081,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Interface to minimization algorithms for scalar univariate functions. See the 'Bounded' "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "method"
            },
            {
              "type": "text",
              "value": " in particular."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "minimize_scalar",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "minimize_scalar"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(func, x1, x2, args=(), xtol=1e-05, maxfun=500, full_output=0, disp=1)"
  },
  "type": "DocBlob"
}