{
  "aliases": [
    "scipy.optimize.root"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This section describes the available solvers that can be selected by the 'method' parameter. The default method is "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "hybr"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Method "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "hybr"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " uses a modification of the Powell hybrid method as implemented in MINPACK ."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Method "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "lm"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " solves the system of nonlinear equations in a least squares sense using a modification of the Levenberg-Marquardt algorithm as implemented in MINPACK ."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Method "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "df-sane"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " is a derivative-free spectral method."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Methods "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "broyden1"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "broyden2"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "anderson"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "linearmixing"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "diagbroyden"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "excitingmixing"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "krylov"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " are inexact Newton methods, with backtracking or full line searches . Each method corresponds to a particular Jacobian approximations."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Method "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "broyden1"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " uses Broyden's first Jacobian approximation, it is   known as Broyden's good method."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Method "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "broyden2"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " uses Broyden's second Jacobian approximation, it   is known as Broyden's bad method."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Method "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "anderson"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " uses (extended) Anderson mixing."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Method "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "Krylov"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " uses Krylov approximation for inverse Jacobian. It   is suitable for large-scale problem."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Method "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "diagbroyden"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " uses diagonal Broyden Jacobian approximation."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Method "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "linearmixing"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " uses a scalar Jacobian approximation."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Method "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "excitingmixing"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " uses a tuned diagonal Jacobian   approximation."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": false,
          "spread": false,
          "start": 1,
          "type": "list"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "warning "
                }
              ],
              "type": "admonitionTitle"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "The algorithms implemented for methods "
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "diagbroyden"
                    }
                  ],
                  "type": "emphasis"
                },
                {
                  "type": "text",
                  "value": ", "
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "linearmixing"
                    }
                  ],
                  "type": "emphasis"
                },
                {
                  "type": "text",
                  "value": " and "
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "excitingmixing"
                    }
                  ],
                  "type": "emphasis"
                },
                {
                  "type": "text",
                  "value": " may be useful for specific problems, but whether they will work may depend strongly on the problem."
                }
              ],
              "type": "paragraph"
            }
          ],
          "kind": "note",
          "type": "admonition"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionadded 0.11.0"
                }
              ],
              "type": "admonitionTitle"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A vector function to find a root of."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "fun",
              "type": "Param",
              "type_": "callable"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Initial guess."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x0",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Extra arguments passed to the objective function and its Jacobian."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "args",
              "type": "Param",
              "type_": "tuple, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Type of solver. Should be one of"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'hybr'             "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "(see here) <optimize.root-hybr>"
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'lm'               "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "(see here) <optimize.root-lm>"
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'broyden1'         "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "(see here) <optimize.root-broyden1>"
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'broyden2'         "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "(see here) <optimize.root-broyden2>"
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'anderson'         "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "(see here) <optimize.root-anderson>"
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'linearmixing'     "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "(see here) <optimize.root-linearmixing>"
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'diagbroyden'      "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "(see here) <optimize.root-diagbroyden>"
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'excitingmixing'   "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "(see here) <optimize.root-excitingmixing>"
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'krylov'           "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "(see here) <optimize.root-krylov>"
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'df-sane'          "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "(see here) <optimize.root-dfsane>"
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        }
                      ],
                      "ordered": false,
                      "spread": false,
                      "start": 1,
                      "type": "list"
                    }
                  ],
                  "type": "blockquote"
                }
              ],
              "param": "method",
              "type": "Param",
              "type_": "str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "jac",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "jac"
                    },
                    {
                      "type": "text",
                      "value": " is a Boolean and is True, "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "fun",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "fun"
                    },
                    {
                      "type": "text",
                      "value": " is assumed to return the value of Jacobian along with the objective function. If False, the Jacobian will be estimated numerically. "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "jac",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "jac"
                    },
                    {
                      "type": "text",
                      "value": " can also be a callable returning the Jacobian of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "fun",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "fun"
                    },
                    {
                      "type": "text",
                      "value": ". In this case, it must accept the same arguments as "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "fun",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "fun"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "jac",
              "type": "Param",
              "type_": "bool or callable, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Tolerance for termination. For detailed control, use solver-specific options."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "tol",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Optional callback function. It is called on every iteration as "
                    },
                    {
                      "type": "inlineCode",
                      "value": "callback(x, f)"
                    },
                    {
                      "type": "text",
                      "value": " where "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": " is the current solution and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "scipy",
                        "path": "scipy.optimize._bglu_dense:_consider_refactor.<locals>.f",
                        "type": "RefInfo",
                        "version": "1.10.1"
                      },
                      "type": "Link",
                      "value": "f"
                    },
                    {
                      "type": "text",
                      "value": " the corresponding residual. For all methods but 'hybr' and 'lm'."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "callback",
              "type": "Param",
              "type_": "function, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A dictionary of solver options. E.g., "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "xtol"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "maxiter"
                    },
                    {
                      "type": "text",
                      "value": ", see "
                    },
                    {
                      "type": "inlineCode",
                      "value": "show_options()"
                    },
                    {
                      "type": "text",
                      "value": " for details."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "options",
              "type": "Param",
              "type_": "dict, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The solution represented as a "
                    },
                    {
                      "type": "inlineCode",
                      "value": "OptimizeResult"
                    },
                    {
                      "type": "text",
                      "value": " object. Important attributes are: "
                    },
                    {
                      "type": "inlineCode",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": " the solution array, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "success"
                    },
                    {
                      "type": "text",
                      "value": " a Boolean flag indicating if the algorithm exited successfully and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "message"
                    },
                    {
                      "type": "text",
                      "value": " which describes the cause of the termination. See "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "OptimizeResult"
                    },
                    {
                      "type": "text",
                      "value": " for a description of other attributes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "sol",
              "type": "Param",
              "type_": "OptimizeResult"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Find a root of a vector function."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "The following functions define a system of nonlinear equations and its\njacobian."
      },
      {
        "type": "code",
        "value": "import numpy as np\ndef fun(x):\n    return [x[0]  + 0.5 * (x[0] - x[1])**3 - 1.0,\n            0.5 * (x[1] - x[0])**3 + x[1]]"
      },
      {
        "type": "code",
        "value": "def jac(x):\n    return np.array([[1 + 1.5 * (x[0] - x[1])**2,\n                      -1.5 * (x[0] - x[1])**2],\n                     [-1.5 * (x[1] - x[0])**2,\n                      1 + 1.5 * (x[1] - x[0])**2]])"
      },
      {
        "type": "text",
        "value": "A solution can be obtained as follows."
      },
      {
        "type": "code",
        "value": "from scipy import optimize\nsol = optimize.root(fun, [0, 0], jac=jac, method='hybr')\nsol.x"
      },
      {
        "type": "text",
        "value": "**Large problem**"
      },
      {
        "type": "text",
        "value": "Suppose that we needed to solve the following integrodifferential\nequation on the square :math:`[0,1]\\times[0,1]`:"
      },
      {
        "type": "text",
        "value": ".. math::"
      },
      {
        "type": "text",
        "value": "   \\nabla^2 P = 10 \\left(\\int_0^1\\int_0^1\\cosh(P)\\,dx\\,dy\\right)^2"
      },
      {
        "type": "text",
        "value": "with :math:`P(x,1) = 1` and :math:`P=0` elsewhere on the boundary of\nthe square."
      },
      {
        "type": "text",
        "value": "The solution can be found using the ``method='krylov'`` solver:"
      },
      {
        "type": "code",
        "value": "from scipy import optimize\n# parameters\nnx, ny = 75, 75\nhx, hy = 1./(nx-1), 1./(ny-1)"
      },
      {
        "type": "code",
        "value": "P_left, P_right = 0, 0\nP_top, P_bottom = 1, 0"
      },
      {
        "type": "code",
        "value": "def residual(P):\n   d2x = np.zeros_like(P)\n   d2y = np.zeros_like(P)"
      },
      {
        "type": "code",
        "value": ">>> guess = np.zeros((nx, ny), float)\n>>> sol = optimize.root(residual, guess, method='krylov')\n>>> print('Residual: %g' % abs(residual(sol.x)).max())"
      },
      {
        "type": "code",
        "value": ">>> import matplotlib.pyplot as plt\n>>> x, y = np.mgrid[0:1:(nx*1j), 0:1:(ny*1j)]\n>>> plt.pcolormesh(x, y, sol.x, shading='gouraud')\n>>> plt.colorbar()\n>>> plt.show()"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/optimize/_root.py",
  "item_line": 24,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Additional options accepted by the solvers"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.optimize._optimize:show_options",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "show_options"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(fun, x0, args=(), method='hybr', jac=None, tol=None, callback=None, options=None)"
  },
  "type": "DocBlob"
}