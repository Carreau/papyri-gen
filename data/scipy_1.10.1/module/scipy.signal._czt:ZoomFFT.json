{
  "aliases": [
    "scipy.signal.ZoomFFT"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This is a specialization of the chirp z-transform ("
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "CZT"
            },
            {
              "type": "text",
              "value": ") for a set of equally-spaced frequencies around the unit circle, used to calculate a section of the FFT more efficiently than calculating the entire FFT and truncating."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The defaults are chosen such that "
            },
            {
              "type": "inlineCode",
              "value": "f(x, 2)"
            },
            {
              "type": "text",
              "value": " is equivalent to "
            },
            {
              "type": "inlineCode",
              "value": "fft.fft(x)"
            },
            {
              "type": "text",
              "value": " and, if "
            },
            {
              "type": "inlineCode",
              "value": "m > len(x)"
            },
            {
              "type": "text",
              "value": ", that "
            },
            {
              "type": "inlineCode",
              "value": "f(x, 2, m)"
            },
            {
              "type": "text",
              "value": " is equivalent to "
            },
            {
              "type": "inlineCode",
              "value": "fft.fft(x, m)"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Sampling frequency is 1/dt, the time step between samples in the signal "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "x"
            },
            {
              "type": "text",
              "value": ".  The unit circle corresponds to frequencies from 0 up to the sampling frequency.  The default sampling frequency of 2 means that "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "f1"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "f2"
            },
            {
              "type": "text",
              "value": " values up to the Nyquist frequency are in the range [0, 1). For "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "f1"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "f2"
            },
            {
              "type": "text",
              "value": " values expressed in radians, a sampling frequency of 2*pi should be used."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Remember that a zoom FFT can only interpolate the points of the existing FFT.  It cannot help to resolve two separate nearby frequencies. Frequency resolution can only be increased by increasing acquisition time."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "These functions are implemented using Bluestein's algorithm (as is "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "scipy",
                "path": "scipy.fft",
                "type": "RefInfo",
                "version": "1.10.1"
              },
              "type": "Link",
              "value": "scipy.fft"
            },
            {
              "type": "text",
              "value": ")."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The size of the signal."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "n",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A length-2 sequence [`f1`, "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "f2"
                    },
                    {
                      "type": "text",
                      "value": "] giving the frequency range, or a scalar, for which the range [0, "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "fn",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "fn"
                    },
                    {
                      "type": "text",
                      "value": "] is assumed."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "fn",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The number of points to evaluate.  Default is "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "n",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "n"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "m",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The sampling frequency.  If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "fs=10"
                    },
                    {
                      "type": "text",
                      "value": " represented 10 kHz, for example, then "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "f1"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "f2"
                    },
                    {
                      "type": "text",
                      "value": " would also be given in kHz. The default sampling frequency is 2, so "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "f1"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "f2"
                    },
                    {
                      "type": "text",
                      "value": " should be in the range [0, 1] to keep the transform below the Nyquist frequency."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "fs",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "f2"
                    },
                    {
                      "type": "text",
                      "value": " is the last sample. Otherwise, it is not included. Default is False."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "endpoint",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Callable object "
                    },
                    {
                      "type": "inlineCode",
                      "value": "f(x, axis=-1)"
                    },
                    {
                      "type": "text",
                      "value": " for computing the zoom FFT on "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "f",
              "type": "Param",
              "type_": "ZoomFFT"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Create a callable zoom FFT transform function."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "To plot the transform results use something like the following:"
      },
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy.signal import ZoomFFT\nt = np.linspace(0, 1, 1021)\nx = np.cos(2*np.pi*15*t) + np.sin(2*np.pi*17*t)\nf1, f2 = 5, 27\ntransform = ZoomFFT(len(x), [f1, f2], len(x), fs=1021)\nX = transform(x)\nf = np.linspace(f1, f2, len(x))\nimport matplotlib.pyplot as plt\nplt.plot(f, 20*np.log10(np.abs(X)))\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.signal._czt:ZoomFFT-0-decca0d4.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/signal/_czt.py",
  "item_line": 275,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Convenience function for calculating a zoom FFT."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.signal._czt:zoom_fft",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "zoom_fft"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}