{
  "aliases": [
    "scipy.signal.bilinear_zpk"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Transform a set of poles and zeros from the analog s-plane to the digital z-plane using Tustin's method, which substitutes "
            },
            {
              "type": "inlineCode",
              "value": "(z-1) / (z+1)"
            },
            {
              "type": "text",
              "value": " for "
            },
            {
              "type": "inlineCode",
              "value": "s"
            },
            {
              "type": "text",
              "value": ", maintaining the shape of the frequency response."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionadded 1.1.0"
                }
              ],
              "type": "admonitionTitle"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Zeros of the analog filter transfer function."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "z",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Poles of the analog filter transfer function."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "p",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "System gain of the analog filter transfer function."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "k",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Sample rate, as ordinary frequency (e.g., hertz). No prewarping is done in this function."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "fs",
              "type": "Param",
              "type_": "float"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Zeros of the transformed digital filter transfer function."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "z",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Poles of the transformed digital filter transfer function."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "p",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "System gain of the transformed digital filter."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "k",
              "type": "Param",
              "type_": "float"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return a digital IIR filter from an analog one using a bilinear transform."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy import signal\nimport matplotlib.pyplot as plt"
      },
      {
        "type": "code",
        "value": "fs = 100\nbf = 2 * np.pi * np.array([7, 13])\nfilts = signal.lti(*signal.butter(4, bf, btype='bandpass', analog=True,\n                                  output='zpk'))\nfiltz = signal.lti(*signal.bilinear_zpk(filts.zeros, filts.poles,\n                                        filts.gain, fs))\nwz, hz = signal.freqz_zpk(filtz.zeros, filtz.poles, filtz.gain)\nws, hs = signal.freqs_zpk(filts.zeros, filts.poles, filts.gain,\n                          worN=fs*wz)\nplt.semilogx(wz*fs/(2*np.pi), 20*np.log10(np.abs(hz).clip(1e-15)),\n             label=r'$|H_z(e^{j \\omega})|$')\nplt.semilogx(wz*fs/(2*np.pi), 20*np.log10(np.abs(hs).clip(1e-15)),\n             label=r'$|H(j \\omega)|$')\nplt.legend()\nplt.xlabel('Frequency [Hz]')\nplt.ylabel('Magnitude [dB]')\nplt.grid(True)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/signal/_filter_design.py",
  "item_line": 2613,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.signal._filter_design:lp2lp_zpk",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "lp2lp_zpk"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.signal._filter_design:lp2hp_zpk",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "lp2hp_zpk"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.signal._filter_design:lp2bp_zpk",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "lp2bp_zpk"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.signal._filter_design:lp2bs_zpk",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "lp2bs_zpk"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "bilinear",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "bilinear"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(z, p, k, fs)"
  },
  "type": "DocBlob"
}