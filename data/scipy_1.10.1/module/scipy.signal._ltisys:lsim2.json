{
  "aliases": [
    "scipy.signal.lsim2"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This function uses "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "api",
                "module": "scipy.integrate._odepack_py",
                "path": "scipy.integrate._odepack_py:odeint",
                "type": "RefInfo",
                "version": "*"
              },
              "type": "Link",
              "value": "scipy.integrate.odeint"
            },
            {
              "type": "text",
              "value": " to solve the system's differential equations.  Additional keyword arguments given to "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "scipy",
                "path": "scipy.signal._ltisys:lsim2",
                "type": "RefInfo",
                "version": "1.10.1"
              },
              "type": "Link",
              "value": "lsim2"
            },
            {
              "type": "text",
              "value": " are passed on to "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "odeint"
            },
            {
              "type": "text",
              "value": ".  See the documentation for "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "api",
                "module": "scipy.integrate._odepack_py",
                "path": "scipy.integrate._odepack_py:odeint",
                "type": "RefInfo",
                "version": "*"
              },
              "type": "Link",
              "value": "scipy.integrate.odeint"
            },
            {
              "type": "text",
              "value": " for the full list of arguments."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "If (num, den) is passed in for "
            },
            {
              "type": "inlineCode",
              "value": "system"
            },
            {
              "type": "text",
              "value": ", coefficients for both the numerator and denominator should be specified in descending exponent order (e.g. "
            },
            {
              "type": "inlineCode",
              "value": "s^2 + 3s + 5"
            },
            {
              "type": "text",
              "value": " would be represented as "
            },
            {
              "type": "inlineCode",
              "value": "[1, 3, 5]"
            },
            {
              "type": "text",
              "value": ")."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The following gives the number of elements in the tuple and the interpretation:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "1: (instance of "
                            },
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": "lti"
                            },
                            {
                              "type": "text",
                              "value": ")"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "2: (num, den)"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "3: (zeros, poles, gain)"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "4: (A, B, C, D)"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                }
              ],
              "param": "system",
              "type": "Param",
              "type_": "an instance of the `lti` class or a tuple describing the system."
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An input array describing the input at each time T.  Linear interpolation is used between given times.  If there are multiple inputs, then each column of the rank-2 array represents an input.  If U is not given, the input is assumed to be zero."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "U",
              "type": "Param",
              "type_": "array_like (1D or 2D), optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The time steps at which the input is defined and at which the output is desired.  The default is 101 evenly spaced points on the interval [0,10.0]."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "T",
              "type": "Param",
              "type_": "array_like (1D or 2D), optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The initial condition of the state vector.  If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "X0",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "X0"
                    },
                    {
                      "type": "text",
                      "value": " is not given, the initial conditions are assumed to be 0."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "X0",
              "type": "Param",
              "type_": "array_like (1D), optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Additional keyword arguments are passed on to the function "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "odeint"
                    },
                    {
                      "type": "text",
                      "value": ".  See the notes below for more details."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "kwargs",
              "type": "Param",
              "type_": "dict"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The time values for the output."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "T",
              "type": "Param",
              "type_": "1D ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The response of the system."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "yout",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The time-evolution of the state-vector."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "xout",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Simulate output of a continuous-time linear system, by using the ODE solver "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "api",
                "module": "scipy.integrate._odepack_py",
                "path": "scipy.integrate._odepack_py:odeint",
                "type": "RefInfo",
                "version": "*"
              },
              "type": "Link",
              "value": "scipy.integrate.odeint"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "We'll use `lsim2` to simulate an analog Bessel filter applied to\na signal."
      },
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy.signal import bessel, lsim2\nimport matplotlib.pyplot as plt"
      },
      {
        "type": "text",
        "value": "Create a low-pass Bessel filter with a cutoff of 12 Hz."
      },
      {
        "type": "code",
        "value": "b, a = bessel(N=5, Wn=2*np.pi*12, btype='lowpass', analog=True)"
      },
      {
        "type": "text",
        "value": "Generate data to which the filter is applied."
      },
      {
        "type": "code",
        "value": "t = np.linspace(0, 1.25, 500, endpoint=False)"
      },
      {
        "type": "text",
        "value": "The input signal is the sum of three sinusoidal curves, with\nfrequencies 4 Hz, 40 Hz, and 80 Hz.  The filter should mostly\neliminate the 40 Hz and 80 Hz components, leaving just the 4 Hz signal."
      },
      {
        "type": "code",
        "value": "u = (np.cos(2*np.pi*4*t) + 0.6*np.sin(2*np.pi*40*t) +\n     0.5*np.cos(2*np.pi*80*t))"
      },
      {
        "type": "text",
        "value": "Simulate the filter with `lsim2`."
      },
      {
        "type": "code",
        "value": "tout, yout, xout = lsim2((b, a), U=u, T=t)"
      },
      {
        "type": "text",
        "value": "Plot the result."
      },
      {
        "type": "code",
        "value": "plt.plot(t, u, 'r', alpha=0.5, linewidth=1, label='input')\nplt.plot(tout, yout, 'k', linewidth=1.5, label='output')\nplt.legend(loc='best', shadow=True, framealpha=1)\nplt.grid(alpha=0.3)\nplt.xlabel('t')\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.signal._ltisys:lsim2-0-17152c79.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      },
      {
        "type": "text",
        "value": "In a second example, we simulate a double integrator ``y'' = u``, with\na constant input ``u = 1``.  We'll use the state space representation\nof the integrator."
      },
      {
        "type": "code",
        "value": "from scipy.signal import lti\nA = np.array([[0, 1], [0, 0]])\nB = np.array([[0], [1]])\nC = np.array([[1, 0]])\nD = 0\nsystem = lti(A, B, C, D)"
      },
      {
        "type": "text",
        "value": "`t` and `u` define the time and input signal for the system to\nbe simulated."
      },
      {
        "type": "code",
        "value": "t = np.linspace(0, 5, num=50)\nu = np.ones_like(t)"
      },
      {
        "type": "text",
        "value": "Compute the simulation, and then plot `y`.  As expected, the plot shows\nthe curve ``y = 0.5*t**2``."
      },
      {
        "type": "code",
        "value": "tout, y, x = lsim2(system, u, t)\nplt.plot(t, y)\nplt.grid(alpha=0.3)\nplt.xlabel('t')\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.signal._ltisys:lsim2-1-f4e82a31.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/signal/_ltisys.py",
  "item_line": 1767,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "lsim",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "lsim"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(system, U=None, T=None, X0=None, **kwargs)"
  },
  "type": "DocBlob"
}