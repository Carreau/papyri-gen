{
  "aliases": [
    "scipy.signal.max_len_seq"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The algorithm for MLS generation is generically described in:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "https://en.wikipedia.org/wiki/Maximum_length_sequence"
                }
              ],
              "type": "paragraph"
            }
          ],
          "type": "blockquote"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The default values for taps are specifically taken from the first option listed for each value of "
            },
            {
              "type": "inlineCode",
              "value": "nbits"
            },
            {
              "type": "text",
              "value": " in:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "https://web.archive.org/web/20181001062252/http://www.newwaveinstruments.com/resources/articles/m_sequence_linear_feedback_shift_register_lfsr.htm"
                }
              ],
              "type": "paragraph"
            }
          ],
          "type": "blockquote"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionadded 0.15.0"
                }
              ],
              "type": "admonitionTitle"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of bits to use. Length of the resulting sequence will be "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(2**nbits) - 1"
                    },
                    {
                      "type": "text",
                      "value": ". Note that generating long sequences (e.g., greater than "
                    },
                    {
                      "type": "inlineCode",
                      "value": "nbits == 16"
                    },
                    {
                      "type": "text",
                      "value": ") can take a long time."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "nbits",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If array, must be of length "
                    },
                    {
                      "type": "inlineCode",
                      "value": "nbits"
                    },
                    {
                      "type": "text",
                      "value": ", and will be cast to binary (bool) representation. If None, a seed of ones will be used, producing a repeatable representation. If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "state"
                    },
                    {
                      "type": "text",
                      "value": " is all zeros, an error is raised as this is invalid. Default: None."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "state",
              "type": "Param",
              "type_": "array_like, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of samples to compute. If None, the entire length "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(2**nbits) - 1"
                    },
                    {
                      "type": "text",
                      "value": " is computed."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "length",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Polynomial taps to use (e.g., "
                    },
                    {
                      "type": "inlineCode",
                      "value": "[7, 6, 1]"
                    },
                    {
                      "type": "text",
                      "value": " for an 8-bit sequence). If None, taps will be automatically selected (for up to "
                    },
                    {
                      "type": "inlineCode",
                      "value": "nbits == 32"
                    },
                    {
                      "type": "text",
                      "value": ")."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "taps",
              "type": "Param",
              "type_": "array_like, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Resulting MLS sequence of 0's and 1's."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "seq",
              "type": "Param",
              "type_": "array"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The final state of the shift register."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "state",
              "type": "Param",
              "type_": "array"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Maximum length sequence (MLS) generator."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "MLS uses binary convention:"
      },
      {
        "type": "code",
        "value": "from scipy.signal import max_len_seq\nmax_len_seq(4)[0]"
      },
      {
        "type": "text",
        "value": "MLS has a white spectrum (except for DC):"
      },
      {
        "type": "code",
        "value": "import numpy as np\nimport matplotlib.pyplot as plt\nfrom numpy.fft import fft, ifft, fftshift, fftfreq\nseq = max_len_seq(6)[0]*2-1  # +1 and -1\nspec = fft(seq)\nN = len(seq)\nplt.plot(fftshift(fftfreq(N)), fftshift(np.abs(spec)), '.-')\nplt.margins(0.1, 0.1)\nplt.grid(True)\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.signal._max_len_seq:max_len_seq-0-09cc8f61.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      },
      {
        "type": "text",
        "value": "Circular autocorrelation of MLS is an impulse:"
      },
      {
        "type": "code",
        "value": "acorrcirc = ifft(spec * np.conj(spec)).real\nplt.figure()\nplt.plot(np.arange(-N/2+1, N/2+1), fftshift(acorrcirc), '.-')\nplt.margins(0.1, 0.1)\nplt.grid(True)\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.signal._max_len_seq:max_len_seq-1-6c176c2f.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      },
      {
        "type": "text",
        "value": "Linear autocorrelation of MLS is approximately an impulse:"
      },
      {
        "type": "code",
        "value": "acorr = np.correlate(seq, seq, 'full')\nplt.figure()\nplt.plot(np.arange(-N+1, N), acorr, '.-')\nplt.margins(0.1, 0.1)\nplt.grid(True)\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.signal._max_len_seq:max_len_seq-2-2fe2fb86.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/signal/_max_len_seq.py",
  "item_line": 22,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(nbits, state=None, length=None, taps=None)"
  },
  "type": "DocBlob"
}