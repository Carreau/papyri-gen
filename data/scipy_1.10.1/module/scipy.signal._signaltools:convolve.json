{
  "aliases": [
    "scipy.signal.convolve"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Convolve "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "in1",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "in1"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "in2",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "in2"
            },
            {
              "type": "text",
              "value": ", with the output size determined by the "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "mode",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "mode"
            },
            {
              "type": "text",
              "value": " argument."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "By default, "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "convolve",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "convolve"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "correlate"
            },
            {
              "type": "text",
              "value": " use "
            },
            {
              "type": "inlineCode",
              "value": "method='auto'"
            },
            {
              "type": "text",
              "value": ", which calls "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "scipy",
                "path": "scipy.signal._signaltools:choose_conv_method",
                "type": "RefInfo",
                "version": "1.10.1"
              },
              "type": "Link",
              "value": "choose_conv_method"
            },
            {
              "type": "text",
              "value": " to choose the fastest method using pre-computed values ("
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "scipy",
                "path": "scipy.signal._signaltools:choose_conv_method",
                "type": "RefInfo",
                "version": "1.10.1"
              },
              "type": "Link",
              "value": "choose_conv_method"
            },
            {
              "type": "text",
              "value": " can also measure real-world timing with a keyword argument). Because "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "scipy",
                "path": "scipy.signal._signaltools:fftconvolve",
                "type": "RefInfo",
                "version": "1.10.1"
              },
              "type": "Link",
              "value": "fftconvolve"
            },
            {
              "type": "text",
              "value": " relies on floating point numbers, there are certain constraints that may force "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "method=direct"
            },
            {
              "type": "text",
              "value": " (more detail in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "scipy",
                "path": "scipy.signal._signaltools:choose_conv_method",
                "type": "RefInfo",
                "version": "1.10.1"
              },
              "type": "Link",
              "value": "choose_conv_method"
            },
            {
              "type": "text",
              "value": " docstring)."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "First input."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "in1",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Second input. Should have the same number of dimensions as "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "in1",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "in1"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "in2",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A string indicating the size of the output:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "The output is the full discrete linear convolution    of the inputs. (Default)"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "inlineCode",
                            "value": "full"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "The output consists only of those elements that do not    rely on the zero-padding. In 'valid' mode, either "
                            },
                            {
                              "anchor": null,
                              "exists": true,
                              "kind": "local",
                              "reference": {
                                "kind": "local",
                                "module": null,
                                "path": "in1",
                                "type": "RefInfo",
                                "version": null
                              },
                              "type": "Link",
                              "value": "in1"
                            },
                            {
                              "type": "text",
                              "value": " or "
                            },
                            {
                              "anchor": null,
                              "exists": true,
                              "kind": "local",
                              "reference": {
                                "kind": "local",
                                "module": null,
                                "path": "in2",
                                "type": "RefInfo",
                                "version": null
                              },
                              "type": "Link",
                              "value": "in2"
                            },
                            {
                              "type": "text",
                              "value": "    must be at least as large as the other in every dimension."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "inlineCode",
                            "value": "valid"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "The output is the same size as "
                            },
                            {
                              "anchor": null,
                              "exists": true,
                              "kind": "local",
                              "reference": {
                                "kind": "local",
                                "module": null,
                                "path": "in1",
                                "type": "RefInfo",
                                "version": null
                              },
                              "type": "Link",
                              "value": "in1"
                            },
                            {
                              "type": "text",
                              "value": ", centered    with respect to the 'full' output."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "inlineCode",
                            "value": "same"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    }
                  ],
                  "type": "DefList"
                }
              ],
              "param": "mode",
              "type": "Param",
              "type_": "str {'full', 'valid', 'same'}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A string indicating which method to use to calculate the convolution."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "The convolution is determined directly from sums, the definition of    convolution."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "inlineCode",
                            "value": "direct"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "The Fourier Transform is used to perform the convolution by calling    "
                            },
                            {
                              "anchor": null,
                              "exists": true,
                              "kind": "module",
                              "reference": {
                                "kind": "module",
                                "module": "scipy",
                                "path": "scipy.signal._signaltools:fftconvolve",
                                "type": "RefInfo",
                                "version": "1.10.1"
                              },
                              "type": "Link",
                              "value": "fftconvolve"
                            },
                            {
                              "type": "text",
                              "value": "."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "inlineCode",
                            "value": "fft"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "Automatically chooses direct or Fourier method based on an estimate    of which is faster (default).  See Notes for more detail."
                            }
                          ],
                          "type": "paragraph"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "versionadded 0.19.0"
                                }
                              ],
                              "type": "admonitionTitle"
                            }
                          ],
                          "kind": "note",
                          "type": "admonition"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "inlineCode",
                            "value": "auto"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    }
                  ],
                  "type": "DefList"
                }
              ],
              "param": "method",
              "type": "Param",
              "type_": "str {'auto', 'direct', 'fft'}, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An N-dimensional array containing a subset of the discrete linear convolution of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "in1",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "in1"
                    },
                    {
                      "type": "text",
                      "value": " with "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "in2",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "in2"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "convolve",
              "type": "Param",
              "type_": "array"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Convolve two N-dimensional arrays."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Use of the FFT convolution on input containing NAN or INF will lead to the entire output being NAN or INF. Use method='direct' when your input contains NAN or INF values."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "RuntimeWarning"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Smooth a square pulse using a Hann window:"
      },
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy import signal\nsig = np.repeat([0., 1., 0.], 100)\nwin = signal.windows.hann(50)\nfiltered = signal.convolve(sig, win, mode='same') / sum(win)"
      },
      {
        "type": "code",
        "value": "import matplotlib.pyplot as plt\nfig, (ax_orig, ax_win, ax_filt) = plt.subplots(3, 1, sharex=True)\nax_orig.plot(sig)\nax_orig.set_title('Original pulse')\nax_orig.margins(0, 0.1)\nax_win.plot(win)\nax_win.set_title('Filter impulse response')\nax_win.margins(0, 0.1)\nax_filt.plot(filtered)\nax_filt.set_title('Filtered signal')\nax_filt.margins(0, 0.1)\nfig.tight_layout()\nfig.show()"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/signal/_signaltools.py",
  "item_line": 1298,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Warns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "performs polynomial multiplication (same operation, but also accepts poly1d objects)"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "numpy.polymul",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "numpy.polymul"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "chooses the fastest appropriate convolution method"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.signal._signaltools:choose_conv_method",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "choose_conv_method"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Always uses the FFT method."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.signal._signaltools:fftconvolve",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "fftconvolve"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Uses the overlap-add method to do convolution, which is generally faster when the input arrays are large and significantly different in size."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.signal._signaltools:oaconvolve",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "oaconvolve"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(in1, in2, mode='full', method='auto')"
  },
  "type": "DocBlob"
}