{
  "aliases": [
    "scipy.signal.medfilt2d"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Apply a median filter to the "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "input",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "input"
            },
            {
              "type": "text",
              "value": " array using a local window-size given by "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "kernel_size",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "kernel_size"
            },
            {
              "type": "text",
              "value": " (must be odd). The array is zero-padded automatically."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This is faster than "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "medfilt"
            },
            {
              "type": "text",
              "value": " when the input dtype is "
            },
            {
              "type": "inlineCode",
              "value": "uint8"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "float32"
            },
            {
              "type": "text",
              "value": ", or "
            },
            {
              "type": "inlineCode",
              "value": "float64"
            },
            {
              "type": "text",
              "value": "; for other types, this falls back to "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "medfilt"
            },
            {
              "type": "text",
              "value": ". In some situations, "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "api",
                "module": "scipy.ndimage._filters",
                "path": "scipy.ndimage._filters:median_filter",
                "type": "RefInfo",
                "version": "*"
              },
              "type": "Link",
              "value": "scipy.ndimage.median_filter"
            },
            {
              "type": "text",
              "value": " may be faster than this function."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A 2-dimensional input array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "input",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A scalar or a list of length 2, giving the size of the median filter window in each dimension.  Elements of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "kernel_size",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "kernel_size"
                    },
                    {
                      "type": "text",
                      "value": " should be odd.  If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "kernel_size",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "kernel_size"
                    },
                    {
                      "type": "text",
                      "value": " is a scalar, then this scalar is used as the size in each dimension. Default is a kernel of size (3, 3)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "kernel_size",
              "type": "Param",
              "type_": "array_like, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An array the same size as input containing the median filtered result."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Median filter a 2-dimensional array."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy import signal\nx = np.arange(25).reshape(5, 5)\nx"
      },
      {
        "type": "text",
        "value": "# Replaces i,j with the median out of 5*5 window"
      },
      {
        "type": "code",
        "value": "signal.medfilt2d(x, kernel_size=5)"
      },
      {
        "type": "text",
        "value": "# Replaces i,j with the median out of default 3*3 window"
      },
      {
        "type": "code",
        "value": "signal.medfilt2d(x)"
      },
      {
        "type": "text",
        "value": "# Replaces i,j with the median out of default 5*3 window"
      },
      {
        "type": "code",
        "value": "signal.medfilt2d(x, kernel_size=[5,3])"
      },
      {
        "type": "text",
        "value": "# Replaces i,j with the median out of default 3*5 window"
      },
      {
        "type": "code",
        "value": "signal.medfilt2d(x, kernel_size=[3,5])"
      },
      {
        "type": "text",
        "value": "# As seen in the examples,\n# kernel numbers must be odd and not exceed original array dim"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/signal/_signaltools.py",
  "item_line": 1828,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.ndimage._filters:median_filter",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "scipy.ndimage.median_filter"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(input, kernel_size=3)"
  },
  "type": "DocBlob"
}