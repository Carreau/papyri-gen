{
  "aliases": [
    "scipy.signal.resample_poly"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The signal "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "x",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "x"
            },
            {
              "type": "text",
              "value": " is upsampled by the factor "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "up",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "up"
            },
            {
              "type": "text",
              "value": ", a zero-phase low-pass FIR filter is applied, and then it is downsampled by the factor "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "down",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "down"
            },
            {
              "type": "text",
              "value": ". The resulting sample rate is "
            },
            {
              "type": "inlineCode",
              "value": "up / down"
            },
            {
              "type": "text",
              "value": " times the original sample rate. By default, values beyond the boundary of the signal are assumed to be zero during the filtering step."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This polyphase method will likely be faster than the Fourier method in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "api",
                "module": "scipy.signal._signaltools",
                "path": "scipy.signal._signaltools:resample",
                "type": "RefInfo",
                "version": "*"
              },
              "type": "Link",
              "value": "scipy.signal.resample"
            },
            {
              "type": "text",
              "value": " when the number of samples is large and prime, or when the number of samples is large and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "up",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "up"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "down",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "down"
            },
            {
              "type": "text",
              "value": " share a large greatest common denominator. The length of the FIR filter used will depend on "
            },
            {
              "type": "inlineCode",
              "value": "max(up, down) // gcd(up, down)"
            },
            {
              "type": "text",
              "value": ", and the number of operations during polyphase filtering will depend on the filter length and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "down",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "down"
            },
            {
              "type": "text",
              "value": " (see "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "api",
                "module": "scipy.signal._upfirdn",
                "path": "scipy.signal._upfirdn:upfirdn",
                "type": "RefInfo",
                "version": "*"
              },
              "type": "Link",
              "value": "scipy.signal.upfirdn"
            },
            {
              "type": "text",
              "value": " for details)."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The argument "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "window",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "window"
            },
            {
              "type": "text",
              "value": " specifies the FIR low-pass filter design."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "If "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "window",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "window"
            },
            {
              "type": "text",
              "value": " is an array_like it is assumed to be the FIR filter coefficients. Note that the FIR filter is applied after the upsampling step, so it should be designed to operate on a signal at a sampling frequency higher than the original by a factor of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "up//gcd(up, down)"
            },
            {
              "type": "text",
              "value": ". This function's output will be centered with respect to this array, so it is best to pass a symmetric filter with an odd number of samples if, as is usually the case, a zero-phase filter is desired."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For any other type of "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "window",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "window"
            },
            {
              "type": "text",
              "value": ", the functions "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "api",
                "module": "scipy.signal.windows._windows",
                "path": "scipy.signal.windows._windows:get_window",
                "type": "RefInfo",
                "version": "*"
              },
              "type": "Link",
              "value": "scipy.signal.get_window"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "api",
                "module": "scipy.signal._fir_filter_design",
                "path": "scipy.signal._fir_filter_design:firwin",
                "type": "RefInfo",
                "version": "*"
              },
              "type": "Link",
              "value": "scipy.signal.firwin"
            },
            {
              "type": "text",
              "value": " are called to generate the appropriate filter coefficients."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The first sample of the returned vector is the same as the first sample of the input vector. The spacing between samples is changed from "
            },
            {
              "type": "inlineCode",
              "value": "dx"
            },
            {
              "type": "text",
              "value": " to "
            },
            {
              "type": "inlineCode",
              "value": "dx * down / float(up)"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The data to be resampled."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The upsampling factor."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "up",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The downsampling factor."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "down",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The axis of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": " that is resampled. Default is 0."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axis",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Desired window to use to design the low-pass filter, or the FIR filter coefficients to employ. See below for details."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "window",
              "type": "Param",
              "type_": "string, tuple, or array_like, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "constant"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "line"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "mean"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "median"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "maximum"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "minimum"
                    },
                    {
                      "type": "text",
                      "value": " or any of the other signal extension modes supported by "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "api",
                        "module": "scipy.signal._upfirdn",
                        "path": "scipy.signal._upfirdn:upfirdn",
                        "type": "RefInfo",
                        "version": "*"
                      },
                      "type": "Link",
                      "value": "scipy.signal.upfirdn"
                    },
                    {
                      "type": "text",
                      "value": ". Changes assumptions on values beyond the boundary. If "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "constant"
                    },
                    {
                      "type": "text",
                      "value": ", assumed to be "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "cval",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "cval"
                    },
                    {
                      "type": "text",
                      "value": " (default zero). If "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "line"
                    },
                    {
                      "type": "text",
                      "value": " assumed to continue a linear trend defined by the first and last points. "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "mean"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "median"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "maximum"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "minimum"
                    },
                    {
                      "type": "text",
                      "value": " work as in "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "np.pad"
                    },
                    {
                      "type": "text",
                      "value": " and assume that the values beyond the boundary are the mean, median, maximum or minimum respectively of the array along the axis."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.4.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "padtype",
              "type": "Param",
              "type_": "string, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Value to use if "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "padtype='constant'"
                    },
                    {
                      "type": "text",
                      "value": ". Default is zero."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.4.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "cval",
              "type": "Param",
              "type_": "float, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The resampled array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "resampled_x",
              "type": "Param",
              "type_": "array"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Resample "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "x",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "x"
            },
            {
              "type": "text",
              "value": " along the given axis using polyphase filtering."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "By default, the end of the resampled data rises to meet the first\nsample of the next cycle for the FFT method, and gets closer to zero\nfor the polyphase method:"
      },
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy import signal\nimport matplotlib.pyplot as plt"
      },
      {
        "type": "code",
        "value": "x = np.linspace(0, 10, 20, endpoint=False)\ny = np.cos(-x**2/6.0)\nf_fft = signal.resample(y, 100)\nf_poly = signal.resample_poly(y, 100, 20)\nxnew = np.linspace(0, 10, 100, endpoint=False)"
      },
      {
        "type": "code",
        "value": "plt.plot(xnew, f_fft, 'b.-', xnew, f_poly, 'r.-')\nplt.plot(x, y, 'ko-')\nplt.plot(10, y[0], 'bo', 10, 0., 'ro')  # boundaries\nplt.legend(['resample', 'resamp_poly', 'data'], loc='best')\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.signal._signaltools:resample_poly-0-59fb7eb4.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      },
      {
        "type": "text",
        "value": "This default behaviour can be changed by using the padtype option:"
      },
      {
        "type": "code",
        "value": "N = 5\nx = np.linspace(0, 1, N, endpoint=False)\ny = 2 + x**2 - 1.7*np.sin(x) + .2*np.cos(11*x)\ny2 = 1 + x**3 + 0.1*np.sin(x) + .1*np.cos(11*x)\nY = np.stack([y, y2], axis=-1)\nup = 4\nxr = np.linspace(0, 1, N*up, endpoint=False)"
      },
      {
        "type": "code",
        "value": "y2 = signal.resample_poly(Y, up, 1, padtype='constant')\ny3 = signal.resample_poly(Y, up, 1, padtype='mean')\ny4 = signal.resample_poly(Y, up, 1, padtype='line')"
      },
      {
        "type": "code",
        "value": "for i in [0,1]:\n    plt.figure()\n    plt.plot(xr, y4[:,i], 'g.', label='line')\n    plt.plot(xr, y3[:,i], 'y.', label='mean')\n    plt.plot(xr, y2[:,i], 'r.', label='constant')\n    plt.plot(x, Y[:,i], 'k-')\n    plt.legend()\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.signal._signaltools:resample_poly-1-447c7e13.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.signal._signaltools:resample_poly-2-b85c7270.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/signal/_signaltools.py",
  "item_line": 3196,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Downsample the signal after applying an FIR or IIR filter."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.signal._signaltools:decimate",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "decimate"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Resample up or down using the FFT method."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.stats._kde:gaussian_kde.resample",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "resample"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(x, up, down, axis=0, window=('kaiser', 5.0), padtype='constant', cval=None)"
  },
  "type": "DocBlob"
}