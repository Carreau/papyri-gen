{
  "aliases": [
    "scipy.signal.lombscargle"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The Lomb-Scargle periodogram was developed by Lomb  and further extended by Scargle  to find, and test the significance of weak periodic signals with uneven temporal sampling."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "When "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "normalize"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " is False (default) the computed periodogram is unnormalized, it takes the value "
            },
            {
              "type": "inlineCode",
              "value": "(A**2) * N/4"
            },
            {
              "type": "text",
              "value": " for a harmonic signal with amplitude A for sufficiently large N."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "When "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "normalize"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " is True the computed periodogram is normalized by the residuals of the data around a constant reference model (at zero)."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Input arrays should be 1-D and will be cast to float64."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This subroutine calculates the periodogram using a slightly modified algorithm due to Townsend  which allows the periodogram to be calculated using only a single pass through the input arrays for each frequency."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The algorithm running time scales roughly as O(x * freqs) or O(N^2) for a large number of samples and frequencies."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Sample times."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Measurement values."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "y",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Angular frequencies for output periodogram."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "freqs",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Pre-center measurement values by subtracting the mean."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "precenter",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Compute normalized periodogram."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "normalize",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If the input arrays "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "y",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "y"
                    },
                    {
                      "type": "text",
                      "value": " do not have the same shape."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "ValueError"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Lomb-Scargle periodogram."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "pgram",
              "type": "Param",
              "type_": "array_like"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Computes the Lomb-Scargle periodogram."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nimport matplotlib.pyplot as plt\nrng = np.random.default_rng()"
      },
      {
        "type": "text",
        "value": "First define some input parameters for the signal:"
      },
      {
        "type": "code",
        "value": "A = 2.\nw0 = 1.  # rad/sec\nnin = 150\nnout = 100000"
      },
      {
        "type": "text",
        "value": "Randomly generate sample times:"
      },
      {
        "type": "code",
        "value": "x = rng.uniform(0, 10*np.pi, nin)"
      },
      {
        "type": "text",
        "value": "Plot a sine wave for the selected times:"
      },
      {
        "type": "code",
        "value": "y = A * np.cos(w0*x)"
      },
      {
        "type": "text",
        "value": "Define the array of frequencies for which to compute the periodogram:"
      },
      {
        "type": "code",
        "value": "w = np.linspace(0.01, 10, nout)"
      },
      {
        "type": "text",
        "value": "Calculate Lomb-Scargle periodogram:"
      },
      {
        "type": "code",
        "value": "import scipy.signal as signal\npgram = signal.lombscargle(x, y, w, normalize=True)"
      },
      {
        "type": "text",
        "value": "Now make a plot of the input data:"
      },
      {
        "type": "code",
        "value": "fig, (ax_t, ax_w) = plt.subplots(2, 1, constrained_layout=True)\nax_t.plot(x, y, 'b+')\nax_t.set_xlabel('Time [s]')"
      },
      {
        "type": "text",
        "value": "Then plot the normalized periodogram:"
      },
      {
        "type": "code",
        "value": "ax_w.plot(w, pgram)\nax_w.set_xlabel('Angular frequency [rad/s]')\nax_w.set_ylabel('Normalized amplitude')\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.signal._spectral_py:lombscargle-0-0bc720ef.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/signal/_spectral_py.py",
  "item_line": 17,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Signature",
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Inverse Short Time Fourier Transform"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.signal._spectral_py:istft",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "istft"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Check whether the Constant OverLap Add (COLA) constraint is met"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.signal._spectral_py:check_COLA",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "check_COLA"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Power spectral density by Welch's method"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.signal._spectral_py:welch",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "welch"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Spectrogram by Welch's method"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.signal._spectral_py:spectrogram",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "spectrogram"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Cross spectral density by Welch's method"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.signal._spectral_py:csd",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "csd"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "lombscargle(x, y, freqs)"
  },
  "type": "DocBlob"
}