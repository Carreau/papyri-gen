{
  "aliases": [
    "scipy.signal.chirp"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "In the following, 'Hz' should be interpreted as 'cycles per unit'; there is no requirement here that the unit is one second.  The important distinction is that the units of rotation are cycles, not radians. Likewise, "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "t",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "t"
            },
            {
              "type": "text",
              "value": " could be a measurement of space instead of time."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "There are four options for the "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "method",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "method"
            },
            {
              "type": "text",
              "value": ".  The following formulas give the instantaneous frequency (in Hz) of the signal generated by "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "chirp()"
            },
            {
              "type": "text",
              "value": ".  For convenience, the shorter names shown below may also be used."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "linear, lin, li:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "inlineCode",
                  "value": "f(t) = f0 + (f1 - f0) * t / t1"
                }
              ],
              "type": "paragraph"
            }
          ],
          "type": "blockquote"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "quadratic, quad, q:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "The graph of the frequency f(t) is a parabola through (0, f0) and     (t1, f1).  By default, the vertex of the parabola is at (0, f0).     If "
                },
                {
                  "anchor": null,
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "vertex_zero",
                    "type": "RefInfo",
                    "version": null
                  },
                  "type": "Link",
                  "value": "vertex_zero"
                },
                {
                  "type": "text",
                  "value": " is False, then the vertex is at (t1, f1).  The     formula is:"
                }
              ],
              "type": "paragraph"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "if vertex_zero is True:"
                }
              ],
              "type": "paragraph"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "f(t) = f0 + (f1 - f0) * t**2 / t1**2"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "type": "blockquote"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "else:"
                }
              ],
              "type": "paragraph"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "f(t) = f1 - (f1 - f0) * (t1 - t)**2 / t1**2"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "type": "blockquote"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "To use a more general quadratic function, or an arbitrary     polynomial, use the function "
                },
                {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "api",
                    "module": "scipy.signal._waveforms",
                    "path": "scipy.signal._waveforms:sweep_poly",
                    "type": "RefInfo",
                    "version": "*"
                  },
                  "type": "Link",
                  "value": "scipy.signal.sweep_poly"
                },
                {
                  "type": "text",
                  "value": "."
                }
              ],
              "type": "paragraph"
            }
          ],
          "type": "blockquote"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "logarithmic, log, lo:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "inlineCode",
                  "value": "f(t) = f0 * (f1/f0)**(t/t1)"
                }
              ],
              "type": "paragraph"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "f0 and f1 must be nonzero and have the same sign."
                }
              ],
              "type": "paragraph"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "This signal is also known as a geometric or exponential chirp."
                }
              ],
              "type": "paragraph"
            }
          ],
          "type": "blockquote"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "hyperbolic, hyp:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "inlineCode",
                  "value": "f(t) = f0*f1*t1 / ((f0 - f1)*t + f1*t1)"
                }
              ],
              "type": "paragraph"
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "f0 and f1 must be nonzero."
                }
              ],
              "type": "paragraph"
            }
          ],
          "type": "blockquote"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Times at which to evaluate the waveform."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "t",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Frequency (e.g. Hz) at time t=0."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "f0",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Time at which "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "f1",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "f1"
                    },
                    {
                      "type": "text",
                      "value": " is specified."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "t1",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Frequency (e.g. Hz) of the waveform at time "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "t1",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "t1"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "f1",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Kind of frequency sweep.  If not given, "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "linear"
                    },
                    {
                      "type": "text",
                      "value": " is assumed.  See Notes below for more details."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "method",
              "type": "Param",
              "type_": "{'linear', 'quadratic', 'logarithmic', 'hyperbolic'}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Phase offset, in degrees. Default is 0."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "phi",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "This parameter is only used when "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "method",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "method"
                    },
                    {
                      "type": "text",
                      "value": " is 'quadratic'. It determines whether the vertex of the parabola that is the graph of the frequency is at t=0 or t=t1."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "vertex_zero",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A numpy array containing the signal evaluated at "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "t",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "t"
                    },
                    {
                      "type": "text",
                      "value": " with the requested time-varying frequency.  More precisely, the function returns "
                    },
                    {
                      "type": "inlineCode",
                      "value": "cos(phase + (pi/180)*phi)"
                    },
                    {
                      "type": "text",
                      "value": " where "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "phase"
                    },
                    {
                      "type": "text",
                      "value": " is the integral (from 0 to "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "t",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "t"
                    },
                    {
                      "type": "text",
                      "value": ") of "
                    },
                    {
                      "type": "inlineCode",
                      "value": "2*pi*f(t)"
                    },
                    {
                      "type": "text",
                      "value": ". "
                    },
                    {
                      "type": "inlineCode",
                      "value": "f(t)"
                    },
                    {
                      "type": "text",
                      "value": " is defined below."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "y",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Frequency-swept cosine generator."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "The following will be used in the examples:"
      },
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy.signal import chirp, spectrogram\nimport matplotlib.pyplot as plt"
      },
      {
        "type": "text",
        "value": "For the first example, we'll plot the waveform for a linear chirp\nfrom 6 Hz to 1 Hz over 10 seconds:"
      },
      {
        "type": "code",
        "value": "t = np.linspace(0, 10, 1500)\nw = chirp(t, f0=6, f1=1, t1=10, method='linear')\nplt.plot(t, w)\nplt.title(\"Linear Chirp, f(0)=6, f(10)=1\")\nplt.xlabel('t (sec)')\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.signal._waveforms:chirp-0-30fa3f27.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      },
      {
        "type": "text",
        "value": "For the remaining examples, we'll use higher frequency ranges,\nand demonstrate the result using `scipy.signal.spectrogram`.\nWe'll use a 4 second interval sampled at 7200 Hz."
      },
      {
        "type": "code",
        "value": "fs = 7200\nT = 4\nt = np.arange(0, int(T*fs)) / fs"
      },
      {
        "type": "text",
        "value": "We'll use this function to plot the spectrogram in each example."
      },
      {
        "type": "code",
        "value": "def plot_spectrogram(title, w, fs):\n    ff, tt, Sxx = spectrogram(w, fs=fs, nperseg=256, nfft=576)\n    fig, ax = plt.subplots()\n    ax.pcolormesh(tt, ff[:145], Sxx[:145], cmap='gray_r',\n                  shading='gouraud')\n    ax.set_title(title)\n    ax.set_xlabel('t (sec)')\n    ax.set_ylabel('Frequency (Hz)')\n    ax.grid(True)"
      },
      {
        "type": "text",
        "value": "Quadratic chirp from 1500 Hz to 250 Hz\n(vertex of the parabolic curve of the frequency is at t=0):"
      },
      {
        "type": "code",
        "value": "w = chirp(t, f0=1500, f1=250, t1=T, method='quadratic')\nplot_spectrogram(f'Quadratic Chirp, f(0)=1500, f({T})=250', w, fs)\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.signal._waveforms:chirp-1-05f6e146.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      },
      {
        "type": "text",
        "value": "Quadratic chirp from 1500 Hz to 250 Hz\n(vertex of the parabolic curve of the frequency is at t=T):"
      },
      {
        "type": "code",
        "value": "w = chirp(t, f0=1500, f1=250, t1=T, method='quadratic',\n          vertex_zero=False)\nplot_spectrogram(f'Quadratic Chirp, f(0)=1500, f({T})=250\\n' +\n                 '(vertex_zero=False)', w, fs)\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.signal._waveforms:chirp-2-72e9f553.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      },
      {
        "type": "text",
        "value": "Logarithmic chirp from 1500 Hz to 250 Hz:"
      },
      {
        "type": "code",
        "value": "w = chirp(t, f0=1500, f1=250, t1=T, method='logarithmic')\nplot_spectrogram(f'Logarithmic Chirp, f(0)=1500, f({T})=250', w, fs)\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.signal._waveforms:chirp-3-d8b00c57.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      },
      {
        "type": "text",
        "value": "Hyperbolic chirp from 1500 Hz to 250 Hz:"
      },
      {
        "type": "code",
        "value": "w = chirp(t, f0=1500, f1=250, t1=T, method='hyperbolic')\nplot_spectrogram(f'Hyperbolic Chirp, f(0)=1500, f({T})=250', w, fs)\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.signal._waveforms:chirp-4-9b80a431.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/signal/_waveforms.py",
  "item_line": 264,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "sweep_poly",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "sweep_poly"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(t, f0, t1, f1, method='linear', phi=0, vertex_zero=True)"
  },
  "type": "DocBlob"
}