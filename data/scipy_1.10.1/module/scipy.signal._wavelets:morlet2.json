{
  "aliases": [
    "scipy.signal.morlet2"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns the complete version of morlet wavelet, normalised according to "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "s",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "s"
            },
            {
              "type": "text",
              "value": ":      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "exp(1j*w*x/s) * exp(-0.5*(x/s)**2) * pi**(-0.25) * sqrt(1/s)"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionadded 1.4.0"
                }
              ],
              "type": "admonitionTitle"
            }
          ],
          "kind": "note",
          "type": "admonition"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "This function was designed to work with "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "cwt"
            },
            {
              "type": "text",
              "value": ". Because "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "scipy",
                "path": "scipy.signal._wavelets:morlet2",
                "type": "RefInfo",
                "version": "1.10.1"
              },
              "type": "Link",
              "value": "morlet2"
            },
            {
              "type": "text",
              "value": " returns an array of complex numbers, the "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "dtype"
            },
            {
              "type": "text",
              "value": " argument of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "cwt"
            },
            {
              "type": "text",
              "value": " should be set to "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "complex128"
            },
            {
              "type": "text",
              "value": " for best results."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Note the difference in implementation with "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "morlet",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "morlet"
            },
            {
              "type": "text",
              "value": ". The fundamental frequency of this wavelet in Hz is given by      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "f = w*fs / (2*s*np.pi)"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "where "
            },
            {
              "type": "inlineCode",
              "value": "fs"
            },
            {
              "type": "text",
              "value": " is the sampling rate and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "s",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "s"
            },
            {
              "type": "text",
              "value": " is the wavelet width parameter. Similarly we can get the wavelet width parameter at "
            },
            {
              "type": "inlineCode",
              "value": "f"
            },
            {
              "type": "text",
              "value": "      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "s = w*fs / (2*f*np.pi)"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Length of the wavelet."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "M",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Width parameter of the wavelet."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "s",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Omega0. Default is 5"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "w",
              "type": "Param",
              "type_": "float, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "morlet",
              "type": "Param",
              "type_": "(M,) ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Complex Morlet wavelet, designed to work with "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "cwt"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy import signal\nimport matplotlib.pyplot as plt"
      },
      {
        "type": "code",
        "value": "M = 100\ns = 4.0\nw = 2.0\nwavelet = signal.morlet2(M, s, w)\nplt.plot(abs(wavelet))\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.signal._wavelets:morlet2-0-abd36dea.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      },
      {
        "type": "text",
        "value": "This example shows basic use of `morlet2` with `cwt` in time-frequency\nanalysis:"
      },
      {
        "type": "code",
        "value": "t, dt = np.linspace(0, 1, 200, retstep=True)\nfs = 1/dt\nw = 6.\nsig = np.cos(2*np.pi*(50 + 10*t)*t) + np.sin(40*np.pi*t)\nfreq = np.linspace(1, fs/2, 100)\nwidths = w*fs / (2*freq*np.pi)\ncwtm = signal.cwt(sig, signal.morlet2, widths, w=w)\nplt.pcolormesh(t, freq, np.abs(cwtm), cmap='viridis', shading='gouraud')\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.signal._wavelets:morlet2-1-d341b41f.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/signal/_wavelets.py",
  "item_line": 326,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Implementation of Morlet wavelet, incompatible with "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "cwt"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "morlet",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "morlet"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(M, s, w=5)"
  },
  "type": "DocBlob"
}