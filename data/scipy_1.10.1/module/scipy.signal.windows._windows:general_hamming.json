{
  "aliases": [
    "scipy.signal.windows.general_hamming"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The generalized Hamming window is constructed by multiplying a rectangular window by one period of a cosine function ."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The generalized Hamming window is defined as"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "w(n) = \\alpha - \\left(1 - \\alpha\\right) \\cos\\left(\\frac{2\\pi{n}}{M-1}\\right)\\qquad 0 \\leq n \\leq M-1"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Both the common Hamming window and Hann window are special cases of the generalized Hamming window with "
            },
            {
              "type": "inlineMath",
              "value": "\\alpha"
            },
            {
              "type": "text",
              "value": " = 0.54 and "
            },
            {
              "type": "inlineMath",
              "value": "\\alpha"
            },
            {
              "type": "text",
              "value": " = 0.5, respectively ."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of points in the output window. If zero, an empty array is returned. An exception is thrown when it is negative."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "M",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The window coefficient, "
                    },
                    {
                      "type": "inlineMath",
                      "value": "\\alpha"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "alpha",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "When True (default), generates a symmetric window, for use in filter design. When False, generates a periodic window, for use in spectral analysis."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "sym",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The window, with the maximum value normalized to 1 (though the value 1 does not appear if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "M",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "M"
                    },
                    {
                      "type": "text",
                      "value": " is even and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "sym",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "sym"
                    },
                    {
                      "type": "text",
                      "value": " is True)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "w",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return a generalized Hamming window."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "The Sentinel-1A/B Instrument Processing Facility uses generalized Hamming\nwindows in the processing of spaceborne Synthetic Aperture Radar (SAR)\ndata [3]_. The facility uses various values for the :math:`\\alpha`\nparameter based on operating mode of the SAR instrument. Some common\n:math:`\\alpha` values include 0.75, 0.7 and 0.52 [4]_. As an example, we\nplot these different windows."
      },
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy.signal.windows import general_hamming\nfrom scipy.fft import fft, fftshift\nimport matplotlib.pyplot as plt"
      },
      {
        "type": "code",
        "value": "fig1, spatial_plot = plt.subplots()\nspatial_plot.set_title(\"Generalized Hamming Windows\")\nspatial_plot.set_ylabel(\"Amplitude\")\nspatial_plot.set_xlabel(\"Sample\")"
      },
      {
        "type": "code",
        "value": "fig2, freq_plot = plt.subplots()\nfreq_plot.set_title(\"Frequency Responses\")\nfreq_plot.set_ylabel(\"Normalized magnitude [dB]\")\nfreq_plot.set_xlabel(\"Normalized frequency [cycles per sample]\")"
      },
      {
        "type": "code",
        "value": "for alpha in [0.75, 0.7, 0.52]:\n    window = general_hamming(41, alpha)\n    spatial_plot.plot(window, label=\"{:.2f}\".format(alpha))\n    A = fft(window, 2048) / (len(window)/2.0)\n    freq = np.linspace(-0.5, 0.5, len(A))\n    response = 20 * np.log10(np.abs(fftshift(A / abs(A).max())))\n    freq_plot.plot(freq, response, label=\"{:.2f}\".format(alpha))\nfreq_plot.legend(loc=\"upper right\")\nspatial_plot.legend(loc=\"upper right\")"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/signal/windows/_windows.py",
  "item_line": 947,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "hamming",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "hamming"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "hann",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "hann"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(M, alpha, sym=True)"
  },
  "type": "DocBlob"
}