{
  "aliases": [
    "scipy.sparse.coo_array"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Data type of the array"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dtype",
              "type": "Param",
              "type_": "dtype"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Shape of the array"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "shape",
              "type": "Param",
              "type_": "2-tuple"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of dimensions (this is always 2)"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "ndim",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of stored values, including explicit zeros"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "nnz",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "COO format data array of the array"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "data",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "COO format row index array of the array"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "row",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "COO format column index array of the array"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "col",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Also known as the 'ijv' or 'triplet' format."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "dd": [
                {
                  "children": [
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "with a dense array D"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "coo_array(D)"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "with another sparse array S (equivalent to S.tocoo())"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "coo_array(S)"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "to construct an empty array with shape (M, N)         dtype is optional, defaulting to dtype='d'."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "coo_array((M, N), [dtype])"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "dd": [
                                {
                                  "children": [
                                    {
                                      "children": [
                                        {
                                          "children": [
                                            {
                                              "type": "text",
                                              "value": "data[:]   the entries of the array, in any order"
                                            }
                                          ],
                                          "type": "paragraph"
                                        }
                                      ],
                                      "spread": false,
                                      "type": "listItem"
                                    },
                                    {
                                      "children": [
                                        {
                                          "children": [
                                            {
                                              "type": "text",
                                              "value": "i[:]      the row indices of the array entries"
                                            }
                                          ],
                                          "type": "paragraph"
                                        }
                                      ],
                                      "spread": false,
                                      "type": "listItem"
                                    },
                                    {
                                      "children": [
                                        {
                                          "children": [
                                            {
                                              "type": "text",
                                              "value": "j[:]      the column indices of the array entries"
                                            }
                                          ],
                                          "type": "paragraph"
                                        }
                                      ],
                                      "spread": false,
                                      "type": "listItem"
                                    }
                                  ],
                                  "ordered": true,
                                  "spread": false,
                                  "start": 1,
                                  "type": "list"
                                }
                              ],
                              "dt": {
                                "children": [
                                  {
                                    "type": "text",
                                    "value": "to construct from three arrays:"
                                  }
                                ],
                                "type": "paragraph"
                              },
                              "type": "DefListItem"
                            }
                          ],
                          "type": "DefList"
                        },
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "Where "
                            },
                            {
                              "type": "inlineCode",
                              "value": "A[i[k], j[k]] = data[k]"
                            },
                            {
                              "type": "text",
                              "value": ".  When shape is not         specified, it is inferred from the index arrays"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "coo_array((data, (i, j)), [shape=(M, N)])"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    }
                  ],
                  "type": "DefList"
                }
              ],
              "dt": {
                "children": [
                  {
                    "type": "text",
                    "value": "This can be instantiated in several ways:"
                  }
                ],
                "type": "paragraph"
              },
              "type": "DefListItem"
            }
          ],
          "type": "DefList"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Sparse arrays can be used in arithmetic operations: they support addition, subtraction, multiplication, division, and array power."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "dd": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "facilitates fast conversion among sparse formats"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "permits duplicate entries (see example)"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "very fast conversion to and from CSR/CSC formats"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                }
              ],
              "dt": {
                "children": [
                  {
                    "type": "text",
                    "value": "Advantages of the COO format"
                  }
                ],
                "type": "paragraph"
              },
              "type": "DefListItem"
            },
            {
              "dd": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "dd": [
                                {
                                  "children": [
                                    {
                                      "children": [
                                        {
                                          "children": [
                                            {
                                              "type": "text",
                                              "value": "arithmetic operations"
                                            }
                                          ],
                                          "type": "paragraph"
                                        }
                                      ],
                                      "spread": false,
                                      "type": "listItem"
                                    },
                                    {
                                      "children": [
                                        {
                                          "children": [
                                            {
                                              "type": "text",
                                              "value": "slicing"
                                            }
                                          ],
                                          "type": "paragraph"
                                        }
                                      ],
                                      "spread": false,
                                      "type": "listItem"
                                    }
                                  ],
                                  "ordered": false,
                                  "spread": false,
                                  "start": 1,
                                  "type": "list"
                                }
                              ],
                              "dt": {
                                "children": [
                                  {
                                    "type": "text",
                                    "value": "does not directly support:"
                                  }
                                ],
                                "type": "paragraph"
                              },
                              "type": "DefListItem"
                            }
                          ],
                          "type": "DefList"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                }
              ],
              "dt": {
                "children": [
                  {
                    "type": "text",
                    "value": "Disadvantages of the COO format"
                  }
                ],
                "type": "paragraph"
              },
              "type": "DefListItem"
            },
            {
              "dd": [
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "COO is a fast format for constructing sparse arrays"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "Once a array has been constructed, convert to CSR or       CSC format for fast arithmetic and array vector operations"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "By default when converting to CSR or CSC format, duplicate (i,j)       entries will be summed together.  This facilitates efficient       construction of finite element arrays and the like. (see example)"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                }
              ],
              "dt": {
                "children": [
                  {
                    "type": "text",
                    "value": "Intended Usage"
                  }
                ],
                "type": "paragraph"
              },
              "type": "DefListItem"
            }
          ],
          "type": "DefList"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A sparse array in COOrdinate format."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "# Constructing an empty array\nimport numpy as np\nfrom scipy.sparse import coo_array\ncoo_array((3, 4), dtype=np.int8).toarray()"
      },
      {
        "type": "code",
        "value": "# Constructing a array using ijv format\nrow  = np.array([0, 3, 1, 0])\ncol  = np.array([0, 3, 1, 2])\ndata = np.array([4, 5, 7, 9])\ncoo_array((data, (row, col)), shape=(4, 4)).toarray()"
      },
      {
        "type": "code",
        "value": "# Constructing a array with duplicate indices\nrow  = np.array([0, 0, 1, 3, 1, 0, 0])\ncol  = np.array([0, 2, 1, 3, 1, 0, 0])\ndata = np.array([1, 1, 1, 1, 1, 1, 1])\ncoo = coo_array((data, (row, col)), shape=(4, 4))\n# Duplicate indices are maintained until implicitly or explicitly summed\nnp.max(coo.data)"
      },
      {
        "type": "code",
        "value": "coo.toarray()"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/sparse/_arrays.py",
  "item_line": 68,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Attributes",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}