{
  "aliases": [
    "scipy.sparse.linalg.eigs"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Solves "
            },
            {
              "type": "inlineCode",
              "value": "A @ x[i] = w[i] * x[i]"
            },
            {
              "type": "text",
              "value": ", the standard eigenvalue problem for w[i] eigenvalues with corresponding eigenvectors x[i]."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "If M is specified, solves "
            },
            {
              "type": "inlineCode",
              "value": "A @ x[i] = w[i] * M @ x[i]"
            },
            {
              "type": "text",
              "value": ", the generalized eigenvalue problem for w[i] eigenvalues with corresponding eigenvectors x[i]"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This function is a wrapper to the ARPACK  SNEUPD, DNEUPD, CNEUPD, ZNEUPD, functions which use the Implicitly Restarted Arnoldi Method to find the eigenvalues and eigenvectors ."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An array, sparse matrix, or LinearOperator representing the operation "
                    },
                    {
                      "type": "inlineCode",
                      "value": "A @ x"
                    },
                    {
                      "type": "text",
                      "value": ", where A is a real or complex square matrix."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "A",
              "type": "Param",
              "type_": "ndarray, sparse matrix or LinearOperator"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The number of eigenvalues and eigenvectors desired. "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "k",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "k"
                    },
                    {
                      "type": "text",
                      "value": " must be smaller than N-1. It is not possible to compute all eigenvectors of a matrix."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "k",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An array, sparse matrix, or LinearOperator representing the operation M@x for the generalized eigenvalue problem"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "A @ x = w * M @ x."
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "type": "blockquote"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "M must represent a real symmetric matrix if A is real, and must represent a complex Hermitian matrix if A is complex. For best results, the data type of M should be the same as that of A. Additionally:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "If "
                        },
                        {
                          "anchor": null,
                          "exists": true,
                          "kind": "local",
                          "reference": {
                            "kind": "local",
                            "module": null,
                            "path": "sigma",
                            "type": "RefInfo",
                            "version": null
                          },
                          "type": "Link",
                          "value": "sigma"
                        },
                        {
                          "type": "text",
                          "value": " is None, M is positive definite"
                        }
                      ],
                      "type": "paragraph"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "If sigma is specified, M is positive semi-definite"
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "type": "blockquote"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If sigma is None, eigs requires an operator to compute the solution of the linear equation "
                    },
                    {
                      "type": "inlineCode",
                      "value": "M @ x = b"
                    },
                    {
                      "type": "text",
                      "value": ".  This is done internally via a (sparse) LU decomposition for an explicit matrix M, or via an iterative solver for a general linear operator.  Alternatively, the user can supply the matrix or operator Minv, which gives "
                    },
                    {
                      "type": "inlineCode",
                      "value": "x = Minv @ b = M^-1 @ b"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "M",
              "type": "Param",
              "type_": "ndarray, sparse matrix or LinearOperator, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Find eigenvalues near sigma using shift-invert mode.  This requires an operator to compute the solution of the linear system "
                    },
                    {
                      "type": "inlineCode",
                      "value": "[A - sigma * M] @ x = b"
                    },
                    {
                      "type": "text",
                      "value": ", where M is the identity matrix if unspecified. This is computed internally via a (sparse) LU decomposition for explicit matrices A & M, or via an iterative solver if either A or M is a general linear operator. Alternatively, the user can supply the matrix or operator OPinv, which gives "
                    },
                    {
                      "type": "inlineCode",
                      "value": "x = OPinv @ b = [A - sigma * M]^-1 @ b"
                    },
                    {
                      "type": "text",
                      "value": ". For a real matrix A, shift-invert can either be done in imaginary mode or real mode, specified by the parameter OPpart ('r' or 'i'). Note that when sigma is specified, the keyword 'which' (below) refers to the shifted eigenvalues "
                    },
                    {
                      "type": "inlineCode",
                      "value": "w'[i]"
                    },
                    {
                      "type": "text",
                      "value": " where:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "dd": [
                            {
                              "children": [
                                {
                                  "type": "inlineCode",
                                  "value": "w'[i] = 1/2 * [1/(w[i]-sigma) + 1/(w[i]-conj(sigma))]"
                                },
                                {
                                  "type": "text",
                                  "value": "."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "dt": {
                            "children": [
                              {
                                "type": "text",
                                "value": "If A is real and OPpart == 'r' (default),"
                              }
                            ],
                            "type": "paragraph"
                          },
                          "type": "DefListItem"
                        },
                        {
                          "dd": [
                            {
                              "children": [
                                {
                                  "type": "inlineCode",
                                  "value": "w'[i] = 1/2i * [1/(w[i]-sigma) - 1/(w[i]-conj(sigma))]"
                                },
                                {
                                  "type": "text",
                                  "value": "."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "dt": {
                            "children": [
                              {
                                "type": "text",
                                "value": "If A is real and OPpart == 'i',"
                              }
                            ],
                            "type": "paragraph"
                          },
                          "type": "DefListItem"
                        }
                      ],
                      "type": "DefList"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "If A is complex, "
                        },
                        {
                          "type": "inlineCode",
                          "value": "w'[i] = 1/(w[i]-sigma)"
                        },
                        {
                          "type": "text",
                          "value": "."
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "type": "blockquote"
                }
              ],
              "param": "sigma",
              "type": "Param",
              "type_": "real or complex, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Starting vector for iteration. Default: random"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "v0",
              "type": "Param",
              "type_": "ndarray, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The number of Lanczos vectors generated "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "ncv",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "ncv"
                    },
                    {
                      "type": "text",
                      "value": " must be greater than "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "k",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "k"
                    },
                    {
                      "type": "text",
                      "value": "; it is recommended that "
                    },
                    {
                      "type": "inlineCode",
                      "value": "ncv > 2*k"
                    },
                    {
                      "type": "text",
                      "value": ". Default: "
                    },
                    {
                      "type": "inlineCode",
                      "value": "min(n, max(2*k + 1, 20))"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "ncv",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Which "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "k",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "k"
                    },
                    {
                      "type": "text",
                      "value": " eigenvectors and eigenvalues to find:"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "which",
              "type": "Param",
              "type_": "str, ['LM' | 'SM' | 'LR' | 'SR' | 'LI' | 'SI'], optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Maximum number of Arnoldi update iterations allowed Default: "
                    },
                    {
                      "type": "inlineCode",
                      "value": "n*10"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "maxiter",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Relative accuracy for eigenvalues (stopping criterion) The default value of 0 implies machine precision."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "tol",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Return eigenvectors (True) in addition to eigenvalues"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "return_eigenvectors",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "See notes in M, above."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "Minv",
              "type": "Param",
              "type_": "ndarray, sparse matrix or LinearOperator, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "See notes in sigma, above."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "OPinv",
              "type": "Param",
              "type_": "ndarray, sparse matrix or LinearOperator, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "See notes in sigma, above"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "OPpart",
              "type": "Param",
              "type_": "{'r' or 'i'}, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "When the requested convergence is not obtained. The currently converged eigenvalues and eigenvectors can be found as "
                    },
                    {
                      "type": "inlineCode",
                      "value": "eigenvalues"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "eigenvectors"
                    },
                    {
                      "type": "text",
                      "value": " attributes of the exception object."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "ArpackNoConvergence"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Array of k eigenvalues."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "w",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An array of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "k",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "k"
                    },
                    {
                      "type": "text",
                      "value": " eigenvectors. "
                    },
                    {
                      "type": "inlineCode",
                      "value": "v[:, i]"
                    },
                    {
                      "type": "text",
                      "value": " is the eigenvector corresponding to the eigenvalue w[i]."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "v",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Find k eigenvalues and eigenvectors of the square matrix A."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Find 6 eigenvectors of the identity matrix:"
      },
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy.sparse.linalg import eigs\nid = np.eye(13)\nvals, vecs = eigs(id, k=6)\nvals"
      },
      {
        "type": "code",
        "value": "vecs.shape"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/sparse/linalg/_eigen/arpack/arpack.py",
  "item_line": 1102,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "eigenvalues and eigenvectors for symmetric matrix A"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.sparse.linalg._eigen.arpack.arpack:eigsh",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "eigsh"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "singular value decomposition for a matrix A"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "svds",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "svds"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(A, k=6, M=None, sigma=None, which='LM', v0=None, ncv=None, maxiter=None, tol=0, return_eigenvectors=True, Minv=None, OPinv=None, OPpart=None)"
  },
  "type": "DocBlob"
}