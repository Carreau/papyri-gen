{
  "aliases": [
    "scipy.spatial.KDTree.query_ball_tree"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The tree containing points to search against."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "other",
              "type": "Param",
              "type_": "KDTree instance"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The maximum distance, has to be positive."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "r",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Which Minkowski norm to use.  "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "p",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "p"
                    },
                    {
                      "type": "text",
                      "value": " has to meet the condition "
                    },
                    {
                      "type": "inlineCode",
                      "value": "1 <= p <= infinity"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "p",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Approximate search.  Branches of the tree are not explored if their nearest points are further than "
                    },
                    {
                      "type": "inlineCode",
                      "value": "r/(1+eps)"
                    },
                    {
                      "type": "text",
                      "value": ", and branches are added in bulk if their furthest points are nearer than "
                    },
                    {
                      "type": "inlineCode",
                      "value": "r * (1+eps)"
                    },
                    {
                      "type": "text",
                      "value": ".  "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "eps",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "eps"
                    },
                    {
                      "type": "text",
                      "value": " has to be non-negative."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "eps",
              "type": "Param",
              "type_": "float, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "For each element "
                    },
                    {
                      "type": "inlineCode",
                      "value": "self.data[i]"
                    },
                    {
                      "type": "text",
                      "value": " of this tree, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "results[i]"
                    },
                    {
                      "type": "text",
                      "value": " is a list of the indices of its neighbors in "
                    },
                    {
                      "type": "inlineCode",
                      "value": "other.data"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "results",
              "type": "Param",
              "type_": "list of lists"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Find all pairs of points between "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "self"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "other",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "other"
            },
            {
              "type": "text",
              "value": " whose distance is at most r."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "You can search all pairs of points between two kd-trees within a distance:"
      },
      {
        "type": "code",
        "value": "import matplotlib.pyplot as plt\nimport numpy as np\nfrom scipy.spatial import KDTree\nrng = np.random.default_rng()\npoints1 = rng.random((15, 2))\npoints2 = rng.random((15, 2))\nplt.figure(figsize=(6, 6))\nplt.plot(points1[:, 0], points1[:, 1], \"xk\", markersize=14)\nplt.plot(points2[:, 0], points2[:, 1], \"og\", markersize=14)\nkd_tree1 = KDTree(points1)\nkd_tree2 = KDTree(points2)\nindexes = kd_tree1.query_ball_tree(kd_tree2, r=0.2)\nfor i in range(len(indexes)):\n    for j in indexes[i]:\n        plt.plot([points1[i, 0], points2[j, 0]],\n            [points1[i, 1], points2[j, 1]], \"-r\")\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.spatial._kdtree:KDTree.query_ball_tree-0-f9ed3c9e.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/spatial/_kdtree.py",
  "item_line": 557,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self, other, r, p=2.0, eps=0)"
  },
  "type": "DocBlob"
}