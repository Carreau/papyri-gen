{
  "aliases": [
    "scipy.spatial.procrustes"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Each input matrix is a set of points or vectors (the rows of the matrix). The dimension of the space is the number of columns of each matrix. Given two identically sized matrices, procrustes standardizes both such that:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "inlineMath",
                      "value": "tr(AA^{T}) = 1"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Both sets of points are centered around the origin."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": false,
          "spread": false,
          "start": 1,
          "type": "list"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Procrustes (, ) then applies the optimal transform to the second matrix (including scaling/dilation, rotations, and reflections) to minimize "
            },
            {
              "type": "inlineMath",
              "value": "M^{2}=\\sum(data1-data2)^{2}"
            },
            {
              "type": "text",
              "value": ", or the sum of the squares of the pointwise differences between the two input datasets."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "This function was not designed to handle datasets with different numbers of datapoints (rows).  If two data sets have different dimensionality (different number of columns), simply add columns of zeros to the smaller of the two."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The disparity should not depend on the order of the input matrices, but   the output matrices will, as only the first output matrix is guaranteed   to be scaled such that "
                    },
                    {
                      "type": "inlineMath",
                      "value": "tr(AA^{T}) = 1"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Duplicate data points are generally ok, duplicating a data point will   increase its effect on the procrustes fit."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The disparity scales as the number of points per input matrix."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": false,
          "spread": false,
          "start": 1,
          "type": "list"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Matrix, n rows represent points in k (columns) space "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "data1",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "data1"
                    },
                    {
                      "type": "text",
                      "value": " is the reference data, after it is standardised, the data from "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "data2",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "data2"
                    },
                    {
                      "type": "text",
                      "value": " will be transformed to fit the pattern in "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "data1",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "data1"
                    },
                    {
                      "type": "text",
                      "value": " (must have >1 unique points)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "data1",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "n rows of data in k space to be fit to "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "data1",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "data1"
                    },
                    {
                      "type": "text",
                      "value": ".  Must be the  same shape "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(numrows, numcols)"
                    },
                    {
                      "type": "text",
                      "value": " as data1 (must have >1 unique points)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "data2",
              "type": "Param",
              "type_": "array_like"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If the input arrays are not two-dimensional. If the shape of the input arrays is different. If the input arrays have zero columns or zero rows."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "ValueError"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A standardized version of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "data1",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "data1"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "mtx1",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The orientation of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "data2",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "data2"
                    },
                    {
                      "type": "text",
                      "value": " that best fits "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "data1",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "data1"
                    },
                    {
                      "type": "text",
                      "value": ". Centered, but not necessarily "
                    },
                    {
                      "type": "inlineMath",
                      "value": "tr(AA^{T}) = 1"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "mtx2",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "inlineMath",
                      "value": "M^{2}"
                    },
                    {
                      "type": "text",
                      "value": " as defined above."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "disparity",
              "type": "Param",
              "type_": "float"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Procrustes analysis, a similarity test for two data sets."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy.spatial import procrustes"
      },
      {
        "type": "text",
        "value": "The matrix ``b`` is a rotated, shifted, scaled and mirrored version of\n``a`` here:"
      },
      {
        "type": "code",
        "value": "a = np.array([[1, 3], [1, 2], [1, 1], [2, 1]], 'd')\nb = np.array([[4, -2], [4, -4], [4, -6], [2, -6]], 'd')\nmtx1, mtx2, disparity = procrustes(a, b)\nround(disparity)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/spatial/_procrustes.py",
  "item_line": 15,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.linalg._procrustes:orthogonal_procrustes",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "scipy.linalg.orthogonal_procrustes"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Another similarity test for two data sets"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.spatial.distance:directed_hausdorff",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "scipy.spatial.distance.directed_hausdorff"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(data1, data2)"
  },
  "type": "DocBlob"
}