{
  "aliases": [
    "scipy.stats._continuous_distns.uniform_gen.fit"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "uniform.fit"
            },
            {
              "type": "text",
              "value": " uses only the following parameters.  Because exact formulas are used, the parameters related to optimization that are available in the "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "module",
                "module": "scipy",
                "path": "scipy.stats._continuous_distns:uniform_gen.fit",
                "type": "RefInfo",
                "version": "1.10.1"
              },
              "type": "Link",
              "value": "fit"
            },
            {
              "type": "text",
              "value": " method of other distributions are ignored here.  The only positional argument accepted is "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "data",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "data"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "An error is raised if "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "floc",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "floc"
            },
            {
              "type": "text",
              "value": " is given and any values in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "data",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "data"
            },
            {
              "type": "text",
              "value": " are less than "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "floc",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "floc"
            },
            {
              "type": "text",
              "value": ", or if "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "fscale",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "fscale"
            },
            {
              "type": "text",
              "value": " is given and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "fscale",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "fscale"
            },
            {
              "type": "text",
              "value": " is less than "
            },
            {
              "type": "inlineCode",
              "value": "data.max() - data.min()"
            },
            {
              "type": "text",
              "value": ".  An error is also raised if both "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "floc",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "floc"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "fscale",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "fscale"
            },
            {
              "type": "text",
              "value": " are given."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Data to use in calculating the maximum likelihood estimate."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "data",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Hold the location parameter fixed to the specified value."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "floc",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Hold the scale parameter fixed to the specified value."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "fscale",
              "type": "Param",
              "type_": "float, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Maximum likelihood estimates for the location and scale."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "loc, scale",
              "type": "Param",
              "type_": "float"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Maximum likelihood estimate for the location and scale parameters."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy.stats import uniform"
      },
      {
        "type": "text",
        "value": "We'll fit the uniform distribution to `x`:"
      },
      {
        "type": "code",
        "value": "x = np.array([2, 2.5, 3.1, 9.5, 13.0])"
      },
      {
        "type": "text",
        "value": "For a uniform distribution MLE, the location is the minimum of the\ndata, and the scale is the maximum minus the minimum."
      },
      {
        "type": "code",
        "value": "loc, scale = uniform.fit(x)\nloc"
      },
      {
        "type": "code",
        "value": "scale"
      },
      {
        "type": "text",
        "value": "If we know the data comes from a uniform distribution where the support\nstarts at 0, we can use `floc=0`:"
      },
      {
        "type": "code",
        "value": "loc, scale = uniform.fit(x, floc=0)\nloc"
      },
      {
        "type": "code",
        "value": "scale"
      },
      {
        "type": "text",
        "value": "Alternatively, if we know the length of the support is 12, we can use\n`fscale=12`:"
      },
      {
        "type": "code",
        "value": "loc, scale = uniform.fit(x, fscale=12)\nloc"
      },
      {
        "type": "code",
        "value": "scale"
      },
      {
        "type": "text",
        "value": "In that last example, the support interval is [1.5, 13.5].  This\nsolution is not unique.  For example, the distribution with ``loc=2``\nand ``scale=12`` has the same likelihood as the one above.  When\n`fscale` is given and it is larger than ``data.max() - data.min()``,\nthe parameters returned by the `fit` method center the support over\nthe interval ``[data.min(), data.max()]``."
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/stats/_continuous_distns.py",
  "item_line": 9028,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self, data, *args, **kwds)"
  },
  "type": "DocBlob"
}