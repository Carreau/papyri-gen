{
  "aliases": [
    "scipy.stats.Covariance.from_precision"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Let the covariance matrix be "
            },
            {
              "type": "inlineMath",
              "value": "A"
            },
            {
              "type": "text",
              "value": ", its precision matrix be "
            },
            {
              "type": "inlineMath",
              "value": "P = A^{-1}"
            },
            {
              "type": "text",
              "value": ", and "
            },
            {
              "type": "inlineMath",
              "value": "L"
            },
            {
              "type": "text",
              "value": " be the lower Cholesky factor such that "
            },
            {
              "type": "inlineMath",
              "value": "L L^T = P"
            },
            {
              "type": "text",
              "value": ". Whitening of a data point "
            },
            {
              "type": "inlineMath",
              "value": "x"
            },
            {
              "type": "text",
              "value": " is performed by computing "
            },
            {
              "type": "inlineMath",
              "value": "x^T L"
            },
            {
              "type": "text",
              "value": ". "
            },
            {
              "type": "inlineMath",
              "value": "\\log\\det{A}"
            },
            {
              "type": "text",
              "value": " is calculated as "
            },
            {
              "type": "inlineMath",
              "value": "-2tr(\\log{L})"
            },
            {
              "type": "text",
              "value": ", where the "
            },
            {
              "type": "inlineMath",
              "value": "\\log"
            },
            {
              "type": "text",
              "value": " operation is performed element-wise."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "This "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "Covariance"
            },
            {
              "type": "text",
              "value": " class does not support singular covariance matrices because the precision matrix does not exist for a singular covariance matrix."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The precision matrix; that is, the inverse of a square, symmetric, positive definite covariance matrix."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "precision",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The square, symmetric, positive definite covariance matrix. If not provided, this may need to be calculated (e.g. to evaluate the cumulative distribution function of "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "scipy.stats.multivariate_normal"
                    },
                    {
                      "type": "text",
                      "value": ") by inverting "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "precision",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "precision"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "covariance",
              "type": "Param",
              "type_": "array_like, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return a representation of a covariance from its precision matrix."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Prepare a symmetric positive definite precision matrix ``P`` and a\ndata point ``x``. (If the precision matrix is not already available,\nconsider the other factory methods of the `Covariance` class.)"
      },
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy import stats\nrng = np.random.default_rng()\nn = 5\nP = rng.random(size=(n, n))\nP = P @ P.T  # a precision matrix must be positive definite\nx = rng.random(size=n)"
      },
      {
        "type": "text",
        "value": "Create the `Covariance` object."
      },
      {
        "type": "code",
        "value": "cov = stats.Covariance.from_precision(P)"
      },
      {
        "type": "text",
        "value": "Compare the functionality of the `Covariance` object against\nreference implementations."
      },
      {
        "type": "code",
        "value": "res = cov.whiten(x)\nref = x @ np.linalg.cholesky(P)\nnp.allclose(res, ref)"
      },
      {
        "type": "code",
        "value": "res = cov.log_pdet\nref = -np.linalg.slogdet(P)[-1]\nnp.allclose(res, ref)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/stats/_covariance.py",
  "item_line": 126,
  "item_type": "<class 'staticmethod'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}