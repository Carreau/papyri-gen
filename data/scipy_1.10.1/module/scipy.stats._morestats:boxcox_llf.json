{
  "aliases": [
    "scipy.stats.boxcox_llf"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The Box-Cox log-likelihood function is defined here as"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "llf = (\\lambda - 1) \\sum_i(\\log(x_i)) -\n      N/2 \\log(\\sum_i (y_i - \\bar{y})^2 / N),"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "where "
            },
            {
              "type": "inlineCode",
              "value": "y"
            },
            {
              "type": "text",
              "value": " is the Box-Cox transformed input data "
            },
            {
              "type": "inlineCode",
              "value": "x"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Parameter for Box-Cox transformation.  See "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "boxcox"
                    },
                    {
                      "type": "text",
                      "value": " for details."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "lmb",
              "type": "Param",
              "type_": "scalar"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Data to calculate Box-Cox log-likelihood for.  If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "data",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "data"
                    },
                    {
                      "type": "text",
                      "value": " is multi-dimensional, the log-likelihood is calculated along the first axis."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "data",
              "type": "Param",
              "type_": "array_like"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Box-Cox log-likelihood of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "data",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "data"
                    },
                    {
                      "type": "text",
                      "value": " given "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "lmb",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "lmb"
                    },
                    {
                      "type": "text",
                      "value": ".  A float for 1-D "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "data",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "data"
                    },
                    {
                      "type": "text",
                      "value": ", an array otherwise."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "llf",
              "type": "Param",
              "type_": "float or ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The boxcox log-likelihood function."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.axes_grid1.inset_locator import inset_axes"
      },
      {
        "type": "text",
        "value": "Generate some random variates and calculate Box-Cox log-likelihood values\nfor them for a range of ``lmbda`` values:"
      },
      {
        "type": "code",
        "value": "rng = np.random.default_rng()\nx = stats.loggamma.rvs(5, loc=10, size=1000, random_state=rng)\nlmbdas = np.linspace(-2, 10)\nllf = np.zeros(lmbdas.shape, dtype=float)\nfor ii, lmbda in enumerate(lmbdas):\n    llf[ii] = stats.boxcox_llf(lmbda, x)"
      },
      {
        "type": "text",
        "value": "Also find the optimal lmbda value with `boxcox`:"
      },
      {
        "type": "code",
        "value": "x_most_normal, lmbda_optimal = stats.boxcox(x)"
      },
      {
        "type": "text",
        "value": "Plot the log-likelihood as function of lmbda.  Add the optimal lmbda as a\nhorizontal line to check that that's really the optimum:"
      },
      {
        "type": "code",
        "value": "fig = plt.figure()\nax = fig.add_subplot(111)\nax.plot(lmbdas, llf, 'b.-')\nax.axhline(stats.boxcox_llf(lmbda_optimal, x), color='r')\nax.set_xlabel('lmbda parameter')\nax.set_ylabel('Box-Cox log-likelihood')"
      },
      {
        "type": "text",
        "value": "Now add some probability plots to show that where the log-likelihood is\nmaximized the data transformed with `boxcox` looks closest to normal:"
      },
      {
        "type": "code",
        "value": "locs = [3, 10, 4]  # 'lower left', 'center', 'lower right'\nfor lmbda, loc in zip([-1, lmbda_optimal, 9], locs):\n    xt = stats.boxcox(x, lmbda=lmbda)\n    (osm, osr), (slope, intercept, r_sq) = stats.probplot(xt)\n    ax_inset = inset_axes(ax, width=\"20%\", height=\"20%\", loc=loc)\n    ax_inset.plot(osm, osr, 'c.', osm, slope*osm + intercept, 'k-')\n    ax_inset.set_xticklabels([])\n    ax_inset.set_yticklabels([])\n    ax_inset.set_title(r'$\\lambda=%1.2f$' % lmbda)"
      },
      {
        "type": "code",
        "value": "plt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.stats._morestats:boxcox_llf-0-cfa0f6de.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/stats/_morestats.py",
  "item_line": 839,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "boxcox",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "boxcox"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.stats._morestats:probplot",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "probplot"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.stats._morestats:boxcox_normplot",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "boxcox_normplot"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.stats._morestats:boxcox_normmax",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "boxcox_normmax"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(lmb, data)"
  },
  "type": "DocBlob"
}