{
  "aliases": [
    "scipy.stats.median_test"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Test that two or more samples come from populations with the same median."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Let "
            },
            {
              "type": "inlineCode",
              "value": "n = len(samples)"
            },
            {
              "type": "text",
              "value": " be the number of samples.  The \"grand median\" of all the data is computed, and a contingency table is formed by classifying the values in each sample as being above or below the grand median.  The contingency table, along with "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "correction",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "correction"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "lambda_",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "lambda_"
            },
            {
              "type": "text",
              "value": ", are passed to "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "module",
              "reference": {
                "kind": "api",
                "module": "scipy.stats.contingency",
                "path": "scipy.stats.contingency:chi2_contingency",
                "type": "RefInfo",
                "version": "*"
              },
              "type": "Link",
              "value": "scipy.stats.chi2_contingency"
            },
            {
              "type": "text",
              "value": " to compute the test statistic and p-value."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionadded 0.15.0"
                }
              ],
              "type": "admonitionTitle"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The set of samples.  There must be at least two samples. Each sample must be a one-dimensional sequence containing at least one value.  The samples are not required to have the same length."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "sample1, sample2, ...",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Determines how values equal to the grand median are classified in the contingency table.  The string must be one of      "
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "type": "code",
                  "value": "\"below\":\n    Values equal to the grand median are counted as \"below\".\n\"above\":\n    Values equal to the grand median are counted as \"above\".\n\"ignore\":\n    Values equal to the grand median are not counted."
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The default is \"below\"."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "ties",
              "type": "Param",
              "type_": "str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "and"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " there are just two samples, apply Yates' correction for continuity when computing the test statistic associated with the contingency table.  Default is True."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "correction",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "By default, the statistic computed in this test is Pearson's chi-squared statistic.  "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "lambda_",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "lambda_"
                    },
                    {
                      "type": "text",
                      "value": " allows a statistic from the Cressie-Read power divergence family to be used instead.  See "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "scipy",
                        "path": "scipy.stats._stats_py:power_divergence",
                        "type": "RefInfo",
                        "version": "1.10.1"
                      },
                      "type": "Link",
                      "value": "power_divergence"
                    },
                    {
                      "type": "text",
                      "value": " for details. Default is 1 (Pearson's chi-squared statistic)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "lambda_",
              "type": "Param",
              "type_": "float or str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Defines how to handle when input contains nan. 'propagate' returns nan, 'raise' throws an error, 'omit' performs the calculations ignoring nan values. Default is 'propagate'."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "nan_policy",
              "type": "Param",
              "type_": "{'propagate', 'raise', 'omit'}, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An object containing attributes:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "statistic"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "statistic"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "pvalue"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "pvalue"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "median"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "median"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "table"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "table"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    }
                  ],
                  "type": "DefList"
                }
              ],
              "param": "res",
              "type": "Param",
              "type_": "MedianTestResult"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Perform a Mood's median test."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "A biologist runs an experiment in which there are three groups of plants.\nGroup 1 has 16 plants, group 2 has 15 plants, and group 3 has 17 plants.\nEach plant produces a number of seeds.  The seed counts for each group\nare::"
      },
      {
        "type": "text",
        "value": "    Group 1: 10 14 14 18 20 22 24 25 31 31 32 39 43 43 48 49\n    Group 2: 28 30 31 33 34 35 36 40 44 55 57 61 91 92 99\n    Group 3:  0  3  9 22 23 25 25 33 34 34 40 45 46 48 62 67 84"
      },
      {
        "type": "text",
        "value": "The following code applies Mood's median test to these samples."
      },
      {
        "type": "code",
        "value": "g1 = [10, 14, 14, 18, 20, 22, 24, 25, 31, 31, 32, 39, 43, 43, 48, 49]\ng2 = [28, 30, 31, 33, 34, 35, 36, 40, 44, 55, 57, 61, 91, 92, 99]\ng3 = [0, 3, 9, 22, 23, 25, 25, 33, 34, 34, 40, 45, 46, 48, 62, 67, 84]\nfrom scipy.stats import median_test\nres = median_test(g1, g2, g3)"
      },
      {
        "type": "text",
        "value": "The median is"
      },
      {
        "type": "code",
        "value": "res.median"
      },
      {
        "type": "text",
        "value": "and the contingency table is"
      },
      {
        "type": "code",
        "value": "res.table"
      },
      {
        "type": "text",
        "value": "`p` is too large to conclude that the medians are not the same:"
      },
      {
        "type": "code",
        "value": "res.pvalue"
      },
      {
        "type": "text",
        "value": "The \"G-test\" can be performed by passing ``lambda_=\"log-likelihood\"`` to\n`median_test`."
      },
      {
        "type": "code",
        "value": "res = median_test(g1, g2, g3, lambda_=\"log-likelihood\")\nres.pvalue"
      },
      {
        "type": "text",
        "value": "The median occurs several times in the data, so we'll get a different\nresult if, for example, ``ties=\"above\"`` is used:"
      },
      {
        "type": "code",
        "value": "res = median_test(g1, g2, g3, ties=\"above\")\nres.pvalue"
      },
      {
        "type": "code",
        "value": "res.table"
      },
      {
        "type": "text",
        "value": "This example demonstrates that if the data set is not large and there\nare values equal to the median, the p-value can be sensitive to the\nchoice of `ties`."
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/stats/_morestats.py",
  "item_line": 3519,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Compute the Kruskal-Wallis H-test for independent samples."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "kruskal",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "kruskal"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Computes the Mann-Whitney rank test on samples x and y."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "mannwhitneyu",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "mannwhitneyu"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(*samples, ties='below', correction=True, lambda_=1, nan_policy='propagate')"
  },
  "type": "DocBlob"
}