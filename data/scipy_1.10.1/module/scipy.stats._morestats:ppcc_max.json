{
  "aliases": [
    "scipy.stats.ppcc_max"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The probability plot correlation coefficient (PPCC) plot can be used to determine the optimal shape parameter for a one-parameter family of distributions. "
            },
            {
              "type": "inlineCode",
              "value": "ppcc_max"
            },
            {
              "type": "text",
              "value": " returns the shape parameter that would maximize the probability plot correlation coefficient for the given data to a one-parameter family of distributions."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The brack keyword serves as a starting point which is useful in corner cases. One can use a plot to obtain a rough visual estimate of the location for the maximum to start the search near it."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Input array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Triple (a,b,c) where (a<b<c). If bracket consists of two numbers (a, c) then they are assumed to be a starting interval for a downhill bracket search (see "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "api",
                        "module": "scipy.optimize._optimize",
                        "path": "scipy.optimize._optimize:brent",
                        "type": "RefInfo",
                        "version": "*"
                      },
                      "type": "Link",
                      "value": "scipy.optimize.brent"
                    },
                    {
                      "type": "text",
                      "value": ")."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "brack",
              "type": "Param",
              "type_": "tuple, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Distribution or distribution function name.  Objects that look enough like a stats.distributions instance (i.e. they have a "
                    },
                    {
                      "type": "inlineCode",
                      "value": "ppf"
                    },
                    {
                      "type": "text",
                      "value": " method) are also accepted.  The default is "
                    },
                    {
                      "type": "inlineCode",
                      "value": "'tukeylambda'"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dist",
              "type": "Param",
              "type_": "str or stats.distributions instance, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The shape parameter at which the probability plot correlation coefficient reaches its max value."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "shape_value",
              "type": "Param",
              "type_": "float"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Calculate the shape parameter that maximizes the PPCC."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "First we generate some random data from a Weibull distribution\nwith shape parameter 2.5:"
      },
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\nrng = np.random.default_rng()\nc = 2.5\nx = stats.weibull_min.rvs(c, scale=4, size=2000, random_state=rng)"
      },
      {
        "type": "text",
        "value": "Generate the PPCC plot for this data with the Weibull distribution."
      },
      {
        "type": "code",
        "value": "fig, ax = plt.subplots(figsize=(8, 6))\nres = stats.ppcc_plot(x, c/2, 2*c, dist='weibull_min', plot=ax)"
      },
      {
        "type": "text",
        "value": "We calculate the value where the shape should reach its maximum and a\nred line is drawn there. The line should coincide with the highest\npoint in the PPCC graph."
      },
      {
        "type": "code",
        "value": "cmax = stats.ppcc_max(x, brack=(c/2, 2*c), dist='weibull_min')\nax.axvline(cmax, color='r')\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.stats._morestats:ppcc_max-0-a36c36bf.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/stats/_morestats.py",
  "item_line": 648,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.stats._morestats:ppcc_plot",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "ppcc_plot"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.stats._morestats:probplot",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "probplot"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "boxcox",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "boxcox"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(x, brack=(0.0, 1.0), dist='tukeylambda')"
  },
  "type": "DocBlob"
}