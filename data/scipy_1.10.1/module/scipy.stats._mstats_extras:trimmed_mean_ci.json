{
  "aliases": [
    "scipy.stats._mstats_extras.trimmed_mean_ci"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Input data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "data",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "None or a two item tuple. Tuple of the percentages to cut on each side of the array, with respect to the number of unmasked data, as floats between 0. and 1. If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "n"
                    },
                    {
                      "type": "text",
                      "value": " is the number of unmasked data before trimming, then ("
                    },
                    {
                      "type": "inlineCode",
                      "value": "n * limits[0]"
                    },
                    {
                      "type": "text",
                      "value": ")th smallest data and ("
                    },
                    {
                      "type": "inlineCode",
                      "value": "n * limits[1]"
                    },
                    {
                      "type": "text",
                      "value": ")th largest data are masked.  The total number of unmasked data after trimming is "
                    },
                    {
                      "type": "inlineCode",
                      "value": "n * (1. - sum(limits))"
                    },
                    {
                      "type": "text",
                      "value": ". The value of one limit can be set to None to indicate an open interval."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Defaults to (0.2, 0.2)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "limits",
              "type": "Param",
              "type_": "{None, tuple}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If relative==False, tuple indicating whether values exactly equal to the absolute limits are allowed. If relative==True, tuple indicating whether the number of data being masked on each side should be rounded (True) or truncated (False)."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Defaults to (True, True)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "inclusive",
              "type": "Param",
              "type_": "(2,) tuple of boolean, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Confidence level of the intervals."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Defaults to 0.05."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "alpha",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Axis along which to cut. If None, uses a flattened version of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "data",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "data"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Defaults to None."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axis",
              "type": "Param",
              "type_": "int, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The lower and upper confidence intervals of the trimmed data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "trimmed_mean_ci",
              "type": "Param",
              "type_": "(2,) ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Selected confidence interval of the trimmed mean along the given axis."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/stats/_mstats_extras.py",
  "item_line": 192,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(data, limits=(0.2, 0.2), inclusive=(True, True), alpha=0.05, axis=None)"
  },
  "type": "DocBlob"
}