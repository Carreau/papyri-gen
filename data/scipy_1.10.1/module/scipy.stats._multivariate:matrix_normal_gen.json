{
  "aliases": [
    "scipy.stats._multivariate.matrix_normal_gen"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "mean"
            },
            {
              "type": "text",
              "value": " keyword specifies the mean. The "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "rowcov"
            },
            {
              "type": "text",
              "value": " keyword specifies the among-row covariance matrix. The 'colcov' keyword specifies the among-column covariance matrix."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Probability density function."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "pdf(X, mean=None, rowcov=1, colcov=1)",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Log of the probability density function."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "logpdf(X, mean=None, rowcov=1, colcov=1)",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Draw random samples."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "rvs(mean=None, rowcov=1, colcov=1, size=1, random_state=None)",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "%(_matnorm_doc_callparams_note)s"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The covariance matrices specified by "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "rowcov"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "colcov"
            },
            {
              "type": "text",
              "value": " must be (symmetric) positive definite. If the samples in "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "X"
            },
            {
              "type": "text",
              "value": " are "
            },
            {
              "type": "inlineMath",
              "value": "m \\times n"
            },
            {
              "type": "text",
              "value": ", then "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "rowcov"
            },
            {
              "type": "text",
              "value": " must be "
            },
            {
              "type": "inlineMath",
              "value": "m \\times m"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "colcov"
            },
            {
              "type": "text",
              "value": " must be "
            },
            {
              "type": "inlineMath",
              "value": "n \\times n"
            },
            {
              "type": "text",
              "value": ". "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "mean"
            },
            {
              "type": "text",
              "value": " must be the same shape as "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "X"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The probability density function for "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "matrix_normal"
            },
            {
              "type": "text",
              "value": " is"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "f(X) = (2 \\pi)^{-\\frac{mn}{2}}|U|^{-\\frac{n}{2}} |V|^{-\\frac{m}{2}}\n       \\exp\\left( -\\frac{1}{2} \\mathrm{Tr}\\left[ U^{-1} (X-M) V^{-1}\n       (X-M)^T \\right] \\right),"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "where "
            },
            {
              "type": "inlineMath",
              "value": "M"
            },
            {
              "type": "text",
              "value": " is the mean, "
            },
            {
              "type": "inlineMath",
              "value": "U"
            },
            {
              "type": "text",
              "value": " the among-row covariance matrix, "
            },
            {
              "type": "inlineMath",
              "value": "V"
            },
            {
              "type": "text",
              "value": " the among-column covariance matrix."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "allow_singular"
            },
            {
              "type": "text",
              "value": " behaviour of the "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "multivariate_normal"
            },
            {
              "type": "text",
              "value": " distribution is not currently supported. Covariance matrices must be full rank."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "matrix_normal"
            },
            {
              "type": "text",
              "value": " distribution is closely related to the "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "multivariate_normal"
            },
            {
              "type": "text",
              "value": " distribution. Specifically, "
            },
            {
              "type": "inlineMath",
              "value": "\\mathrm{Vec}(X)"
            },
            {
              "type": "text",
              "value": " (the vector formed by concatenating the columns  of "
            },
            {
              "type": "inlineMath",
              "value": "X"
            },
            {
              "type": "text",
              "value": ") has a multivariate normal distribution with mean "
            },
            {
              "type": "inlineMath",
              "value": "\\mathrm{Vec}(M)"
            },
            {
              "type": "text",
              "value": " and covariance "
            },
            {
              "type": "inlineMath",
              "value": "V \\otimes U"
            },
            {
              "type": "text",
              "value": " (where "
            },
            {
              "type": "inlineMath",
              "value": "\\otimes"
            },
            {
              "type": "text",
              "value": " is the Kronecker product). Sampling and pdf evaluation are "
            },
            {
              "type": "inlineMath",
              "value": "\\mathcal{O}(m^3 + n^3 + m^2 n + m n^2)"
            },
            {
              "type": "text",
              "value": " for the matrix normal, but "
            },
            {
              "type": "inlineMath",
              "value": "\\mathcal{O}(m^3 n^3)"
            },
            {
              "type": "text",
              "value": " for the equivalent multivariate normal, making this equivalent form algorithmically inefficient."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionadded 0.17.0"
                }
              ],
              "type": "admonitionTitle"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "%(_matnorm_doc_default_callparams)s",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [],
              "param": "%(_doc_random_state)s",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A matrix normal random variable."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy.stats import matrix_normal"
      },
      {
        "type": "code",
        "value": "M = np.arange(6).reshape(3,2); M"
      },
      {
        "type": "code",
        "value": "U = np.diag([1,2,3]); U"
      },
      {
        "type": "code",
        "value": "V = 0.3*np.identity(2); V"
      },
      {
        "type": "code",
        "value": "X = M + 0.1; X"
      },
      {
        "type": "code",
        "value": "matrix_normal.pdf(X, mean=M, rowcov=U, colcov=V)"
      },
      {
        "type": "code",
        "value": "# Equivalent multivariate normal\nfrom scipy.stats import multivariate_normal\nvectorised_X = X.T.flatten()\nequiv_mean = M.T.flatten()\nequiv_cov = np.kron(V,U)\nmultivariate_normal.pdf(vectorised_X, mean=equiv_mean, cov=equiv_cov)"
      },
      {
        "type": "text",
        "value": "Alternatively, the object may be called (as a function) to fix the mean\nand covariance parameters, returning a \"frozen\" matrix normal\nrandom variable:"
      },
      {
        "type": "code",
        "value": "rv = matrix_normal(mean=None, rowcov=1, colcov=1)\n# Frozen object with the same methods but holding the given\n# mean and covariance fixed."
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/stats/_multivariate.py",
  "item_line": 937,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Methods",
    "Parameters",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}