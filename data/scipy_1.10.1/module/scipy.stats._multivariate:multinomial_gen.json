{
  "aliases": [
    "scipy.stats._multivariate.multinomial_gen"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Probability mass function."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "pmf(x, n, p)",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Log of the probability mass function."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "logpmf(x, n, p)",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Draw random samples from a multinomial distribution."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "rvs(n, p, size=1, random_state=None)",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Compute the entropy of the multinomial distribution."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "entropy(n, p)",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Compute the covariance matrix of the multinomial distribution."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cov(n, p)",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "%(_doc_callparams_note)s"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The probability mass function for "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "multinomial"
            },
            {
              "type": "text",
              "value": " is"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "f(x) = \\frac{n!}{x_1! \\cdots x_k!} p_1^{x_1} \\cdots p_k^{x_k},"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "supported on "
            },
            {
              "type": "inlineMath",
              "value": "x=(x_1, \\ldots, x_k)"
            },
            {
              "type": "text",
              "value": " where each "
            },
            {
              "type": "inlineMath",
              "value": "x_i"
            },
            {
              "type": "text",
              "value": " is a nonnegative integer and their sum is "
            },
            {
              "type": "inlineMath",
              "value": "n"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionadded 0.19.0"
                }
              ],
              "type": "admonitionTitle"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "%(_doc_default_callparams)s",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [],
              "param": "%(_doc_random_state)s",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A multinomial random variable."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from scipy.stats import multinomial\nrv = multinomial(8, [0.3, 0.2, 0.5])\nrv.pmf([1, 3, 4])"
      },
      {
        "type": "text",
        "value": "The multinomial distribution for :math:`k=2` is identical to the\ncorresponding binomial distribution (tiny numerical differences\nnotwithstanding):"
      },
      {
        "type": "code",
        "value": "from scipy.stats import binom\nmultinomial.pmf([3, 4], n=7, p=[0.4, 0.6])"
      },
      {
        "type": "code",
        "value": "binom.pmf(3, 7, 0.4)"
      },
      {
        "type": "text",
        "value": "The functions ``pmf``, ``logpmf``, ``entropy``, and ``cov`` support\nbroadcasting, under the convention that the vector parameters (``x`` and\n``p``) are interpreted as if each row along the last axis is a single\nobject. For instance:"
      },
      {
        "type": "code",
        "value": "multinomial.pmf([[3, 4], [3, 5]], n=[7, 8], p=[.3, .7])"
      },
      {
        "type": "text",
        "value": "Here, ``x.shape == (2, 2)``, ``n.shape == (2,)``, and ``p.shape == (2,)``,\nbut following the rules mentioned above they behave as if the rows\n``[3, 4]`` and ``[3, 5]`` in ``x`` and ``[.3, .7]`` in ``p`` were a single\nobject, and as if we had ``x.shape = (2,)``, ``n.shape = (2,)``, and\n``p.shape = ()``. To obtain the individual elements without broadcasting,\nwe would do this:"
      },
      {
        "type": "code",
        "value": "multinomial.pmf([3, 4], n=7, p=[.3, .7])"
      },
      {
        "type": "code",
        "value": "multinomial.pmf([3, 5], 8, p=[.3, .7])"
      },
      {
        "type": "text",
        "value": "This broadcasting also works for ``cov``, where the output objects are\nsquare matrices of size ``p.shape[-1]``. For example:"
      },
      {
        "type": "code",
        "value": "multinomial.cov([4, 5], [[.3, .7], [.4, .6]])"
      },
      {
        "type": "text",
        "value": "In this example, ``n.shape == (2,)`` and ``p.shape == (2, 2)``, and\nfollowing the rules above, these broadcast as if ``p.shape == (2,)``.\nThus the result should also be of shape ``(2,)``, but since each output is\na :math:`2 \\times 2` matrix, the result in fact has shape ``(2, 2, 2)``,\nwhere ``result[0]`` is equal to ``multinomial.cov(n=4, p=[.3, .7])`` and\n``result[1]`` is equal to ``multinomial.cov(n=5, p=[.4, .6])``."
      },
      {
        "type": "text",
        "value": "Alternatively, the object may be called (as a function) to fix the `n` and\n`p` parameters, returning a \"frozen\" multinomial random variable:"
      },
      {
        "type": "code",
        "value": "rv = multinomial(n=7, p=[.3, .7])\n# Frozen object with the same methods but holding the given\n# degrees of freedom and scale fixed."
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/stats/_multivariate.py",
  "item_line": 3016,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Methods",
    "Parameters",
    "Notes",
    "Examples",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "The binomial distribution."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "scipy.stats.binom",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "scipy.stats.binom"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Sampling from the multinomial distribution."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "numpy.random.Generator.multinomial",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "numpy.random.Generator.multinomial"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "The multivariate hypergeometric distribution."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "scipy.stats.multivariate_hypergeom",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "scipy.stats.multivariate_hypergeom"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}