{
  "aliases": [
    "scipy.stats._multivariate.multivariate_normal_gen"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "mean"
            },
            {
              "type": "text",
              "value": " keyword specifies the mean. The "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "cov"
            },
            {
              "type": "text",
              "value": " keyword specifies the covariance matrix."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Probability density function."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "pdf(x, mean=None, cov=1, allow_singular=False)",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Log of the probability density function."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "logpdf(x, mean=None, cov=1, allow_singular=False)",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Cumulative distribution function."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cdf(x, mean=None, cov=1, allow_singular=False, maxpts=1000000*dim, abseps=1e-5, releps=1e-5, lower_limit=None)  # noqa",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Log of the cumulative distribution function."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "logcdf(x, mean=None, cov=1, allow_singular=False, maxpts=1000000*dim, abseps=1e-5, releps=1e-5)",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Draw random samples from a multivariate normal distribution."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "rvs(mean=None, cov=1, size=1, random_state=None)",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Compute the differential entropy of the multivariate normal."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "entropy()",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "%(_mvn_doc_callparams_note)s"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The covariance matrix "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "cov"
            },
            {
              "type": "text",
              "value": " may be an instance of a subclass of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "Covariance"
            },
            {
              "type": "text",
              "value": ", e.g. "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "scipy.stats.CovViaPrecision"
            },
            {
              "type": "text",
              "value": ". If so, "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "allow_singular"
            },
            {
              "type": "text",
              "value": " is ignored."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Otherwise, "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "cov"
            },
            {
              "type": "text",
              "value": " must be a symmetric positive semidefinite matrix when "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "allow_singular"
            },
            {
              "type": "text",
              "value": " is True; it must be (strictly) positive definite when "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "allow_singular"
            },
            {
              "type": "text",
              "value": " is False. Symmetry is not checked; only the lower triangular portion is used. The determinant and inverse of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "cov"
            },
            {
              "type": "text",
              "value": " are computed as the pseudo-determinant and pseudo-inverse, respectively, so that "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "cov"
            },
            {
              "type": "text",
              "value": " does not need to have full rank."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The probability density function for "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "multivariate_normal"
            },
            {
              "type": "text",
              "value": " is"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "f(x) = \\frac{1}{\\sqrt{(2 \\pi)^k \\det \\Sigma}}\n       \\exp\\left( -\\frac{1}{2} (x - \\mu)^T \\Sigma^{-1} (x - \\mu) \\right),"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "where "
            },
            {
              "type": "inlineMath",
              "value": "\\mu"
            },
            {
              "type": "text",
              "value": " is the mean, "
            },
            {
              "type": "inlineMath",
              "value": "\\Sigma"
            },
            {
              "type": "text",
              "value": " the covariance matrix, "
            },
            {
              "type": "inlineMath",
              "value": "k"
            },
            {
              "type": "text",
              "value": " the rank of "
            },
            {
              "type": "inlineMath",
              "value": "\\Sigma"
            },
            {
              "type": "text",
              "value": ". In case of singular "
            },
            {
              "type": "inlineMath",
              "value": "\\Sigma"
            },
            {
              "type": "text",
              "value": ", SciPy extends this definition according to ."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionadded 0.14.0"
                }
              ],
              "type": "admonitionTitle"
            }
          ],
          "kind": "note",
          "type": "admonition"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "%(_mvn_doc_default_callparams)s",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [],
              "param": "%(_doc_random_state)s",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A multivariate normal random variable."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import multivariate_normal"
      },
      {
        "type": "code",
        "value": "x = np.linspace(0, 5, 10, endpoint=False)\ny = multivariate_normal.pdf(x, mean=2.5, cov=0.5); y"
      },
      {
        "type": "code",
        "value": "fig1 = plt.figure()\nax = fig1.add_subplot(111)\nax.plot(x, y)\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.stats._multivariate:multivariate_normal_gen-0-87b74c53.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      },
      {
        "type": "text",
        "value": "Alternatively, the object may be called (as a function) to fix the mean\nand covariance parameters, returning a \"frozen\" multivariate normal\nrandom variable:"
      },
      {
        "type": "code",
        "value": "rv = multivariate_normal(mean=None, cov=1, allow_singular=False)\n# Frozen object with the same methods but holding the given\n# mean and covariance fixed."
      },
      {
        "type": "text",
        "value": "The input quantiles can be any shape of array, as long as the last\naxis labels the components.  This allows us for instance to\ndisplay the frozen pdf for a non-isotropic random variable in 2D as\nfollows:"
      },
      {
        "type": "code",
        "value": "x, y = np.mgrid[-1:1:.01, -1:1:.01]\npos = np.dstack((x, y))\nrv = multivariate_normal([0.5, -0.2], [[2.0, 0.3], [0.3, 0.5]])\nfig2 = plt.figure()\nax2 = fig2.add_subplot(111)\nax2.contourf(x, y, rv.pdf(pos))"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/stats/_multivariate.py",
  "item_line": 287,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Methods",
    "Parameters",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}