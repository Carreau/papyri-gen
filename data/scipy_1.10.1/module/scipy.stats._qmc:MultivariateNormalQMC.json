{
  "aliases": [
    "scipy.stats._qmc.MultivariateNormalQMC"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The mean vector. Where "
                    },
                    {
                      "type": "inlineCode",
                      "value": "d"
                    },
                    {
                      "type": "text",
                      "value": " is the dimension."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "mean",
              "type": "Param",
              "type_": "array_like (d,)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The covariance matrix. If omitted, use "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "cov_root",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "cov_root"
                    },
                    {
                      "type": "text",
                      "value": " instead. If both "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "cov",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "cov"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "cov_root",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "cov_root"
                    },
                    {
                      "type": "text",
                      "value": " are omitted, use the identity matrix."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cov",
              "type": "Param",
              "type_": "array_like (d, d), optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A root decomposition of the covariance matrix, where "
                    },
                    {
                      "type": "inlineCode",
                      "value": "d'"
                    },
                    {
                      "type": "text",
                      "value": " may be less than "
                    },
                    {
                      "type": "inlineCode",
                      "value": "d"
                    },
                    {
                      "type": "text",
                      "value": " if the covariance is not full rank. If omitted, use "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "cov",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "cov"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cov_root",
              "type": "Param",
              "type_": "array_like (d, d'), optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, use inverse transform instead of Box-Muller. Default is True."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "inv_transform",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Quasi-Monte Carlo engine sampler. If None, "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "Sobol"
                    },
                    {
                      "type": "text",
                      "value": " is used."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "engine",
              "type": "Param",
              "type_": "QMCEngine, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Used only if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "engine",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "engine"
                    },
                    {
                      "type": "text",
                      "value": " is None. If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "seed",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "seed"
                    },
                    {
                      "type": "text",
                      "value": " is an int or None, a new "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "api",
                        "module": "numpy.random._generator",
                        "path": "numpy.random._generator:Generator",
                        "type": "RefInfo",
                        "version": "*"
                      },
                      "type": "Link",
                      "value": "numpy.random.Generator"
                    },
                    {
                      "type": "text",
                      "value": " is created using "
                    },
                    {
                      "type": "inlineCode",
                      "value": "np.random.default_rng(seed)"
                    },
                    {
                      "type": "text",
                      "value": ". If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "seed",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "seed"
                    },
                    {
                      "type": "text",
                      "value": " is already a "
                    },
                    {
                      "type": "inlineCode",
                      "value": "Generator"
                    },
                    {
                      "type": "text",
                      "value": " instance, then the provided instance is used."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "seed",
              "type": "Param",
              "type_": "{None, int, `numpy.random.Generator`}, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "QMC sampling from a multivariate Normal "
            },
            {
              "type": "inlineMath",
              "value": "N(\\mu, \\Sigma)"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import matplotlib.pyplot as plt\nfrom scipy.stats import qmc\ndist = qmc.MultivariateNormalQMC(mean=[0, 5], cov=[[1, 0], [0, 1]])\nsample = dist.random(512)\n_ = plt.scatter(sample[:, 0], sample[:, 1])\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.stats._qmc:MultivariateNormalQMC-0-09b6c17d.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/stats/_qmc.py",
  "item_line": 1962,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}