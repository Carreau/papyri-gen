{
  "aliases": [
    "scipy.stats.linregress"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Missing values are considered pair-wise: if a value is missing in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "x",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "x"
            },
            {
              "type": "text",
              "value": ", the corresponding value in "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "y",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "y"
            },
            {
              "type": "text",
              "value": " is masked."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For compatibility with older versions of SciPy, the return value acts like a "
            },
            {
              "type": "inlineCode",
              "value": "namedtuple"
            },
            {
              "type": "text",
              "value": " of length 5, with fields "
            },
            {
              "type": "inlineCode",
              "value": "slope"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "intercept"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "rvalue"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "pvalue"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "type": "inlineCode",
              "value": "stderr"
            },
            {
              "type": "text",
              "value": ", so one can continue to write      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "slope, intercept, r, p, se = linregress(x, y)"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "With that style, however, the standard error of the intercept is not available.  To have access to all the computed values, including the standard error of the intercept, use the return value as an object with attributes, e.g.      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "result = linregress(x, y)\nprint(result.intercept, result.intercept_stderr)"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Two sets of measurements.  Both arrays should have the same length.  If only "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": " is given (and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "y=None"
                    },
                    {
                      "type": "text",
                      "value": "), then it must be a two-dimensional array where one dimension has length 2.  The two sets of measurements are then found by splitting the array along the length-2 dimension. In the case where "
                    },
                    {
                      "type": "inlineCode",
                      "value": "y=None"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "x",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "x"
                    },
                    {
                      "type": "text",
                      "value": " is a 2x2 array, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "linregress(x)"
                    },
                    {
                      "type": "text",
                      "value": " is equivalent to "
                    },
                    {
                      "type": "inlineCode",
                      "value": "linregress(x[0], x[1])"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x, y",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Defines the alternative hypothesis. Default is 'two-sided'. The following options are available:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "'two-sided': the slope of the regression line is nonzero"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "'less': the slope of the regression line is less than zero"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "'greater':  the slope of the regression line is greater than zero"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.7.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "alternative",
              "type": "Param",
              "type_": "{'two-sided', 'less', 'greater'}, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The return value is an object with the following attributes:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "slope"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "slope"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "intercept"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "intercept"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "rvalue"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "rvalue"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "pvalue"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "pvalue"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "stderr"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "stderr"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    },
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "intercept_stderr"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "intercept_stderr"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    }
                  ],
                  "type": "DefList"
                }
              ],
              "param": "result",
              "type": "Param",
              "type_": "``LinregressResult`` instance"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Calculate a linear least-squares regression for two sets of measurements."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy import stats\nrng = np.random.default_rng()"
      },
      {
        "type": "text",
        "value": "Generate some data:"
      },
      {
        "type": "code",
        "value": "x = rng.random(10)\ny = 1.6*x + rng.random(10)"
      },
      {
        "type": "text",
        "value": "Perform the linear regression:"
      },
      {
        "type": "code",
        "value": "res = stats.linregress(x, y)"
      },
      {
        "type": "text",
        "value": "Coefficient of determination (R-squared):"
      },
      {
        "type": "code",
        "value": "print(f\"R-squared: {res.rvalue**2:.6f}\")"
      },
      {
        "type": "text",
        "value": "Plot the data along with the fitted line:"
      },
      {
        "type": "code",
        "value": "plt.plot(x, y, 'o', label='original data')\nplt.plot(x, res.intercept + res.slope*x, 'r', label='fitted line')\nplt.legend()\nplt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.stats._stats_mstats_common:linregress-0-76e32be5.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      },
      {
        "type": "text",
        "value": "Calculate 95% confidence interval on slope and intercept:"
      },
      {
        "type": "code",
        "value": "# Two-sided inverse Students t-distribution\n# p - probability, df - degrees of freedom\nfrom scipy.stats import t\ntinv = lambda p, df: abs(t.ppf(p/2, df))"
      },
      {
        "type": "code",
        "value": "ts = tinv(0.05, len(x)-2)\nprint(f\"slope (95%): {res.slope:.6f} +/- {ts*res.stderr:.6f}\")"
      },
      {
        "type": "code",
        "value": "print(f\"intercept (95%): {res.intercept:.6f}\"\n      f\" +/- {ts*res.intercept_stderr:.6f}\")"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/stats/_stats_mstats_common.py",
  "item_line": 22,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Use non-linear least squares to fit a function to data."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.optimize._minpack_py:curve_fit",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "scipy.optimize.curve_fit"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Minimize the sum of squares of a set of equations."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.optimize._minpack_py:leastsq",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "scipy.optimize.leastsq"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(x, y=None, alternative='two-sided')"
  },
  "type": "DocBlob"
}