{
  "aliases": [
    "scipy.stats.cumfreq"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A cumulative histogram is a mapping that counts the cumulative number of observations in all of the bins up to the specified bin."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Input array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "a",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The number of bins to use for the histogram. Default is 10."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "numbins",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The lower and upper values for the range of the histogram. If no value is given, a range slightly larger than the range of the values in "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": " is used. Specifically "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(a.min() - s, a.max() + s)"
                    },
                    {
                      "type": "text",
                      "value": ", where "
                    },
                    {
                      "type": "inlineCode",
                      "value": "s = (1/2)(a.max() - a.min()) / (numbins - 1)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "defaultreallimits",
              "type": "Param",
              "type_": "tuple (lower, upper), optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The weights for each value in "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": ". Default is None, which gives each value a weight of 1.0"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "weights",
              "type": "Param",
              "type_": "array_like, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Binned values of cumulative frequency."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cumcount",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Lower real limit"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "lowerlimit",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Width of each bin."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "binsize",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Extra points."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "extrapoints",
              "type": "Param",
              "type_": "int"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return a cumulative frequency histogram, using the histogram function."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy import stats\nrng = np.random.default_rng()\nx = [1, 4, 2, 1, 3, 1]\nres = stats.cumfreq(x, numbins=4, defaultreallimits=(1.5, 5))\nres.cumcount"
      },
      {
        "type": "code",
        "value": "res.extrapoints"
      },
      {
        "type": "text",
        "value": "Create a normal distribution with 1000 random values"
      },
      {
        "type": "code",
        "value": "samples = stats.norm.rvs(size=1000, random_state=rng)"
      },
      {
        "type": "text",
        "value": "Calculate cumulative frequencies"
      },
      {
        "type": "code",
        "value": "res = stats.cumfreq(samples, numbins=25)"
      },
      {
        "type": "text",
        "value": "Calculate space of values for x"
      },
      {
        "type": "code",
        "value": "x = res.lowerlimit + np.linspace(0, res.binsize*res.cumcount.size,\n                                 res.cumcount.size)"
      },
      {
        "type": "text",
        "value": "Plot histogram and cumulative histogram"
      },
      {
        "type": "code",
        "value": "fig = plt.figure(figsize=(10, 4))\nax1 = fig.add_subplot(1, 2, 1)\nax2 = fig.add_subplot(1, 2, 2)\nax1.hist(samples, bins=25)\nax1.set_title('Histogram')\nax2.bar(x, res.cumcount, width=res.binsize)\nax2.set_title('Cumulative histogram')\nax2.set_xlim([x.min(), x.max()])"
      },
      {
        "type": "code",
        "value": "plt.show()"
      },
      {
        "type": "Fig",
        "value": {
          "kind": "assets",
          "module": "scipy",
          "path": "fig-scipy.stats._stats_py:cumfreq-0-5989bfe3.png",
          "type": "RefInfo",
          "version": "1.10.1"
        }
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/stats/_stats_py.py",
  "item_line": 2290,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(a, numbins=10, defaultreallimits=None, weights=None)"
  },
  "type": "DocBlob"
}