{
  "aliases": [
    "scipy.stats.pmean"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The weighted power mean of the array "
            },
            {
              "type": "inlineMath",
              "value": "a_i"
            },
            {
              "type": "text",
              "value": " associated to weights "
            },
            {
              "type": "inlineMath",
              "value": "w_i"
            },
            {
              "type": "text",
              "value": " is:"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "\\left( \\frac{ \\sum_{i=1}^n w_i a_i^p }{ \\sum_{i=1}^n w_i }\n      \\right)^{ 1 / p } \\, ,"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "and, with equal weights, it gives:"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "math",
          "value": "\\left( \\frac{ 1 }{ n } \\sum_{i=1}^n a_i^p \\right)^{ 1 / p }  \\, ."
        },
        {
          "children": [
            {
              "type": "text",
              "value": "This mean is also called generalized mean or H\u00f6lder mean, and must not be confused with the Kolmogorov generalized mean, also called quasi-arithmetic mean or generalized f-mean ."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The power mean is computed over a single dimension of the input array, "
            },
            {
              "type": "inlineCode",
              "value": "axis=0"
            },
            {
              "type": "text",
              "value": " by default, or all values in the array if "
            },
            {
              "type": "inlineCode",
              "value": "axis=None"
            },
            {
              "type": "text",
              "value": ". float64 intermediate and return values are used for integer inputs."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "type": "text",
                  "value": "versionadded 1.9"
                }
              ],
              "type": "admonitionTitle"
            }
          ],
          "kind": "note",
          "type": "admonition"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Beginning in SciPy 1.9, "
            },
            {
              "type": "inlineCode",
              "value": "np.matrix"
            },
            {
              "type": "text",
              "value": " inputs (not recommended for new code) are converted to "
            },
            {
              "type": "inlineCode",
              "value": "np.ndarray"
            },
            {
              "type": "text",
              "value": " before the calculation is performed. In this case, the output will be a scalar or "
            },
            {
              "type": "inlineCode",
              "value": "np.ndarray"
            },
            {
              "type": "text",
              "value": " of appropriate shape rather than a 2D "
            },
            {
              "type": "inlineCode",
              "value": "np.matrix"
            },
            {
              "type": "text",
              "value": ". Similarly, while masked elements of masked arrays are ignored, the output will be a scalar or "
            },
            {
              "type": "inlineCode",
              "value": "np.ndarray"
            },
            {
              "type": "text",
              "value": " rather than a masked array with "
            },
            {
              "type": "inlineCode",
              "value": "mask=False"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Input array, masked array or object that can be converted to an array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "a",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Exponent."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "p",
              "type": "Param",
              "type_": "int or float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If an int, the axis of the input along which to compute the statistic. The statistic of each axis-slice (e.g. row) of the input will appear in a corresponding element of the output. If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "None"
                    },
                    {
                      "type": "text",
                      "value": ", the input will be raveled before computing the statistic."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axis",
              "type": "Param",
              "type_": "int or None, default: 0"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Type of the returned array and of the accumulator in which the elements are summed. If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "dtype",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "dtype"
                    },
                    {
                      "type": "text",
                      "value": " is not specified, it defaults to the dtype of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": ", unless "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": " has an integer "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "dtype",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "dtype"
                    },
                    {
                      "type": "text",
                      "value": " with a precision less than that of the default platform integer. In that case, the default platform integer is used."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dtype",
              "type": "Param",
              "type_": "dtype, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The weights array can either be 1-D (in which case its length must be the size of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": " along the given "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "axis",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "axis"
                    },
                    {
                      "type": "text",
                      "value": ") or of the same shape as "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": ". Default is None, which gives each value a weight of 1.0."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "weights",
              "type": "Param",
              "type_": "array_like, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Defines how to handle input NaNs."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "inlineCode",
                              "value": "propagate"
                            },
                            {
                              "type": "text",
                              "value": ": if a NaN is present in the axis slice (e.g. row) along   which the  statistic is computed, the corresponding entry of the output   will be NaN."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "inlineCode",
                              "value": "omit"
                            },
                            {
                              "type": "text",
                              "value": ": NaNs will be omitted when performing the calculation.   If insufficient data remains in the axis slice along which the   statistic is computed, the corresponding entry of the output will be   NaN."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "inlineCode",
                              "value": "raise"
                            },
                            {
                              "type": "text",
                              "value": ": if a NaN is present, a "
                            },
                            {
                              "type": "inlineCode",
                              "value": "ValueError"
                            },
                            {
                              "type": "text",
                              "value": " will be raised."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                }
              ],
              "param": "nan_policy",
              "type": "Param",
              "type_": "{'propagate', 'omit', 'raise'}"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If this is set to True, the axes which are reduced are left in the result as dimensions with size one. With this option, the result will broadcast correctly against the input array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "keepdims",
              "type": "Param",
              "type_": "bool, default: False"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Output array containing the power mean values."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "pmean",
              "type": "Param",
              "type_": "ndarray, see `dtype` parameter above."
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Calculate the weighted power mean along the specified axis."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from scipy.stats import pmean, hmean, gmean\npmean([1, 4], 1.3)"
      },
      {
        "type": "code",
        "value": "pmean([1, 2, 3, 4, 5, 6, 7], 1.3)"
      },
      {
        "type": "code",
        "value": "pmean([1, 4, 7], -2, weights=[3, 1, 3])"
      },
      {
        "type": "text",
        "value": "For p=-1, power mean is equal to harmonic mean:"
      },
      {
        "type": "code",
        "value": "pmean([1, 4, 7], -1, weights=[3, 1, 3])"
      },
      {
        "type": "code",
        "value": "hmean([1, 4, 7], weights=[3, 1, 3])"
      },
      {
        "type": "text",
        "value": "For p=0, power mean is defined as the geometric mean:"
      },
      {
        "type": "code",
        "value": "pmean([1, 4, 7], 0, weights=[3, 1, 3])"
      },
      {
        "type": "code",
        "value": "gmean([1, 4, 7], weights=[3, 1, 3])"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/stats/_stats_py.py",
  "item_line": 367,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Weighted average"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "numpy.average",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "numpy.average"
      },
      "type": "func"
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Geometric mean"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.stats._stats_py:gmean",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "gmean"
      },
      "type": "func"
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "Harmonic mean"
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.stats._stats_py:hmean",
          "type": "RefInfo",
          "version": "1.10.1"
        },
        "type": "Link",
        "value": "hmean"
      },
      "type": "func"
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(a, p, *, axis=0, dtype=None, weights=None, nan_policy='propagate', keepdims=False)"
  },
  "type": "DocBlob"
}