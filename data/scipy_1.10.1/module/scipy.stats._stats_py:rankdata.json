{
  "aliases": [
    "scipy.stats.rankdata"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "By default ("
            },
            {
              "type": "inlineCode",
              "value": "axis=None"
            },
            {
              "type": "text",
              "value": "), the data array is first flattened, and a flat array of ranks is returned. Separately reshape the rank array to the shape of the data array if desired (see Examples)."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Ranks begin at 1.  The "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "method",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "method"
            },
            {
              "type": "text",
              "value": " argument controls how ranks are assigned to equal values.  See  for further discussion of ranking methods."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The array of values to be ranked."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "a",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The method used to assign ranks to tied elements. The following methods are available (default is 'average'):"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'average': The average of the ranks that would have been assigned to     all the tied values is assigned to each value."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'min': The minimum of the ranks that would have been assigned to all     the tied values is assigned to each value.  (This is also     referred to as \"competition\" ranking.)"
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'max': The maximum of the ranks that would have been assigned to all     the tied values is assigned to each value."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'dense': Like 'min', but the rank of the next highest element is     assigned the rank immediately after those assigned to the tied     elements."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'ordinal': All values are given a distinct rank, corresponding to     the order that the values occur in "
                                },
                                {
                                  "anchor": null,
                                  "exists": true,
                                  "kind": "local",
                                  "reference": {
                                    "kind": "local",
                                    "module": null,
                                    "path": "a",
                                    "type": "RefInfo",
                                    "version": null
                                  },
                                  "type": "Link",
                                  "value": "a"
                                },
                                {
                                  "type": "text",
                                  "value": "."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        }
                      ],
                      "ordered": false,
                      "spread": false,
                      "start": 1,
                      "type": "list"
                    }
                  ],
                  "type": "blockquote"
                }
              ],
              "param": "method",
              "type": "Param",
              "type_": "{'average', 'min', 'max', 'dense', 'ordinal'}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Axis along which to perform the ranking. If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "None"
                    },
                    {
                      "type": "text",
                      "value": ", the data array is first flattened."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axis",
              "type": "Param",
              "type_": "{None, int}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Defines how to handle when input contains nan. The following options are available (default is 'propagate'):"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'propagate': propagates nans through the rank calculation"
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'omit': performs the calculations ignoring nan values"
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "'raise': raises an error"
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        }
                      ],
                      "ordered": false,
                      "spread": false,
                      "start": 1,
                      "type": "list"
                    }
                  ],
                  "type": "blockquote"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "note "
                        }
                      ],
                      "type": "admonitionTitle"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "When "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "nan_policy"
                        },
                        {
                          "type": "text",
                          "value": " is 'propagate', the output is an array of "
                        },
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "all"
                            }
                          ],
                          "type": "emphasis"
                        },
                        {
                          "type": "text",
                          "value": " nans because ranks relative to nans in the input are undefined. When "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "nan_policy"
                        },
                        {
                          "type": "text",
                          "value": " is 'omit', nans in "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "a"
                        },
                        {
                          "type": "text",
                          "value": " are ignored when ranking the other values, and the corresponding locations of the output are nan."
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 1.10"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "nan_policy",
              "type": "Param",
              "type_": "{'propagate', 'omit', 'raise'}, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An array of size equal to the size of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "a",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "a"
                    },
                    {
                      "type": "text",
                      "value": ", containing rank scores."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "ranks",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Assign ranks to data, dealing with ties appropriately."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy.stats import rankdata\nrankdata([0, 2, 3, 2])"
      },
      {
        "type": "code",
        "value": "rankdata([0, 2, 3, 2], method='min')"
      },
      {
        "type": "code",
        "value": "rankdata([0, 2, 3, 2], method='max')"
      },
      {
        "type": "code",
        "value": "rankdata([0, 2, 3, 2], method='dense')"
      },
      {
        "type": "code",
        "value": "rankdata([0, 2, 3, 2], method='ordinal')"
      },
      {
        "type": "code",
        "value": "rankdata([[0, 2], [3, 2]]).reshape(2,2)"
      },
      {
        "type": "code",
        "value": "rankdata([[0, 2, 2], [3, 2, 5]], axis=1)"
      },
      {
        "type": "code",
        "value": "rankdata([0, 2, 3, np.nan, -2, np.nan], nan_policy=\"propagate\")"
      },
      {
        "type": "code",
        "value": "rankdata([0, 2, 3, np.nan, -2, np.nan], nan_policy=\"omit\")"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/stats/_stats_py.py",
  "item_line": 9392,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(a, method='average', *, axis=None, nan_policy='propagate')"
  },
  "type": "DocBlob"
}