{
  "aliases": [
    "scipy.stats.sigmaclip"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Starting from the full sample, all elements outside the critical range are removed, i.e. all elements of the input array "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "c"
            },
            {
              "type": "text",
              "value": " that satisfy either of the following conditions      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "c < mean(c) - std(c)*low\nc > mean(c) + std(c)*high"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "The iteration continues with the updated sample until no elements are outside the (updated) range."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Data array, will be raveled if not 1-D."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "a",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Lower bound factor of sigma clipping. Default is 4."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "low",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Upper bound factor of sigma clipping. Default is 4."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "high",
              "type": "Param",
              "type_": "float, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Input array with clipped elements removed."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "clipped",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Lower threshold value use for clipping."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "lower",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Upper threshold value use for clipping."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "upper",
              "type": "Param",
              "type_": "float"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Perform iterative sigma-clipping of array elements."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nfrom scipy.stats import sigmaclip\na = np.concatenate((np.linspace(9.5, 10.5, 31),\n                    np.linspace(0, 20, 5)))\nfact = 1.5\nc, low, upp = sigmaclip(a, fact, fact)\nc"
      },
      {
        "type": "code",
        "value": "c.var(), c.std()"
      },
      {
        "type": "code",
        "value": "low, c.mean() - fact*c.std(), c.min()"
      },
      {
        "type": "code",
        "value": "upp, c.mean() + fact*c.std(), c.max()"
      },
      {
        "type": "code",
        "value": "a = np.concatenate((np.linspace(9.5, 10.5, 11),\n                    np.linspace(-100, -50, 3)))\nc, low, upp = sigmaclip(a, 1.8, 1.8)\n(c == np.linspace(9.5, 10.5, 11)).all()"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/scipy/stats/_stats_py.py",
  "item_line": 3376,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(a, low=4.0, high=4.0)"
  },
  "type": "DocBlob"
}