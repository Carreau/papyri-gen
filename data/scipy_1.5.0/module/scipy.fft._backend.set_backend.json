{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Context manager to set the backend within a fixed scope."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Upon entering the "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "with"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " statement, the given backend will be added to the list of available backends with the highest priority. Upon exit, the backend is reset to the state before entering the scope."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "backend: {object, 'scipy'}",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The backend to use. Can either be a "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "str"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " containing the name of a known backend {'scipy'} or an object that implements the uarray protocol."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "coerce: bool, optional",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Whether to allow expensive conversions for the "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "x"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " parameter. e.g., copying a NumPy array to the GPU for a CuPy backend. Implies "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "only"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "only: bool, optional",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If only is "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "True"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and this backend returns "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "NotImplemented"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", then a BackendNotImplemented error will be raised immediately. Ignoring any lower priority backends."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    "scipy",
    "scipy.fft",
    "scipy.fft._backend.set_backend",
    "typing.Callable"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/scipy/fft/_backend.py",
  "item_line": 119,
  "item_type": "<class 'function'>",
  "aliases": [
    "scipy.fft.set_backend"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scipy",
              "scipy",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "fft",
              "scipy.fft",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "as",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "fft",
              "scipy.fft",
              "nn"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "with",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "fft",
              "scipy.fft",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "set_backend",
              "scipy.fft._backend.set_backend",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "scipy",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "only",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "True",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "fft",
              "scipy.fft",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "fft",
              "typing.Callable",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# Always calls the scipy implementation",
              "",
              "c1"
            ]
          ],
          "out": "array([1.+0.j])",
          "ce_status": "execed"
        }
      }
    ],
    "title": null
  },
  "see_also": [],
  "signature": "set_backend(backend, coerce=False, only=False)",
  "references": null,
  "arbitrary": []
}