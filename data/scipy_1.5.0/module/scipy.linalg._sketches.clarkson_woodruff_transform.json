{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "\" Applies a Clarkson-Woodruff Transform/sketch to the input matrix."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Given an input_matrix "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "A"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " of size "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "(n,",
                    " ",
                    "d)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", compute a matrix "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "A'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " of size (sketch_size, d) so that"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. math:: \\|Ax\\| \\approx \\|A'x\\|",
                  "_number": 3,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 4,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": []
            },
            "directive_name": "math",
            "args0": [
              " \\|Ax\\| \\approx \\|A'x\\|"
            ],
            "inner": null
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "with high probability via the Clarkson-Woodruff Transform, otherwise known as the CountSketch matrix."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "input_matrix: array_like",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Input matrix, of shape "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "(n,",
                          " ",
                          "d)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "sketch_size: int",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Number of rows for the sketch."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "seed",
            "type_": "None or int or `numpy.random.RandomState` instance, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "This parameter defines the "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "RandomState"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " object to use for drawing random variates. If None (or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "np.random"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "), the global "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "np.random"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " state is used. If integer, it is used to seed the local "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "RandomState"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " instance. Default is None."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "A'",
            "type_": "array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Sketch of the input matrix "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "A"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", of size "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "(sketch",
                          "_",
                          "size,",
                          " ",
                          "d)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "To make the statement"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. math:: \\|Ax\\| \\approx \\|A'x\\|",
                  "_number": 2,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 3,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": []
            },
            "directive_name": "math",
            "args0": [
              " \\|Ax\\| \\approx \\|A'x\\|"
            ],
            "inner": null
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "precise, observe the following result which is adapted from the proof of Theorem 14 of [2]_ via Markov's Inequality. If we have a sketch size "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "sketch",
                    "_",
                    "size=k"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " which is at least"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. math:: k \\geq \\frac{2}{\\epsilon^2\\delta}",
                  "_number": 8,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 9,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": []
            },
            "directive_name": "math",
            "args0": [
              " k \\geq \\frac{2}{\\epsilon^2\\delta}"
            ],
            "inner": null
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Then for any fixed vector "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "x"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ","
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. math:: \\|Ax\\| = (1\\pm\\epsilon)\\|A'x\\|",
                  "_number": 12,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 13,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": []
            },
            "directive_name": "math",
            "args0": [
              " \\|Ax\\| = (1\\pm\\epsilon)\\|A'x\\|"
            ],
            "inner": null
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "with probability at least one minus delta."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This implementation takes advantage of sparsity: computing a sketch takes time proportional to "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "A.nnz"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". Data "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "A"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " which is in "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "scipy.sparse.csc",
                    "_",
                    "matrix"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " format gives the quickest computation time for sparse input."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Example",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ">>> from scipy import linalg",
                  "_number": 21,
                  "_offset": 0
                },
                {
                  "_line": ">>> from scipy import sparse",
                  "_number": 22,
                  "_offset": 0
                },
                {
                  "_line": ">>> n_rows, n_columns, density, sketch_n_rows = 15000, 100, 0.01, 200",
                  "_number": 23,
                  "_offset": 0
                },
                {
                  "_line": ">>> A = sparse.rand(n_rows, n_columns, density=density, format='csc')",
                  "_number": 24,
                  "_offset": 0
                },
                {
                  "_line": ">>> B = sparse.rand(n_rows, n_columns, density=density, format='csr')",
                  "_number": 25,
                  "_offset": 0
                },
                {
                  "_line": ">>> C = sparse.rand(n_rows, n_columns, density=density, format='coo')",
                  "_number": 26,
                  "_offset": 0
                },
                {
                  "_line": ">>> D = np.random.randn(n_rows, n_columns)",
                  "_number": 27,
                  "_offset": 0
                },
                {
                  "_line": ">>> SA = linalg.clarkson_woodruff_transform(A, sketch_n_rows) # fastest",
                  "_number": 28,
                  "_offset": 0
                },
                {
                  "_line": ">>> SB = linalg.clarkson_woodruff_transform(B, sketch_n_rows) # fast",
                  "_number": 29,
                  "_offset": 0
                },
                {
                  "_line": ">>> SC = linalg.clarkson_woodruff_transform(C, sketch_n_rows) # slower",
                  "_number": 30,
                  "_offset": 0
                },
                {
                  "_line": ">>> SD = linalg.clarkson_woodruff_transform(D, sketch_n_rows) # slowest",
                  "_number": 31,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 32,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": []
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "That said, this method does perform well on dense inputs, just slower on a relative scale."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes",
    "Examples",
    "References"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/scipy/linalg/_sketches.py",
  "item_line": 55,
  "item_type": "<class 'function'>",
  "aliases": [
    "scipy.linalg.clarkson_woodruff_transform"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Given a big dense matrix "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "A"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ":"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "from",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scipy",
              "",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "linalg",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "n_rows",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "n_columns",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "sketch_n_rows",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "15000",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "100",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "200",
              "",
              "mi"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "A",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "randn",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "n_rows",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "n_columns",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "sketch",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "linalg",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "clarkson_woodruff_transform",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "A",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "sketch_n_rows",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "sketch",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "shape",
              "",
              ""
            ]
          ],
          "out": "(200, 100)",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "norm_A",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "linalg",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "norm",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "A",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "norm_sketch",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "linalg",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "norm",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "sketch",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Now with high probability, the true norm "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "norm",
                  "_",
                  "A"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " is close to the sketched norm "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "norm",
                  "_",
                  "sketch"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " in absolute value."
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Similarly, applying our sketch preserves the solution to a linear regression of "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "\\min",
                  " ",
                  "\\|Ax",
                  " ",
                  "-",
                  " ",
                  "b\\|"
                ],
                "domain": null,
                "role": "math"
              }
            },
            {
              "type": "Words",
              "data": {
                "value": "."
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "from",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scipy",
              "",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "linalg",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "n_rows",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "n_columns",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "sketch_n_rows",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "15000",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "100",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "200",
              "",
              "mi"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "A",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "randn",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "n_rows",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "n_columns",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "b",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "randn",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "n_rows",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "x",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "linalg",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "lstsq",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "A",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "b",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "rcond",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "None",
              "",
              "kc"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "Ab",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "hstack",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "A",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "b",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "reshape",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "SAb",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "linalg",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "clarkson_woodruff_transform",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "Ab",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "sketch_n_rows",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "SA",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "Sb",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "SAb",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "SAb",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "x_sketched",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "linalg",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "lstsq",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "SA",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "Sb",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "rcond",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "None",
              "",
              "kc"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "As with the matrix norm example, "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "np.linalg.norm(A",
                  " ",
                  "@",
                  " ",
                  "x",
                  " ",
                  "-",
                  " ",
                  "b)"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " is close to "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "np.linalg.norm(A",
                  " ",
                  "@",
                  " ",
                  "x",
                  "_",
                  "sketched",
                  " ",
                  "-",
                  " ",
                  "b)"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " with high probability."
              }
            }
          ],
          "inner": []
        }
      }
    ],
    "title": null
  },
  "see_also": [],
  "signature": "clarkson_woodruff_transform(input_matrix, sketch_size, seed=None)",
  "references": [
    ".. [1] Kenneth L. Clarkson and David P. Woodruff. Low rank approximation and",
    "       regression in input sparsity time. In STOC, 2013.",
    "",
    ".. [2] David P. Woodruff. Sketching as a tool for numerical linear algebra.",
    "       In Foundations and Trends in Theoretical Computer Science, 2014."
  ],
  "arbitrary": []
}