{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Linear programming: minimize a linear objective function subject to linear equality and inequality constraints."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Linear programming solves problems of the following form:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. math::",
                  "_number": 2,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 3,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": [
                {
                  "_line": "    \\min_x \\ & c^T x \\\\",
                  "_number": 4,
                  "_offset": 0
                },
                {
                  "_line": "    \\mbox{such that} \\ & A_{ub} x \\leq b_{ub},\\\\",
                  "_number": 5,
                  "_offset": 0
                },
                {
                  "_line": "    & A_{eq} x = b_{eq},\\\\",
                  "_number": 6,
                  "_offset": 0
                },
                {
                  "_line": "    & l \\leq x \\leq u ,",
                  "_number": 7,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 8,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "math",
            "args0": [
              ""
            ],
            "inner": {
              "inline": [
                {
                  "type": "Words",
                  "data": {
                    "value": "\\min_x \\ & c^T x \\\\ \\mbox{such that} \\ & A_{ub} x \\leq b_{ub},\\\\ & A_{eq} x = b_{eq},\\\\ & l \\leq x \\leq u , "
                  }
                }
              ],
              "inner": []
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "where "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "x"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is a vector of decision variables; "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "c"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "b",
                    "_",
                    "{ub}"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "b",
                    "_",
                    "{eq}"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "l"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "u"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " are vectors; and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "A",
                    "_",
                    "{ub}"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "A",
                    "_",
                    "{eq}"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " are matrices."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Informally, that's:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "minimize::"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "    c @ x",
                  "_number": 17,
                  "_offset": 4
                },
                {
                  "_line": "",
                  "_number": 18,
                  "_offset": 4
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "such that::"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "    A_ub @ x <= b_ub",
                  "_number": 21,
                  "_offset": 4
                },
                {
                  "_line": "    A_eq @ x == b_eq",
                  "_number": 22,
                  "_offset": 4
                },
                {
                  "_line": "    lb <= x <= ub",
                  "_number": 23,
                  "_offset": 4
                },
                {
                  "_line": "",
                  "_number": 24,
                  "_offset": 4
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Note that by default "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "lb",
                    " ",
                    "=",
                    " ",
                    "0"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "ub",
                    " ",
                    "=",
                    " ",
                    "None"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " unless specified with "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "bounds"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "c",
            "type_": "1-D array",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The coefficients of the linear objective function to be minimized."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "A_ub",
            "type_": "2-D array, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The inequality constraint matrix. Each row of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "A",
                          "_",
                          "ub"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " specifies the coefficients of a linear inequality constraint on "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "x"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "b_ub",
            "type_": "1-D array, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The inequality constraint vector. Each element represents an upper bound on the corresponding value of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "A",
                          "_",
                          "ub",
                          " ",
                          "@",
                          " ",
                          "x"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "A_eq",
            "type_": "2-D array, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The equality constraint matrix. Each row of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "A",
                          "_",
                          "eq"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " specifies the coefficients of a linear equality constraint on "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "x"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "b_eq",
            "type_": "1-D array, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The equality constraint vector. Each element of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "A",
                          "_",
                          "eq",
                          " ",
                          "@",
                          " ",
                          "x"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " must equal the corresponding element of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "b",
                          "_",
                          "eq"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "bounds",
            "type_": "sequence, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A sequence of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "(min,",
                          " ",
                          "max)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " pairs for each element in "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "x"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", defining the minimum and maximum values of that decision variable. Use "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "None"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " to indicate that there is no bound. By default, bounds are "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "(0,",
                          " ",
                          "None)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (all decision variables are non-negative). If a single tuple "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "(min,",
                          " ",
                          "max)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is provided, then "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "min"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "max"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " will serve as bounds for all decision variables."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "method",
            "type_": "{'interior-point', 'revised simplex', 'simplex'}, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The algorithm used to solve the standard form problem. "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "'interior-point'",
                          " ",
                          "<optimize.linprog-interior-point>"
                        ],
                        "domain": null,
                        "role": "ref"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (default), "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "'revised",
                          " ",
                          "simplex'",
                          " ",
                          "<optimize.linprog-revised",
                          "_",
                          "simplex>"
                        ],
                        "domain": null,
                        "role": "ref"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", and "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "'simplex'",
                          " ",
                          "<optimize.linprog-simplex>"
                        ],
                        "domain": null,
                        "role": "ref"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (legacy) are supported."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "callback",
            "type_": "callable, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If a callback function is provided, it will be called at least once per iteration of the algorithm. The callback function must accept a single "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "scipy.optimize.OptimizeResult"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " consisting of the following fields:"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    x : 1-D array",
                            "_number": 4,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "        The current solution vector.",
                            "_number": 5,
                            "_offset": 8
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "x : 1-D array"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "The current solution vector."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    fun : float",
                            "_number": 6,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "        The current value of the objective function ``c @ x``.",
                            "_number": 7,
                            "_offset": 8
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "fun : float"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "The current value of the objective function "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "c",
                                    " ",
                                    "@",
                                    " ",
                                    "x"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": "."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    success : bool",
                            "_number": 8,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "        ``True`` when the algorithm has completed successfully.",
                            "_number": 9,
                            "_offset": 8
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "success : bool"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "True"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " when the algorithm has completed successfully."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    slack : 1-D array",
                            "_number": 10,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "        The (nominally positive) values of the slack,",
                            "_number": 11,
                            "_offset": 8
                          },
                          {
                            "_line": "        ``b_ub - A_ub @ x``.",
                            "_number": 12,
                            "_offset": 8
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "slack : 1-D array"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "The (nominally positive) values of the slack, "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "b",
                                    "_",
                                    "ub",
                                    " ",
                                    "-",
                                    " ",
                                    "A",
                                    "_",
                                    "ub",
                                    " ",
                                    "@",
                                    " ",
                                    "x"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": "."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    con : 1-D array",
                            "_number": 13,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "        The (nominally zero) residuals of the equality constraints,",
                            "_number": 14,
                            "_offset": 8
                          },
                          {
                            "_line": "        ``b_eq - A_eq @ x``.",
                            "_number": 15,
                            "_offset": 8
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "con : 1-D array"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "The (nominally zero) residuals of the equality constraints, "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "b",
                                    "_",
                                    "eq",
                                    " ",
                                    "-",
                                    " ",
                                    "A",
                                    "_",
                                    "eq",
                                    " ",
                                    "@",
                                    " ",
                                    "x"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": "."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    phase : int",
                            "_number": 16,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "        The phase of the algorithm being executed.",
                            "_number": 17,
                            "_offset": 8
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "phase : int"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "The phase of the algorithm being executed."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    status : int",
                            "_number": 18,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "        An integer representing the status of the algorithm.",
                            "_number": 19,
                            "_offset": 8
                          },
                          {
                            "_line": "",
                            "_number": 20,
                            "_offset": 8
                          },
                          {
                            "_line": "        ``0`` : Optimization proceeding nominally.",
                            "_number": 21,
                            "_offset": 8
                          },
                          {
                            "_line": "",
                            "_number": 22,
                            "_offset": 8
                          },
                          {
                            "_line": "        ``1`` : Iteration limit reached.",
                            "_number": 23,
                            "_offset": 8
                          },
                          {
                            "_line": "",
                            "_number": 24,
                            "_offset": 8
                          },
                          {
                            "_line": "        ``2`` : Problem appears to be infeasible.",
                            "_number": 25,
                            "_offset": 8
                          },
                          {
                            "_line": "",
                            "_number": 26,
                            "_offset": 8
                          },
                          {
                            "_line": "        ``3`` : Problem appears to be unbounded.",
                            "_number": 27,
                            "_offset": 8
                          },
                          {
                            "_line": "",
                            "_number": 28,
                            "_offset": 8
                          },
                          {
                            "_line": "        ``4`` : Numerical difficulties encountered.",
                            "_number": 29,
                            "_offset": 8
                          },
                          {
                            "_line": "",
                            "_number": 30,
                            "_offset": 8
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "status : int"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "An integer representing the status of the algorithm.  "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "0"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " : Optimization proceeding nominally.  "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "1"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " : Iteration limit reached.  "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "2"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " : Problem appears to be infeasible.  "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "3"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " : Problem appears to be unbounded.  "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "4"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " : Numerical difficulties encountered. "
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    nit : int",
                            "_number": 31,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "        The current iteration number.",
                            "_number": 32,
                            "_offset": 8
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "nit : int"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "The current iteration number."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    message : str",
                            "_number": 33,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "        A string descriptor of the algorithm status.",
                            "_number": 34,
                            "_offset": 8
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "message : str"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "A string descriptor of the algorithm status."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "options",
            "type_": "dict, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A dictionary of solver options. All methods accept the following options:"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    maxiter : int",
                            "_number": 3,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "        Maximum number of iterations to perform.",
                            "_number": 4,
                            "_offset": 8
                          },
                          {
                            "_line": "        Default: see method-specific documentation.",
                            "_number": 5,
                            "_offset": 8
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "maxiter : int"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Maximum number of iterations to perform. Default: see method-specific documentation."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    disp : bool",
                            "_number": 6,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "        Set to ``True`` to print convergence messages.",
                            "_number": 7,
                            "_offset": 8
                          },
                          {
                            "_line": "        Default: ``False``.",
                            "_number": 8,
                            "_offset": 8
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "disp : bool"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Set to "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "True"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " to print convergence messages. Default: "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "False"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": "."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    autoscale : bool",
                            "_number": 9,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "        Set to ``True`` to automatically perform equilibration.",
                            "_number": 10,
                            "_offset": 8
                          },
                          {
                            "_line": "        Consider using this option if the numerical values in the",
                            "_number": 11,
                            "_offset": 8
                          },
                          {
                            "_line": "        constraints are separated by several orders of magnitude.",
                            "_number": 12,
                            "_offset": 8
                          },
                          {
                            "_line": "        Default: ``False``.",
                            "_number": 13,
                            "_offset": 8
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "autoscale : bool"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Set to "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "True"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " to automatically perform equilibration. Consider using this option if the numerical values in the constraints are separated by several orders of magnitude. Default: "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "False"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": "."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    presolve : bool",
                            "_number": 14,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "        Set to ``False`` to disable automatic presolve.",
                            "_number": 15,
                            "_offset": 8
                          },
                          {
                            "_line": "        Default: ``True``.",
                            "_number": 16,
                            "_offset": 8
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "presolve : bool"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Set to "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "False"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " to disable automatic presolve. Default: "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "True"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": "."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    rr : bool",
                            "_number": 17,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "        Set to ``False`` to disable automatic redundancy removal.",
                            "_number": 18,
                            "_offset": 8
                          },
                          {
                            "_line": "        Default: ``True``.",
                            "_number": 19,
                            "_offset": 8
                          },
                          {
                            "_line": "",
                            "_number": 20,
                            "_offset": 8
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "rr : bool"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "Set to "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "False"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " to disable automatic redundancy removal. Default: "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "True"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": ". "
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "For method-specific options, see "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "show",
                          "_",
                          "options('linprog')",
                          " ",
                          "<show",
                          "_",
                          "options>"
                        ],
                        "domain": null,
                        "role": "func"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "x0",
            "type_": "1-D array, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Guess values of the decision variables, which will be refined by the optimization algorithm. This argument is currently used only by the 'revised simplex' method, and can only be used if "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "x0"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " represents a basic feasible solution."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "res",
            "type_": "OptimizeResult",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "A "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "scipy.optimize.OptimizeResult"
                        ],
                        "domain": null,
                        "role": "class"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " consisting of the fields:"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    x : 1-D array",
                            "_number": 2,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "        The values of the decision variables that minimizes the",
                            "_number": 3,
                            "_offset": 8
                          },
                          {
                            "_line": "        objective function while satisfying the constraints.",
                            "_number": 4,
                            "_offset": 8
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "x : 1-D array"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "The values of the decision variables that minimizes the objective function while satisfying the constraints."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    fun : float",
                            "_number": 5,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "        The optimal value of the objective function ``c @ x``.",
                            "_number": 6,
                            "_offset": 8
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "fun : float"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "The optimal value of the objective function "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "c",
                                    " ",
                                    "@",
                                    " ",
                                    "x"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": "."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    slack : 1-D array",
                            "_number": 7,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "        The (nominally positive) values of the slack variables,",
                            "_number": 8,
                            "_offset": 8
                          },
                          {
                            "_line": "        ``b_ub - A_ub @ x``.",
                            "_number": 9,
                            "_offset": 8
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "slack : 1-D array"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "The (nominally positive) values of the slack variables, "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "b",
                                    "_",
                                    "ub",
                                    " ",
                                    "-",
                                    " ",
                                    "A",
                                    "_",
                                    "ub",
                                    " ",
                                    "@",
                                    " ",
                                    "x"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": "."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    con : 1-D array",
                            "_number": 10,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "        The (nominally zero) residuals of the equality constraints,",
                            "_number": 11,
                            "_offset": 8
                          },
                          {
                            "_line": "        ``b_eq - A_eq @ x``.",
                            "_number": 12,
                            "_offset": 8
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "con : 1-D array"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "The (nominally zero) residuals of the equality constraints, "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "b",
                                    "_",
                                    "eq",
                                    " ",
                                    "-",
                                    " ",
                                    "A",
                                    "_",
                                    "eq",
                                    " ",
                                    "@",
                                    " ",
                                    "x"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": "."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    success : bool",
                            "_number": 13,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "        ``True`` when the algorithm succeeds in finding an optimal",
                            "_number": 14,
                            "_offset": 8
                          },
                          {
                            "_line": "        solution.",
                            "_number": 15,
                            "_offset": 8
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "success : bool"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "True"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " when the algorithm succeeds in finding an optimal solution."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    status : int",
                            "_number": 16,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "        An integer representing the exit status of the algorithm.",
                            "_number": 17,
                            "_offset": 8
                          },
                          {
                            "_line": "",
                            "_number": 18,
                            "_offset": 8
                          },
                          {
                            "_line": "        ``0`` : Optimization terminated successfully.",
                            "_number": 19,
                            "_offset": 8
                          },
                          {
                            "_line": "",
                            "_number": 20,
                            "_offset": 8
                          },
                          {
                            "_line": "        ``1`` : Iteration limit reached.",
                            "_number": 21,
                            "_offset": 8
                          },
                          {
                            "_line": "",
                            "_number": 22,
                            "_offset": 8
                          },
                          {
                            "_line": "        ``2`` : Problem appears to be infeasible.",
                            "_number": 23,
                            "_offset": 8
                          },
                          {
                            "_line": "",
                            "_number": 24,
                            "_offset": 8
                          },
                          {
                            "_line": "        ``3`` : Problem appears to be unbounded.",
                            "_number": 25,
                            "_offset": 8
                          },
                          {
                            "_line": "",
                            "_number": 26,
                            "_offset": 8
                          },
                          {
                            "_line": "        ``4`` : Numerical difficulties encountered.",
                            "_number": 27,
                            "_offset": 8
                          },
                          {
                            "_line": "",
                            "_number": 28,
                            "_offset": 8
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "status : int"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "An integer representing the exit status of the algorithm.  "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "0"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " : Optimization terminated successfully.  "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "1"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " : Iteration limit reached.  "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "2"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " : Problem appears to be infeasible.  "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "3"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " : Problem appears to be unbounded.  "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "4"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " : Numerical difficulties encountered. "
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    nit : int",
                            "_number": 29,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "        The total number of iterations performed in all phases.",
                            "_number": 30,
                            "_offset": 8
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "nit : int"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "The total number of iterations performed in all phases."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    message : str",
                            "_number": 31,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "        A string descriptor of the exit status of the algorithm.",
                            "_number": 32,
                            "_offset": 8
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "message : str"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "A string descriptor of the exit status of the algorithm."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This section describes the available solvers that can be selected by the 'method' parameter."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "'interior-point'",
                    " ",
                    "<optimize.linprog-interior-point>"
                  ],
                  "domain": null,
                  "role": "ref"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is the default as it is typically the fastest and most robust method. "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "'revised",
                    " ",
                    "simplex'",
                    " ",
                    "<optimize.linprog-revised",
                    "_",
                    "simplex>"
                  ],
                  "domain": null,
                  "role": "ref"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is more accurate for the problems it solves. "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "'simplex'",
                    " ",
                    "<optimize.linprog-simplex>"
                  ],
                  "domain": null,
                  "role": "ref"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is the legacy method and is included for backwards compatibility and educational purposes."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Method *interior-point* uses the primal-dual path following algorithm as outlined in [4]_. This algorithm supports sparse constraint matrices and is typically faster than the simplex methods, especially for large, sparse problems. Note, however, that the solution returned may be slightly less accurate than those of the simplex methods and will not, in general, correspond with a vertex of the polytope defined by the constraints."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. versionadded:: 1.0.0",
                  "_number": 17,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 18,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": []
            },
            "directive_name": "versionadded",
            "args0": [
              " 1.0.0"
            ],
            "inner": null
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Method *revised simplex* uses the revised simplex method as described in [9]_, except that a factorization [11]_ of the basis matrix, rather than its inverse, is efficiently maintained and used to solve the linear systems at each iteration of the algorithm."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. versionadded:: 1.3.0",
                  "_number": 24,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 25,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": []
            },
            "directive_name": "versionadded",
            "args0": [
              " 1.3.0"
            ],
            "inner": null
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Method *simplex* uses a traditional, full-tableau implementation of Dantzig's simplex algorithm [1]_, [2]_ (*not* the Nelder-Mead simplex). This algorithm is included for backwards compatibility and educational purposes."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. versionadded:: 0.15.0",
                  "_number": 31,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 32,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": []
            },
            "directive_name": "versionadded",
            "args0": [
              " 0.15.0"
            ],
            "inner": null
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Before applying any method, a presolve procedure based on [8]_ attempts to identify trivial infeasibilities, trivial unboundedness, and potential problem simplifications. Specifically, it checks for:"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "- rows of zeros in "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "A",
                    "_",
                    "eq"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " or "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "A",
                    "_",
                    "ub"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", representing trivial constraints; - columns of zeros in "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "A",
                    "_",
                    "eq"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "and"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "A",
                    "_",
                    "ub"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", representing unconstrained"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "  variables;"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "- column singletons in "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "A",
                    "_",
                    "eq"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", representing fixed variables; and - column singletons in "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "A",
                    "_",
                    "ub"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", representing simple bounds."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "If presolve reveals that the problem is unbounded (e.g. an unconstrained and unbounded variable has negative cost) or infeasible (e.g., a row of zeros in "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "A",
                    "_",
                    "eq"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " corresponds with a nonzero in "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "b",
                    "_",
                    "eq"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "), the solver terminates with the appropriate status code. Note that presolve terminates as soon as any sign of unboundedness is detected; consequently, a problem may be reported as unbounded when in reality the problem is infeasible (but infeasibility has not been detected yet). Therefore, if it is important to know whether the problem is actually infeasible, solve the problem again with option "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "presolve=False"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "If neither infeasibility nor unboundedness are detected in a single pass of the presolve, bounds are tightened where possible and fixed variables are removed from the problem. Then, linearly dependent rows of the "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "A",
                    "_",
                    "eq"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " matrix are removed, (unless they represent an infeasibility) to avoid numerical difficulties in the primary solve routine. Note that rows that are nearly linearly dependent (within a prescribed tolerance) may also be removed, which can change the optimal solution in rare cases. If this is a concern, eliminate redundancy from your problem formulation and run with option "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "rr=False"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " or "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "presolve=False"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Several potential improvements can be made here: additional presolve checks outlined in [8]_ should be implemented, the presolve routine should be run multiple times (until no further simplifications can be made), and more of the efficiency improvements from [5]_ should be implemented in the redundancy removal routines."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "After presolve, the problem is transformed to standard form by converting the (tightened) simple bounds to upper bound constraints, introducing non-negative slack variables for inequality constraints, and expressing unbounded variables as the difference between two non-negative variables. Optionally, the problem is automatically scaled via equilibration [12]_. The selected algorithm solves the standard form problem, and a postprocessing routine converts the result to a solution to the original problem."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    "builtins.list",
    "builtins.print",
    "builtins.tuple",
    "scipy",
    "scipy.optimize",
    "scipy.optimize._linprog.linprog",
    "scipy.optimize.optimize.OptimizeResult",
    "show_options"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/scipy/optimize/_linprog.py",
  "item_line": 162,
  "item_type": "<class 'function'>",
  "aliases": [
    "scipy.optimize.linprog"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Consider the following problem:"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "BlockDirective",
        "data": {
          "lines": {
            "_lines": [
              {
                "_line": ".. math::",
                "_number": 0,
                "_offset": 0
              }
            ]
          },
          "wh": {
            "_lines": []
          },
          "ind": {
            "_lines": []
          },
          "directive_name": "math",
          "args0": [
            ""
          ],
          "inner": null
        }
      },
      {
        "type": "DefList",
        "data": {
          "children": [
            {
              "lines": {
                "_lines": [
                  {
                    "_line": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__",
                    "_number": 0,
                    "_offset": 0
                  }
                ]
              },
              "wh": {
                "_lines": []
              },
              "ind": {
                "_lines": [
                  {
                    "_line": "    \\min_{x_0, x_1} \\ -x_0 + 4x_1 & \\\\",
                    "_number": 0,
                    "_offset": 4
                  },
                  {
                    "_line": "    \\mbox{such that} \\ -3x_0 + x_1 & \\leq 6,\\\\",
                    "_number": 1,
                    "_offset": 4
                  },
                  {
                    "_line": "    -x_0 - 2x_1 & \\geq -4,\\\\",
                    "_number": 2,
                    "_offset": 4
                  },
                  {
                    "_line": "    x_1 & \\geq -3.",
                    "_number": 3,
                    "_offset": 4
                  }
                ]
              },
              "dt": {
                "inline": [
                  {
                    "type": "Words",
                    "data": {
                      "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                    }
                  }
                ],
                "inner": []
              },
              "dd": [
                {
                  "type": "Paragraph",
                  "data": {
                    "inline": [
                      {
                        "type": "Words",
                        "data": {
                          "value": "\\min_{x_0, x_1} \\ -x_0 + 4x_1 & \\\\ \\mbox{such that} \\ -3x_0 + x_1 & \\leq 6,\\\\ -x_0 - 2x_1 & \\geq -4,\\\\ x_1 & \\geq -3."
                        }
                      }
                    ],
                    "inner": []
                  }
                }
              ]
            }
          ]
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "The problem is not presented in the form accepted by "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "linprog"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ". This is easily remedied by converting the \"greater than\" inequality constraint to a \"less than\" inequality constraint by multiplying both sides by a factor of "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "-1"
                ],
                "domain": null,
                "role": "math"
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ". Note also that the last constraint is really the simple bound "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "-3",
                  " ",
                  "\\leq",
                  " ",
                  "x",
                  "_",
                  "1",
                  " ",
                  "\\leq",
                  " ",
                  "\\infty"
                ],
                "domain": null,
                "role": "math"
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ". Finally, since there are no bounds on "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "x",
                  "_",
                  "0"
                ],
                "domain": null,
                "role": "math"
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ", we must explicitly specify the bounds "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "-\\infty",
                  " ",
                  "\\leq",
                  " ",
                  "x",
                  "_",
                  "0",
                  " ",
                  "\\leq",
                  " ",
                  "\\infty"
                ],
                "domain": null,
                "role": "math"
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ", as the default is for variables to be non-negative. After collecting coeffecients into arrays and tuples, the input for this problem is:"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "c",
              "builtins.list",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "A",
              "builtins.list",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "b",
              "builtins.list",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "6",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "x0_bounds",
              "builtins.tuple",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "None",
              null,
              "kc"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "None",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "x1_bounds",
              "builtins.tuple",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "None",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scipy",
              "scipy",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "optimize",
              "scipy.optimize",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "linprog",
              "scipy.optimize._linprog.linprog",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "res",
              "scipy.optimize.optimize.OptimizeResult",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "linprog",
              "scipy.optimize._linprog.linprog",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "c",
              "builtins.list",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "A_ub",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "A",
              "builtins.list",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "b_ub",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "b",
              "builtins.list",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "bounds",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "x0_bounds",
              "builtins.tuple",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "x1_bounds",
              "builtins.tuple",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Note that the default method for "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "linprog"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " is 'interior-point', which is approximate by nature."
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "print",
              "builtins.print",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "res",
              "scipy.optimize.optimize.OptimizeResult",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "     con: array([], dtype=float64)\n     fun: -21.99999984082494 # may vary\n message: 'Optimization terminated successfully.'\n     nit: 6 # may vary\n   slack: array([3.89999997e+01, 8.46872439e-08] # may vary\n  status: 0\n success: True\n       x: array([ 9.99999989, -2.99999999]) # may vary",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "If you need greater accuracy, try 'revised simplex'."
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "res",
              "scipy.optimize.optimize.OptimizeResult",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "linprog",
              "scipy.optimize._linprog.linprog",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "c",
              "builtins.list",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "A_ub",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "A",
              "builtins.list",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "b_ub",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "b",
              "builtins.list",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "bounds",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "x0_bounds",
              "builtins.tuple",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "x1_bounds",
              "builtins.tuple",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "method",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "revised simplex",
              "",
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "print",
              "builtins.print",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "res",
              "scipy.optimize.optimize.OptimizeResult",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "     con: array([], dtype=float64)\n     fun: -22.0 # may vary\n message: 'Optimization terminated successfully.'\n     nit: 1 # may vary\n   slack: array([39.,  0.]) # may vary\n  status: 0\n success: True\n       x: array([10., -3.]) # may vary",
          "ce_status": "execed"
        }
      }
    ],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "show_options",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Additional options accepted by the solvers."
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    }
  ],
  "signature": "linprog(c, A_ub=None, b_ub=None, A_eq=None, b_eq=None, bounds=None, method='interior-point', callback=None, options=None, x0=None)",
  "references": [
    ".. [1] Dantzig, George B., Linear programming and extensions. Rand",
    "       Corporation Research Study Princeton Univ. Press, Princeton, NJ,",
    "       1963",
    ".. [2] Hillier, S.H. and Lieberman, G.J. (1995), \"Introduction to",
    "       Mathematical Programming\", McGraw-Hill, Chapter 4.",
    ".. [3] Bland, Robert G. New finite pivoting rules for the simplex method.",
    "       Mathematics of Operations Research (2), 1977: pp. 103-107.",
    ".. [4] Andersen, Erling D., and Knud D. Andersen. \"The MOSEK interior point",
    "       optimizer for linear programming: an implementation of the",
    "       homogeneous algorithm.\" High performance optimization. Springer US,",
    "       2000. 197-232.",
    ".. [5] Andersen, Erling D. \"Finding all linearly dependent rows in",
    "       large-scale linear programming.\" Optimization Methods and Software",
    "       6.3 (1995): 219-227.",
    ".. [6] Freund, Robert M. \"Primal-Dual Interior-Point Methods for Linear",
    "       Programming based on Newton's Method.\" Unpublished Course Notes,",
    "       March 2004. Available 2/25/2017 at",
    "       https://ocw.mit.edu/courses/sloan-school-of-management/15-084j-nonlinear-programming-spring-2004/lecture-notes/lec14_int_pt_mthd.pdf",
    ".. [7] Fourer, Robert. \"Solving Linear Programs by Interior-Point Methods.\"",
    "       Unpublished Course Notes, August 26, 2005. Available 2/25/2017 at",
    "       http://www.4er.org/CourseNotes/Book%20B/B-III.pdf",
    ".. [8] Andersen, Erling D., and Knud D. Andersen. \"Presolving in linear",
    "       programming.\" Mathematical Programming 71.2 (1995): 221-245.",
    ".. [9] Bertsimas, Dimitris, and J. Tsitsiklis. \"Introduction to linear",
    "       programming.\" Athena Scientific 1 (1997): 997.",
    ".. [10] Andersen, Erling D., et al. Implementation of interior point",
    "        methods for large scale linear programming. HEC/Universite de",
    "        Geneve, 1996.",
    ".. [11] Bartels, Richard H. \"A stabilization of the simplex method.\"",
    "        Journal in  Numerische Mathematik 16.5 (1971): 414-434.",
    ".. [12] Tomlin, J. A. \"On scaling linear programming problems.\"",
    "        Mathematical Programming Study 4 (1975): 146-166."
  ],
  "arbitrary": []
}