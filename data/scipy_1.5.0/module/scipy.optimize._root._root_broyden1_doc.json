{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": ":: workaround numpyoc summary/ext summary bug in take2::Line.__init__"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "nit",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Number of iterations to make. If omitted (default), make as many as required to meet tolerances."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "disp",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Print status to stdout on every iteration."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "maxiter",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Maximum number of iterations to make. If more are needed to meet convergence, "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "NoConvergence"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is raised."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "ftol",
            "type_": "float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Relative tolerance for the residual. If omitted, not used."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "fatol",
            "type_": "float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Absolute tolerance (in max-norm) for the residual. If omitted, default is 6e-6."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "xtol",
            "type_": "float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Relative minimum step size. If omitted, not used."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "xatol",
            "type_": "float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Absolute minimum step size, as determined from the Jacobian approximation. If the step size is smaller than this, optimization is terminated as successful. If omitted, not used."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "tol_norm",
            "type_": "function(vector) -> scalar, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Norm to use in convergence check. Default is the maximum norm."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "line_search",
            "type_": "{None, 'armijo' (default), 'wolfe'}, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Which type of a line search to use to determine the step size in the direction given by the Jacobian approximation. Defaults to 'armijo'."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "jac_options",
            "type_": "dict, optional",
            "desc": [
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "Options for the respective Jacobian approximation.",
                            "_number": 0,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "    alpha : float, optional",
                            "_number": 1,
                            "_offset": 4
                          },
                          {
                            "_line": "        Initial guess for the Jacobian is (-1/alpha).",
                            "_number": 2,
                            "_offset": 4
                          },
                          {
                            "_line": "    reduction_method : str or tuple, optional",
                            "_number": 3,
                            "_offset": 4
                          },
                          {
                            "_line": "        Method used in ensuring that the rank of the Broyden",
                            "_number": 4,
                            "_offset": 4
                          },
                          {
                            "_line": "        matrix stays low. Can either be a string giving the",
                            "_number": 5,
                            "_offset": 4
                          },
                          {
                            "_line": "        name of the method, or a tuple of the form ``(method,",
                            "_number": 6,
                            "_offset": 4
                          },
                          {
                            "_line": "        param1, param2, ...)`` that gives the name of the",
                            "_number": 7,
                            "_offset": 4
                          },
                          {
                            "_line": "        method and values for additional parameters.",
                            "_number": 8,
                            "_offset": 4
                          },
                          {
                            "_line": "",
                            "_number": 9,
                            "_offset": 4
                          },
                          {
                            "_line": "        Methods available:",
                            "_number": 10,
                            "_offset": 4
                          },
                          {
                            "_line": "",
                            "_number": 11,
                            "_offset": 4
                          },
                          {
                            "_line": "            - ``restart``",
                            "_number": 12,
                            "_offset": 4
                          },
                          {
                            "_line": "                Drop all matrix columns. Has no",
                            "_number": 13,
                            "_offset": 4
                          },
                          {
                            "_line": "                extra parameters.",
                            "_number": 14,
                            "_offset": 4
                          },
                          {
                            "_line": "            - ``simple``",
                            "_number": 15,
                            "_offset": 4
                          },
                          {
                            "_line": "                Drop oldest matrix column. Has no",
                            "_number": 16,
                            "_offset": 4
                          },
                          {
                            "_line": "                extra parameters.",
                            "_number": 17,
                            "_offset": 4
                          },
                          {
                            "_line": "            - ``svd``",
                            "_number": 18,
                            "_offset": 4
                          },
                          {
                            "_line": "                Keep only the most significant SVD",
                            "_number": 19,
                            "_offset": 4
                          },
                          {
                            "_line": "                components.",
                            "_number": 20,
                            "_offset": 4
                          },
                          {
                            "_line": "",
                            "_number": 21,
                            "_offset": 4
                          },
                          {
                            "_line": "                Extra parameters:",
                            "_number": 22,
                            "_offset": 4
                          },
                          {
                            "_line": "",
                            "_number": 23,
                            "_offset": 4
                          },
                          {
                            "_line": "                    - ``to_retain``",
                            "_number": 24,
                            "_offset": 4
                          },
                          {
                            "_line": "                        Number of SVD components to",
                            "_number": 25,
                            "_offset": 4
                          },
                          {
                            "_line": "                        retain when rank reduction is done.",
                            "_number": 26,
                            "_offset": 4
                          },
                          {
                            "_line": "                        Default is ``max_rank - 2``.",
                            "_number": 27,
                            "_offset": 4
                          },
                          {
                            "_line": "    max_rank : int, optional",
                            "_number": 28,
                            "_offset": 4
                          },
                          {
                            "_line": "        Maximum rank for the Broyden matrix.",
                            "_number": 29,
                            "_offset": 4
                          },
                          {
                            "_line": "        Default is infinity (i.e., no rank reduction).",
                            "_number": 30,
                            "_offset": 4
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "Options for the respective Jacobian approximation."
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "alpha : float, optional     Initial guess for the Jacobian is (-1/alpha). reduction_method : str or tuple, optional     Method used in ensuring that the rank of the Broyden     matrix stays low. Can either be a string giving the     name of the method, or a tuple of the form "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "(method,",
                                    " ",
                                    " ",
                                    " ",
                                    " ",
                                    " ",
                                    "param1,",
                                    " ",
                                    "param2,",
                                    " ",
                                    "...)"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " that gives the name of the     method and values for additional parameters.      Methods available:          - "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "restart"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": "             Drop all matrix columns. Has no             extra parameters.         - "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "simple"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": "             Drop oldest matrix column. Has no             extra parameters.         - "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "svd"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": "             Keep only the most significant SVD             components.              Extra parameters:                  - "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "to",
                                    "_",
                                    "retain"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": "                     Number of SVD components to                     retain when rank reduction is done.                     Default is "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "max",
                                    "_",
                                    "rank",
                                    " ",
                                    "-",
                                    " ",
                                    "2"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": ". max_rank : int, optional     Maximum rank for the Broyden matrix.     Default is infinity (i.e., no rank reduction)."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Parameters"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/scipy/optimize/_root.py",
  "item_line": 304,
  "item_type": "<class 'function'>",
  "aliases": [
    "scipy.optimize._root._root_broyden1_doc"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "signature": "_root_broyden1_doc()",
  "references": null,
  "arbitrary": []
}