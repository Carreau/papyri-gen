{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Return three linear operators related with a given matrix A."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "A",
            "type_": "sparse matrix (or ndarray), shape (m, n)",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Matrix "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "A"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " used in the projection."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "method",
            "type_": "string, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Method used for compute the given linear operators. Should be one of:"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    - 'NormalEquation': The operators",
                            "_number": 3,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "       will be computed using the",
                            "_number": 4,
                            "_offset": 7
                          },
                          {
                            "_line": "       so-called normal equation approach",
                            "_number": 5,
                            "_offset": 7
                          },
                          {
                            "_line": "       explained in [1]_. In order to do",
                            "_number": 6,
                            "_offset": 7
                          },
                          {
                            "_line": "       so the Cholesky factorization of",
                            "_number": 7,
                            "_offset": 7
                          },
                          {
                            "_line": "       ``(A A.T)`` is computed. Exclusive",
                            "_number": 8,
                            "_offset": 7
                          },
                          {
                            "_line": "       for sparse matrices.",
                            "_number": 9,
                            "_offset": 7
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "- 'NormalEquation': The operators"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "will be computed using the so-called normal equation approach explained in [1]_. In order to do so the Cholesky factorization of "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "(A",
                                    " ",
                                    "A.T)"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " is computed. Exclusive for sparse matrices."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    - 'AugmentedSystem': The operators",
                            "_number": 10,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "       will be computed using the",
                            "_number": 11,
                            "_offset": 7
                          },
                          {
                            "_line": "       so-called augmented system approach",
                            "_number": 12,
                            "_offset": 7
                          },
                          {
                            "_line": "       explained in [1]_. Exclusive",
                            "_number": 13,
                            "_offset": 7
                          },
                          {
                            "_line": "       for sparse matrices.",
                            "_number": 14,
                            "_offset": 7
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "- 'AugmentedSystem': The operators"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "will be computed using the so-called augmented system approach explained in [1]_. Exclusive for sparse matrices."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    - 'QRFactorization': Compute projections",
                            "_number": 15,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "       using QR factorization. Exclusive for",
                            "_number": 16,
                            "_offset": 7
                          },
                          {
                            "_line": "       dense matrices.",
                            "_number": 17,
                            "_offset": 7
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "- 'QRFactorization': Compute projections"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "using QR factorization. Exclusive for dense matrices."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    },
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "    - 'SVDFactorization': Compute projections",
                            "_number": 18,
                            "_offset": 4
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "       using SVD factorization. Exclusive for",
                            "_number": 19,
                            "_offset": 7
                          },
                          {
                            "_line": "       dense matrices.",
                            "_number": 20,
                            "_offset": 7
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "- 'SVDFactorization': Compute projections"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "using SVD factorization. Exclusive for dense matrices."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "orth_tol",
            "type_": "float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Tolerance for iterative refinements."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "max_refin",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Maximum number of iterative refinements."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "tol",
            "type_": "float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Tolerance for singular values."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "Z",
            "type_": "LinearOperator, shape (n, n)",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Null-space operator. For a given vector "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "x"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", the null space operator is equivalent to apply a projection matrix "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "P",
                          " ",
                          "=",
                          " ",
                          "I",
                          " ",
                          "-",
                          " ",
                          "A.T",
                          " ",
                          "inv(A",
                          " ",
                          "A.T)",
                          " ",
                          "A"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " to the vector. It can be shown that this is equivalent to project "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "x"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " into the null space of A."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "LS",
            "type_": "LinearOperator, shape (m, n)",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Least-squares operator. For a given vector "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "x"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", the least-squares operator is equivalent to apply a pseudoinverse matrix "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "pinv(A.T)",
                          " ",
                          "=",
                          " ",
                          "inv(A",
                          " ",
                          "A.T)",
                          " ",
                          "A"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " to the vector. It can be shown that this vector "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "pinv(A.T)",
                          " ",
                          "x"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is the least_square solution to "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "A.T",
                          " ",
                          "y",
                          " ",
                          "=",
                          " ",
                          "x"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "Y",
            "type_": "LinearOperator, shape (n, m)",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Row-space operator. For a given vector "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "x"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", the row-space operator is equivalent to apply a projection matrix "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "Q",
                          " ",
                          "=",
                          " ",
                          "A.T",
                          " ",
                          "inv(A",
                          " ",
                          "A.T)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " to the vector.  It can be shown that this vector "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "y",
                          " ",
                          "=",
                          " ",
                          "Q",
                          " ",
                          "x"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "  the minimum norm solution of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "A",
                          " ",
                          "y",
                          " ",
                          "=",
                          " ",
                          "x"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Uses iterative refinements described in [1] during the computation of "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "Z"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " in order to cope with the possibility of large roundoff errors."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "References"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/scipy/optimize/_trustregion_constr/projections.py",
  "item_line": 289,
  "item_type": "<class 'function'>",
  "aliases": [
    "scipy.optimize._trustregion_constr.equality_constrained_sqp.projections"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "signature": "projections(A, method=None, orth_tol=1e-12, max_refin=3, tol=1e-15)",
  "references": [
    ".. [1] Gould, Nicholas IM, Mary E. Hribar, and Jorge Nocedal.",
    "    \"On the solution of equality constrained quadratic",
    "    programming problems arising in optimization.\"",
    "    SIAM Journal on Scientific Computing 23.4 (2001): 1376-1395."
  ],
  "arbitrary": []
}