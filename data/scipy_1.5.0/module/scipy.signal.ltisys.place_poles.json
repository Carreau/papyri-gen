{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Compute K such that eigenvalues (A - dot(B, K))=poles."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "K is the gain matrix such as the plant described by the linear system "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "AX+BU"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " will have its closed-loop poles, i.e the eigenvalues "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "A",
                    " ",
                    "-",
                    " ",
                    "B",
                    "*",
                    "K"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", as close as possible to those asked for in poles."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "SISO, MISO and MIMO systems are supported."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "A, B",
            "type_": "ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "State-space representation of linear system "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "AX",
                          " ",
                          "+",
                          " ",
                          "BU"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "poles",
            "type_": "array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Desired real poles and/or complex conjugates poles. Complex poles are only supported with "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "method=\"YT\""
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (default)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "method: {'YT', 'KNV0'}, optional",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Which method to choose to find the gain matrix K. One of:"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "    - 'YT': Yang Tits     - 'KNV0': Kautsky, Nichols, Van Dooren update method 0"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "See References and Notes for details on the algorithms."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "rtol: float, optional",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "After each iteration the determinant of the eigenvectors of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "A",
                          " ",
                          "-",
                          " ",
                          "B",
                          "*",
                          "K"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is compared to its previous value, when the relative error between these two values becomes lower than "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "rtol"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " the algorithm stops.  Default is 1e-3."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "maxiter: int, optional",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Maximum number of iterations to compute the gain matrix. Default is 30."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "full_state_feedback",
            "type_": "Bunch object",
            "desc": [
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "full_state_feedback is composed of:",
                            "_number": 0,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "    gain_matrix : 1-D ndarray",
                            "_number": 1,
                            "_offset": 4
                          },
                          {
                            "_line": "        The closed loop matrix K such as the eigenvalues of ``A-BK``",
                            "_number": 2,
                            "_offset": 4
                          },
                          {
                            "_line": "        are as close as possible to the requested poles.",
                            "_number": 3,
                            "_offset": 4
                          },
                          {
                            "_line": "    computed_poles : 1-D ndarray",
                            "_number": 4,
                            "_offset": 4
                          },
                          {
                            "_line": "        The poles corresponding to ``A-BK`` sorted as first the real",
                            "_number": 5,
                            "_offset": 4
                          },
                          {
                            "_line": "        poles in increasing order, then the complex congugates in",
                            "_number": 6,
                            "_offset": 4
                          },
                          {
                            "_line": "        lexicographic order.",
                            "_number": 7,
                            "_offset": 4
                          },
                          {
                            "_line": "    requested_poles : 1-D ndarray",
                            "_number": 8,
                            "_offset": 4
                          },
                          {
                            "_line": "        The poles the algorithm was asked to place sorted as above,",
                            "_number": 9,
                            "_offset": 4
                          },
                          {
                            "_line": "        they may differ from what was achieved.",
                            "_number": 10,
                            "_offset": 4
                          },
                          {
                            "_line": "    X : 2-D ndarray",
                            "_number": 11,
                            "_offset": 4
                          },
                          {
                            "_line": "        The transfer matrix such as ``X * diag(poles) = (A - B*K)*X``",
                            "_number": 12,
                            "_offset": 4
                          },
                          {
                            "_line": "        (see Notes)",
                            "_number": 13,
                            "_offset": 4
                          },
                          {
                            "_line": "    rtol : float",
                            "_number": 14,
                            "_offset": 4
                          },
                          {
                            "_line": "        The relative tolerance achieved on ``det(X)`` (see Notes).",
                            "_number": 15,
                            "_offset": 4
                          },
                          {
                            "_line": "        `rtol` will be NaN if it is possible to solve the system",
                            "_number": 16,
                            "_offset": 4
                          },
                          {
                            "_line": "        ``diag(poles) = (A - B*K)``, or 0 when the optimization",
                            "_number": 17,
                            "_offset": 4
                          },
                          {
                            "_line": "        algorithms can't do anything i.e when ``B.shape[1] == 1``.",
                            "_number": 18,
                            "_offset": 4
                          },
                          {
                            "_line": "    nb_iter : int",
                            "_number": 19,
                            "_offset": 4
                          },
                          {
                            "_line": "        The number of iterations performed before converging.",
                            "_number": 20,
                            "_offset": 4
                          },
                          {
                            "_line": "        `nb_iter` will be NaN if it is possible to solve the system",
                            "_number": 21,
                            "_offset": 4
                          },
                          {
                            "_line": "        ``diag(poles) = (A - B*K)``, or 0 when the optimization",
                            "_number": 22,
                            "_offset": 4
                          },
                          {
                            "_line": "        algorithms can't do anything i.e when ``B.shape[1] == 1``.",
                            "_number": 23,
                            "_offset": 4
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "full_state_feedback is composed of:"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "gain_matrix : 1-D ndarray     The closed loop matrix K such as the eigenvalues of "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "A-BK"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": "     are as close as possible to the requested poles. computed_poles : 1-D ndarray     The poles corresponding to "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "A-BK"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " sorted as first the real     poles in increasing order, then the complex congugates in     lexicographic order. requested_poles : 1-D ndarray     The poles the algorithm was asked to place sorted as above,     they may differ from what was achieved. X : 2-D ndarray     The transfer matrix such as "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "X",
                                    " ",
                                    "*",
                                    " ",
                                    "diag(poles)",
                                    " ",
                                    "=",
                                    " ",
                                    "(A",
                                    " ",
                                    "-",
                                    " ",
                                    "B",
                                    "*",
                                    "K)",
                                    "*",
                                    "X"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": "     (see Notes) rtol : float     The relative tolerance achieved on "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "det(X)"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " (see Notes).     "
                                }
                              },
                              {
                                "type": "Directive",
                                "data": {
                                  "value": [
                                    "rtol"
                                  ],
                                  "domain": null,
                                  "role": null
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " will be NaN if it is possible to solve the system     "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "diag(poles)",
                                    " ",
                                    "=",
                                    " ",
                                    "(A",
                                    " ",
                                    "-",
                                    " ",
                                    "B",
                                    "*",
                                    "K)"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": ", or 0 when the optimization     algorithms can't do anything i.e when "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "B.shape[1]",
                                    " ",
                                    "==",
                                    " ",
                                    "1"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": ". nb_iter : int     The number of iterations performed before converging.     "
                                }
                              },
                              {
                                "type": "Directive",
                                "data": {
                                  "value": [
                                    "nb",
                                    "_",
                                    "iter"
                                  ],
                                  "domain": null,
                                  "role": null
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": " will be NaN if it is possible to solve the system     "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "diag(poles)",
                                    " ",
                                    "=",
                                    " ",
                                    "(A",
                                    " ",
                                    "-",
                                    " ",
                                    "B",
                                    "*",
                                    "K)"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": ", or 0 when the optimization     algorithms can't do anything i.e when "
                                }
                              },
                              {
                                "type": "Verbatim",
                                "data": {
                                  "value": [
                                    "B.shape[1]",
                                    " ",
                                    "==",
                                    " ",
                                    "1"
                                  ]
                                }
                              },
                              {
                                "type": "Words",
                                "data": {
                                  "value": "."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The Tits and Yang (YT), [2]_ paper is an update of the original Kautsky et al. (KNV) paper [1]_.  KNV relies on rank-1 updates to find the transfer matrix X such that "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "X",
                    " ",
                    "*",
                    " ",
                    "diag(poles)",
                    " ",
                    "=",
                    " ",
                    "(A",
                    " ",
                    "-",
                    " ",
                    "B",
                    "*",
                    "K)",
                    "*",
                    "X"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", whereas YT uses rank-2 updates. This yields on average more robust solutions (see [2]_ pp 21-22), furthermore the YT algorithm supports complex poles whereas KNV does not in its original version.  Only update method 0 proposed by KNV has been implemented here, hence the name "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'KNV0'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "KNV extended to complex poles is used in Matlab's "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "place"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " function, YT is distributed under a non-free licence by Slicot under the name "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "robpole"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". It is unclear and undocumented how KNV0 has been extended to complex poles (Tits and Yang claim on page 14 of their paper that their method can not be used to extend KNV to complex poles), therefore only YT supports them in this implementation."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "As the solution to the problem of pole placement is not unique for MIMO systems, both methods start with a tentative transfer matrix which is altered in various way to increase its determinant.  Both methods have been proven to converge to a stable solution, however depending on the way the initial transfer matrix is chosen they will converge to different solutions and therefore there is absolutely no guarantee that using "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'KNV0'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " will yield results similar to Matlab's or any other implementation of these algorithms."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Using the default method "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'YT'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " should be fine in most cases; "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'KNV0'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is only provided because it is needed by "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'YT'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " in some specific cases. Furthermore "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'YT'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " gives on average more robust results than "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "'KNV0'"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " when "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "abs(det(X))"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is used as a robustness indicator."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "[2]_ is available as a technical report on the following URL: https://hdl.handle.net/1903/5598"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    "builtins.abs",
    "builtins.complex",
    "builtins.float",
    "builtins.tuple",
    "matplotlib",
    "matplotlib.pyplot",
    "matplotlib.pyplot.axis",
    "matplotlib.pyplot.grid",
    "matplotlib.pyplot.legend",
    "matplotlib.pyplot.plot",
    "numpy",
    "numpy.array",
    "numpy.cos",
    "numpy.linalg",
    "numpy.linalg.det",
    "numpy.linspace",
    "numpy.ndarray",
    "numpy.sin",
    "scipy",
    "scipy.signal",
    "scipy.signal.ltisys.Bunch",
    "scipy.signal.ltisys.place_poles"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes",
    "References",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/scipy/signal/ltisys.py",
  "item_line": 3033,
  "item_type": "<class 'function'>",
  "aliases": [
    "scipy.signal.place_poles"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "A simple example demonstrating real pole placement using both KNV and YT algorithms.  This is example number 1 from section 4 of the reference KNV publication ([1]_):"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scipy",
              "scipy",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "signal",
              "scipy.signal",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "matplotlib",
              "matplotlib",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "pyplot",
              "matplotlib.pyplot",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "as",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "plt",
              "matplotlib.pyplot",
              "nn"
            ]
          ],
          "out": "",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "A",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "        ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1.380",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "0.2077",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "6.715",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "5.676",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "        ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "0.5814",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "4.290",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0.6750",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "        ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1.067",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4.273",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "6.654",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "5.893",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "        ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0.0480",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4.273",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1.343",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "2.104",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "B",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "        ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "5.679",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "        ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1.136",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1.136",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "        ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "            ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "            ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "        ",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "        ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "3.146",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "P",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "0.2",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "0.5",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "5.0566",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "8.6659",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Now compute K with KNV method 0, with the default YT method and with the YT method while forcing 100 iterations of the algorithm and print some results after each call."
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "fsf1",
              "scipy.signal.ltisys.Bunch",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "signal",
              "scipy.signal",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "place_poles",
              "scipy.signal.ltisys.place_poles",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "A",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "B",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "P",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "method",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "KNV0",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "fsf1",
              "scipy.signal.ltisys.Bunch",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "gain_matrix",
              null,
              ""
            ]
          ],
          "out": "array([[ 0.20071427, -0.96665799,  0.24066128, -0.10279785],\n       [ 0.50587268,  0.57779091,  0.51795763, -0.41991442]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "fsf2",
              "scipy.signal.ltisys.Bunch",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "signal",
              "scipy.signal",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "place_poles",
              "scipy.signal.ltisys.place_poles",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "A",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "B",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "P",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# uses YT method",
              "",
              "c1"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "fsf2",
              "scipy.signal.ltisys.Bunch",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "computed_poles",
              null,
              ""
            ]
          ],
          "out": "array([-8.6659, -5.0566, -0.5   , -0.2   ])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "fsf3",
              "scipy.signal.ltisys.Bunch",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "signal",
              "scipy.signal",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "place_poles",
              "scipy.signal.ltisys.place_poles",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "A",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "B",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "P",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "rtol",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "maxiter",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "100",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "fsf3",
              "scipy.signal.ltisys.Bunch",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "X",
              null,
              ""
            ]
          ],
          "out": "array([[ 0.52072442+0.j, -0.08409372+0.j, -0.56847937+0.j,  0.74823657+0.j],\n       [-0.04977751+0.j, -0.80872954+0.j,  0.13566234+0.j, -0.29322906+0.j],\n       [-0.82266932+0.j, -0.19168026+0.j, -0.56348322+0.j, -0.43815060+0.j],\n       [ 0.22267347+0.j,  0.54967577+0.j, -0.58387806+0.j, -0.40271926+0.j]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "The absolute value of the determinant of X is a good indicator to check the robustness of the results, both "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "'KNV0'"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " and "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "'YT'"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " aim at maximizing it.  Below a comparison of the robustness of the results above:"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "abs",
              "builtins.abs",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "linalg",
              "numpy.linalg",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "det",
              "numpy.linalg.det",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "fsf1",
              "scipy.signal.ltisys.Bunch",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "X",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "<",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "abs",
              "builtins.abs",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "linalg",
              "numpy.linalg",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "det",
              "numpy.linalg.det",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "fsf2",
              "scipy.signal.ltisys.Bunch",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "X",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "True",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "abs",
              "builtins.abs",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "linalg",
              "numpy.linalg",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "det",
              "numpy.linalg.det",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "fsf2",
              "scipy.signal.ltisys.Bunch",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "X",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "<",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "abs",
              "builtins.abs",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "linalg",
              "numpy.linalg",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "det",
              "numpy.linalg.det",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "fsf3",
              "scipy.signal.ltisys.Bunch",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "X",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "True",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "Now a simple example for complex poles:"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "A",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "7",
              "",
              "mi"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "/",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "3.0",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "7",
              "",
              "mi"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "/",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "9.0",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "B",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "P",
              "builtins.float",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "j",
              "builtins.complex",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "+",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "j",
              "builtins.complex",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "/",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "3.0",
              "",
              "mf"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "fsf",
              "scipy.signal.ltisys.Bunch",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "signal",
              "scipy.signal",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "place_poles",
              "scipy.signal.ltisys.place_poles",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "A",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "B",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "P",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "method",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "YT",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "We can plot the desired and computed poles in the complex plane:"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "t",
              "builtins.tuple",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "linspace",
              "numpy.linspace",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "pi",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "401",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "plt",
              "matplotlib.pyplot",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "plot",
              "matplotlib.pyplot.plot",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "cos",
              "numpy.cos",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "t",
              "builtins.tuple",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "sin",
              "numpy.sin",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "t",
              "builtins.tuple",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "k--",
              "",
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "  ",
              "",
              ""
            ],
            [
              "# unit circle",
              "",
              "c1"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "plt",
              "matplotlib.pyplot",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "plot",
              "matplotlib.pyplot.plot",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "fsf",
              "scipy.signal.ltisys.Bunch",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "requested_poles",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "real",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "fsf",
              "scipy.signal.ltisys.Bunch",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "requested_poles",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "imag",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "wo",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "label",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "Desired",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "plt",
              "matplotlib.pyplot",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "plot",
              "matplotlib.pyplot.plot",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "fsf",
              "scipy.signal.ltisys.Bunch",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "computed_poles",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "real",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "fsf",
              "scipy.signal.ltisys.Bunch",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "computed_poles",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "imag",
              null,
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "bx",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "label",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "Placed",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "plt",
              "matplotlib.pyplot",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "grid",
              "matplotlib.pyplot.grid",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "plt",
              "matplotlib.pyplot",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "axis",
              "matplotlib.pyplot.axis",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "image",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "plt",
              "matplotlib.pyplot",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "axis",
              "matplotlib.pyplot.axis",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "1.1",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1.1",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "1.1",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1.1",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "plt",
              "matplotlib.pyplot",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "legend",
              "matplotlib.pyplot.legend",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "bbox_to_anchor",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "1.05",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "loc",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "numpoints",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "",
          "ce_status": "execed"
        }
      }
    ],
    "title": null
  },
  "see_also": [],
  "signature": "place_poles(A, B, poles, method='YT', rtol=0.001, maxiter=30)",
  "references": [
    ".. [1] J. Kautsky, N.K. Nichols and P. van Dooren, \"Robust pole assignment",
    "       in linear state feedback\", International Journal of Control, Vol. 41",
    "       pp. 1129-1155, 1985.",
    ".. [2] A.L. Tits and Y. Yang, \"Globally convergent algorithms for robust",
    "       pole assignment by state feedback\", IEEE Transactions on Automatic",
    "       Control, Vol. 41, pp. 1432-1452, 1996."
  ],
  "arbitrary": []
}