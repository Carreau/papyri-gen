{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Iterative solver for least-squares problems."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "lsmr solves the system of linear equations "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "Ax",
                    " ",
                    "=",
                    " ",
                    "b"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". If the system is inconsistent, it solves the least-squares problem "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "min",
                    " ",
                    "||b",
                    " ",
                    "-",
                    " ",
                    "Ax||",
                    "_",
                    "2"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". A is a rectangular matrix of dimension m-by-n, where all cases are allowed: m = n, m > n, or m < n. B is a vector of length m. The matrix A may be dense or sparse (usually sparse)."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "A",
            "type_": "{matrix, sparse matrix, ndarray, LinearOperator}",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Matrix A in the linear system. Alternatively, "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "A"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " can be a linear operator which can produce "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "Ax"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "A^H",
                          " ",
                          "x"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " using, e.g., "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "scipy.sparse.linalg.LinearOperator"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "b",
            "type_": "array_like, shape (m,)",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Vector b in the linear system."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "damp",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Damping factor for regularized least-squares. "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "lsmr"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " solves the regularized least-squares problem::"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": " min ||(b) - (  A   )x||",
                        "_number": 3,
                        "_offset": 1
                      },
                      {
                        "_line": "     ||(0)   (damp*I) ||_2",
                        "_number": 4,
                        "_offset": 1
                      },
                      {
                        "_line": "",
                        "_number": 5,
                        "_offset": 1
                      }
                    ]
                  }
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "where damp is a scalar.  If damp is None or 0, the system is solved without regularization."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "atol, btol",
            "type_": "float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Stopping tolerances. "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "lsmr"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " continues iterations until a certain backward error estimate is smaller than some quantity depending on atol and btol.  Let "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "r",
                          " ",
                          "=",
                          " ",
                          "b",
                          " ",
                          "-",
                          " ",
                          "Ax"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " be the residual vector for the current approximate solution "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "x"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". If "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "Ax",
                          " ",
                          "=",
                          " ",
                          "b"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " seems to be consistent, "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "lsmr"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " terminates when "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "norm(r)",
                          " ",
                          "<=",
                          " ",
                          "atol",
                          " ",
                          "*",
                          " ",
                          "norm(A)",
                          " ",
                          "*",
                          " ",
                          "norm(x)",
                          " ",
                          "+",
                          " ",
                          "btol",
                          " ",
                          "*",
                          " ",
                          "norm(b)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". Otherwise, lsmr terminates when "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "norm(A^H",
                          " ",
                          "r)",
                          " ",
                          "<=",
                          " ",
                          "atol",
                          " ",
                          "*",
                          " ",
                          "norm(A)",
                          " ",
                          "*",
                          " ",
                          "norm(r)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ".  If both tolerances are 1.0e-6 (say), the final "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "norm(r)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " should be accurate to about 6 digits. (The final x will usually have fewer correct digits, depending on "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "cond(A)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and the size of LAMBDA.)  If "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "atol"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "btol"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is None, a default value of 1.0e-6 will be used. Ideally, they should be estimates of the relative error in the entries of A and B respectively.  For example, if the entries of "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "A"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " have 7 correct digits, set atol = 1e-7. This prevents the algorithm from doing unnecessary work beyond the uncertainty of the input data."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "conlim",
            "type_": "float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "lsmr"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " terminates if an estimate of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "cond(A)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " exceeds "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "conlim"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ".  For compatible systems "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "Ax",
                          " ",
                          "=",
                          " ",
                          "b"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", conlim could be as large as 1.0e+12 (say).  For least-squares problems, "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "conlim"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " should be less than 1.0e+8. If "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "conlim"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is None, the default value is 1e+8.  Maximum precision can be obtained by setting "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "atol",
                          " ",
                          "=",
                          " ",
                          "btol",
                          " ",
                          "=",
                          " ",
                          "conlim",
                          " ",
                          "=",
                          " ",
                          "0"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", but the number of iterations may then be excessive."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "maxiter",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "lsmr"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " terminates if the number of iterations reaches "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "maxiter"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ".  The default is "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "maxiter",
                          " ",
                          "=",
                          " ",
                          "min(m,",
                          " ",
                          "n)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ".  For ill-conditioned systems, a larger value of "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "maxiter"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " may be needed."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "show",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Print iterations logs if "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "show=True"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "x0",
            "type_": "array_like, shape (n,), optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Initial guess of x, if None zeros are used."
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockDirective",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ".. versionadded:: 1.0.0",
                        "_number": 2,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": []
                  },
                  "ind": {
                    "_lines": []
                  },
                  "directive_name": "versionadded",
                  "args0": [
                    " 1.0.0"
                  ],
                  "inner": null
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "Returns",
            "type_": "",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "-------",
            "type_": "",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "x",
            "type_": "ndarray of float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Least-square solution returned."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "istop",
            "type_": "int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "istop gives the reason for stopping::"
                      }
                    }
                  ],
                  "inner": []
                }
              },
              {
                "type": "BlockVerbatim",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": "  istop   = 0 means x=0 is a solution.  If x0 was given, then x=x0 is a",
                        "_number": 2,
                        "_offset": 2
                      },
                      {
                        "_line": "              solution.",
                        "_number": 3,
                        "_offset": 2
                      },
                      {
                        "_line": "          = 1 means x is an approximate solution to A*x = B,",
                        "_number": 4,
                        "_offset": 2
                      },
                      {
                        "_line": "              according to atol and btol.",
                        "_number": 5,
                        "_offset": 2
                      },
                      {
                        "_line": "          = 2 means x approximately solves the least-squares problem",
                        "_number": 6,
                        "_offset": 2
                      },
                      {
                        "_line": "              according to atol.",
                        "_number": 7,
                        "_offset": 2
                      },
                      {
                        "_line": "          = 3 means COND(A) seems to be greater than CONLIM.",
                        "_number": 8,
                        "_offset": 2
                      },
                      {
                        "_line": "          = 4 is the same as 1 with atol = btol = eps (machine",
                        "_number": 9,
                        "_offset": 2
                      },
                      {
                        "_line": "              precision)",
                        "_number": 10,
                        "_offset": 2
                      },
                      {
                        "_line": "          = 5 is the same as 2 with atol = eps.",
                        "_number": 11,
                        "_offset": 2
                      },
                      {
                        "_line": "          = 6 is the same as 3 with CONLIM = 1/eps.",
                        "_number": 12,
                        "_offset": 2
                      },
                      {
                        "_line": "          = 7 means ITN reached maxiter before the other stopping",
                        "_number": 13,
                        "_offset": 2
                      },
                      {
                        "_line": "              conditions were satisfied.",
                        "_number": 14,
                        "_offset": 2
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "itn",
            "type_": "int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Number of iterations used."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "normr",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "`"
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "norm(b-Ax)"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "`"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "normar",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "`"
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "norm(A^H",
                          " ",
                          "(b",
                          " ",
                          "-",
                          " ",
                          "Ax))"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "`"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "norma",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "`"
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "norm(A)"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "`"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "conda",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Condition number of A."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "normx",
            "type_": "float",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "`"
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "norm(x)"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "`"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. versionadded:: 0.11.0",
                  "_number": 0,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": []
            },
            "directive_name": "versionadded",
            "args0": [
              " 0.11.0"
            ],
            "inner": null
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Notes",
    "References",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/scipy/sparse/linalg/isolve/lsmr.py",
  "item_line": 29,
  "item_type": "<class 'function'>",
  "aliases": [
    "scipy.sparse.linalg.lsmr"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "from",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scipy",
              "",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "sparse",
              "",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "csc_matrix",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "from",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scipy",
              "",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "sparse",
              "",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "linalg",
              "",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "lsmr",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "A",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "csc_matrix",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1.0",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0.0",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1.0",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1.0",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0.0",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1.0",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "dtype",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "float",
              "",
              "nb"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "The first example has the trivial solution "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "[0,",
                  " ",
                  "0]"
                ],
                "domain": null,
                "role": null
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "b",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0.0",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0.0",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0.0",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "dtype",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "float",
              "",
              "nb"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "x",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "istop",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "itn",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "normr",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "lsmr",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "A",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "b",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "istop",
              "",
              ""
            ]
          ],
          "out": "0",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "x",
              "",
              ""
            ]
          ],
          "out": "array([ 0.,  0.])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "The stopping code "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "istop=0"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " returned indicates that a vector of zeros was found as a solution. The returned solution "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "x"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " indeed contains "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "[0.,",
                  " ",
                  "0.]"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ". The next example has a non-trivial solution:"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "b",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1.0",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0.0",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "1.0",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "dtype",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "float",
              "",
              "nb"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "x",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "istop",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "itn",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "normr",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "lsmr",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "A",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "b",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "istop",
              "",
              ""
            ]
          ],
          "out": "1",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "x",
              "",
              ""
            ]
          ],
          "out": "array([ 1., -1.])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "itn",
              "",
              ""
            ]
          ],
          "out": "1",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "normr",
              "",
              ""
            ]
          ],
          "out": "4.440892098500627e-16",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "As indicated by "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "istop=1"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ", "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "lsmr"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " found a solution obeying the tolerance limits. The given solution "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "[1.,",
                  " ",
                  "-1.]"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " obviously solves the equation. The remaining return values include information about the number of iterations ("
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "itn=1"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ") and the remaining difference of left and right side of the solved equation. The final example demonstrates the behavior in the case where there is no solution for the equation:"
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "b",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1.0",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0.01",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "1.0",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "dtype",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "float",
              "",
              "nb"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "x",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "istop",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "itn",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "normr",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "lsmr",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "A",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "b",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "istop",
              "",
              ""
            ]
          ],
          "out": "2",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "x",
              "",
              ""
            ]
          ],
          "out": "array([ 1.00333333, -0.99666667])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "A",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "dot",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "b",
              "",
              ""
            ]
          ],
          "out": "array([ 0.00333333, -0.00333333,  0.00333333])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "normr",
              "",
              ""
            ]
          ],
          "out": "0.005773502691896255",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Directive",
              "data": {
                "value": [
                  "istop"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " indicates that the system is inconsistent and thus "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "x"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " is rather an approximate solution to the corresponding least-squares problem. "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "normr"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " contains the minimal distance that was found."
              }
            }
          ],
          "inner": []
        }
      }
    ],
    "title": null
  },
  "see_also": [],
  "signature": "lsmr(A, b, damp=0.0, atol=1e-06, btol=1e-06, conlim=100000000.0, maxiter=None, show=False, x0=None)",
  "references": [
    ".. [1] D. C.-L. Fong and M. A. Saunders,",
    "       \"LSMR: An iterative algorithm for sparse least-squares problems\",",
    "       SIAM J. Sci. Comput., vol. 33, pp. 2950-2971, 2011.",
    "       https://arxiv.org/abs/1006.0758",
    ".. [2] LSMR Software, https://web.stanford.edu/group/SOL/software/lsmr/"
  ],
  "arbitrary": []
}