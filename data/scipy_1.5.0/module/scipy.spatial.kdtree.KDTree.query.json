{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Query the kd-tree for nearest neighbors"
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "x",
            "type_": "array_like, last dimension self.m",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "An array of points to query."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "k",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The number of nearest neighbors to return."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "eps",
            "type_": "nonnegative float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Return approximate nearest neighbors; the kth returned value is guaranteed to be no further than (1+eps) times the distance to the real kth nearest neighbor."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "p",
            "type_": "float, 1<=p<=infinity, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Which Minkowski p-norm to use. 1 is the sum-of-absolute-values \"Manhattan\" distance 2 is the usual Euclidean distance infinity is the maximum-coordinate-difference distance"
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "distance_upper_bound",
            "type_": "nonnegative float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Return only neighbors within this distance. This is used to prune tree searches, so if you are doing a series of nearest-neighbor queries, it may help to supply the distance to the nearest neighbor of the most recent point."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "d",
            "type_": "float or array of floats",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The distances to the nearest neighbors. If x has shape tuple+(self.m,), then d has shape tuple if k is one, or tuple+(k,) if k is larger than one. Missing neighbors (e.g. when k > n or distance_upper_bound is given) are indicated with infinite distances.  If k is None, then d is an object array of shape tuple, containing lists of distances. In either case the hits are sorted by distance (nearest first)."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "i",
            "type_": "integer or array of integers",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The locations of the neighbors in self.data. i is the same shape as d."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    "builtins.list",
    "builtins.ndarray.ravel",
    "builtins.zip",
    "numpy",
    "numpy.array",
    "numpy.lib.index_tricks.MGridClass",
    "numpy.ndarray",
    "scipy",
    "scipy.spatial",
    "scipy.spatial.kdtree.KDTree",
    "scipy.spatial.kdtree.KDTree.query"
  ],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/scipy/spatial/kdtree.py",
  "item_line": 405,
  "item_type": "<class 'function'>",
  "aliases": [
    "scipy.spatial.KDTree.query"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scipy",
              "scipy",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "spatial",
              "scipy.spatial",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "x",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "y",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "mgrid",
              "numpy.lib.index_tricks.MGridClass",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "8",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "tree",
              "scipy.spatial.kdtree.KDTree",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "spatial",
              "scipy.spatial",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "KDTree",
              "scipy.spatial.kdtree.KDTree",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "list",
              "builtins.list",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "zip",
              "builtins.zip",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              "numpy.ndarray",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "ravel",
              "builtins.ndarray.ravel",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "y",
              "numpy.ndarray",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "ravel",
              "builtins.ndarray.ravel",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "tree",
              "scipy.spatial.kdtree.KDTree",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "data",
              "numpy.ndarray",
              ""
            ]
          ],
          "out": "array([[0, 2],\n       [0, 3],\n       [0, 4],\n       [0, 5],\n       [0, 6],\n       [0, 7],\n       [1, 2],\n       [1, 3],\n       [1, 4],\n       [1, 5],\n       [1, 6],\n       [1, 7],\n       [2, 2],\n       [2, 3],\n       [2, 4],\n       [2, 5],\n       [2, 6],\n       [2, 7],\n       [3, 2],\n       [3, 3],\n       [3, 4],\n       [3, 5],\n       [3, 6],\n       [3, 7],\n       [4, 2],\n       [4, 3],\n       [4, 4],\n       [4, 5],\n       [4, 6],\n       [4, 7]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "pts",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "2.1",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2.9",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "tree",
              "scipy.spatial.kdtree.KDTree",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "query",
              "scipy.spatial.kdtree.KDTree.query",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "pts",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "(array([ 2.        ,  0.14142136]), array([ 0, 13]))",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "tree",
              "scipy.spatial.kdtree.KDTree",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "query",
              "scipy.spatial.kdtree.KDTree.query",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "pts",
              "numpy.ndarray",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "(2.0, 0)",
          "ce_status": "execed"
        }
      }
    ],
    "title": null
  },
  "see_also": [],
  "signature": "query(self, x, k=1, eps=0, p=2, distance_upper_bound=inf)",
  "references": null,
  "arbitrary": []
}