{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Context manager for special-function error handling."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Using an instance of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "errstate"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " as a context manager allows statements in that context to execute with a known error handling behavior. Upon entering the context the error handling is set with "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "seterr"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", and upon exiting it is restored to what it was before."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "kwargs",
            "type_": "{all, singular, underflow, overflow, slow, loss, no_result, domain, arg, other}",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Keyword arguments. The valid keywords are possible special-function errors. Each keyword should have a string value that defines the treatement for the particular type of error. Values must be 'ignore', 'warn', or 'other'. See "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "seterr"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " for details."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    "_pytest.python_api.raises",
    "builtins.all",
    "geterr",
    "numpy.errstate",
    "numpy.ufunc",
    "pytest",
    "scipy",
    "scipy.special",
    "scipy.special._ufuncs.errstate",
    "scipy.special.sf_error.SpecialFunctionError",
    "seterr"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "See Also",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/scipy/special/_ufuncs.cpython-38-darwin.so",
  "item_line": null,
  "item_type": null,
  "aliases": [
    "scipy.special.errstate"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scipy",
              "scipy",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "special",
              "scipy.special",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "as",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "sc",
              "scipy.special",
              "nn"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "pytest",
              "pytest",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "raises",
              "_pytest.python_api.raises",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "sc",
              "scipy.special",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "gammaln",
              "numpy.ufunc",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "inf",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "with",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "sc",
              "scipy.special",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "errstate",
              "scipy.special._ufuncs.errstate",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "singular",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "raise",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "with",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "raises",
              "_pytest.python_api.raises",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "sc",
              "scipy.special",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "SpecialFunctionError",
              "scipy.special.sf_error.SpecialFunctionError",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "        ",
              "",
              ""
            ],
            [
              "sc",
              "scipy.special",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "gammaln",
              "numpy.ufunc",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "...",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "sc",
              "scipy.special",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "gammaln",
              "numpy.ufunc",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "inf",
          "ce_status": "execed"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "We can also raise on every category except one."
              }
            }
          ],
          "inner": []
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "with",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "sc",
              "scipy.special",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "errstate",
              "scipy.special._ufuncs.errstate",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "all",
              "builtins.all",
              "nb"
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "raise",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "singular",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "ignore",
              null,
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "sc",
              "scipy.special",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "gammaln",
              "numpy.ufunc",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "with",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "raises",
              "_pytest.python_api.raises",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "sc",
              "scipy.special",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "SpecialFunctionError",
              "scipy.special.sf_error.SpecialFunctionError",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "        ",
              "",
              ""
            ],
            [
              "sc",
              "scipy.special",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "spence",
              "numpy.ufunc",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "...\ninf",
          "ce_status": "execed"
        }
      }
    ],
    "title": null
  },
  "see_also": [
    {
      "name": {
        "name": "geterr",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "get the current way of handling special-function errors"
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "seterr",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "set how special-function errors are handled"
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    },
    {
      "name": {
        "name": "numpy.errstate",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "inline": [
            {
              "type": "Words",
              "data": {
                "value": "similar numpy function for floating-point errors"
              }
            }
          ],
          "inner": []
        }
      ],
      "type": null
    }
  ],
  "signature": "errstate(**kwargs)",
  "references": null,
  "arbitrary": []
}