{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "A matrix normal random variable."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "mean"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " keyword specifies the mean. The "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "rowcov"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " keyword specifies the among-row covariance matrix. The 'colcov' keyword specifies the among-column covariance matrix."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "X",
            "type_": "array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Quantiles, with the last two axes of "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "X"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " denoting the components."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "%(_matnorm_doc_default_callparams)s",
            "type_": "",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "%(_doc_random_state)s",
            "type_": "",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "Alternatively, the object may be called (as a function) to fix the mean",
            "type_": "",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "and covariance parameters, returning a \"frozen\" matrix normal",
            "type_": "",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "random variable:",
            "type_": "",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "rv = matrix_normal(mean=None, rowcov=1, colcov=1)",
            "type_": "",
            "desc": [
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "- Frozen object with the same methods but holding the given",
                            "_number": 0,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "  mean and covariance fixed.",
                            "_number": 1,
                            "_offset": 2
                          }
                        ]
                      },
                      "dt": {
                        "inline": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "- Frozen object with the same methods but holding the given"
                            }
                          }
                        ],
                        "inner": []
                      },
                      "dd": [
                        {
                          "type": "Paragraph",
                          "data": {
                            "inline": [
                              {
                                "type": "Words",
                                "data": {
                                  "value": "mean and covariance fixed."
                                }
                              }
                            ],
                            "inner": []
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "``pdf(X, mean=None, rowcov=1, colcov=1)``",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Probability density function."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "``logpdf(X, mean=None, rowcov=1, colcov=1)``",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Log of the probability density function."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "``rvs(mean=None, rowcov=1, colcov=1, size=1, random_state=None)``",
            "type_": "",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "inline": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Draw random samples."
                      }
                    }
                  ],
                  "inner": []
                }
              }
            ]
          }
        }
      ],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "%(_matnorm_doc_callparams_note)s"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The covariance matrices specified by "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "rowcov"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "colcov"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " must be (symmetric) positive definite. If the samples in "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "X"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " are "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "m",
                    " ",
                    "\\times",
                    " ",
                    "n"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", then "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "rowcov"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " must be "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "m",
                    " ",
                    "\\times",
                    " ",
                    "m"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "colcov"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " must be "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "n",
                    " ",
                    "\\times",
                    " ",
                    "n"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "mean"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " must be the same shape as "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "X"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The probability density function for "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "matrix",
                    "_",
                    "normal"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is"
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. math::",
                  "_number": 9,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 10,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": [
                {
                  "_line": "    f(X) = (2 \\pi)^{-\\frac{mn}{2}}|U|^{-\\frac{n}{2}} |V|^{-\\frac{m}{2}}",
                  "_number": 11,
                  "_offset": 0
                },
                {
                  "_line": "           \\exp\\left( -\\frac{1}{2} \\mathrm{Tr}\\left[ U^{-1} (X-M) V^{-1}",
                  "_number": 12,
                  "_offset": 0
                },
                {
                  "_line": "           (X-M)^T \\right] \\right),",
                  "_number": 13,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 14,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "math",
            "args0": [
              ""
            ],
            "inner": {
              "inline": [
                {
                  "type": "Words",
                  "data": {
                    "value": "f(X) = (2 \\pi)^{-\\frac{mn}{2}}|U|^{-\\frac{n}{2}} |V|^{-\\frac{m}{2}}        \\exp\\left( -\\frac{1}{2} \\mathrm{Tr}\\left[ U^{-1} (X-M) V^{-1}        (X-M)^T \\right] \\right), "
                  }
                }
              ],
              "inner": []
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "where "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "M"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is the mean, "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "U"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " the among-row covariance matrix, "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "V"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " the among-column covariance matrix."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "allow",
                    "_",
                    "singular"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " behaviour of the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "multivariate",
                    "_",
                    "normal"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " distribution is not currently supported. Covariance matrices must be full rank."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "The "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "matrix",
                    "_",
                    "normal"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " distribution is closely related to the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "multivariate",
                    "_",
                    "normal"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " distribution. Specifically, "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "\\mathrm{Vec}(X)"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (the vector formed by concatenating the columns  of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "X"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ") has a multivariate normal distribution with mean "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "\\mathrm{Vec}(M)"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and covariance "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "V",
                    " ",
                    "\\otimes",
                    " ",
                    "U"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (where "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "\\otimes"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is the Kronecker product). Sampling and pdf evaluation are "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "\\mathcal{O}(m^3",
                    " ",
                    "+",
                    " ",
                    "n^3",
                    " ",
                    "+",
                    " ",
                    "m^2",
                    " ",
                    "n",
                    " ",
                    "+",
                    " ",
                    "m",
                    " ",
                    "n^2)"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " for the matrix normal, but "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "\\mathcal{O}(m^3",
                    " ",
                    "n^3)"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " for the equivalent multivariate normal, making this equivalent form algorithmically inefficient."
                }
              }
            ],
            "inner": []
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. versionadded:: 0.17.0",
                  "_number": 32,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": []
            },
            "directive_name": "versionadded",
            "args0": [
              " 0.17.0"
            ],
            "inner": null
          }
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [
    "builtins.float",
    "builtins.ndarray.flatten",
    "builtins.ndarray.reshape",
    "numpy",
    "numpy.arange",
    "numpy.diag",
    "numpy.identity",
    "numpy.kron",
    "numpy.ndarray",
    "scipy",
    "scipy.stats",
    "scipy.stats._multivariate.matrix_normal_gen",
    "scipy.stats._multivariate.matrix_normal_gen.pdf",
    "scipy.stats._multivariate.multivariate_normal_gen",
    "scipy.stats._multivariate.multivariate_normal_gen.pdf"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Methods",
    "Parameters",
    "Notes",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/scipy/stats/_multivariate.py",
  "item_line": 834,
  "item_type": "<class 'type'>",
  "aliases": [
    "scipy.stats._multivariate.matrix_normal_gen"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scipy",
              "scipy",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "stats",
              "scipy.stats",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "matrix_normal",
              "scipy.stats._multivariate.matrix_normal_gen",
              ""
            ]
          ],
          "out": "",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "M",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "arange",
              "numpy.arange",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "6",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "reshape",
              "builtins.ndarray.reshape",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "M",
              "numpy.ndarray",
              ""
            ]
          ],
          "out": "array([[0, 1],\n       [2, 3],\n       [4, 5]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "U",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "diag",
              "numpy.diag",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "U",
              "numpy.ndarray",
              ""
            ]
          ],
          "out": "array([[1, 0, 0],\n       [0, 2, 0],\n       [0, 0, 3]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "V",
              "builtins.float",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0.3",
              "",
              "mf"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "identity",
              "numpy.identity",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "V",
              "builtins.float",
              ""
            ]
          ],
          "out": "array([[ 0.3,  0. ],\n       [ 0. ,  0.3]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "X",
              "builtins.float",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "M",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "+",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0.1",
              "",
              "mf"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "X",
              "builtins.float",
              ""
            ]
          ],
          "out": "array([[ 0.1,  1.1],\n       [ 2.1,  3.1],\n       [ 4.1,  5.1]])",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "matrix_normal",
              "scipy.stats._multivariate.matrix_normal_gen",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "pdf",
              "scipy.stats._multivariate.matrix_normal_gen.pdf",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "X",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "mean",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "M",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "rowcov",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "U",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "colcov",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "V",
              "builtins.float",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "0.023410202050005054",
          "ce_status": "execed"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "# Equivalent multivariate normal",
              "",
              "c1"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scipy",
              "scipy",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "stats",
              "scipy.stats",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "multivariate_normal",
              "scipy.stats._multivariate.multivariate_normal_gen",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "vectorised_X",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "X",
              "builtins.float",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "T",
              "numpy.ndarray",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "flatten",
              "builtins.ndarray.flatten",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "equiv_mean",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "M",
              "numpy.ndarray",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "T",
              "numpy.ndarray",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "flatten",
              "builtins.ndarray.flatten",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "equiv_cov",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "kron",
              "numpy.kron",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "V",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "U",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "multivariate_normal",
              "scipy.stats._multivariate.multivariate_normal_gen",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "pdf",
              "scipy.stats._multivariate.multivariate_normal_gen.pdf",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "vectorised_X",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "mean",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "equiv_mean",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "cov",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "equiv_cov",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "0.023410202050005054",
          "ce_status": "execed"
        }
      }
    ],
    "title": null
  },
  "see_also": [],
  "signature": "matrix_normal_gen(seed=None)",
  "references": null,
  "arbitrary": []
}