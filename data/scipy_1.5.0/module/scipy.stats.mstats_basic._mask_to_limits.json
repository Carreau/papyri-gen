{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "Mask an array for values outside of given limits."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "inline": [
              {
                "type": "Words",
                "data": {
                  "value": "This is primarily a utility function."
                }
              }
            ],
            "inner": []
          }
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "a",
            "type_": "array",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "limits",
            "type_": "(float or None, float or None)",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "A tuple consisting of the (lower limit, upper limit).  Values in the",
            "type_": "",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "input array less than the lower limit or greater than the upper limit",
            "type_": "",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "will be masked out. None implies no limit.",
            "type_": "",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "inclusive",
            "type_": "(bool, bool)",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "A tuple consisting of the (lower flag, upper flag).  These flags",
            "type_": "",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "determine whether values exactly equal to lower or upper are allowed.",
            "type_": "",
            "desc": []
          }
        }
      ],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "A MaskedArray.",
            "desc": []
          }
        }
      ],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "",
            "type_": "A ValueError if there are no values within the given limits.",
            "desc": []
          }
        }
      ],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Attributes": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises"
  ],
  "item_file": "/Users/bussonniermatthias/miniconda3/lib/python3.8/site-packages/scipy/stats/mstats_basic.py",
  "item_line": 1761,
  "item_type": "<class 'function'>",
  "aliases": [
    "scipy.stats.mstats_basic._mask_to_limits"
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "see_also": [],
  "signature": "_mask_to_limits(a, limits, inclusive)",
  "references": null,
  "arbitrary": []
}