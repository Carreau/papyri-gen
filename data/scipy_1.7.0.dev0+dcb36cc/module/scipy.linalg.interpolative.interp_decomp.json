{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Compute ID of a matrix."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "An ID of a matrix "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "A"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is a factorization defined by a rank "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "k"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", a column index array "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "idx"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", and interpolation coefficients "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "proj"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " such that::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "    numpy.dot(A[:,idx[:k]], proj) = A[:,idx[k:]]",
                  "_number": 3,
                  "_offset": 4
                },
                {
                  "_line": "",
                  "_number": 4,
                  "_offset": 4
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The original matrix can then be reconstructed as::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "    numpy.hstack([A[:,idx[:k]],",
                  "_number": 7,
                  "_offset": 4
                },
                {
                  "_line": "                                numpy.dot(A[:,idx[:k]], proj)]",
                  "_number": 8,
                  "_offset": 4
                },
                {
                  "_line": "                            )[:,numpy.argsort(idx)]",
                  "_number": 9,
                  "_offset": 4
                },
                {
                  "_line": "",
                  "_number": 10,
                  "_offset": 4
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "or via the routine "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "reconstruct",
                    "_",
                    "matrix",
                    "_",
                    "from",
                    "_",
                    "id"
                  ],
                  "domain": null,
                  "role": "func"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". This can equivalently be written as::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "    numpy.dot(A[:,idx[:k]],",
                  "_number": 14,
                  "_offset": 4
                },
                {
                  "_line": "                        numpy.hstack([numpy.eye(k), proj])",
                  "_number": 15,
                  "_offset": 4
                },
                {
                  "_line": "                      )[:,np.argsort(idx)]",
                  "_number": 16,
                  "_offset": 4
                },
                {
                  "_line": "",
                  "_number": 17,
                  "_offset": 4
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "in terms of the skeleton and interpolation matrices::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "    B = A[:,idx[:k]]",
                  "_number": 20,
                  "_offset": 4
                },
                {
                  "_line": "",
                  "_number": 21,
                  "_offset": 4
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "and::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "    P = numpy.hstack([numpy.eye(k), proj])[:,np.argsort(idx)]",
                  "_number": 24,
                  "_offset": 4
                },
                {
                  "_line": "",
                  "_number": 25,
                  "_offset": 4
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "respectively. See also "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "reconstruct",
                    "_",
                    "interp",
                    "_",
                    "matrix"
                  ],
                  "domain": null,
                  "role": "func"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "reconstruct",
                    "_",
                    "skel",
                    "_",
                    "matrix"
                  ],
                  "domain": null,
                  "role": "func"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The ID can be computed to any relative precision or rank (depending on the value of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "eps",
                    "_",
                    "or",
                    "_",
                    "k"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "). If a precision is specified ("
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "eps",
                    "_",
                    "or",
                    "_",
                    "k",
                    " ",
                    "<",
                    " ",
                    "1"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "), then this function has the output signature::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "    k, idx, proj = interp_decomp(A, eps_or_k)",
                  "_number": 33,
                  "_offset": 4
                },
                {
                  "_line": "",
                  "_number": 34,
                  "_offset": 4
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Otherwise, if a rank is specified ("
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "eps",
                    "_",
                    "or",
                    "_",
                    "k",
                    " ",
                    ">=",
                    " ",
                    "1"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "), then the output signature is::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "    idx, proj = interp_decomp(A, eps_or_k)",
                  "_number": 38,
                  "_offset": 4
                },
                {
                  "_line": "",
                  "_number": 39,
                  "_offset": 4
                }
              ]
            }
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "..  This function automatically detects the form of the input parameters",
                  "_number": 40,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": [
                {
                  "_line": "    and passes them to the appropriate backend. For details, see",
                  "_number": 41,
                  "_offset": 0
                },
                {
                  "_line": "    :func:`backend.iddp_id`, :func:`backend.iddp_aid`,",
                  "_number": 42,
                  "_offset": 0
                },
                {
                  "_line": "    :func:`backend.iddp_rid`, :func:`backend.iddr_id`,",
                  "_number": 43,
                  "_offset": 0
                },
                {
                  "_line": "    :func:`backend.iddr_aid`, :func:`backend.iddr_rid`,",
                  "_number": 44,
                  "_offset": 0
                },
                {
                  "_line": "    :func:`backend.idzp_id`, :func:`backend.idzp_aid`,",
                  "_number": 45,
                  "_offset": 0
                },
                {
                  "_line": "    :func:`backend.idzp_rid`, :func:`backend.idzr_id`,",
                  "_number": 46,
                  "_offset": 0
                },
                {
                  "_line": "    :func:`backend.idzr_aid`, and :func:`backend.idzr_rid`.",
                  "_number": 47,
                  "_offset": 0
                }
              ]
            },
            "directive_name": " This function automatically detects the form of the input parameters",
            "args0": [],
            "inner": {
              "children": [
                {
                  "type": "Words",
                  "data": {
                    "value": "and passes them to the appropriate backend. For details, see "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.iddp",
                      "_",
                      "id"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.iddp",
                      "_",
                      "aid"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.iddp",
                      "_",
                      "rid"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.iddr",
                      "_",
                      "id"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.iddr",
                      "_",
                      "aid"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.iddr",
                      "_",
                      "rid"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.idzp",
                      "_",
                      "id"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.idzp",
                      "_",
                      "aid"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.idzp",
                      "_",
                      "rid"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.idzr",
                      "_",
                      "id"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.idzr",
                      "_",
                      "aid"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", and "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.idzr",
                      "_",
                      "rid"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": "."
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "A",
            "type_": ":class:`numpy.ndarray` or :class:`scipy.sparse.linalg.LinearOperator` with `rmatvec`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Matrix to be factored"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "eps_or_k",
            "type_": "float or int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Relative error (if "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "eps",
                          "_",
                          "or",
                          "_",
                          "k",
                          " ",
                          "<",
                          " ",
                          "1"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ") or rank (if "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "eps",
                          "_",
                          "or",
                          "_",
                          "k",
                          " ",
                          ">=",
                          " ",
                          "1"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ") of approximation."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "rand",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Whether to use random sampling if "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "A"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is of type "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "numpy.ndarray"
                        ],
                        "domain": null,
                        "role": "class"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (randomized algorithms are always used if "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "A"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is of type "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "scipy.sparse.linalg.LinearOperator"
                        ],
                        "domain": null,
                        "role": "class"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ")."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "k",
            "type_": "int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Rank required to achieve specified relative precision if "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "eps",
                          "_",
                          "or",
                          "_",
                          "k",
                          " ",
                          "<",
                          " ",
                          "1"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "idx",
            "type_": ":class:`numpy.ndarray`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Column index array."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "proj",
            "type_": ":class:`numpy.ndarray`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Interpolation coefficients."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "item_file": "/Users/bussonniermatthias/dev/scipy/scipy/linalg/interpolative.py",
  "item_line": 464,
  "item_type": "<class 'function'>",
  "aliases": [
    "scipy.linalg.interpolative.interp_decomp"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "signature": "interp_decomp(A, eps_or_k, rand=True)",
  "references": null
}