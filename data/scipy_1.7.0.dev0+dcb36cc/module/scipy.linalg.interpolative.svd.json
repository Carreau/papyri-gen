{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Compute SVD of a matrix via an ID."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "An SVD of a matrix "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "A"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is a factorization::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "    A = numpy.dot(U, numpy.dot(numpy.diag(S), V.conj().T))",
                  "_number": 2,
                  "_offset": 4
                },
                {
                  "_line": "",
                  "_number": 3,
                  "_offset": 4
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "where "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "U"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "V"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " have orthonormal columns and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "S"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is nonnegative."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The SVD can be computed to any relative precision or rank (depending on the value of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "eps",
                    "_",
                    "or",
                    "_",
                    "k"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ")."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "See also "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "interp",
                    "_",
                    "decomp"
                  ],
                  "domain": null,
                  "role": "func"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "id",
                    "_",
                    "to",
                    "_",
                    "svd"
                  ],
                  "domain": null,
                  "role": "func"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "..  This function automatically detects the form of the input parameters and",
                  "_number": 11,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": [
                {
                  "_line": "    passes them to the appropriate backend. For details, see",
                  "_number": 12,
                  "_offset": 0
                },
                {
                  "_line": "    :func:`backend.iddp_svd`, :func:`backend.iddp_asvd`,",
                  "_number": 13,
                  "_offset": 0
                },
                {
                  "_line": "    :func:`backend.iddp_rsvd`, :func:`backend.iddr_svd`,",
                  "_number": 14,
                  "_offset": 0
                },
                {
                  "_line": "    :func:`backend.iddr_asvd`, :func:`backend.iddr_rsvd`,",
                  "_number": 15,
                  "_offset": 0
                },
                {
                  "_line": "    :func:`backend.idzp_svd`, :func:`backend.idzp_asvd`,",
                  "_number": 16,
                  "_offset": 0
                },
                {
                  "_line": "    :func:`backend.idzp_rsvd`, :func:`backend.idzr_svd`,",
                  "_number": 17,
                  "_offset": 0
                },
                {
                  "_line": "    :func:`backend.idzr_asvd`, and :func:`backend.idzr_rsvd`.",
                  "_number": 18,
                  "_offset": 0
                }
              ]
            },
            "directive_name": " This function automatically detects the form of the input parameters and",
            "args0": [],
            "inner": {
              "children": [
                {
                  "type": "Words",
                  "data": {
                    "value": "passes them to the appropriate backend. For details, see "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.iddp",
                      "_",
                      "svd"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.iddp",
                      "_",
                      "asvd"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.iddp",
                      "_",
                      "rsvd"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.iddr",
                      "_",
                      "svd"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.iddr",
                      "_",
                      "asvd"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.iddr",
                      "_",
                      "rsvd"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.idzp",
                      "_",
                      "svd"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.idzp",
                      "_",
                      "asvd"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.idzp",
                      "_",
                      "rsvd"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.idzr",
                      "_",
                      "svd"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.idzr",
                      "_",
                      "asvd"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": ", and "
                  }
                },
                {
                  "type": "Directive",
                  "data": {
                    "value": [
                      "backend.idzr",
                      "_",
                      "rsvd"
                    ],
                    "domain": null,
                    "role": "func"
                  }
                },
                {
                  "type": "Words",
                  "data": {
                    "value": "."
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "A",
            "type_": ":class:`numpy.ndarray` or :class:`scipy.sparse.linalg.LinearOperator`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Matrix to be factored, given as either a "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "numpy.ndarray"
                        ],
                        "domain": null,
                        "role": "class"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or a "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "scipy.sparse.linalg.LinearOperator"
                        ],
                        "domain": null,
                        "role": "class"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " with the "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "matvec"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "rmatvec"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " methods (to apply the matrix and its adjoint)."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "eps_or_k",
            "type_": "float or int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Relative error (if "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "eps",
                          "_",
                          "or",
                          "_",
                          "k",
                          " ",
                          "<",
                          " ",
                          "1"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ") or rank (if "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "eps",
                          "_",
                          "or",
                          "_",
                          "k",
                          " ",
                          ">=",
                          " ",
                          "1"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ") of approximation."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "rand",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Whether to use random sampling if "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "A"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is of type "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "numpy.ndarray"
                        ],
                        "domain": null,
                        "role": "class"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (randomized algorithms are always used if "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "A"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is of type "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "scipy.sparse.linalg.LinearOperator"
                        ],
                        "domain": null,
                        "role": "class"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ")."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "U",
            "type_": ":class:`numpy.ndarray`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Left singular vectors."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "S",
            "type_": ":class:`numpy.ndarray`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Singular values."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "V",
            "type_": ":class:`numpy.ndarray`",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Right singular vectors."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "item_file": "/Users/bussonniermatthias/dev/scipy/scipy/linalg/interpolative.py",
  "item_line": 820,
  "item_type": "<class 'function'>",
  "aliases": [
    "scipy.linalg.interpolative.svd"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "signature": "svd(A, eps_or_k, rand=True)",
  "references": null
}