{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Find a root of a function, using a tuned diagonal Jacobian approximation."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The Jacobian matrix is diagonal and is tuned on each iteration."
                }
              }
            ]
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. warning::",
                  "_number": 2,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 3,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": [
                {
                  "_line": "   This algorithm may be useful for specific problems, but whether",
                  "_number": 4,
                  "_offset": 0
                },
                {
                  "_line": "   it will work may depend strongly on the problem.",
                  "_number": 5,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "warning",
            "args0": [
              ""
            ],
            "inner": {
              "children": [
                {
                  "type": "Words",
                  "data": {
                    "value": "This algorithm may be useful for specific problems, but whether it will work may depend strongly on the problem."
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "%(params_basic)s",
            "type_": "",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "alpha",
            "type_": "float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Initial Jacobian approximation is (-1/alpha)."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "alphamax",
            "type_": "float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The entries of the diagonal Jacobian are kept in the range "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "[alpha,",
                          " ",
                          "alphamax]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "%(params_extra)s",
            "type_": "",
            "desc": []
          }
        }
      ]
    },
    "Returns": {
      "children": []
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    "root"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "See Also",
    "Parameters"
  ],
  "item_file": "/Users/bussonniermatthias/dev/scipy/scipy/optimize/nonlin.py",
  "item_line": 1355,
  "item_type": "<class 'type'>",
  "aliases": [
    "scipy.optimize.nonlin.ExcitingMixing"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [
    {
      "name": {
        "name": "root",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Interface to root finding algorithms for multivariate functions. See "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "method=='excitingmixing'"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " in particular."
              }
            }
          ]
        }
      ],
      "type": null
    }
  ],
  "signature": "ExcitingMixing(alpha=None, alphamax=1.0)",
  "references": null
}