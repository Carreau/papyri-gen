{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Given a parameter vector "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "x0"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " with length "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "n"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and a direction vector "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "alpha"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " with length "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "n"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", and lower and upper bounds on each of the "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "n"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " parameters, what are the bounds on a scalar "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "l"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " such that "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "lower",
                    "_",
                    "bound",
                    " ",
                    "<=",
                    " ",
                    "x0",
                    " ",
                    "+",
                    " ",
                    "alpha",
                    " ",
                    "*",
                    " ",
                    "l",
                    " ",
                    "<=",
                    " ",
                    "upper",
                    "_",
                    "bound"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": []
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "x0",
            "type_": "np.array.",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The vector representing the current location. Note "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "np.shape(x0)",
                          " ",
                          "==",
                          " ",
                          "(n,)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "alpha",
            "type_": "np.array.",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The vector representing the direction. Note "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "np.shape(alpha)",
                          " ",
                          "==",
                          " ",
                          "(n,)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "lower_bound",
            "type_": "np.array.",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The lower bounds for each parameter in "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "x0"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". If the "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "i"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "th parameter in "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "x0"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is unbounded below, then "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "lower",
                          "_",
                          "bound[i]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " should be "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "-np.inf"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". Note "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "np.shape(lower",
                          "_",
                          "bound)",
                          " ",
                          "==",
                          " ",
                          "(n,)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "upper_bound",
            "type_": "np.array.",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The upper bounds for each parameter in "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "x0"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". If the "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "i"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "th parameter in "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "x0"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is unbounded above, then "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "upper",
                          "_",
                          "bound[i]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " should be "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "np.inf"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". Note "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "np.shape(upper",
                          "_",
                          "bound)",
                          " ",
                          "==",
                          " ",
                          "(n,)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "res",
            "type_": "tuple ``(lmin, lmax)``",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The bounds for "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "l"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " such that"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "    `"
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "lower",
                          "_",
                          "bound[i]",
                          " ",
                          "<=",
                          " ",
                          "x0[i]",
                          " ",
                          "+",
                          " ",
                          "alpha[i]",
                          " ",
                          "*",
                          " ",
                          "l",
                          " ",
                          "<=",
                          " ",
                          "upper",
                          "_",
                          "bound[i]"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "`"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "for all "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "i"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns"
  ],
  "item_file": "/Users/bussonniermatthias/dev/scipy/scipy/optimize/optimize.py",
  "item_line": 2604,
  "item_type": "<class 'function'>",
  "aliases": [
    "scipy.optimize.optimize._line_for_search"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "signature": "_line_for_search(x0, alpha, lower_bound, upper_bound)",
  "references": null
}