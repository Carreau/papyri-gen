{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Forward-backward IIR filter that uses Gustafsson's method."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Apply the IIR filter defined by "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "(b,a)"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " to "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "x"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " twice, first forward then backward, using Gustafsson's initial conditions [1]_."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Let "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "y",
                    "_",
                    "fb"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " be the result of filtering first forward and then backward, and let "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "y",
                    "_",
                    "bf"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " be the result of filtering first backward then forward. Gustafsson's method is to compute initial conditions for the forward pass and the backward pass such that "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "y",
                    "_",
                    "fb",
                    " ",
                    "==",
                    " ",
                    "y",
                    "_",
                    "bf"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "b",
            "type_": "scalar or 1-D ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Numerator coefficients of the filter."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "a",
            "type_": "scalar or 1-D ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Denominator coefficients of the filter."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "x",
            "type_": "ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Data to be filtered."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "axis",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Axis of "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "x"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " to be filtered.  Default is -1."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "irlen",
            "type_": "int or None, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The length of the nonnegligible part of the impulse response. If "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "irlen"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is None, or if the length of the signal is less than "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "2",
                          " ",
                          "*",
                          " ",
                          "irlen"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", then no part of the impulse response is ignored."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "y",
            "type_": "ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The filtered data."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "x0",
            "type_": "ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Initial condition for the forward filter."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "x1",
            "type_": "ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Initial condition for the backward filter."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Typically the return values "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "x0"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "x1"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " are not needed by the caller.  The intended use of these return values is in unit tests."
                }
              }
            ]
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes",
    "References"
  ],
  "item_file": "/Users/bussonniermatthias/dev/scipy/scipy/signal/signaltools.py",
  "item_line": 3691,
  "item_type": "<class 'function'>",
  "aliases": [
    "scipy.signal.signaltools._filtfilt_gust"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "signature": "_filtfilt_gust(b, a, x, axis=-1, irlen=None)",
  "references": [
    ".. [1] F. Gustaffson. Determining the initial states in forward-backward",
    "       filtering. Transactions on Signal Processing, 46(4):988-992, 1996."
  ]
}