{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Return a window of a given length and type."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": []
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "window",
            "type_": "string, float, or tuple",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The type of window to create. See below for more details."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "Nx",
            "type_": "int",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The number of samples in the window."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "fftbins",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If True (default), create a \"periodic\" window, ready to use with "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "ifftshift"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and be multiplied by the result of an FFT (see also "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "~scipy.fft.fftfreq"
                        ],
                        "domain": null,
                        "role": "func"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "). If False, create a \"symmetric\" window, for use in filter design."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "get_window",
            "type_": "ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Returns a window of length "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "Nx"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and type "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "window"
                        ],
                        "domain": null,
                        "role": null
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Window types:"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "- "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~scipy.signal.windows.boxcar"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " - "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~scipy.signal.windows.triang"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " - "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~scipy.signal.windows.blackman"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " - "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~scipy.signal.windows.hamming"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " - "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~scipy.signal.windows.hann"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " - "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~scipy.signal.windows.bartlett"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " - "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~scipy.signal.windows.flattop"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " - "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~scipy.signal.windows.parzen"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " - "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~scipy.signal.windows.bohman"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " - "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~scipy.signal.windows.blackmanharris"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " - "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~scipy.signal.windows.nuttall"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " - "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~scipy.signal.windows.barthann"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " - "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~scipy.signal.windows.kaiser"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (needs beta) - "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~scipy.signal.windows.gaussian"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (needs standard deviation) - "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~scipy.signal.windows.general",
                    "_",
                    "gaussian"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (needs power, width) - "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~scipy.signal.windows.dpss"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (needs normalized half-bandwidth) - "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~scipy.signal.windows.chebwin"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (needs attenuation) - "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~scipy.signal.windows.exponential"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (needs center, decay scale) - "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~scipy.signal.windows.tukey"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (needs taper fraction) - "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~scipy.signal.windows.taylor"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (needs number of constant sidelobes,"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "  sidelobe level)"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "If the window requires no parameters, then "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "window"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " can be a string."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "If the window requires parameters, then "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "window"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " must be a tuple with the first argument the string name of the window, and the next arguments the needed parameters."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "If "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "window"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is a floating point number, it is interpreted as the beta parameter of the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "~scipy.signal.windows.kaiser"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " window."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Each of the window types listed above is also the name of a function that can be called directly to create a window of that type."
                }
              }
            ]
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/dev/scipy/scipy/signal/windows/windows.py",
  "item_line": 2048,
  "item_type": "<class 'function'>",
  "aliases": [
    "scipy.signal.get_window"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "from",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scipy",
              "",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "signal",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "signal",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "get_window",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "triang",
              "",
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "7",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([ 0.125,  0.375,  0.625,  0.875,  0.875,  0.625,  0.375])",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "signal",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "get_window",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "kaiser",
              "",
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4.0",
              "",
              "mf"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "9",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([ 0.08848053,  0.29425961,  0.56437221,  0.82160913,  0.97885093,\n        0.97885093,  0.82160913,  0.56437221,  0.29425961])",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "signal",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "get_window",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              "exponential",
              "",
              "s2"
            ],
            [
              "\"",
              "",
              "s2"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "None",
              "",
              "kc"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1.0",
              "",
              "mf"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "9",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([ 0.011109  ,  0.03019738,  0.082085  ,  0.22313016,  0.60653066,\n        0.60653066,  0.22313016,  0.082085  ,  0.03019738])",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "signal",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "get_window",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "4.0",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "9",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([ 0.08848053,  0.29425961,  0.56437221,  0.82160913,  0.97885093,\n        0.97885093,  0.82160913,  0.56437221,  0.29425961])",
          "ce_status": "compiled"
        }
      }
    ]
  },
  "see_also": [],
  "signature": "get_window(window, Nx, fftbins=True)",
  "references": null
}