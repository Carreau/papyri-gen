{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Pairwise distances between observations in n-dimensional space."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "See Notes for common calling conventions."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "X",
            "type_": "ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "An m by n array of m original observations in an n-dimensional space."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "metric",
            "type_": "str or function, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The distance metric to use. The distance function can be 'braycurtis', 'canberra', 'chebyshev', 'cityblock', 'correlation', 'cosine', 'dice', 'euclidean', 'hamming', 'jaccard', 'jensenshannon', 'kulsinski', 'mahalanobis', 'matching', 'minkowski', 'rogerstanimoto', 'russellrao', 'seuclidean', 'sokalmichener', 'sokalsneath', 'sqeuclidean', 'yule'."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "*args",
            "type_": "tuple. Deprecated.",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Additional arguments should be passed as keyword arguments"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "**kwargs",
            "type_": "dict, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Extra arguments to "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "metric"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ": refer to each metric documentation for a list of all possible arguments."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Some possible arguments:"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "p : scalar The p-norm to apply for Minkowski, weighted and unweighted. Default: 2."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "w : ndarray The weight vector for metrics that support weights (e.g., Minkowski)."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "V : ndarray The variance vector for standardized Euclidean. Default: var(X, axis=0, ddof=1)"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "VI : ndarray The inverse of the covariance matrix for Mahalanobis. Default: inv(cov(X.T)).T"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "out : ndarray. The output array If not None, condensed distance matrix Y is stored in this array. Note: metric independent, it will become a regular keyword arg in a future scipy version"
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "Y",
            "type_": "ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Returns a condensed distance matrix Y.  For each "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "i"
                        ],
                        "domain": null,
                        "role": "math"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "j"
                        ],
                        "domain": null,
                        "role": "math"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (where "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "i<j<m"
                        ],
                        "domain": null,
                        "role": "math"
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "),where m is the number of original observations. The metric "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "dist(u=X[i],",
                          " ",
                          "v=X[j])"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is computed and stored in entry "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "m",
                          " ",
                          "*",
                          " ",
                          "i",
                          " ",
                          "+",
                          " ",
                          "j",
                          " ",
                          "-",
                          " ",
                          "((i",
                          " ",
                          "+",
                          " ",
                          "2)",
                          " ",
                          "*",
                          " ",
                          "(i",
                          " ",
                          "+",
                          " ",
                          "1))",
                          " ",
                          "//",
                          " ",
                          "2"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "See "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "squareform"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " for information on how to calculate the index of this entry or to convert the condensed distance matrix to a redundant square matrix."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The following are common calling conventions."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "1. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Y",
                    " ",
                    "=",
                    " ",
                    "pdist(X,",
                    " ",
                    "'euclidean')"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Computes the distance between m points using Euclidean distance    (2-norm) as the distance metric between the points. The points    are arranged as m n-dimensional row vectors in the matrix X."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "2. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Y",
                    " ",
                    "=",
                    " ",
                    "pdist(X,",
                    " ",
                    "'minkowski',",
                    " ",
                    "p=2.)"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Computes the distances using the Minkowski distance    "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "||u-v||",
                    "_",
                    "p"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (p-norm) where "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "p",
                    " ",
                    "\\geq",
                    " ",
                    "1"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "3. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Y",
                    " ",
                    "=",
                    " ",
                    "pdist(X,",
                    " ",
                    "'cityblock')"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Computes the city block or Manhattan distance between the    points."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "4. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Y",
                    " ",
                    "=",
                    " ",
                    "pdist(X,",
                    " ",
                    "'seuclidean',",
                    " ",
                    "V=None)"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Computes the standardized Euclidean distance. The standardized    Euclidean distance between two n-vectors "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "u"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "v"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   .. math::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "      \\sqrt{\\sum {(u_i-v_i)^2 / V[x_i]}}",
                  "_number": 29,
                  "_offset": 6
                },
                {
                  "_line": "",
                  "_number": 30,
                  "_offset": 6
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   V is the variance vector; V[i] is the variance computed over all    the i'th components of the points.  If not passed, it is    automatically computed."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "5. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Y",
                    " ",
                    "=",
                    " ",
                    "pdist(X,",
                    " ",
                    "'sqeuclidean')"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Computes the squared Euclidean distance "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "||u-v||",
                    "_",
                    "2^2"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " between    the vectors."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "6. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Y",
                    " ",
                    "=",
                    " ",
                    "pdist(X,",
                    " ",
                    "'cosine')"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Computes the cosine distance between vectors u and v,"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   .. math::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "      1 - \\frac{u \\cdot v}",
                  "_number": 46,
                  "_offset": 6
                },
                {
                  "_line": "               {{||u||}_2 {||v||}_2}",
                  "_number": 47,
                  "_offset": 6
                },
                {
                  "_line": "",
                  "_number": 48,
                  "_offset": 6
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   where "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "||",
                    "*",
                    "||",
                    "_",
                    "2"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is the 2-norm of its argument "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "*"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", and    "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "u",
                    " ",
                    "\\cdot",
                    " ",
                    "v"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is the dot product of "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "u"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "v"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "7. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Y",
                    " ",
                    "=",
                    " ",
                    "pdist(X,",
                    " ",
                    "'correlation')"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Computes the correlation distance between vectors u and v. This is"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   .. math::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "      1 - \\frac{(u - \\bar{u}) \\cdot (v - \\bar{v})}",
                  "_number": 58,
                  "_offset": 6
                },
                {
                  "_line": "               {{||(u - \\bar{u})||}_2 {||(v - \\bar{v})||}_2}",
                  "_number": 59,
                  "_offset": 6
                },
                {
                  "_line": "",
                  "_number": 60,
                  "_offset": 6
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   where "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "\\bar{v}"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is the mean of the elements of vector v,    and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "x",
                    " ",
                    "\\cdot",
                    " ",
                    "y"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is the dot product of "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "x"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "y"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "8. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Y",
                    " ",
                    "=",
                    " ",
                    "pdist(X,",
                    " ",
                    "'hamming')"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Computes the normalized Hamming distance, or the proportion of    those vector elements between two n-vectors "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "u"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "v"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "    which disagree. To save memory, the matrix "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "X"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " can be of type    boolean."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "9. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Y",
                    " ",
                    "=",
                    " ",
                    "pdist(X,",
                    " ",
                    "'jaccard')"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Computes the Jaccard distance between the points. Given two    vectors, "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "u"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "v"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", the Jaccard distance is the    proportion of those elements "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "u[i]"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "v[i]"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " that    disagree."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "10. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Y",
                    " ",
                    "=",
                    " ",
                    "pdist(X,",
                    " ",
                    "'chebyshev')"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Computes the Chebyshev distance between the points. The    Chebyshev distance between two n-vectors "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "u"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "v"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is the    maximum norm-1 distance between their respective elements. More    precisely, the distance is given by"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   .. math::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "      d(u,v) = \\max_i {|u_i-v_i|}",
                  "_number": 87,
                  "_offset": 6
                },
                {
                  "_line": "",
                  "_number": 88,
                  "_offset": 6
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "11. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Y",
                    " ",
                    "=",
                    " ",
                    "pdist(X,",
                    " ",
                    "'canberra')"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Computes the Canberra distance between the points. The    Canberra distance between two points "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "u"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "v"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   .. math::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "     d(u,v) = \\sum_i \\frac{|u_i-v_i|}",
                  "_number": 96,
                  "_offset": 5
                },
                {
                  "_line": "                          {|u_i|+|v_i|}",
                  "_number": 97,
                  "_offset": 5
                },
                {
                  "_line": "",
                  "_number": 98,
                  "_offset": 5
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "12. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Y",
                    " ",
                    "=",
                    " ",
                    "pdist(X,",
                    " ",
                    "'braycurtis')"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Computes the Bray-Curtis distance between the points. The    Bray-Curtis distance between two points "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "u"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "v"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   .. math::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "        d(u,v) = \\frac{\\sum_i {|u_i-v_i|}}",
                  "_number": 106,
                  "_offset": 8
                },
                {
                  "_line": "                       {\\sum_i {|u_i+v_i|}}",
                  "_number": 107,
                  "_offset": 8
                },
                {
                  "_line": "",
                  "_number": 108,
                  "_offset": 8
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "13. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Y",
                    " ",
                    "=",
                    " ",
                    "pdist(X,",
                    " ",
                    "'mahalanobis',",
                    " ",
                    "VI=None)"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Computes the Mahalanobis distance between the points. The    Mahalanobis distance between two points "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "u"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "v"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is    "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "\\sqrt{(u-v)(1/V)(u-v)^T}"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " where "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "(1/V)"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (the "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "VI"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "    variable) is the inverse covariance. If "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "VI"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is not None,    "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "VI"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " will be used as the inverse covariance matrix."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "14. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Y",
                    " ",
                    "=",
                    " ",
                    "pdist(X,",
                    " ",
                    "'yule')"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Computes the Yule distance between each pair of boolean    vectors. (see yule function documentation)"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "15. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Y",
                    " ",
                    "=",
                    " ",
                    "pdist(X,",
                    " ",
                    "'matching')"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Synonym for 'hamming'."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "16. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Y",
                    " ",
                    "=",
                    " ",
                    "pdist(X,",
                    " ",
                    "'dice')"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Computes the Dice distance between each pair of boolean    vectors. (see dice function documentation)"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "17. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Y",
                    " ",
                    "=",
                    " ",
                    "pdist(X,",
                    " ",
                    "'kulsinski')"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Computes the Kulsinski distance between each pair of    boolean vectors. (see kulsinski function documentation)"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "18. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Y",
                    " ",
                    "=",
                    " ",
                    "pdist(X,",
                    " ",
                    "'rogerstanimoto')"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Computes the Rogers-Tanimoto distance between each pair of    boolean vectors. (see rogerstanimoto function documentation)"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "19. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Y",
                    " ",
                    "=",
                    " ",
                    "pdist(X,",
                    " ",
                    "'russellrao')"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Computes the Russell-Rao distance between each pair of    boolean vectors. (see russellrao function documentation)"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "20. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Y",
                    " ",
                    "=",
                    " ",
                    "pdist(X,",
                    " ",
                    "'sokalmichener')"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Computes the Sokal-Michener distance between each pair of    boolean vectors. (see sokalmichener function documentation)"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "21. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Y",
                    " ",
                    "=",
                    " ",
                    "pdist(X,",
                    " ",
                    "'sokalsneath')"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Computes the Sokal-Sneath distance between each pair of    boolean vectors. (see sokalsneath function documentation)"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "22. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Y",
                    " ",
                    "=",
                    " ",
                    "pdist(X,",
                    " ",
                    "'wminkowski',",
                    " ",
                    "p=2,",
                    " ",
                    "w=w)"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Computes the weighted Minkowski distance between each pair of    vectors. (see wminkowski function documentation)"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   'wminkowski' is deprecated and will be removed in SciPy 1.8.0.    Use 'minkowski' instead."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "23. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "Y",
                    " ",
                    "=",
                    " ",
                    "pdist(X,",
                    " ",
                    "f)"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Computes the distance between all pairs of vectors in X    using the user supplied 2-arity function f. For example,    Euclidean distance between the vectors could be computed    as follows::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "     dm = pdist(X, lambda u, v: np.sqrt(((u-v)**2).sum()))",
                  "_number": 171,
                  "_offset": 5
                },
                {
                  "_line": "",
                  "_number": 172,
                  "_offset": 5
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Note that you should avoid passing a reference to one of    the distance functions defined in this library. For example,::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "     dm = pdist(X, sokalsneath)",
                  "_number": 176,
                  "_offset": 5
                },
                {
                  "_line": "",
                  "_number": 177,
                  "_offset": 5
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   would calculate the pair-wise distances between the vectors in    X using the Python function sokalsneath. This would result in    sokalsneath being called "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "{n",
                    " ",
                    "\\choose",
                    " ",
                    "2}"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " times, which    is inefficient. Instead, the optimized C version is more    efficient, and we call it using the following syntax.::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "     dm = pdist(X, 'sokalsneath')",
                  "_number": 184,
                  "_offset": 5
                }
              ]
            }
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    "squareform"
  ],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes"
  ],
  "item_file": "/Users/bussonniermatthias/dev/scipy/scipy/spatial/distance.py",
  "item_line": 1751,
  "item_type": "<class 'function'>",
  "aliases": [
    "scipy.interpolate.rbf.pdist"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [
    {
      "name": {
        "name": "squareform",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "converts between condensed distance matrices and square distance matrices."
              }
            }
          ]
        }
      ],
      "type": null
    }
  ],
  "signature": "pdist(X, metric='euclidean', *args, **kwargs)",
  "references": null
}