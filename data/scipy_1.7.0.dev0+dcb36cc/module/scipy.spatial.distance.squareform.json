{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Convert a vector-form distance vector to a square-form distance matrix, and vice-versa."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": []
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "X",
            "type_": "ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Either a condensed or redundant distance matrix."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "force",
            "type_": "str, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "As with MATLAB(TM), if force is equal to "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'tovector'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " or "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "'tomatrix'"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", the input will be treated as a distance matrix or distance vector respectively."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "checks",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If set to False, no checks will be made for matrix symmetry nor zero diagonals. This is useful if it is known that "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "X",
                          " ",
                          "-",
                          " ",
                          "X.T1"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is small and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "diag(X)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is close to zero. These values are ignored any way so they do not disrupt the squareform transformation."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "Y",
            "type_": "ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If a condensed distance matrix is passed, a redundant one is returned, or if a redundant one is passed, a condensed distance matrix is returned."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "1. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "v",
                    " ",
                    "=",
                    " ",
                    "squareform(X)"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Given a square n-by-n symmetric distance matrix "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "X"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ",    "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "v",
                    " ",
                    "=",
                    " ",
                    "squareform(X)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " returns a "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "n",
                    " ",
                    "*",
                    " ",
                    "(n-1)",
                    " ",
                    "/",
                    " ",
                    "2"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "    (i.e. binomial coefficient n choose 2) sized vector "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "v"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "    where "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "v[{n",
                    " ",
                    "\\choose",
                    " ",
                    "2}",
                    " ",
                    "-",
                    " ",
                    "{n-i",
                    " ",
                    "\\choose",
                    " ",
                    "2}",
                    " ",
                    "+",
                    " ",
                    "(j-i-1)]"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "    is the distance between distinct points "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "i"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "j"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ".    If "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "X"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is non-square or asymmetric, an error is raised."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "2. `"
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "X",
                    " ",
                    "=",
                    " ",
                    "squareform(v)"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "`"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "   Given a "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "n",
                    " ",
                    "*",
                    " ",
                    "(n-1)",
                    " ",
                    "/",
                    " ",
                    "2"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " sized vector "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "v"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "    for some integer "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "n",
                    " ",
                    ">=",
                    " ",
                    "1"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " encoding distances as described,    "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "X",
                    " ",
                    "=",
                    " ",
                    "squareform(v)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " returns a n-by-n distance matrix "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "X"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ".    The "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "X[i,",
                    " ",
                    "j]"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "X[j,",
                    " ",
                    "i]"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " values are set to    "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "v[{n",
                    " ",
                    "\\choose",
                    " ",
                    "2}",
                    " ",
                    "-",
                    " ",
                    "{n-i",
                    " ",
                    "\\choose",
                    " ",
                    "2}",
                    " ",
                    "+",
                    " ",
                    "(j-i-1)]"
                  ],
                  "domain": null,
                  "role": "math"
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "    and all diagonal elements are zero."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "In SciPy 0.19.0, "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "squareform"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " stopped casting all input types to float64, and started returning arrays of the same dtype as the input."
                }
              }
            ]
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes"
  ],
  "item_file": "/Users/bussonniermatthias/dev/scipy/scipy/spatial/distance.py",
  "item_line": 2119,
  "item_type": "<class 'function'>",
  "aliases": [
    "scipy.interpolate.rbf.squareform"
  ],
  "example_section_data": {
    "children": []
  },
  "see_also": [],
  "signature": "squareform(X, force='no', checks=True)",
  "references": null
}