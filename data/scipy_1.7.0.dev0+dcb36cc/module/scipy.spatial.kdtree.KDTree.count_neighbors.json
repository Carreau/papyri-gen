{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Count how many nearby pairs can be formed."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Count the number of pairs "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "(x1,x2)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " can be formed, with "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "x1"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " drawn from "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "self"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "x2"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " drawn from "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "other"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", and where "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "distance(x1,",
                    " ",
                    "x2,",
                    " ",
                    "p)",
                    " ",
                    "<=",
                    " ",
                    "r"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Data points on "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "self"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "other"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " are optionally weighted by the "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "weights"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " argument. (See below)"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "This is adapted from the \"two-point correlation\" algorithm described by Gray and Moore [1]_.  See notes for further discussion."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "other",
            "type_": "KDTree",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The other tree to draw points from, can be the same tree as self."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "r",
            "type_": "float or one-dimensional array of floats",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The radius to produce a count for. Multiple radii are searched with a single tree traversal. If the count is non-cumulative("
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "cumulative=False"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "), "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "r"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " defines the edges of the bins, and must be non-decreasing."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "p",
            "type_": "float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "1<=p<=infinity. Which Minkowski p-norm to use. Default 2.0. A finite large p may cause a ValueError if overflow can occur."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "weights",
            "type_": "tuple, array_like, or None, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "If None, the pair-counting is unweighted. If given as a tuple, weights[0] is the weights of points in "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "self"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ", and weights[1] is the weights of points in "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "other"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "; either can be None to indicate the points are unweighted. If given as an array_like, weights is the weights of points in "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "self"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "other"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". For this to make sense, "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "self"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "other"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " must be the same tree. If "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "self"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "other"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " are two different trees, a "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "ValueError"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is raised. Default: None"
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockDirective",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ".. versionadded:: 1.6.0",
                        "_number": 10,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": []
                  },
                  "ind": {
                    "_lines": []
                  },
                  "directive_name": "versionadded",
                  "args0": [
                    " 1.6.0"
                  ],
                  "inner": null
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "cumulative",
            "type_": "bool, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Whether the returned counts are cumulative. When cumulative is set to "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "False"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " the algorithm is optimized to work with a large number of bins (>10) specified by "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "r"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". When "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "cumulative"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " is set to True, the algorithm is optimized to work with a small number of "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "r"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ". Default: True"
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockDirective",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ".. versionadded:: 1.6.0",
                        "_number": 6,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": []
                  },
                  "ind": {
                    "_lines": []
                  },
                  "directive_name": "versionadded",
                  "args0": [
                    " 1.6.0"
                  ],
                  "inner": null
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "result",
            "type_": "scalar or 1-D array",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "The number of pairs. For unweighted counts, the result is integer. For weighted counts, the result is float. If cumulative is False, "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "result[i]"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " contains the counts with `"
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "(-inf",
                          " ",
                          "if",
                          " ",
                          "i",
                          " ",
                          "==",
                          " ",
                          "0",
                          " ",
                          "else",
                          " ",
                          "r[i-1])",
                          " ",
                          "<",
                          " ",
                          "R",
                          " ",
                          "<=",
                          " ",
                          "r[i]"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "`"
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Pair-counting is the basic operation used to calculate the two point correlation functions from a data set composed of position of objects."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Two point correlation function measures the clustering of objects and is widely used in cosmology to quantify the large scale structure in our Universe, but it may be useful for data analysis in other fields where self-similar assembly of objects also occur."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The Landy-Szalay estimator for the two point correlation function of "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "D"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " measures the clustering signal in "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "D"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". [2]_"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "For example, given the position of two sets of objects,"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "- objects "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "D"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (data) contains the clustering signal, and"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "- objects "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "R"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (random) that contains no signal,"
                }
              }
            ]
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. math::",
                  "_number": 17,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": [
                {
                  "_line": "",
                  "_number": 18,
                  "_offset": 0
                }
              ]
            },
            "ind": {
              "_lines": [
                {
                  "_line": "     \\xi(r) = \\frac{<D, D> - 2 f <D, R> + f^2<R, R>}{f^2<R, R>},",
                  "_number": 19,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 20,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "math",
            "args0": [
              ""
            ],
            "inner": {
              "children": [
                {
                  "type": "Words",
                  "data": {
                    "value": "\\xi(r) = \\frac{<D, D> - 2 f <D, R> + f^2<R, R>}{f^2<R, R>}, "
                  }
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "where the brackets represents counting pairs between two data sets in a finite bin around "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "r"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (distance), corresponding to setting "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "cumulative=False"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "f",
                    " ",
                    "=",
                    " ",
                    "float(len(D))",
                    " ",
                    "/",
                    " ",
                    "float(len(R))"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is the ratio between number of objects from data and random."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The algorithm implemented here is loosely based on the dual-tree algorithm described in [1]_. We switch between two different pair-cumulation scheme depending on the setting of "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "cumulative"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". The computing time of the method we use when for "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "cumulative",
                    " ",
                    "==",
                    " ",
                    "False"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " does not scale with the total number of bins. The algorithm for "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "cumulative",
                    " ",
                    "==",
                    " ",
                    "True"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " scales linearly with the number of bins, though it is slightly faster when only 1 or 2 bins are used. [5]_."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "As an extension to the naive pair-counting, weighted pair-counting counts the product of weights instead of number of pairs. Weighted pair-counting is used to estimate marked correlation functions ([3]_, section 2.2), or to properly calculate the average of data per distance bin (e.g. [4]_, section 2.1 on redshift)."
                }
              }
            ]
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. [1] Gray and Moore,",
                  "_number": 43,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": [
                {
                  "_line": "       \"N-body problems in statistical learning\",",
                  "_number": 44,
                  "_offset": 0
                },
                {
                  "_line": "       Mining the sky, 2000,",
                  "_number": 45,
                  "_offset": 0
                },
                {
                  "_line": "       https://arxiv.org/abs/astro-ph/0012333",
                  "_number": 46,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 47,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "[1] Gray and Moore,",
            "args0": [],
            "inner": {
              "children": [
                {
                  "type": "Words",
                  "data": {
                    "value": "\"N-body problems in statistical learning\", Mining the sky, 2000, https://arxiv.org/abs/astro-ph/0012333 "
                  }
                }
              ]
            }
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. [2] Landy and Szalay,",
                  "_number": 48,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": [
                {
                  "_line": "       \"Bias and variance of angular correlation functions\",",
                  "_number": 49,
                  "_offset": 0
                },
                {
                  "_line": "       The Astrophysical Journal, 1993,",
                  "_number": 50,
                  "_offset": 0
                },
                {
                  "_line": "       http://adsabs.harvard.edu/abs/1993ApJ...412...64L",
                  "_number": 51,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 52,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "[2] Landy and Szalay,",
            "args0": [],
            "inner": {
              "children": [
                {
                  "type": "Words",
                  "data": {
                    "value": "\"Bias and variance of angular correlation functions\", The Astrophysical Journal, 1993, http://adsabs.harvard.edu/abs/1993ApJ...412...64L "
                  }
                }
              ]
            }
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. [3] Sheth, Connolly and Skibba,",
                  "_number": 53,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": [
                {
                  "_line": "       \"Marked correlations in galaxy formation models\",",
                  "_number": 54,
                  "_offset": 0
                },
                {
                  "_line": "       Arxiv e-print, 2005,",
                  "_number": 55,
                  "_offset": 0
                },
                {
                  "_line": "       https://arxiv.org/abs/astro-ph/0511773",
                  "_number": 56,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 57,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "[3] Sheth, Connolly and Skibba,",
            "args0": [],
            "inner": {
              "children": [
                {
                  "type": "Words",
                  "data": {
                    "value": "\"Marked correlations in galaxy formation models\", Arxiv e-print, 2005, https://arxiv.org/abs/astro-ph/0511773 "
                  }
                }
              ]
            }
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. [4] Hawkins, et al.,",
                  "_number": 58,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": [
                {
                  "_line": "       \"The 2dF Galaxy Redshift Survey: correlation functions,",
                  "_number": 59,
                  "_offset": 0
                },
                {
                  "_line": "       peculiar velocities and the matter density of the Universe\",",
                  "_number": 60,
                  "_offset": 0
                },
                {
                  "_line": "       Monthly Notices of the Royal Astronomical Society, 2002,",
                  "_number": 61,
                  "_offset": 0
                },
                {
                  "_line": "       http://adsabs.harvard.edu/abs/2003MNRAS.346...78H",
                  "_number": 62,
                  "_offset": 0
                },
                {
                  "_line": "",
                  "_number": 63,
                  "_offset": 0
                }
              ]
            },
            "directive_name": "[4] Hawkins, et al.,",
            "args0": [],
            "inner": {
              "children": [
                {
                  "type": "Words",
                  "data": {
                    "value": "\"The 2dF Galaxy Redshift Survey: correlation functions, peculiar velocities and the matter density of the Universe\", Monthly Notices of the Royal Astronomical Society, 2002, http://adsabs.harvard.edu/abs/2003MNRAS.346...78H "
                  }
                }
              ]
            }
          }
        },
        {
          "type": "BlockDirective",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": ".. [5] https://github.com/scipy/scipy/pull/5647#issuecomment-168474926",
                  "_number": 64,
                  "_offset": 0
                }
              ]
            },
            "wh": {
              "_lines": []
            },
            "ind": {
              "_lines": []
            },
            "directive_name": "[5] https://github.com/scipy/scipy/pull/5647#issuecomment-168474926",
            "args0": [],
            "inner": null
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/dev/scipy/scipy/spatial/kdtree.py",
  "item_line": 652,
  "item_type": "<class 'function'>",
  "aliases": [
    "scipy.spatial.KDTree.count_neighbors"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "You can count neighbors number between two kd-trees within a distance:"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "import",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "numpy",
              "",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "as",
              "",
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "",
              "nn"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "from",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scipy",
              "",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "spatial",
              "",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "KDTree",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "seed",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "21701",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "points1",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "points2",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "kd_tree1",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "KDTree",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "points1",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "kd_tree2",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "KDTree",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "points2",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "kd_tree1",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "count_neighbors",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "kd_tree2",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0.2",
              "",
              "mf"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "9",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "This number is same as the total pair number calculated by "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "query",
                  "_",
                  "ball",
                  "_",
                  "tree"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ":"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "indexes",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "kd_tree1",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "query_ball_tree",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "kd_tree2",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "r",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "0.2",
              "",
              "mf"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "sum",
              "",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "len",
              "",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "i",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "for",
              "",
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "i",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "in",
              "",
              "ow"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "indexes",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "9",
          "ce_status": "compiled"
        }
      }
    ]
  },
  "see_also": [],
  "signature": "count_neighbors(self, other, r, p=2.0, weights=None, cumulative=True)",
  "references": null
}