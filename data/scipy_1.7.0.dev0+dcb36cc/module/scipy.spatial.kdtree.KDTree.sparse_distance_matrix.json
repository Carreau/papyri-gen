{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Compute a sparse distance matrix"
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Computes a distance matrix between two KDTrees, leaving as zero any distance greater than max_distance."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "other",
            "type_": "KDTree",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "max_distance",
            "type_": "positive float",
            "desc": []
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "p",
            "type_": "float, 1<=p<=infinity",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Which Minkowski p-norm to use. A finite large p may cause a ValueError if overflow can occur."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "output_type",
            "type_": "string, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Which container to use for output data. Options: 'dok_matrix', 'coo_matrix', 'dict', or 'ndarray'. Default: 'dok_matrix'."
                      }
                    }
                  ]
                }
              },
              {
                "type": "BlockDirective",
                "data": {
                  "lines": {
                    "_lines": [
                      {
                        "_line": ".. versionadded:: 1.6.0",
                        "_number": 3,
                        "_offset": 0
                      }
                    ]
                  },
                  "wh": {
                    "_lines": []
                  },
                  "ind": {
                    "_lines": []
                  },
                  "directive_name": "versionadded",
                  "args0": [
                    " 1.6.0"
                  ],
                  "inner": null
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "result",
            "type_": "dok_matrix, coo_matrix, dict or ndarray",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Sparse matrix representing the results in \"dictionary of keys\" format. If a dict is returned the keys are (i,j) tuples of indices. If output_type is 'ndarray' a record array with fields 'i', 'j', and 'v' is returned,"
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": []
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/dev/scipy/scipy/spatial/kdtree.py",
  "item_line": 800,
  "item_type": "<class 'function'>",
  "aliases": [
    "scipy.spatial.KDTree.sparse_distance_matrix"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "You can compute a sparse distance matrix between two kd-trees:"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "import",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "numpy",
              "",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "as",
              "",
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "",
              "nn"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "from",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scipy",
              "",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "spatial",
              "",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "KDTree",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "seed",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "21701",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "points1",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "points2",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "kd_tree1",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "KDTree",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "points1",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "kd_tree2",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "KDTree",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "points2",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "sdm",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "kd_tree1",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "sparse_distance_matrix",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "kd_tree2",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0.3",
              "",
              "mf"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "sdm",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "toarray",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[0.20220215, 0.14538496, 0.,         0.10257199, 0.        ],\n    [0.13491385, 0.27251306, 0.,         0.18793787, 0.        ],\n    [0.19262396, 0.,         0.,         0.25795122, 0.        ],\n    [0.14859639, 0.07076002, 0.,         0.04065851, 0.        ],\n    [0.17308768, 0.,         0.,         0.24823138, 0.        ]])",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "You can check distances above the "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "max",
                  "_",
                  "distance"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " are zeros:"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "from",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scipy",
              "",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "spatial",
              "",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "distance_matrix",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "distance_matrix",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "points1",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "points2",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[0.20220215, 0.14538496, 0.43588092, 0.10257199, 0.4555495 ],\n    [0.13491385, 0.27251306, 0.65944131, 0.18793787, 0.68184154],\n    [0.19262396, 0.34121593, 0.72176889, 0.25795122, 0.74538858],\n    [0.14859639, 0.07076002, 0.48505773, 0.04065851, 0.50043591],\n    [0.17308768, 0.32837991, 0.72760803, 0.24823138, 0.75017239]])",
          "ce_status": "compiled"
        }
      }
    ]
  },
  "see_also": [],
  "signature": "sparse_distance_matrix(self, other, max_distance, p=2.0, output_type='dok_matrix')",
  "references": null
}