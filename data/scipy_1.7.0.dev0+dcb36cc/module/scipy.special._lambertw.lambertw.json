{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Lambert W function."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The Lambert W function "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "W(z)"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is defined as the inverse function of "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "w",
                    " ",
                    "*",
                    " ",
                    "exp(w)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". In other words, the value of "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "W(z)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is such that "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "z",
                    " ",
                    "=",
                    " ",
                    "W(z)",
                    " ",
                    "*",
                    " ",
                    "exp(W(z))"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " for any complex number "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "z"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The Lambert W function is a multivalued function with infinitely many branches. Each branch gives a separate solution of the equation "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "z",
                    " ",
                    "=",
                    " ",
                    "w",
                    " ",
                    "exp(w)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". Here, the branches are indexed by the integer "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "k"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "z",
            "type_": "array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Input argument."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "k",
            "type_": "int, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Branch index."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "tol",
            "type_": "float, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Evaluation tolerance."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "w",
            "type_": "array",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "w"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " will have the same shape as "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "z"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "All branches are supported by "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "lambertw"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ":"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "* "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "lambertw(z)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " gives the principal solution (branch 0) * "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "lambertw(z,",
                    " ",
                    "k)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " gives the solution on branch "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "k"
                  ],
                  "domain": null,
                  "role": null
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The Lambert W function has two partially real branches: the principal branch ("
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "k",
                    " ",
                    "=",
                    " ",
                    "0"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ") is real for real "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "z",
                    " ",
                    ">",
                    " ",
                    "-1/e"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", and the "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "k",
                    " ",
                    "=",
                    " ",
                    "-1"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " branch is real for "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "-1/e",
                    " ",
                    "<",
                    " ",
                    "z",
                    " ",
                    "<",
                    " ",
                    "0"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". All branches except "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "k",
                    " ",
                    "=",
                    " ",
                    "0"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " have a logarithmic singularity at "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "z",
                    " ",
                    "=",
                    " ",
                    "0"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "**Possible issues**"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The evaluation can become inaccurate very close to the branch point at "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "-1/e"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ". In some corner cases, "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "lambertw"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " might currently fail to converge, or can end up on the wrong branch."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "**Algorithm**"
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Halley's iteration is used to invert "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "w",
                    " ",
                    "*",
                    " ",
                    "exp(w)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", using a first-order asymptotic approximation (O(log(w)) or "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "O(w)"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ") as the initial estimate."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "The definition, implementation and choice of branches is based on [2]_."
                }
              }
            ]
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [
    "wrightomega"
  ],
  "ordered_sections": [
    "Signature",
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes",
    "See Also",
    "References",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/dev/scipy/scipy/special/_lambertw.py",
  "item_line": 4,
  "item_type": "<class 'function'>",
  "aliases": [
    "scipy.special.lambertw"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "The Lambert W function is the inverse of "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "w",
                  " ",
                  "exp(w)"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ":"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "from",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scipy",
              "",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "special",
              "",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "lambertw",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "w",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "lambertw",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "w",
              "",
              ""
            ]
          ],
          "out": "(0.56714329040978384+0j)",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "w",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "exp",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "w",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "(1.0+0j)",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Any branch gives a valid inverse:"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "w",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "lambertw",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "k",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "w",
              "",
              ""
            ]
          ],
          "out": "(-2.8535817554090377+17.113535539412148j)",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "w",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "exp",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "w",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "(1.0000000000000002+1.609823385706477e-15j)",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "**Applications to equation-solving**"
              }
            }
          ]
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "The Lambert W function may be used to solve various kinds of equations, such as finding the value of the infinite power tower "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "z^{z^{z^{\\ldots}}}"
                ],
                "domain": null,
                "role": "math"
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ":"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "def",
              "",
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "tower",
              "",
              "nf"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "z",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "n",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "if",
              "",
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "n",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "==",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "        ",
              "",
              ""
            ],
            [
              "return",
              "",
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "z",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "    ",
              "",
              ""
            ],
            [
              "return",
              "",
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "z",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "tower",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "z",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "n",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "...",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "tower",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "0.5",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "100",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "0.641185744504986",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "-",
              "",
              "o"
            ],
            [
              "lambertw",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "np",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "log",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "0.5",
              "",
              "mf"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "/",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "log",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "0.5",
              "",
              "mf"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "(0.64118574450498589+0j)",
          "ce_status": "compiled"
        }
      }
    ]
  },
  "see_also": [
    {
      "name": {
        "name": "wrightomega",
        "ref": null,
        "exists": null
      },
      "descriptions": [
        {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "the Wright Omega function"
              }
            }
          ]
        }
      ],
      "type": null
    }
  ],
  "signature": "lambertw(z, k=0, tol=1e-8)",
  "references": [
    ".. [1] https://en.wikipedia.org/wiki/Lambert_W_function",
    ".. [2] Corless et al, \"On the Lambert W function\", Adv. Comp. Math. 5",
    "   (1996) 329-359.",
    "   https://cs.uwaterloo.ca/research/tr/1993/03/W.pdf"
  ]
}