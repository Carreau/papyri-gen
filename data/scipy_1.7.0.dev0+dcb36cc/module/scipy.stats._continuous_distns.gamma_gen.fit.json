{
  "_content": {
    "Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Return estimates of shape (if applicable), location, and scale parameters from data. The default estimation method is Maximum Likelihood Estimation (MLE), but Method of Moments (MM) is also available."
                }
              }
            ]
          }
        }
      ]
    },
    "Extended Summary": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "Starting estimates for the fit are given by input arguments; for any arguments not provided with starting estimates, "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "self.",
                    "_",
                    "fitstart(data)"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " is called to generate such."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "One can hold some parameters fixed to specific values by passing in keyword arguments "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "f0"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "f1"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", ..., "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "fn"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (for shape parameters) and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "floc"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "fscale"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (for location and scale parameters, respectively)."
                }
              }
            ]
          }
        }
      ]
    },
    "Parameters": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "data",
            "type_": "array_like",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Data to use in estimating the distribution parameters."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "arg1, arg2, arg3,...",
            "type_": "floats, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Starting value(s) for any shape-characterizing arguments (those not provided will be determined by a call to "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "_",
                          "fitstart(data)"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": "). No default value."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "type": "Param",
          "data": {
            "param": "kwds",
            "type_": "floats, optional",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "loc"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ": initial guess of the distribution's location parameter. - "
                      }
                    },
                    {
                      "type": "Directive",
                      "data": {
                        "value": [
                          "scale"
                        ],
                        "domain": null,
                        "role": null
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ": initial guess of the distribution's scale parameter."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Special keyword arguments are recognized as holding certain parameters fixed:"
                      }
                    }
                  ]
                }
              },
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "- f0...fn : hold respective shape parameters fixed.",
                            "_number": 6,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "  Alternatively, shape parameters to fix can be specified by name.",
                            "_number": 7,
                            "_offset": 0
                          },
                          {
                            "_line": "  For example, if ``self.shapes == \"a, b\"``, ``fa`` and ``fix_a``",
                            "_number": 8,
                            "_offset": 0
                          },
                          {
                            "_line": "  are equivalent to ``f0``, and ``fb`` and ``fix_b`` are",
                            "_number": 9,
                            "_offset": 0
                          },
                          {
                            "_line": "  equivalent to ``f1``.",
                            "_number": 10,
                            "_offset": 0
                          },
                          {
                            "_line": "",
                            "_number": 11,
                            "_offset": 0
                          }
                        ]
                      },
                      "dt": {
                        "children": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "- f0...fn : hold respective shape parameters fixed."
                            }
                          }
                        ]
                      },
                      "dd": {
                        "children": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "Alternatively, shape parameters to fix can be specified by name. For example, if "
                            }
                          },
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "self.shapes",
                                " ",
                                "==",
                                " ",
                                "\"a,",
                                " ",
                                "b\""
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ", "
                            }
                          },
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "fa"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " and "
                            }
                          },
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "fix",
                                "_",
                                "a"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " are equivalent to "
                            }
                          },
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "f0"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ", and "
                            }
                          },
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "fb"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " and "
                            }
                          },
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "fix",
                                "_",
                                "b"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": " are equivalent to "
                            }
                          },
                          {
                            "type": "Verbatim",
                            "data": {
                              "value": [
                                "f1"
                              ]
                            }
                          },
                          {
                            "type": "Words",
                            "data": {
                              "value": ". "
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- floc : hold location parameter fixed to specified value."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- fscale : hold scale parameter fixed to specified value."
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "- optimizer : The optimizer to use.  The optimizer must take "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "func"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ","
                      }
                    }
                  ]
                }
              },
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "  and starting position as the first two arguments,   plus "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "args"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " (for extra arguments to pass to the   function to be optimized) and "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "disp=0"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": " to suppress   output as keyword arguments."
                      }
                    }
                  ]
                }
              },
              {
                "type": "DefList",
                "data": {
                  "children": [
                    {
                      "lines": {
                        "_lines": [
                          {
                            "_line": "- method : The method to use. The default is \"MLE\" (Maximum",
                            "_number": 22,
                            "_offset": 0
                          }
                        ]
                      },
                      "wh": {
                        "_lines": []
                      },
                      "ind": {
                        "_lines": [
                          {
                            "_line": "  Likelihood Estimate); \"MM\" (Method of Moments)",
                            "_number": 23,
                            "_offset": 0
                          },
                          {
                            "_line": "  is also available.",
                            "_number": 24,
                            "_offset": 0
                          }
                        ]
                      },
                      "dt": {
                        "children": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "- method : The method to use. The default is \"MLE\" (Maximum"
                            }
                          }
                        ]
                      },
                      "dd": {
                        "children": [
                          {
                            "type": "Words",
                            "data": {
                              "value": "Likelihood Estimate); \"MM\" (Method of Moments) is also available."
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Returns": {
      "children": [
        {
          "type": "Param",
          "data": {
            "param": "parameter_tuple",
            "type_": "tuple of floats",
            "desc": [
              {
                "type": "Paragraph",
                "data": {
                  "children": [
                    {
                      "type": "Words",
                      "data": {
                        "value": "Estimates for any shape parameters (if applicable), followed by those for location and scale. For most random variables, shape statistics will be returned, but there are exceptions (e.g. "
                      }
                    },
                    {
                      "type": "Verbatim",
                      "data": {
                        "value": [
                          "norm"
                        ]
                      }
                    },
                    {
                      "type": "Words",
                      "data": {
                        "value": ")."
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "Yields": {
      "children": []
    },
    "Receives": {
      "children": []
    },
    "Raises": {
      "children": []
    },
    "Warns": {
      "children": []
    },
    "Other Parameters": {
      "children": []
    },
    "Attributes": {
      "children": []
    },
    "Methods": {
      "children": []
    },
    "Notes": {
      "children": [
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "With "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "method=\"MLE\""
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " (default), the fit is computed by minimizing the negative log-likelihood function. A large, finite penalty (rather than infinite negative log-likelihood) is applied for observations beyond the support of the distribution."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "With "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "method=\"MM\""
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", the fit is computed by minimizing the L2 norm of the relative errors between the first *k* raw (about zero) data moments and the corresponding distribution moments, where *k* is the number of non-fixed parameters. More precisely, the objective function is::"
                }
              }
            ]
          }
        },
        {
          "type": "BlockVerbatim",
          "data": {
            "lines": {
              "_lines": [
                {
                  "_line": "    (((data_moments - dist_moments)",
                  "_number": 11,
                  "_offset": 4
                },
                {
                  "_line": "      / np.maximum(np.abs(data_moments), 1e-8))**2).sum()",
                  "_number": 12,
                  "_offset": 4
                },
                {
                  "_line": "",
                  "_number": 13,
                  "_offset": 4
                }
              ]
            }
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "where the constant "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "1e-8"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " avoids division by zero in case of vanishing data moments. Typically, this error norm can be reduced to zero. Note that the standard method of moments can produce parameters for which some data are outside the support of the fitted distribution; this implementation does nothing to prevent this."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "For either method, the returned answer is not guaranteed to be globally optimal; it may only be locally optimal, or the optimization may fail altogether. If the data contain any of "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "np.nan"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "np.inf"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", or "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "-np.inf"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "fit"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " method will raise a "
                }
              },
              {
                "type": "Verbatim",
                "data": {
                  "value": [
                    "RuntimeError"
                  ]
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": "."
                }
              }
            ]
          }
        },
        {
          "type": "Paragraph",
          "data": {
            "children": [
              {
                "type": "Words",
                "data": {
                  "value": "When the location is fixed by using the argument "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "floc"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "method='MLE'"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", this function uses explicit formulas or solves a simpler numerical problem than the full ML optimization problem.  So in that case, the "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "optimizer"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": ", "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "loc"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " and "
                }
              },
              {
                "type": "Directive",
                "data": {
                  "value": [
                    "scale"
                  ],
                  "domain": null,
                  "role": null
                }
              },
              {
                "type": "Words",
                "data": {
                  "value": " arguments are ignored."
                }
              }
            ]
          }
        }
      ]
    },
    "Warnings": {
      "children": []
    }
  },
  "refs": [],
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes",
    "Examples"
  ],
  "item_file": "/Users/bussonniermatthias/dev/scipy/scipy/stats/_continuous_distns.py",
  "item_line": 2668,
  "item_type": "<class 'function'>",
  "aliases": [
    "scipy.stats._continuous_distns.gamma_gen.fit"
  ],
  "example_section_data": {
    "children": [
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Generate some data to fit: draw random variates from the "
              }
            },
            {
              "type": "Directive",
              "data": {
                "value": [
                  "beta"
                ],
                "domain": null,
                "role": null
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " distribution"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "from",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scipy",
              "",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "stats",
              "",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "beta",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "a",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "b",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1.0",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2.0",
              "",
              "mf"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "x",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "beta",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "rvs",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "b",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "size",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "1000",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Now we can fit all four parameters ("
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "a"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ", "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "b"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ", "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "loc"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " and "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "scale"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": "):"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "a1",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "b1",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "loc1",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scale1",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "beta",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "fit",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "We can also use some prior knowledge about the dataset: let's keep "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "loc"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " and "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "scale"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " fixed:"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "a1",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "b1",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "loc1",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scale1",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "beta",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "fit",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "floc",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "fscale",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "loc1",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scale1",
              "",
              ""
            ]
          ],
          "out": "(0, 1)",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "We can also keep shape parameters fixed by using "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "f"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": "-keywords. To keep the zero-th shape parameter "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "a"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " equal 1, use "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "f0=1"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " or, equivalently, "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "fa=1"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": ":"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "a1",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "b1",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "loc1",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scale1",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "beta",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "fit",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "fa",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "floc",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "fscale",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "a1",
              "",
              ""
            ]
          ],
          "out": "1",
          "ce_status": "compiled"
        }
      },
      {
        "type": "Paragraph",
        "data": {
          "children": [
            {
              "type": "Words",
              "data": {
                "value": "Not all distributions return estimates for the shape parameters. "
              }
            },
            {
              "type": "Verbatim",
              "data": {
                "value": [
                  "norm"
                ]
              }
            },
            {
              "type": "Words",
              "data": {
                "value": " for example just returns estimates for location and scale:"
              }
            }
          ]
        }
      },
      {
        "type": "Code",
        "data": {
          "entries": [
            [
              "from",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scipy",
              "",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "stats",
              "",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              "",
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "norm",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "x",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "norm",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "rvs",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "a",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "b",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "size",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "1000",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "random_state",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "123",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "loc1",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scale1",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "norm",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "fit",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "loc1",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scale1",
              "",
              ""
            ]
          ],
          "out": "(0.92087172783841631, 2.0015750750324668)",
          "ce_status": "compiled"
        }
      }
    ]
  },
  "see_also": [],
  "signature": "fit(self, data, *args, **kwds)",
  "references": null
}