{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "This function computes the inverse of the 2-D discrete Fourier Transform over any number of axes in an M-D array by means of the Fast Fourier Transform (FFT). In other words, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ifft2(fft2(x)) == x"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " to within numerical accuracy. By default, the inverse transform is computed over the last two axes of the input array."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The input, analogously to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy.fft._basic.ifft",
                    "version": "1.8.0"
                  },
                  "value": "ifft"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ", should be ordered in the same way as is returned by "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy.fft._basic.fft2",
                    "version": "1.8.0"
                  },
                  "value": "fft2"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ", i.e., it should have the term for zero frequency in the low-order corner of the two axes, the positive frequency terms in the first half of these axes, the term for the Nyquist frequency in the middle of the axes and the negative frequency terms in the second half of both axes, in order of decreasingly negative frequency."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy.fft._basic.ifft2",
                    "version": "1.8.0"
                  },
                  "value": "ifft2"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is just "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy.fft._basic.ifftn",
                    "version": "1.8.0"
                  },
                  "value": "ifftn"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " with a different default for "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "axes",
                    "version": null
                  },
                  "value": "axes"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "See "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy.fft._basic.ifftn",
                    "version": "1.8.0"
                  },
                  "value": "ifftn"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " for details and a plotting example, and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy.fft",
                    "version": "1.8.0"
                  },
                  "value": "fft"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " for definition and conventions used."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Zero-padding, analogously with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy.fft._basic.ifft",
                    "version": "1.8.0"
                  },
                  "value": "ifft"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ", is performed by appending zeros to the input along the specified dimension. Although this is the common approach, it might lead to surprising results. If another form of zero padding is desired, it must be performed before "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy.fft._basic.ifft2",
                    "version": "1.8.0"
                  },
                  "value": "ifft2"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is called."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Input array, can be complex."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "x",
            "type_": "array_like"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Shape (length of each axis) of the output ("
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "s[0]"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " refers to axis 0, "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "s[1]"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " to axis 1, etc.). This corresponds to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "n"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " for "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "ifft(x, n)"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ". Along each axis, if the given shape is smaller than that of the input, the input is cropped. If it is larger, the input is padded with zeros. if "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "s",
                          "version": null
                        },
                        "value": "s"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is not given, the shape of the input along the axes specified by "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "axes",
                          "version": null
                        },
                        "value": "axes"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is used.  See notes for issue on "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "scipy",
                          "path": "scipy.fft._basic.ifft",
                          "version": "1.8.0"
                        },
                        "value": "ifft"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " zero padding."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "s",
            "type_": "sequence of ints, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Axes over which to compute the FFT. If not given, the last two axes are used."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "axes",
            "type_": "sequence of ints, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Normalization mode (see "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "scipy",
                          "path": "scipy.fft",
                          "version": "1.8.0"
                        },
                        "value": "fft"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": "). Default is \"backward\"."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "norm",
            "type_": "{\"backward\", \"ortho\", \"forward\"}, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If True, the contents of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "x",
                          "version": null
                        },
                        "value": "x"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " can be destroyed; the default is False. See "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "fft"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " for more details."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "overwrite_x",
            "type_": "bool, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Maximum number of workers to use for parallel computation. If negative, the value wraps around from "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "os.cpu_count()"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ". See "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "~scipy.fft.fft"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " for more details."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "workers",
            "type_": "int, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "This argument is reserved for passing in a precomputed plan provided by downstream FFT vendors. It is currently not used in SciPy."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "inline": [
                        {
                          "data": {
                            "value": "1.5.0 "
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    }
                  ],
                  "kind": "versionadded",
                  "title": "TODO"
                },
                "type": "Admonition"
              }
            ],
            "param": "plan",
            "type_": "object, optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "s",
                          "version": null
                        },
                        "value": "s"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "axes",
                          "version": null
                        },
                        "value": "axes"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " have different length, or "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "axes",
                          "version": null
                        },
                        "value": "axes"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " not given and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "len(s) != 2"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "ValueError"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If an element of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "axes",
                          "version": null
                        },
                        "value": "axes"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is larger than than the number of axes of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "x",
                          "version": null
                        },
                        "value": "x"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "IndexError"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The truncated or zero-padded input, transformed along the axes indicated by "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "axes",
                          "version": null
                        },
                        "value": "axes"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ", or the last two axes if "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "axes",
                          "version": null
                        },
                        "value": "axes"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is not given."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "out",
            "type_": "complex ndarray"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Compute the 2-D inverse discrete Fourier Transform."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "scipy.signal._filter_design.sp_fft.ifft2"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scipy",
              "scipy",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "fft",
              "scipy.fft",
              "nn"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "x",
              "builtins.int",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "eye",
              "numpy.eye",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "scipy",
              "scipy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "fft",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "ifft2",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              "builtins.int",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[1.+0.j,  0.+0.j,  0.+0.j,  0.+0.j], # may vary\n       [0.+0.j,  0.+0.j,  0.+0.j,  1.+0.j],\n       [0.+0.j,  0.+0.j,  1.+0.j,  0.+0.j],\n       [0.+0.j,  1.+0.j,  0.+0.j,  0.+0.j]])"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/scipy/fft/_basic.py",
  "item_line": 920,
  "item_type": "<class 'uarray._Function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "refs": [
    "builtins.int",
    "fft",
    "fft2",
    "ifft",
    "ifftn",
    "numpy",
    "numpy.eye",
    "scipy",
    "scipy.fft"
  ],
  "see_also": [
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "The forward 2-D FFT, of which "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "ifft2"
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": " is the inverse."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "fft2",
        "ref": "scipy.fft._basic.fft2"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "The inverse of the N-D FFT."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "ifftn",
        "ref": "scipy.fft._basic.ifftn"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "The 1-D FFT."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "fft",
        "ref": "scipy.fft"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "inline": [
            {
              "data": {
                "value": "The 1-D inverse FFT."
              },
              "type": "Words"
            }
          ],
          "inner": []
        }
      ],
      "name": {
        "exists": true,
        "name": "ifft",
        "ref": "scipy.fft._basic.ifft"
      },
      "type": null
    }
  ],
  "signature": {
    "value": null
  }
}