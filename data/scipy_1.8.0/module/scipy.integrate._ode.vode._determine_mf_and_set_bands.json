{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "dd": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25,     -11, -12, -14, -15, -21, -22, -24, -25"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "dt": {
                  "children": [
                    {
                      "data": {
                        "value": "In the Fortran code, the legal values of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "MF"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " are:"
                      },
                      "type": "Words"
                    }
                  ]
                }
              },
              {
                "dd": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "mf  = 10*self.meth + miter"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "dt": {
                  "children": [
                    {
                      "data": {
                        "value": "but this Python wrapper does not use negative values.  Returns"
                      },
                      "type": "Words"
                    }
                  ]
                }
              },
              {
                "dd": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "self.meth == 1:  method=\"adams\"     self.meth == 2:  method=\"bdf\""
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "dt": {
                  "children": [
                    {
                      "data": {
                        "value": "self.meth is the linear multistep method:"
                      },
                      "type": "Words"
                    }
                  ]
                }
              },
              {
                "dd": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "miter == 0:  Functional iteraton; no Jacobian involved.     miter == 1:  Chord iteration with user-supplied full Jacobian.     miter == 2:  Chord iteration with internally computed full Jacobian.     miter == 3:  Chord iteration with internally computed diagonal Jacobian.     miter == 4:  Chord iteration with user-supplied banded Jacobian.     miter == 5:  Chord iteration with internally computed banded Jacobian."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "dt": {
                  "children": [
                    {
                      "data": {
                        "value": "miter is the correction iteration method:"
                      },
                      "type": "Words"
                    }
                  ]
                }
              }
            ]
          },
          "type": "DefList"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Side effects: If either self.mu or self.ml is not None and the other is None, then the one that is None is set to 0."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Determine the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "MF"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": " parameter (Method Flag) for the Fortran subroutine "
                },
                "type": "Words"
              },
              {
                "data": {
                  "domain": null,
                  "role": null,
                  "value": "dvode"
                },
                "type": "Directive"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "scipy.signal._ltisys.integrate._ode.vode._determine_mf_and_set_bands"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/scipy/integrate/_ode.py",
  "item_line": 888,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "_determine_mf_and_set_bands(self, has_jac)"
  }
}