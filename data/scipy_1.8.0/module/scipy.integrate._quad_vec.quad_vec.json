{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The algorithm mainly follows the implementation of QUADPACK's DQAG* algorithms, implementing global error control and adaptive subdivision."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The algorithm here has some differences to the QUADPACK approach:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Instead of subdividing one interval at a time, the algorithm subdivides N intervals with largest errors at once. This enables (partial) parallelization of the integration."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The logic of subdividing \"next largest\" intervals first is then not implemented, and we rely on the above extension to avoid concentrating on \"small\" intervals only."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The Wynn epsilon table extrapolation is not used (QUADPACK uses it for infinite intervals). This is because the algorithm here is supposed to work on vector-valued functions, in an user-specified norm, and the extension of the epsilon algorithm to this case does not appear to be widely agreed. For max-norm, using elementwise Wynn epsilon could be possible, but we do not do this here with the hope that the epsilon extrapolation is mainly useful in special cases."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Vector-valued function f(x) to integrate."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "f",
                "type_": "callable"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Initial point."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "a",
                "type_": "float"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Final point."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "b",
                "type_": "float"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Absolute tolerance."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "epsabs",
                "type_": "float, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Relative tolerance."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "epsrel",
                "type_": "float, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Vector norm to use for error estimation."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "norm",
                "type_": "{'max', '2'}, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Number of bytes to use for memoization."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "cache_size",
                "type_": "int, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "workers"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " is an integer, part of the computation is done in parallel subdivided to this many tasks (using "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "python:multiprocessing.pool.Pool"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "). Supply "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "-1"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " to use all cores available to the Process. Alternatively, supply a map-like callable, such as "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "python:multiprocessing.pool.Pool.map"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " for evaluating the population in parallel. This evaluation is carried out as "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "workers(func, iterable)"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "workers",
                "type_": "int or map-like callable, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "List of additional breakpoints."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "points",
                "type_": "list, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Quadrature rule to use on subintervals. Options: 'gk21' (Gauss-Kronrod 21-point rule), 'gk15' (Gauss-Kronrod 15-point rule), 'trapezoid' (composite trapezoid rule). Default: 'gk21' for finite intervals and 'gk15' for (semi-)infinite"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "quadrature",
                "type_": "{'gk21', 'gk15', 'trapezoid'}, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Return an additional "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "info"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " dictionary."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "full_output",
                "type_": "bool, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Extra arguments to pass to function, if any."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [],
                      "kind": "versionadded",
                      "title": "1.8.0"
                    },
                    "type": "Admonition"
                  }
                ],
                "param": "args",
                "type_": "tuple, optional"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Estimate for the result"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "res",
                "type_": "{float, array-like}"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Error estimate for the result in the given norm"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "err",
                "type_": "float"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Returned only when "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "full_output=True"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". Info dictionary. Is an object with the attributes:"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "value": [
                        "success : bool",
                        "    Whether integration reached target precision.",
                        "status : int",
                        "    Indicator for convergence, success (0),",
                        "    failure (1), and failure due to rounding error (2).",
                        "neval : int",
                        "    Number of function evaluations.",
                        "intervals : ndarray, shape (num_intervals, 2)",
                        "    Start and end points of subdivision intervals.",
                        "integrals : ndarray, shape (num_intervals, ...)",
                        "    Integral for each interval.",
                        "    Note that at most ``cache_size`` values are recorded,",
                        "    and the array may contains *nan* for missing items.",
                        "errors : ndarray, shape (num_intervals,)",
                        "    Estimated integration error for each interval."
                      ]
                    },
                    "type": "BlockQuote"
                  }
                ],
                "param": "info",
                "type_": "dict"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Adaptive integration of a vector-valued function."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "scipy.signal._ltisys.integrate.quad_vec"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "children": [
            {
              "data": {
                "value": "We can compute integrations of a vector-valued function:"
              },
              "type": "Words"
            }
          ]
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            {
              "link": {
                "data": "from",
                "type": "str"
              },
              "type": "kn"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy",
                    "version": "1.8.0"
                  },
                  "value": "scipy"
                },
                "type": "Link"
              },
              "type": "nn"
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "nn"
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy.integrate",
                    "version": "1.8.0"
                  },
                  "value": "integrate"
                },
                "type": "Link"
              },
              "type": "nn"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "import",
                "type": "str"
              },
              "type": "kn"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy.integrate._quad_vec.quad_vec",
                    "version": "1.8.0"
                  },
                  "value": "quad_vec"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "import",
                "type": "str"
              },
              "type": "kn"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib",
                    "version": "*"
                  },
                  "value": "matplotlib"
                },
                "type": "Link"
              },
              "type": "nn"
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "nn"
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.pyplot",
                    "version": "*"
                  },
                  "value": "pyplot"
                },
                "type": "Link"
              },
              "type": "nn"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "as",
                "type": "str"
              },
              "type": "k"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.pyplot",
                    "version": "*"
                  },
                  "value": "plt"
                },
                "type": "Link"
              },
              "type": "nn"
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "builtins",
                    "path": "builtins.tuple",
                    "version": "*"
                  },
                  "value": "alpha"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy",
                    "version": "*"
                  },
                  "value": "np"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.linspace",
                    "version": "*"
                  },
                  "value": "linspace"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "0.0",
                "type": "str"
              },
              "type": "mf"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "2.0",
                "type": "str"
              },
              "type": "mf"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "num",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "30",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "f",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "lambda",
                "type": "str"
              },
              "type": "k"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "x",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ":",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "x",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "*",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "*",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "builtins",
                    "path": "builtins.tuple",
                    "version": "*"
                  },
                  "value": "alpha"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "builtins",
                    "path": "builtins.int",
                    "version": "*"
                  },
                  "value": "x0"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "builtins",
                    "path": "builtins.int",
                    "version": "*"
                  },
                  "value": "x1"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "0",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "2",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "builtins",
                    "path": "builtins.int",
                    "version": "*"
                  },
                  "value": "y"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "err",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy.integrate._quad_vec.quad_vec",
                    "version": "1.8.0"
                  },
                  "value": "quad_vec"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "f",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "builtins",
                    "path": "builtins.int",
                    "version": "*"
                  },
                  "value": "x0"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "builtins",
                    "path": "builtins.int",
                    "version": "*"
                  },
                  "value": "x1"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.pyplot",
                    "version": "*"
                  },
                  "value": "plt"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.pyplot.plot",
                    "version": "*"
                  },
                  "value": "plot"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "builtins",
                    "path": "builtins.tuple",
                    "version": "*"
                  },
                  "value": "alpha"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "builtins",
                    "path": "builtins.int",
                    "version": "*"
                  },
                  "value": "y"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.pyplot",
                    "version": "*"
                  },
                  "value": "plt"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.pyplot.xlabel",
                    "version": "*"
                  },
                  "value": "xlabel"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "builtins",
                    "path": "builtins.str",
                    "version": "*"
                  },
                  "value": "r"
                },
                "type": "Link"
              },
              "type": "sa"
            },
            {
              "link": {
                "data": "\"",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "$",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "\\",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "alpha$",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "\"",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.pyplot",
                    "version": "*"
                  },
                  "value": "plt"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.pyplot.ylabel",
                    "version": "*"
                  },
                  "value": "ylabel"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "builtins",
                    "path": "builtins.str",
                    "version": "*"
                  },
                  "value": "r"
                },
                "type": "Link"
              },
              "type": "sa"
            },
            {
              "link": {
                "data": "\"",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "$",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "\\",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "int_",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "{0}",
                "type": "str"
              },
              "type": "si"
            },
            {
              "link": {
                "data": "^",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "{2}",
                "type": "str"
              },
              "type": "si"
            },
            {
              "link": {
                "data": " x^",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "\\",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "alpha dx$",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": "\"",
                "type": "str"
              },
              "type": "s2"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.pyplot",
                    "version": "*"
                  },
                  "value": "plt"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "matplotlib",
                    "path": "matplotlib.pyplot.show",
                    "version": "*"
                  },
                  "value": "show"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": ""
        },
        "type": "Code2"
      },
      {
        "data": {
          "value": {
            "kind": "assets",
            "module": "scipy",
            "path": "fig-scipy.integrate._quad_vec.quad_vec-0-55feb8dd.png",
            "version": "1.8.0"
          }
        },
        "type": "Fig"
      }
    ],
    "title": null
  },
  "item_file": "/scipy/integrate/_quad_vec.py",
  "item_line": 104,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "refs": [
    "builtins.int",
    "builtins.str",
    "builtins.tuple",
    "matplotlib",
    "matplotlib.pyplot",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.show",
    "matplotlib.pyplot.xlabel",
    "matplotlib.pyplot.ylabel",
    "numpy",
    "numpy.linspace",
    "scipy",
    "scipy.integrate",
    "scipy.integrate._quad_vec.quad_vec"
  ],
  "see_also": [],
  "signature": {
    "value": "quad_vec(f, a, b, epsabs=1e-200, epsrel=1e-08, norm='2', cache_size=100000000.0, limit=10000, workers=1, points=None, quadrature=None, full_output=False, *, args=())"
  }
}