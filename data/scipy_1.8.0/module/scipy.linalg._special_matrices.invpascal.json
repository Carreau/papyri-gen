{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The Pascal matrix is a matrix containing the binomial coefficients as its elements."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "inline": [
                  {
                    "data": {
                      "value": "0.16.0 "
                    },
                    "type": "Words"
                  }
                ],
                "inner": []
              }
            ],
            "kind": "versionadded",
            "title": "TODO"
          },
          "type": "Admonition"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The size of the matrix to create; that is, the result is an n x n matrix."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "n",
            "type_": "int"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Must be one of 'symmetric', 'lower', or 'upper'. Default is 'symmetric'."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "kind",
            "type_": "str, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "exact",
                          "version": null
                        },
                        "value": "exact"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is True, the result is either an array of type "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "numpy.int64"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " (if "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "n",
                          "version": null
                        },
                        "value": "n"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " <= 35) or an object array of Python integers. If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "exact",
                          "version": null
                        },
                        "value": "exact"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is False, the coefficients in the matrix are computed using "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "api",
                          "module": "scipy",
                          "path": "scipy.special._basic.comb",
                          "version": "*"
                        },
                        "value": "scipy.special.comb"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " with "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "exact=False"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": ". The result will be a floating point array, and for large "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "n",
                          "version": null
                        },
                        "value": "n"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ", the values in the array will not be the exact coefficients."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "exact",
            "type_": "bool, optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The inverse of the Pascal matrix."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "invp",
            "type_": "(n, n) ndarray"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Returns the inverse of the n x n Pascal matrix."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "scipy.signal._lti_conversion.linalg.invpascal"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scipy",
              "scipy",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "linalg",
              "scipy.linalg",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "invpascal",
              "scipy.linalg._special_matrices.invpascal",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "pascal",
              "scipy.linalg._special_matrices.pascal",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "invp",
              "numpy._ArrayOrScalarCommon.T",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "invpascal",
              "scipy.linalg._special_matrices.invpascal",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "invp",
              "numpy._ArrayOrScalarCommon.T",
              ""
            ]
          ],
          "out": "array([[  5, -10,  10,  -5,   1],\n       [-10,  30, -35,  19,  -4],\n       [ 10, -35,  46, -27,   6],\n       [ -5,  19, -27,  17,  -4],\n       [  1,  -4,   6,  -4,   1]])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "p",
              "numpy._ArrayOrScalarCommon.T",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "pascal",
              "scipy.linalg._special_matrices.pascal",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "p",
              "numpy._ArrayOrScalarCommon.T",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "dot",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "invp",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[ 1.,  0.,  0.,  0.,  0.],\n       [ 0.,  1.,  0.,  0.,  0.],\n       [ 0.,  0.,  1.,  0.,  0.],\n       [ 0.,  0.,  0.,  1.,  0.],\n       [ 0.,  0.,  0.,  0.,  1.]])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "An example of the use of "
              },
              "type": "Words"
            },
            {
              "data": {
                "exists": true,
                "kind": "local",
                "reference": {
                  "kind": "local",
                  "module": null,
                  "path": "kind",
                  "version": null
                },
                "value": "kind"
              },
              "type": "Link"
            },
            {
              "data": {
                "value": " and "
              },
              "type": "Words"
            },
            {
              "data": {
                "exists": true,
                "kind": "local",
                "reference": {
                  "kind": "local",
                  "module": null,
                  "path": "exact",
                  "version": null
                },
                "value": "exact"
              },
              "type": "Link"
            },
            {
              "data": {
                "value": ":"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "invpascal",
              "scipy.linalg._special_matrices.invpascal",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "kind",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "lower",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "exact",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "False",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[ 1., -0.,  0., -0.,  0.],\n       [-1.,  1., -0.,  0., -0.],\n       [ 1., -2.,  1., -0.,  0.],\n       [-1.,  3., -3.,  1., -0.],\n       [ 1., -4.,  6., -4.,  1.]])"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/scipy/linalg/_special_matrices.py",
  "item_line": 862,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "refs": [
    "numpy._ArrayOrScalarCommon.T",
    "numpy.ndarray",
    "pascal",
    "scipy",
    "scipy.linalg",
    "scipy.linalg._special_matrices.invpascal",
    "scipy.linalg._special_matrices.pascal"
  ],
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "pascal",
        "ref": "scipy.linalg._special_matrices.pascal"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "invpascal(n, kind='symmetric', exact=True)"
  }
}