{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "To remove in the future \u2013\u2013 scipy.linalg.blas"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "scipy.signal._lti_conversion.linalg.blas"
  ],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This module contains low-level functions from the BLAS library."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [],
            "kind": "versionadded",
            "title": "0.12.0"
          },
          "type": "Admonition"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "The common "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "overwrite_<>"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " option in many routines, allows the input arrays to be overwritten to avoid extra memory allocation. However this requires the array to satisfy two conditions which are memory order and the data type to match exactly the order and the type expected by the routine."
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "As an example, if you pass a double precision float array to any "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "S...."
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " routine which expects single precision arguments, f2py will create an intermediate array to match the argument types and overwriting will be performed on that intermediate array."
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "Similarly, if a C-contiguous array is passed, f2py will pass a FORTRAN-contiguous array internally. Please make sure that these details are satisfied. More information can be found in the f2py documentation."
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              }
            ],
            "kind": "note",
            "title": ""
          },
          "type": "Admonition"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "children": [
                    {
                      "data": {
                        "value": "These functions do little to no error checking. It is possible to cause crashes by mis-using them, so prefer using the higher-level routines in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "scipy.linalg"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ]
                },
                "type": "Paragraph"
              }
            ],
            "kind": "warning",
            "title": ""
          },
          "type": "Admonition"
        }
      ],
      "title": "Low-level BLAS functions (:mod:`scipy.linalg.blas`)"
    },
    {
      "children": [
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    get_blas_funcs\n    find_best_blas_type"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": "Finding functions"
    },
    {
      "children": [
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    caxpy\n    ccopy\n    cdotc\n    cdotu\n    crotg\n    cscal\n    csrot\n    csscal\n    cswap\n    dasum\n    daxpy\n    dcopy\n    ddot\n    dnrm2\n    drot\n    drotg\n    drotm\n    drotmg\n    dscal\n    dswap\n    dzasum\n    dznrm2\n    icamax\n    idamax\n    isamax\n    izamax\n    sasum\n    saxpy\n    scasum\n    scnrm2\n    scopy\n    sdot\n    snrm2\n    srot\n    srotg\n    srotm\n    srotmg\n    sscal\n    sswap\n    zaxpy\n    zcopy\n    zdotc\n    zdotu\n    zdrot\n    zdscal\n    zrotg\n    zscal\n    zswap"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": "BLAS Level 1 functions"
    },
    {
      "children": [
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    sgbmv\n    sgemv\n    sger\n    ssbmv\n    sspr\n    sspr2\n    ssymv\n    ssyr\n    ssyr2\n    stbmv\n    stpsv\n    strmv\n    strsv\n    dgbmv\n    dgemv\n    dger\n    dsbmv\n    dspr\n    dspr2\n    dsymv\n    dsyr\n    dsyr2\n    dtbmv\n    dtpsv\n    dtrmv\n    dtrsv\n    cgbmv\n    cgemv\n    cgerc\n    cgeru\n    chbmv\n    chemv\n    cher\n    cher2\n    chpmv\n    chpr\n    chpr2\n    ctbmv\n    ctbsv\n    ctpmv\n    ctpsv\n    ctrmv\n    ctrsv\n    csyr\n    zgbmv\n    zgemv\n    zgerc\n    zgeru\n    zhbmv\n    zhemv\n    zher\n    zher2\n    zhpmv\n    zhpr\n    zhpr2\n    ztbmv\n    ztbsv\n    ztpmv\n    ztrmv\n    ztrsv\n    zsyr"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": "BLAS Level 2 functions"
    },
    {
      "children": [
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    sgemm\n    ssymm\n    ssyr2k\n    ssyrk\n    strmm\n    strsm\n    dgemm\n    dsymm\n    dsyr2k\n    dsyrk\n    dtrmm\n    dtrsm\n    cgemm\n    chemm\n    cher2k\n    cherk\n    csymm\n    csyr2k\n    csyrk\n    ctrmm\n    ctrsm\n    zgemm\n    zhemm\n    zher2k\n    zherk\n    zsymm\n    zsyr2k\n    zsyrk\n    ztrmm\n    ztrsm"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": "BLAS Level 3 functions"
    }
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/scipy/linalg/blas.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}