{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "A 2-D array representing the simplex tableau, T, corresponding to the linear programming problem. It should have the form:"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "dd": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "[A[1, 0], A[1, 1], ..., A[1, n_total], b[1]],  .  .  .  [A[m, 0], A[m, 1], ..., A[m, n_total], b[m]],  [c[0],   c[1], ...,   c[n_total],    0]]"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ],
                      "dt": {
                        "inline": [
                          {
                            "data": {
                              "value": "[[A[0, 0], A[0, 1], ..., A[0, n_total], b[0]],"
                            },
                            "type": "Words"
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                },
                "type": "DefList"
              },
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "for a Phase 2 problem, or the form:"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "dd": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "[A[1, 0], A[1, 1], ..., A[1, n_total], b[1]],  .  .  .  [A[m, 0], A[m, 1], ..., A[m, n_total], b[m]],  [c[0],   c[1], ...,   c[n_total],   0],  [c'[0],  c'[1], ...,  c'[n_total],  0]]"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        },
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "for a Phase 1 problem (a problem in which a basic feasible solution is  sought prior to maximizing the actual objective. "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "T"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": " is modified in  place by "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "value": [
                                    "_solve_simplex"
                                  ]
                                },
                                "type": "Verbatim"
                              },
                              {
                                "data": {
                                  "value": "."
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ],
                      "dt": {
                        "inline": [
                          {
                            "data": {
                              "value": "[[A[0, 0], A[0, 1], ..., A[0, n_total], b[0]],"
                            },
                            "type": "Words"
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                },
                "type": "DefList"
              }
            ],
            "param": "T",
            "type_": "2-D array"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Elements in the objective row larger than -tol will not be considered for pivoting. Nominally this value is zero, but numerical issues cause a tolerance about zero to be necessary."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "tol",
            "type_": "float"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If True, use Bland's rule for selection of the column (select the first column with a negative coefficient in the objective row, regardless of magnitude)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "bland",
            "type_": "bool"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "True if a suitable pivot column was found, otherwise False. A return of False indicates that the linear programming simplex algorithm is complete."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "status: bool"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The index of the column of the pivot element. If status is False, col will be returned as nan."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "col: int"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Given a linear programming simplex tableau, determine the column of the variable to enter the basis."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "scipy.signal._filter_design.optimize._linprog_simplex._pivot_col"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/scipy/optimize/_linprog_simplex.py",
  "item_line": 37,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "_pivot_col(T, tol=1e-09, bland=False)"
  }
}