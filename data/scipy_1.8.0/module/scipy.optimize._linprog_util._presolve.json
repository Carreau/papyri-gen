{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "children": [
                    {
                      "dd": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "c"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ],
                      "dt": {
                        "inline": [
                          {
                            "data": {
                              "value": "c"
                            },
                            "type": "Words"
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "dd": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "A_ub"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ],
                      "dt": {
                        "inline": [
                          {
                            "data": {
                              "value": "A_ub"
                            },
                            "type": "Words"
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "dd": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "b_ub"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ],
                      "dt": {
                        "inline": [
                          {
                            "data": {
                              "value": "b_ub"
                            },
                            "type": "Words"
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "dd": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "A_eq"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ],
                      "dt": {
                        "inline": [
                          {
                            "data": {
                              "value": "A_eq"
                            },
                            "type": "Words"
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "dd": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "b_eq"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ],
                      "dt": {
                        "inline": [
                          {
                            "data": {
                              "value": "b_eq"
                            },
                            "type": "Words"
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "dd": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "bounds"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ],
                      "dt": {
                        "inline": [
                          {
                            "data": {
                              "value": "bounds"
                            },
                            "type": "Words"
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "dd": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "x0"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ],
                      "dt": {
                        "inline": [
                          {
                            "data": {
                              "value": "x0"
                            },
                            "type": "Words"
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                },
                "type": "DefList"
              }
            ],
            "param": "lp",
            "type_": "A `scipy.optimize._linprog_util._LPProblem` consisting of the following fields:"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "True"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " attempts to eliminate any redundant rows in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "A_eq"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ". Set False if "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "A_eq"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " is known to be of full row rank, or if you are looking for a potential speedup (at the expense of reliability)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "rr",
            "type_": "bool"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Method used to identify and remove redundant rows from the equality constraint matrix after presolve."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "rr_method",
            "type_": "string"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The tolerance which determines when a solution is \"close enough\" to zero in Phase 1 to be considered a basic feasible solution or close enough to positive to serve as an optimal solution."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "tol",
            "type_": "float"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "children": [
                    {
                      "dd": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "c"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ],
                      "dt": {
                        "inline": [
                          {
                            "data": {
                              "value": "c"
                            },
                            "type": "Words"
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "dd": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "A_ub"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ],
                      "dt": {
                        "inline": [
                          {
                            "data": {
                              "value": "A_ub"
                            },
                            "type": "Words"
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "dd": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "b_ub"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ],
                      "dt": {
                        "inline": [
                          {
                            "data": {
                              "value": "b_ub"
                            },
                            "type": "Words"
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "dd": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "A_eq"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ],
                      "dt": {
                        "inline": [
                          {
                            "data": {
                              "value": "A_eq"
                            },
                            "type": "Words"
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "dd": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "b_eq"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ],
                      "dt": {
                        "inline": [
                          {
                            "data": {
                              "value": "b_eq"
                            },
                            "type": "Words"
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "dd": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "bounds"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ],
                      "dt": {
                        "inline": [
                          {
                            "data": {
                              "value": "bounds"
                            },
                            "type": "Words"
                          }
                        ],
                        "inner": []
                      }
                    },
                    {
                      "dd": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "x0"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ],
                      "dt": {
                        "inline": [
                          {
                            "data": {
                              "value": "x0"
                            },
                            "type": "Words"
                          }
                        ],
                        "inner": []
                      }
                    }
                  ]
                },
                "type": "DefList"
              }
            ],
            "param": "lp",
            "type_": "A `scipy.optimize._linprog_util._LPProblem` consisting of the following fields:"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Constant term in objective function due to fixed (and eliminated) variables."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "c0",
            "type_": "1D array"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Solution vector (when the solution is trivial and can be determined in presolve)"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "x",
            "type_": "1D array"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "the functions in the list reverse the operations of _presolve() the function signature is x_org = f(x_mod), where x_mod is the result of a presolve step and x_org the value at the start of the step (currently, the revstack contains only one function)"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "revstack: list of functions"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Whether the solution is complete (solved or determined to be infeasible or unbounded in presolve)"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "complete: bool"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "An integer representing the exit status of the optimization::   "
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "value": "0 : Optimization terminated successfully\n1 : Iteration limit reached\n2 : Problem appears to be infeasible\n3 : Problem appears to be unbounded\n4 : Serious numerical difficulties encountered"
                },
                "type": "BlockVerbatim"
              }
            ],
            "param": "status",
            "type_": "int"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "A string descriptor of the exit status of the optimization."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "message",
            "type_": "str"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Given inputs for a linear programming problem in preferred format, presolve the problem: identify trivial infeasibilities, redundancies, and unboundedness, tighten bounds where possible, and eliminate fixed variables."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "scipy.signal._filter_design.optimize._linprog._presolve"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/scipy/optimize/_linprog_util.py",
  "item_line": 454,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "References"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "_presolve(lp, rr, rr_method, tol=1e-09)"
  }
}