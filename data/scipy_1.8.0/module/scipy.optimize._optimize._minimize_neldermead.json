{
  "aliases": [
    "scipy.signal._filter_design.optimize._minimize._minimize_neldermead"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Set to True to print convergence messages."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "disp",
                "type_": "bool"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Maximum allowed number of iterations and function evaluations. Will default to "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "N*200"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", where "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "N"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " is the number of variables, if neither "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "maxiter"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "maxfev"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " is set. If both "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "maxiter"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "maxfev"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " are set, minimization will stop at the first reached."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "maxiter, maxfev",
                "type_": "int"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Set to True to return a list of the best solution at each of the iterations."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "return_all",
                "type_": "bool, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Initial simplex. If given, overrides "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "x0"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ". "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "initial_simplex[j,:]"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " should contain the coordinates of the jth vertex of the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "N+1"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " vertices in the simplex, where "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "N"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " is the dimension."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "initial_simplex",
                "type_": "array_like of shape (N + 1, N)"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Absolute error in xopt between iterations that is acceptable for convergence."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "xatol",
                "type_": "float, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Absolute error in func(xopt) between iterations that is acceptable for convergence."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "fatol",
                "type_": "number, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Adapt algorithm parameters to dimensionality of problem. Useful for high-dimensional minimization ."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "adaptive",
                "type_": "bool, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Bounds on variables. There are two ways to specify the bounds:"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "children": [
                              {
                                "children": [
                                  {
                                    "data": {
                                      "children": [
                                        {
                                          "data": {
                                            "value": "Instance of "
                                          },
                                          "type": "Words"
                                        },
                                        {
                                          "data": {
                                            "exists": true,
                                            "kind": "module",
                                            "reference": {
                                              "kind": "module",
                                              "module": "scipy",
                                              "path": "scipy.optimize._constraints.Bounds",
                                              "version": "1.8.0"
                                            },
                                            "value": "Bounds"
                                          },
                                          "type": "Link"
                                        },
                                        {
                                          "data": {
                                            "value": " class."
                                          },
                                          "type": "Words"
                                        }
                                      ]
                                    },
                                    "type": "Paragraph"
                                  }
                                ]
                              },
                              {
                                "children": [
                                  {
                                    "data": {
                                      "children": [
                                        {
                                          "data": {
                                            "value": "Sequence of "
                                          },
                                          "type": "Words"
                                        },
                                        {
                                          "data": {
                                            "value": [
                                              "(min, max)"
                                            ]
                                          },
                                          "type": "Verbatim"
                                        },
                                        {
                                          "data": {
                                            "value": " pairs for each element in "
                                          },
                                          "type": "Words"
                                        },
                                        {
                                          "data": {
                                            "exists": true,
                                            "kind": "local",
                                            "reference": {
                                              "kind": "local",
                                              "module": null,
                                              "path": "x",
                                              "version": null
                                            },
                                            "value": "x"
                                          },
                                          "type": "Link"
                                        },
                                        {
                                          "data": {
                                            "value": ". None        is used to specify no bound."
                                          },
                                          "type": "Words"
                                        }
                                      ]
                                    },
                                    "type": "Paragraph"
                                  }
                                ]
                              }
                            ]
                          },
                          "type": "EnumeratedList"
                        }
                      ]
                    },
                    "type": "BlockQuote"
                  },
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Note that this just clips all vertices in simplex based on the bounds."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "bounds",
                "type_": "sequence or `Bounds`, optional"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Minimization of scalar function of one or more variables using the Nelder-Mead algorithm."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "title": null
  },
  "item_file": "/scipy/optimize/_optimize.py",
  "item_line": 635,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "References"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "_minimize_neldermead(func, x0, args=(), callback=None, maxiter=None, maxfev=None, disp=False, return_all=False, initial_simplex=None, xatol=0.0001, fatol=0.0001, adaptive=False, bounds=None, **unknown_options)"
  }
}