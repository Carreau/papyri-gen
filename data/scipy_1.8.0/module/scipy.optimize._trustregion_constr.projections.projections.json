{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Uses iterative refinements described in [1] during the computation of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Z"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " in order to cope with the possibility of large roundoff errors."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Matrix "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "A"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " used in the projection."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "A",
            "type_": "sparse matrix (or ndarray), shape (m, n)"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Method used for compute the given linear operators. Should be one of:"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "value": [
                    "- 'NormalEquation': The operators",
                    "   will be computed using the",
                    "   so-called normal equation approach",
                    "   explained in [1]_. In order to do",
                    "   so the Cholesky factorization of",
                    "   ``(A A.T)`` is computed. Exclusive",
                    "   for sparse matrices.",
                    "- 'AugmentedSystem': The operators",
                    "   will be computed using the",
                    "   so-called augmented system approach",
                    "   explained in [1]_. Exclusive",
                    "   for sparse matrices.",
                    "- 'QRFactorization': Compute projections",
                    "   using QR factorization. Exclusive for",
                    "   dense matrices.",
                    "- 'SVDFactorization': Compute projections",
                    "   using SVD factorization. Exclusive for",
                    "   dense matrices."
                  ]
                },
                "type": "BlockQuote"
              }
            ],
            "param": "method",
            "type_": "string, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Tolerance for iterative refinements."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "orth_tol",
            "type_": "float, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Maximum number of iterative refinements."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "max_refin",
            "type_": "int, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Tolerance for singular values."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "tol",
            "type_": "float, optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Null-space operator. For a given vector "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "x"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", the null space operator is equivalent to apply a projection matrix "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "P = I - A.T inv(A A.T) A"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " to the vector. It can be shown that this is equivalent to project "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "x"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " into the null space of A."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "Z",
            "type_": "LinearOperator, shape (n, n)"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Least-squares operator. For a given vector "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "x"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", the least-squares operator is equivalent to apply a pseudoinverse matrix "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "pinv(A.T) = inv(A A.T) A"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " to the vector. It can be shown that this vector "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "pinv(A.T) x"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " is the least_square solution to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "A.T y = x"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "LS",
            "type_": "LinearOperator, shape (m, n)"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Row-space operator. For a given vector "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "x"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", the row-space operator is equivalent to apply a projection matrix "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "Q = A.T inv(A A.T)"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " to the vector.  It can be shown that this vector "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "y = Q x"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "  the minimum norm solution of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "A y = x"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "Y",
            "type_": "LinearOperator, shape (n, m)"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Return three linear operators related with a given matrix A."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "scipy.signal._filter_design.optimize._trustregion_constr.equality_constrained_sqp.projections"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/scipy/optimize/_trustregion_constr/projections.py",
  "item_line": 289,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "References"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "projections(A, method=None, orth_tol=1e-12, max_refin=3, tol=1e-15)"
  }
}