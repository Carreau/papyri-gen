{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "This function computes the coefficients of a finite impulse response filter. The filter will have linear phase; it will be Type I if "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "numtaps",
                    "version": null
                  },
                  "value": "numtaps"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is odd and Type II if "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "numtaps",
                    "version": null
                  },
                  "value": "numtaps"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is even."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Type II filters always have zero response at the Nyquist frequency, so a ValueError exception is raised if firwin is called with "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "numtaps",
                    "version": null
                  },
                  "value": "numtaps"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " even and having a passband whose right end is at the Nyquist frequency."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Length of the filter (number of coefficients, i.e. the filter order + 1).  "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "numtaps",
                          "version": null
                        },
                        "value": "numtaps"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " must be odd if a passband includes the Nyquist frequency."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "numtaps",
            "type_": "int"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Cutoff frequency of filter (expressed in the same units as "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "fs",
                          "version": null
                        },
                        "value": "fs"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ") OR an array of cutoff frequencies (that is, band edges). In the latter case, the frequencies in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "cutoff",
                          "version": null
                        },
                        "value": "cutoff"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " should be positive and monotonically increasing between 0 and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "fs/2"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": ". The values 0 and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "fs/2"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " must not be included in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "cutoff",
                          "version": null
                        },
                        "value": "cutoff"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "cutoff",
            "type_": "float or 1-D array_like"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "width",
                          "version": null
                        },
                        "value": "width"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is not None, then assume it is the approximate width of the transition region (expressed in the same units as "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "fs",
                          "version": null
                        },
                        "value": "fs"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ") for use in Kaiser FIR filter design. In this case, the "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "window",
                          "version": null
                        },
                        "value": "window"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " argument is ignored."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "width",
            "type_": "float or None, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Desired window to use. See "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "api",
                          "module": "scipy",
                          "path": "scipy.signal.windows._windows.get_window",
                          "version": "*"
                        },
                        "value": "scipy.signal.get_window"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " for a list of windows and required parameters."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "window",
            "type_": "string or tuple of string and parameter values, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If True, the gain at the frequency 0 (i.e., the \"DC gain\") is 1. If False, the DC gain is 0. Can also be a string argument for the desired filter type (equivalent to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "btype"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " in IIR design functions)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "inline": [
                        {
                          "data": {
                            "value": "Support for string arguments. "
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    }
                  ],
                  "kind": "versionadded",
                  "title": "1.3.0"
                },
                "type": "Admonition"
              }
            ],
            "param": "pass_zero",
            "type_": "{True, False, 'bandpass', 'lowpass', 'highpass', 'bandstop'}, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Set to True to scale the coefficients so that the frequency response is exactly unity at a certain frequency. That frequency is either:"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "children": [
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "value": "0 (DC) if the first passband starts at 0 (i.e. pass_zero   is True)"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    },
                    {
                      "value": [
                        {
                          "data": {
                            "inline": [
                              {
                                "data": {
                                  "domain": null,
                                  "role": null,
                                  "value": "fs/2"
                                },
                                "type": "Directive"
                              },
                              {
                                "data": {
                                  "value": " (the Nyquist frequency) if the first passband ends at   "
                                },
                                "type": "Words"
                              },
                              {
                                "data": {
                                  "domain": null,
                                  "role": null,
                                  "value": "fs/2"
                                },
                                "type": "Directive"
                              },
                              {
                                "data": {
                                  "value": " (i.e the filter is a single band highpass filter);   center of first passband otherwise"
                                },
                                "type": "Words"
                              }
                            ],
                            "inner": []
                          },
                          "type": "Paragraph"
                        }
                      ]
                    }
                  ]
                },
                "type": "BulletList"
              }
            ],
            "param": "scale",
            "type_": "bool, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": {
                          "value": "Deprecated. Use `fs` instead."
                        }
                      },
                      "type": "Emph"
                    },
                    {
                      "data": {
                        "value": " This is the Nyquist frequency. Each frequency in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "cutoff",
                          "version": null
                        },
                        "value": "cutoff"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " must be between 0 and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "nyq",
                          "version": null
                        },
                        "value": "nyq"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ". Default is 1."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "nyq",
            "type_": "float, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The sampling frequency of the signal. Each frequency in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "cutoff",
                          "version": null
                        },
                        "value": "cutoff"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " must be between 0 and "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "fs/2"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ".  Default is 2."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "fs",
            "type_": "float, optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If any value in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "cutoff",
                          "version": null
                        },
                        "value": "cutoff"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is less than or equal to 0 or greater than or equal to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "fs/2"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", if the values in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "cutoff",
                          "version": null
                        },
                        "value": "cutoff"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " are not strictly monotonically increasing, or if "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "numtaps",
                          "version": null
                        },
                        "value": "numtaps"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is even but a passband includes the Nyquist frequency."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "",
            "type_": "ValueError"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Coefficients of length "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "numtaps",
                          "version": null
                        },
                        "value": "numtaps"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " FIR filter."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "h",
            "type_": "(numtaps,) ndarray"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "FIR filter design using the window method."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "scipy.signal.firwin"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Low-pass from 0 to f:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scipy",
              "scipy",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "signal",
              "scipy.signal",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "numtaps",
              "builtins.int",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "f",
              "builtins.float",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0.1",
              "",
              "mf"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "signal",
              "scipy.signal",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "firwin",
              "scipy.signal._fir_filter_design.firwin",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "numtaps",
              "builtins.int",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "f",
              "builtins.float",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([ 0.06799017,  0.86401967,  0.06799017])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Use a specific window function:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "signal",
              "scipy.signal",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "firwin",
              "scipy.signal._fir_filter_design.firwin",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "numtaps",
              "builtins.int",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "f",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "window",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "nuttall",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([  3.56607041e-04,   9.99286786e-01,   3.56607041e-04])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "High-pass ('stop' from 0 to f):"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "signal",
              "scipy.signal",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "firwin",
              "scipy.signal._fir_filter_design.firwin",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "numtaps",
              "builtins.int",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "f",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "pass_zero",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "False",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([-0.00859313,  0.98281375, -0.00859313])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Band-pass:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "f1",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "f2",
              "builtins.float",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0.1",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0.2",
              "",
              "mf"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "signal",
              "scipy.signal",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "firwin",
              "scipy.signal._fir_filter_design.firwin",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "numtaps",
              "builtins.int",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "f1",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "f2",
              "builtins.float",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "pass_zero",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "False",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([ 0.06301614,  0.88770441,  0.06301614])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Band-stop:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "signal",
              "scipy.signal",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "firwin",
              "scipy.signal._fir_filter_design.firwin",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "numtaps",
              "builtins.int",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "f1",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "f2",
              "builtins.float",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([-0.00801395,  1.0160279 , -0.00801395])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Multi-band (passbands are [0, f1], [f2, f3] and [f4, 1]):"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "f3",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "f4",
              "builtins.float",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0.3",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0.4",
              "",
              "mf"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "signal",
              "scipy.signal",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "firwin",
              "scipy.signal._fir_filter_design.firwin",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "numtaps",
              "builtins.int",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "f1",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "f2",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "f3",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "f4",
              "builtins.float",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([-0.01376344,  1.02752689, -0.01376344])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Multi-band (passbands are [f1, f2] and [f3,f4]):"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "signal",
              "scipy.signal",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "firwin",
              "scipy.signal._fir_filter_design.firwin",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "numtaps",
              "builtins.int",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "f1",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "f2",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "f3",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "f4",
              "builtins.float",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "pass_zero",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "False",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([ 0.04890915,  0.91284326,  0.04890915])"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/scipy/signal/_fir_filter_design.py",
  "item_line": 262,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "See Also",
    "Examples"
  ],
  "references": null,
  "refs": [
    "builtins.float",
    "builtins.int",
    "firls",
    "firwin2",
    "minimum_phase",
    "remez",
    "scipy",
    "scipy.signal",
    "scipy.signal._fir_filter_design.firwin"
  ],
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "firwin2",
        "ref": "scipy.signal._fir_filter_design.firwin2"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "firls",
        "ref": "scipy.signal._fir_filter_design.firls"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "minimum_phase",
        "ref": "scipy.signal._fir_filter_design.minimum_phase"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "remez",
        "ref": "scipy.signal._fir_filter_design.remez"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "firwin(numtaps, cutoff, width=None, window='hamming', pass_zero=True, scale=True, nyq=None, fs=None)"
  }
}