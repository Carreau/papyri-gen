{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "To remove in the future \u2013\u2013 scipy.spatial.distance"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "scipy.signal._filter_design.optimize._shgo.spatial.distance"
  ],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "args0": [],
            "directive_name": "sectionauthor",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "Damian Eads "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        }
      ],
      "title": "Distance computations (:mod:`scipy.spatial.distance`)"
    },
    {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Distance matrix computation from a collection of raw observation vectors stored in a rectangular array."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "args0": [
              ":toctree: generated/"
            ],
            "directive_name": "autosummary",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "pdist - - pairwise distances between observation vectors. cdist - - distances between two collections of observation vectors squareform - - convert distance matrix to a condensed one and vice versa directed_hausdorff - - directed Hausdorff distance between arrays "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Predicates for checking the validity of distance matrices, both condensed and redundant. Also contained in this module are functions for computing the number of observations in a distance matrix."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "args0": [
              ":toctree: generated/"
            ],
            "directive_name": "autosummary",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "is_valid_dm - - checks for a valid distance matrix is_valid_y - - checks for a valid condensed distance matrix num_obs_dm - - # of observations in a distance matrix num_obs_y - - # of observations in a condensed distance matrix "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Distance functions between two numeric vectors "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "u"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "v"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". Computing distances over a large collection of vectors is inefficient for these functions. Use "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "pdist"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for this purpose."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "args0": [
              ":toctree: generated/"
            ],
            "directive_name": "autosummary",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "braycurtis - - the Bray - Curtis distance. canberra - - the Canberra distance. chebyshev - - the Chebyshev distance. cityblock - - the Manhattan distance. correlation - - the Correlation distance. cosine - - the Cosine distance. euclidean - - the Euclidean distance. jensenshannon - - the Jensen - Shannon distance. mahalanobis - - the Mahalanobis distance. minkowski - - the Minkowski distance. seuclidean - - the normalized Euclidean distance. sqeuclidean - - the squared Euclidean distance. "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Distance functions between two boolean vectors (representing sets) "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "u"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "v"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ".  As in the case of numerical vectors, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "pdist"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is more efficient for computing the distances between all pairs."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "args0": [
              ":toctree: generated/"
            ],
            "directive_name": "autosummary",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "dice - - the Dice dissimilarity. hamming - - the Hamming distance. jaccard - - the Jaccard distance. kulsinski - - the Kulsinski distance. kulczynski1 - - the Kulczynski 1 distance. rogerstanimoto - - the Rogers - Tanimoto dissimilarity. russellrao - - the Russell - Rao dissimilarity. sokalmichener - - the Sokal - Michener dissimilarity. sokalsneath - - the Sokal - Sneath dissimilarity. yule - - the Yule dissimilarity. "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": [
                    "hamming"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " also operates over discrete numerical vectors."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": "Function reference"
    }
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/scipy/spatial/distance.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": null
  }
}