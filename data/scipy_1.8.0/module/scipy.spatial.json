{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "To remove in the future \u2013\u2013 scipy.spatial"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "scipy.signal._filter_design.optimize._shgo.spatial"
  ],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "args0": [],
            "directive_name": "currentmodule",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "scipy.spatial "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        }
      ],
      "title": "Spatial algorithms and data structures (:mod:`scipy.spatial`)"
    },
    {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "These are contained in the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy.spatial.transform",
                    "version": "1.8.0"
                  },
                  "value": "scipy.spatial.transform"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " submodule."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": "Spatial transformations"
    },
    {
      "children": [
        {
          "data": {
            "args0": [
              ":toctree: generated/"
            ],
            "directive_name": "autosummary",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "KDTree - - class for efficient nearest - neighbor queries cKDTree - - class for efficient nearest - neighbor queries ( faster implementation) Rectangle "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Distance metrics are contained in the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "scipy.spatial.distance"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " submodule."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": "Nearest-neighbor queries"
    },
    {
      "children": [
        {
          "data": {
            "args0": [
              ":toctree: generated/"
            ],
            "directive_name": "autosummary",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "Delaunay - - compute Delaunay triangulation of input points ConvexHull - - compute a convex hull for input points Voronoi - - compute a Voronoi diagram hull from input points SphericalVoronoi - - compute a Voronoi diagram from input points on the surface of a sphere HalfspaceIntersection - - compute the intersection points of input halfspaces "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        }
      ],
      "title": "Delaunay triangulation, convex hulls, and Voronoi diagrams"
    },
    {
      "children": [
        {
          "data": {
            "args0": [
              ":toctree: generated/"
            ],
            "directive_name": "autosummary",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "delaunay_plot_2d - - plot 2 - D triangulation convex_hull_plot_2d - - plot 2 - D convex hull voronoi_plot_2d - - plot 2 - D Voronoi diagram "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        },
        {
          "data": {
            "args0": [],
            "directive_name": "seealso",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": ": ref : `Tutorial < qhulltutorial>` "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        }
      ],
      "title": "Plotting helpers"
    },
    {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The simplices (triangles, tetrahedra, etc.) appearing in the Delaunay tessellation (N-D simplices), convex hull facets, and Voronoi ridges (N-1-D simplices) are represented in the following scheme::      "
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "tess = Delaunay(points)\nhull = ConvexHull(points)\nvoro = Voronoi(points)\n\n# coordinates of the jth vertex of the ith simplex\ntess.points[tess.simplices[i, j], :]        # tessellation element\nhull.points[hull.simplices[i, j], :]        # convex hull facet\nvoro.vertices[voro.ridge_vertices[i, j], :] # ridge between Voronoi cells"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "For Delaunay triangulations and convex hulls, the neighborhood structure of the simplices satisfies the condition: "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "tess.neighbors[i,j]"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is the neighboring simplex of the ith simplex, opposite to the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "j"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "-vertex. It is -1 in case of no neighbor."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Convex hull facets also define a hyperplane equation::      "
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "(hull.equations[i,:-1] * coord).sum() + hull.equations[i,-1] == 0"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Similar hyperplane equations for the Delaunay triangulation correspond to the convex hull facets on the corresponding N+1-D paraboloid."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The Delaunay triangulation objects offer a method for locating the simplex containing a given point, and barycentric coordinate computations."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": "Simplex representation"
    },
    {
      "children": [
        {
          "data": {
            "args0": [
              ":toctree: generated/"
            ],
            "directive_name": "autosummary",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "tsearch distance_matrix minkowski_distance minkowski_distance_p procrustes geometric_slerp "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        }
      ],
      "title": "Functions"
    },
    {
      "children": [
        {
          "data": {
            "args0": [
              ":toctree: generated/"
            ],
            "directive_name": "autosummary",
            "inner": {
              "inline": [
                {
                  "data": {
                    "value": "QhullError "
                  },
                  "type": "Words"
                }
              ],
              "inner": []
            }
          },
          "type": "BlockDirective"
        }
      ],
      "title": "Warnings / Errors used in :mod:`scipy.spatial`"
    }
  ],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/scipy/spatial/__init__.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": null
  }
}