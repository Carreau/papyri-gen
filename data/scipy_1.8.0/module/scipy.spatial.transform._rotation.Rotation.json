{
  "_content": {
    "Attributes": {
      "children": [
        {
          "data": {
            "desc": [],
            "param": "single",
            "type_": ""
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "This class provides an interface to initialize from and represent rotations with:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "Quaternions"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "Rotation Matrices"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "Rotation Vectors"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "Modified Rodrigues Parameters"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "Euler Angles"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The following operations on rotations are supported:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "Application on vectors"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "Rotation Composition"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "Rotation Inversion"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "value": [
                  {
                    "data": {
                      "inline": [
                        {
                          "data": {
                            "value": "Rotation Indexing"
                          },
                          "type": "Words"
                        }
                      ],
                      "inner": []
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Indexing within a rotation is supported since multiple rotation transforms can be stored within a single "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy.spatial.transform._rotation.Rotation",
                    "version": "1.8.0"
                  },
                  "value": "Rotation"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " instance."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "To create "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy.spatial.transform._rotation.Rotation",
                    "version": "1.8.0"
                  },
                  "value": "Rotation"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " objects use "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "from_..."
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " methods (see examples below). "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "Rotation(...)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " is not supposed to be instantiated directly."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [
        {
          "data": {
            "desc": [],
            "param": "__len__",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "from_quat",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "from_matrix",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "from_rotvec",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "from_mrp",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "from_euler",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "as_quat",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "as_matrix",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "as_rotvec",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "as_mrp",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "as_euler",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "concatenate",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "apply",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "__mul__",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "inv",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "magnitude",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "mean",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "reduce",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "create_group",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "__getitem__",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "identity",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "random",
            "type_": ""
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [],
            "param": "align_vectors",
            "type_": ""
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "value": ".. versionadded: 1.2.0"
          },
          "type": "Comment"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Rotation in 3 dimensions."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "scipy.signal._filter_design.optimize._shgo.spatial.transform.Rotation"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "scipy",
              "scipy",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "spatial",
              "scipy.spatial",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "transform",
              "scipy.spatial.transform",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "Rotation",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "as",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "R",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ]
          ],
          "out": ""
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "A "
              },
              "type": "Words"
            },
            {
              "data": {
                "exists": true,
                "kind": "module",
                "reference": {
                  "kind": "module",
                  "module": "scipy",
                  "path": "scipy.spatial.transform._rotation.Rotation",
                  "version": "1.8.0"
                },
                "value": "Rotation"
              },
              "type": "Link"
            },
            {
              "data": {
                "value": " instance can be initialized in any of the above formats and converted to any of the others. The underlying object is independent of the representation used for initialization."
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Consider a counter-clockwise rotation of 90 degrees about the z-axis. This corresponds to the following quaternion (in scalar-last format):"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "R",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "from_quat",
              "builtins.classmethod.__get__",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "sin",
              "numpy.ufunc",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "pi",
              "builtins.float",
              ""
            ],
            [
              "/",
              "",
              "o"
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "cos",
              "numpy.ufunc",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "pi",
              "builtins.float",
              ""
            ],
            [
              "/",
              "",
              "o"
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": ""
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "The rotation can be expressed in any of the other formats:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "as_matrix",
              "scipy.spatial.transform._rotation.Rotation.as_matrix",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[ 2.22044605e-16, -1.00000000e+00,  0.00000000e+00],\n[ 1.00000000e+00,  2.22044605e-16,  0.00000000e+00],\n[ 0.00000000e+00,  0.00000000e+00,  1.00000000e+00]])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "as_rotvec",
              "scipy.spatial.transform._rotation.Rotation.as_rotvec",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([0.        , 0.        , 1.57079633])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "as_euler",
              "scipy.spatial.transform._rotation.Rotation.as_euler",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "zyx",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "degrees",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "True",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([90.,  0.,  0.])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "The same rotation can be initialized using a rotation matrix:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "R",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "from_matrix",
              "builtins.classmethod.__get__",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "                   ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "                   ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": ""
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Representation in other formats:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "as_quat",
              "scipy.spatial.transform._rotation.Rotation.as_quat",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([0.        , 0.        , 0.70710678, 0.70710678])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "as_rotvec",
              "scipy.spatial.transform._rotation.Rotation.as_rotvec",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([0.        , 0.        , 1.57079633])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "as_euler",
              "scipy.spatial.transform._rotation.Rotation.as_euler",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "zyx",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "degrees",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "True",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([90.,  0.,  0.])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "The rotation vector corresponding to this rotation is given by:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "R",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "from_rotvec",
              "builtins.classmethod.__get__",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "pi",
              "builtins.float",
              ""
            ],
            [
              "/",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": ""
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Representation in other formats:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "as_quat",
              "scipy.spatial.transform._rotation.Rotation.as_quat",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([0.        , 0.        , 0.70710678, 0.70710678])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "as_matrix",
              "scipy.spatial.transform._rotation.Rotation.as_matrix",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[ 2.22044605e-16, -1.00000000e+00,  0.00000000e+00],\n       [ 1.00000000e+00,  2.22044605e-16,  0.00000000e+00],\n       [ 0.00000000e+00,  0.00000000e+00,  1.00000000e+00]])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "as_euler",
              "scipy.spatial.transform._rotation.Rotation.as_euler",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "zyx",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "degrees",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "True",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([90.,  0.,  0.])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "The "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "from_euler"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " method is quite flexible in the range of input formats it supports. Here we initialize a single rotation about a single axis:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "R",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "from_euler",
              "builtins.classmethod.__get__",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "z",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "90",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "degrees",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "True",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": ""
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Again, the object is representation independent and can be converted to any other format:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "as_quat",
              "scipy.spatial.transform._rotation.Rotation.as_quat",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([0.        , 0.        , 0.70710678, 0.70710678])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "as_matrix",
              "scipy.spatial.transform._rotation.Rotation.as_matrix",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[ 2.22044605e-16, -1.00000000e+00,  0.00000000e+00],\n       [ 1.00000000e+00,  2.22044605e-16,  0.00000000e+00],\n       [ 0.00000000e+00,  0.00000000e+00,  1.00000000e+00]])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "as_rotvec",
              "scipy.spatial.transform._rotation.Rotation.as_rotvec",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([0.        , 0.        , 1.57079633])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "It is also possible to initialize multiple rotations in a single instance using any of the "
              },
              "type": "Words"
            },
            {
              "data": {
                "domain": null,
                "role": null,
                "value": "from_..."
              },
              "type": "Directive"
            },
            {
              "data": {
                "value": " functions. Here we initialize a stack of 3 rotations using the "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "from_euler"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " method:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "R",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "from_euler",
              "builtins.classmethod.__get__",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "zyx",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "90",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "45",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "45",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "60",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "30",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "degrees",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "True",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": ""
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "The other representations also now return a stack of 3 rotations. For example:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "as_quat",
              "scipy.spatial.transform._rotation.Rotation.as_quat",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[0.        , 0.        , 0.70710678, 0.70710678],\n       [0.        , 0.38268343, 0.        , 0.92387953],\n       [0.39190384, 0.36042341, 0.43967974, 0.72331741]])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Applying the above rotations onto a vector:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "v",
              "builtins.list",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "r",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "apply",
              "scipy.spatial.transform._rotation.Rotation.apply",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "v",
              "builtins.list",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[-2.        ,  1.        ,  3.        ],\n       [ 2.82842712,  2.        ,  1.41421356],\n       [ 2.24452282,  0.78093109,  2.89002836]])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "A "
              },
              "type": "Words"
            },
            {
              "data": {
                "exists": true,
                "kind": "module",
                "reference": {
                  "kind": "module",
                  "module": "scipy",
                  "path": "scipy.spatial.transform._rotation.Rotation",
                  "version": "1.8.0"
                },
                "value": "Rotation"
              },
              "type": "Link"
            },
            {
              "data": {
                "value": " instance can be indexed and sliced as if it were a single 1D array or list:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "as_quat",
              "scipy.spatial.transform._rotation.Rotation.as_quat",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[0.        , 0.        , 0.70710678, 0.70710678],\n       [0.        , 0.38268343, 0.        , 0.92387953],\n       [0.39190384, 0.36042341, 0.43967974, 0.72331741]])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "p",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "r",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "p",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "as_matrix",
              "scipy.spatial.transform._rotation.Rotation.as_matrix",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[ 2.22044605e-16, -1.00000000e+00,  0.00000000e+00],\n       [ 1.00000000e+00,  2.22044605e-16,  0.00000000e+00],\n       [ 0.00000000e+00,  0.00000000e+00,  1.00000000e+00]])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "q",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "r",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "q",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "as_quat",
              "scipy.spatial.transform._rotation.Rotation.as_quat",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[0.        , 0.38268343, 0.        , 0.92387953],\n       [0.39190384, 0.36042341, 0.43967974, 0.72331741]])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "In fact it can be converted to numpy.array:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r_array",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "asarray",
              "numpy.asarray",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "r",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "r_array",
              "numpy.ndarray",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "shape",
              "numpy.ndarray.shape",
              ""
            ]
          ],
          "out": "(3,)"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r_array",
              "numpy.ndarray",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "as_matrix",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[ 2.22044605e-16, -1.00000000e+00,  0.00000000e+00],\n       [ 1.00000000e+00,  2.22044605e-16,  0.00000000e+00],\n       [ 0.00000000e+00,  0.00000000e+00,  1.00000000e+00]])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Multiple rotations can be composed using the "
              },
              "type": "Words"
            },
            {
              "data": {
                "value": [
                  "*"
                ]
              },
              "type": "Verbatim"
            },
            {
              "data": {
                "value": " operator:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r1",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "R",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "from_euler",
              "builtins.classmethod.__get__",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "z",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "90",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "degrees",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "True",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "r2",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "R",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "from_rotvec",
              "builtins.classmethod.__get__",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "pi",
              "builtins.float",
              ""
            ],
            [
              "/",
              "",
              "o"
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "v",
              "builtins.list",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "r2",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "apply",
              "scipy.spatial.transform._rotation.Rotation.apply",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "r1",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "apply",
              "scipy.spatial.transform._rotation.Rotation.apply",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "v",
              "builtins.list",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([-2.        , -1.41421356,  2.82842712])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r3",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "r2",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "r1",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "# Note the order",
              "",
              "c1"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "r3",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "apply",
              "scipy.spatial.transform._rotation.Rotation.apply",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "v",
              "builtins.list",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([-2.        , -1.41421356,  2.82842712])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "Finally, it is also possible to invert rotations:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "execed",
          "entries": [
            [
              "r1",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "R",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "from_euler",
              "builtins.classmethod.__get__",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "z",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "90",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "45",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "degrees",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "True",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "r2",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "r1",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "inv",
              "scipy.spatial.transform._rotation.Rotation.inv",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "r2",
              "scipy.spatial.transform._rotation.Rotation",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "as_euler",
              "scipy.spatial.transform._rotation.Rotation.as_euler",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "zyx",
              null,
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "degrees",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "True",
              null,
              "kc"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[-90.,   0.,   0.],\n       [-45.,   0.,   0.]])"
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "These examples serve as an overview into the "
              },
              "type": "Words"
            },
            {
              "data": {
                "exists": true,
                "kind": "module",
                "reference": {
                  "kind": "module",
                  "module": "scipy",
                  "path": "scipy.spatial.transform._rotation.Rotation",
                  "version": "1.8.0"
                },
                "value": "Rotation"
              },
              "type": "Link"
            },
            {
              "data": {
                "value": " class and highlight major functionalities. For more thorough examples of the range of input and output formats supported, consult the individual method's examples."
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      }
    ],
    "title": null
  },
  "item_file": "/scipy/spatial/transform/_rotation.cpython-39-darwin.so",
  "item_line": null,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Attributes",
    "Methods",
    "See Also",
    "Notes",
    "Examples"
  ],
  "references": null,
  "refs": [
    "Slerp",
    "builtins.classmethod.__get__",
    "builtins.float",
    "builtins.list",
    "numpy",
    "numpy.array",
    "numpy.asarray",
    "numpy.ndarray",
    "numpy.ndarray.shape",
    "numpy.ufunc",
    "scipy",
    "scipy.spatial",
    "scipy.spatial.transform",
    "scipy.spatial.transform._rotation.Rotation",
    "scipy.spatial.transform._rotation.Rotation.apply",
    "scipy.spatial.transform._rotation.Rotation.as_euler",
    "scipy.spatial.transform._rotation.Rotation.as_matrix",
    "scipy.spatial.transform._rotation.Rotation.as_quat",
    "scipy.spatial.transform._rotation.Rotation.as_rotvec",
    "scipy.spatial.transform._rotation.Rotation.inv"
  ],
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "name": "Slerp",
        "ref": "scipy.spatial.transform._rotation.Slerp"
      },
      "type": null
    }
  ],
  "signature": {
    "value": null
  }
}