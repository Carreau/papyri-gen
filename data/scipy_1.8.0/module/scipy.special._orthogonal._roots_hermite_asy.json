{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Computes the sample points and weights for Gauss-Hermite quadrature. The sample points are the roots of the nth degree Hermite polynomial, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "H_n(x)"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": ". These sample points and weights correctly integrate polynomials of degree "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "2n - 1"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " or less over the interval "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "[-\\infty, \\infty]"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " with weight function "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "f(x) = e^{-x^2}"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This method relies on asymptotic expansions which work best for n > 150. The algorithm has linear runtime making computation for very large n feasible."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "quadrature order"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "n",
                "type_": "int"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Quadrature nodes"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "nodes",
                "type_": "ndarray"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Quadrature weights"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "weights",
                "type_": "ndarray"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Gauss-Hermite (physicist's) quadrature for large n."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "scipy.signal._filter_design.special._orthogonal._roots_hermite_asy"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/scipy/special/_orthogonal.py",
  "item_line": 1188,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "References"
  ],
  "references": null,
  "refs": [
    "roots_hermite"
  ],
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "scipy",
          "path": "scipy.special._orthogonal.roots_hermite",
          "version": "1.8.0"
        },
        "value": "roots_hermite"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "_roots_hermite_asy(n)"
  }
}