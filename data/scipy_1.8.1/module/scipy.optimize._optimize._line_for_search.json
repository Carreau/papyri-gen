{
  "aliases": [
    "scipy.signal._filter_design.optimize._optimize._line_for_search"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The vector representing the current location. Note "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "np.shape(x0) == (n,)"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "x0",
                "type_": "np.array."
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The vector representing the direction. Note "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "np.shape(alpha) == (n,)"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "alpha",
                "type_": "np.array."
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The lower bounds for each parameter in "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "x0"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". If the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "i``th\nparameter in ``x0"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " is unbounded below, then "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "lower_bound[i]"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " should be "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "-np.inf"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". Note "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "np.shape(lower_bound) == (n,)"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "lower_bound",
                "type_": "np.array."
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The upper bounds for each parameter in "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "x0"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". If the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "i``th\nparameter in ``x0"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " is unbounded above, then "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "upper_bound[i]"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " should be "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "np.inf"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". Note "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "np.shape(upper_bound) == (n,)"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "upper_bound",
                "type_": "np.array."
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [],
                "param": "res",
                "type_": "tuple ``(lmin, lmax)``"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Given a parameter vector "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "x0"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " with length "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "n"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " and a direction vector "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "alpha"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " with length "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "n"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", and lower and upper bounds on each of the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "n"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " parameters, what are the bounds on a scalar "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "l"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " such that "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "lower_bound <= x0 + alpha * l <= upper_bound"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/scipy/optimize/_optimize.py",
  "item_line": 2831,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "_line_for_search(x0, alpha, lower_bound, upper_bound)"
  }
}