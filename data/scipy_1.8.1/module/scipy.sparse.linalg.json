{
  "aliases": [
    "scipy.signal._filter_design.optimize._differentiable_functions.sps.linalg"
  ],
  "arbitrary": [
    {
      "children": [
        {
          "data": {
            "argument": "scipy.sparse.linalg",
            "content": "",
            "name": "currentmodule",
            "options": []
          },
          "type": "BlockDirective"
        }
      ],
      "level": 0,
      "target": null,
      "title": "Sparse linear algebra (:mod:`scipy.sparse.linalg`)"
    },
    {
      "children": [
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    LinearOperator -- abstract representation of a linear operator\n    aslinearoperator -- convert an object to an abstract linear operator"
          },
          "type": "BlockVerbatim"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Abstract linear operators"
    },
    {
      "children": [
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    inv -- compute the sparse matrix inverse\n    expm -- compute the sparse matrix exponential\n    expm_multiply -- compute the product of a matrix exponential and a matrix"
          },
          "type": "BlockVerbatim"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Matrix Operations"
    },
    {
      "children": [
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    norm -- Norm of a sparse matrix\n    onenormest -- Estimate the 1-norm of a sparse matrix"
          },
          "type": "BlockVerbatim"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Matrix norms"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Direct methods for linear equation systems:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    spsolve -- Solve the sparse linear system Ax=b\n    spsolve_triangular -- Solve the sparse linear system Ax=b for a triangular matrix\n    factorized -- Pre-factorize matrix to a function solving a linear system\n    MatrixRankWarning -- Warning on exactly singular matrices\n    use_solver -- Select direct solver to use"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Iterative methods for linear equation systems:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    bicg -- Use BIConjugate Gradient iteration to solve A x = b\n    bicgstab -- Use BIConjugate Gradient STABilized iteration to solve A x = b\n    cg -- Use Conjugate Gradient iteration to solve A x = b\n    cgs -- Use Conjugate Gradient Squared iteration to solve A x = b\n    gmres -- Use Generalized Minimal RESidual iteration to solve A x = b\n    lgmres -- Solve a matrix equation using the LGMRES algorithm\n    minres -- Use MINimum RESidual iteration to solve Ax = b\n    qmr -- Use Quasi-Minimal Residual iteration to solve A x = b\n    gcrotmk -- Solve a matrix equation using the GCROT(m,k) algorithm\n    tfqmr -- Use Transpose-Free Quasi-Minimal Residual iteration to solve A x = b"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Iterative methods for least-squares problems:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    lsqr -- Find the least-squares solution to a sparse linear equation system\n    lsmr -- Find the least-squares solution to a sparse linear equation system"
          },
          "type": "BlockVerbatim"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Solving linear problems"
    },
    {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Eigenvalue problems:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    eigs -- Find k eigenvalues and eigenvectors of the square matrix A\n    eigsh -- Find k eigenvalues and eigenvectors of a symmetric matrix\n    lobpcg -- Solve symmetric partial eigenproblems with optional preconditioning"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Singular values problems:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    svds -- Compute k singular values/vectors for a sparse matrix"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "scipy",
                    "path": "scipy.sparse.linalg._eigen._svds.svds",
                    "version": "1.8.1"
                  },
                  "value": "svds"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " function supports the following solvers:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "exists",
                            "reference": {
                              "kind": "?",
                              "module": "",
                              "path": "sparse.linalg.svds-arpack",
                              "version": ""
                            },
                            "value": "sparse.linalg.svds-arpack"
                          },
                          "type": "Link"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "exists",
                            "reference": {
                              "kind": "?",
                              "module": "",
                              "path": "sparse.linalg.svds-lobpcg",
                              "version": ""
                            },
                            "value": "sparse.linalg.svds-lobpcg"
                          },
                          "type": "Link"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              },
              {
                "children": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "exists",
                            "reference": {
                              "kind": "?",
                              "module": "",
                              "path": "sparse.linalg.svds-propack",
                              "version": ""
                            },
                            "value": "sparse.linalg.svds-propack"
                          },
                          "type": "Link"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ]
              }
            ]
          },
          "type": "BulletList"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Complete or incomplete LU factorizations"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    splu -- Compute a LU decomposition for a sparse matrix\n    spilu -- Compute an incomplete LU decomposition for a sparse matrix\n    SuperLU -- Object representing an LU factorization"
          },
          "type": "BlockVerbatim"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Matrix factorizations"
    },
    {
      "children": [
        {
          "data": {
            "value": ".. autosummary:: \n    :toctree:generated/\n    ArpackNoConvergence\n    ArpackError"
          },
          "type": "BlockVerbatim"
        }
      ],
      "level": 1,
      "target": null,
      "title": "Exceptions"
    }
  ],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "To remove in the future \u2013\u2013 scipy.sparse.linalg"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/scipy/sparse/linalg/__init__.py",
  "item_line": 0,
  "item_type": "<class 'module'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}