{
  "aliases": [
    "skimage.transform._geometric.safe_as_int"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This operation calculates "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "val"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " modulo 1, which returns the mantissa of all values. Then all mantissas greater than 0.5 are subtracted from one. Finally, the absolute tolerance from zero is calculated. If it is less than "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "atol"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for all value(s) in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "val"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", they are rounded and returned in an integer array. Or, if "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "val"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " was a scalar, a NumPy scalar type is returned."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If any value(s) are outside the specified tolerance, an informative error is raised."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Number or container of numbers which are intended to be interpreted as integers, e.g., for indexing purposes, but which may not carry integer type."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "val",
                "type_": "scalar or iterable of scalars"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Absolute tolerance away from nearest integer to consider values in "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "val"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " functionally integers."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "atol",
                "type_": "float"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Returns the input value(s) coerced to dtype "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "np.int64"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " assuming all were within "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "atol"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " of the nearest integer."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "val_int",
                "type_": "NumPy scalar or ndarray of dtype `np.int64`"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Attempt to safely cast values to integer format."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "skimage",
                    "path": "skimage._shared.utils.safe_as_int",
                    "version": "0.17.2"
                  },
                  "value": "safe_as_int"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "7.0",
                "type": "str"
              },
              "type": "mf"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "7"
        },
        "type": "Code2"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "skimage",
                    "path": "skimage._shared.utils.safe_as_int",
                    "version": "0.17.2"
                  },
                  "value": "safe_as_int"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "[",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "9",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "4",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "2.9999999999",
                "type": "str"
              },
              "type": "mf"
            },
            {
              "link": {
                "data": "]",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "array([9, 4, 3])"
        },
        "type": "Code2"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "skimage",
                    "path": "skimage._shared.utils.safe_as_int",
                    "version": "0.17.2"
                  },
                  "value": "safe_as_int"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "53.1",
                "type": "str"
              },
              "type": "mf"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "Traceback (most recent call last):\n    ...\nValueError: Integer argument required but received 53.1, check inputs."
        },
        "type": "Code2"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "skimage",
                    "path": "skimage._shared.utils.safe_as_int",
                    "version": "0.17.2"
                  },
                  "value": "safe_as_int"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "53.01",
                "type": "str"
              },
              "type": "mf"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "atol",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "0.01",
                "type": "str"
              },
              "type": "mf"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "53"
        },
        "type": "Code2"
      }
    ],
    "title": null
  },
  "item_file": "/skimage/_shared/utils.py",
  "item_line": 182,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "safe_as_int(val, atol=0.001)"
  }
}