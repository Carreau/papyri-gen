{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "This operation calculates "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "val"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " modulo 1, which returns the mantissa of all values. Then all mantissas greater than 0.5 are subtracted from one. Finally, the absolute tolerance from zero is calculated. If it is less than "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "atol"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " for all value(s) in "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "val"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", they are rounded and returned in an integer array. Or, if "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "val"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " was a scalar, a NumPy scalar type is returned."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "If any value(s) are outside the specified tolerance, an informative error is raised."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Number or container of numbers which are intended to be interpreted as integers, e.g., for indexing purposes, but which may not carry integer type."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "val",
            "type_": "scalar or iterable of scalars"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Absolute tolerance away from nearest integer to consider values in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "val"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " functionally integers."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "atol",
            "type_": "float"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Returns the input value(s) coerced to dtype "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "np.int64"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " assuming all were within "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "atol"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " of the nearest integer."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "val_int",
            "type_": "NumPy scalar or ndarray of dtype `np.int64`"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Attempt to safely cast values to integer format."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "skimage.transform._geometric.safe_as_int"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "safe_as_int",
              "skimage._shared.utils.safe_as_int",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "7.0",
              "",
              "mf"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "7"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "safe_as_int",
              "skimage._shared.utils.safe_as_int",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "9",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "4",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2.9999999999",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([9, 4, 3])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "safe_as_int",
              "skimage._shared.utils.safe_as_int",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "53.1",
              "",
              "mf"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "Traceback (most recent call last):\n    ...\nValueError: Integer argument required but received 53.1, check inputs."
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "safe_as_int",
              "skimage._shared.utils.safe_as_int",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "53.01",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "atol",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "0.01",
              "",
              "mf"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "53"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/skimage/_shared/utils.py",
  "item_line": 182,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "Examples"
  ],
  "references": null,
  "refs": [
    "skimage._shared.utils.safe_as_int"
  ],
  "see_also": [],
  "signature": {
    "value": "safe_as_int(val, atol=0.001)"
  }
}