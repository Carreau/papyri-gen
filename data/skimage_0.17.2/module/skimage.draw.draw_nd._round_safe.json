{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "When rounding coordinates for "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "skimage",
                    "path": "skimage.draw.draw_nd.line_nd",
                    "version": "0.17.2"
                  },
                  "value": "line_nd"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ", we want coordinates that are less than 1 apart (always the case, by design) to remain less than one apart. However, NumPy rounds values to the nearest "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "even"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " integer, so:"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ">>> np.round([0.5, 1.5, 2.5, 3.5, 4.5])\narray([0., 2., 2., 4., 4.])"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "So, for our application, we detect whether the above case occurs, and use "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "np.floor"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " if so. It is sufficient to detect that the first coordinate falls on 0.5 and that the second coordinate is 1.0 apart, since we assume by construction that the inter-point distance is less than or equal to 1 and that all successive points are equidistant."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The coordinates array. We assume that all successive values are equidistant ("
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "np.all(np.diff(coords) = coords[1] - coords[0])"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ") and that this distance is no more than 1 ("
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "np.abs(coords[1] - coords[0]) <= 1"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ")."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "coords",
            "type_": "1D array of float"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The array correctly rounded for an indexing operation, such that no successive indices will be more than 1 apart."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "rounded",
            "type_": "1D array of int"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Round coords while ensuring successive values are less than 1 apart."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "skimage.draw.draw_nd._round_safe"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "coords0",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "array",
              "numpy.array",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0.5",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1.25",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2.",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2.75",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "3.5",
              "",
              "mf"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "_round_safe",
              "skimage.draw.draw_nd._round_safe",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "coords0",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([0, 1, 2, 3, 4])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "coords1",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "arange",
              "numpy.arange",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "0.5",
              "",
              "mf"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "8",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "coords1",
              "numpy.ndarray",
              ""
            ]
          ],
          "out": "array([0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "_round_safe",
              "skimage.draw.draw_nd._round_safe",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "coords1",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([0, 1, 2, 3, 4, 5, 6, 7])"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/skimage/draw/draw_nd.py",
  "item_line": 4,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "references": null,
  "refs": [
    "numpy",
    "numpy.arange",
    "numpy.array",
    "numpy.ndarray",
    "skimage.draw.draw_nd._round_safe"
  ],
  "see_also": [],
  "signature": {
    "value": "_round_safe(coords)"
  }
}