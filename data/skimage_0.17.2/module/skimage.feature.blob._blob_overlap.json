{
  "aliases": [
    "skimage.feature.blob._blob_overlap"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Returns a float representing fraction of overlapped area. Note that 0.0 is "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "always"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " returned for dimension greater than 3."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A sequence of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "(row, col, sigma)"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "(pln, row, col, sigma)"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", where "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "row, col"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " (or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "(pln, row, col)"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ") are coordinates of blob and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "sigma"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " is the standard deviation of the Gaussian kernel which detected the blob."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "blob1",
                "type_": "sequence of arrays"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A sequence of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "(row, col, sigma)"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "(pln, row, col, sigma)"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ", where "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "row, col"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " (or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "(pln, row, col)"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ") are coordinates of blob and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "sigma"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " is the standard deviation of the Gaussian kernel which detected the blob."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "blob2",
                "type_": "sequence of arrays"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The dimensionality of the sigma value. Can be 1 or the same as the dimensionality of the blob space (2 or 3)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "sigma_dim",
                "type_": "int, optional"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Fraction of overlapped area (or volume in 3D)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "f",
                "type_": "float"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Finds the overlapping area fraction between two blobs."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "title": null
  },
  "item_file": "/skimage/feature/blob.py",
  "item_line": 84,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "_blob_overlap(blob1, blob2, *, sigma_dim=1)"
  }
}