{
  "aliases": [
    "skimage.feature.blob_dog"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Blobs are found using the Difference of Gaussian (DoG) method . For each blob found, the method returns its coordinates and the standard deviation of the Gaussian kernel that detected the blob."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The radius of each blob is approximately "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "\\sqrt{2}\\sigma"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " for a 2-D image and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": "\\sqrt{3}\\sigma"
                },
                "type": "Math"
              },
              {
                "data": {
                  "value": " for a 3-D image."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Input grayscale image, blobs are assumed to be light on dark background (white on black)."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "image",
                "type_": "2D or 3D ndarray"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The minimum standard deviation for Gaussian kernel. Keep this low to detect smaller blobs. The standard deviations of the Gaussian filter are given for each axis as a sequence, or as a single number, in which case it is equal for all axes."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "min_sigma",
                "type_": "scalar or sequence of scalars, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The maximum standard deviation for Gaussian kernel. Keep this high to detect larger blobs. The standard deviations of the Gaussian filter are given for each axis as a sequence, or as a single number, in which case it is equal for all axes."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "max_sigma",
                "type_": "scalar or sequence of scalars, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The ratio between the standard deviation of Gaussian Kernels used for computing the Difference of Gaussians"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "sigma_ratio",
                "type_": "float, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The absolute lower bound for scale space maxima. Local maxima smaller than thresh are ignored. Reduce this to detect blobs with less intensities."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "threshold",
                "type_": "float, optional."
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A value between 0 and 1. If the area of two blobs overlaps by a fraction greater than "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "skimage",
                              "path": "skimage.filters.rank.generic.threshold",
                              "version": "0.17.2"
                            },
                            "value": "threshold"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ", the smaller blob is eliminated."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "overlap",
                "type_": "float, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If tuple of ints, the length of the tuple must match the input array's dimensionality.  Each element of the tuple will exclude peaks from within "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "exclude_border"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": "-pixels of the border of the image along that dimension. If nonzero int, "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "exclude_border"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " excludes peaks from within "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "exclude_border"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": "-pixels of the border of the image. If zero or False, peaks are identified regardless of their distance from the border."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "exclude_border",
                "type_": "tuple of ints, int, or False, optional"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A 2d array with each row representing 2 coordinate values for a 2D image, and 3 coordinate values for a 3D image, plus the sigma(s) used. When a single sigma is passed, outputs are: "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "(r, c, sigma)"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "(p, r, c, sigma)"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " where "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "(r, c)"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "(p, r, c)"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " are coordinates of the blob and "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "sigma"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " is the standard deviation of the Gaussian kernel which detected the blob. When an anisotropic gaussian is used (sigmas per dimension), the detected sigma is returned for each dimension."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "A",
                "type_": "(n, image.ndim + sigma) ndarray"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Finds blobs in the given grayscale image."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            {
              "link": {
                "data": "from",
                "type": "str"
              },
              "type": "kn"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "skimage",
                    "path": "skimage",
                    "version": "0.17.2"
                  },
                  "value": "skimage"
                },
                "type": "Link"
              },
              "type": "nn"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "import",
                "type": "str"
              },
              "type": "kn"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "skimage",
                    "path": "skimage.data",
                    "version": "0.17.2"
                  },
                  "value": "data"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "skimage",
                    "path": "skimage.feature",
                    "version": "0.17.2"
                  },
                  "value": "feature"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "skimage",
                    "path": "skimage.feature",
                    "version": "0.17.2"
                  },
                  "value": "feature"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "skimage",
                    "path": "skimage.feature.blob.blob_dog",
                    "version": "0.17.2"
                  },
                  "value": "blob_dog"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "skimage",
                    "path": "skimage.data",
                    "version": "0.17.2"
                  },
                  "value": "data"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": {
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "skimage",
                    "path": "skimage.data.coins",
                    "version": "0.17.2"
                  },
                  "value": "coins"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "threshold",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": ".5",
                "type": "str"
              },
              "type": "mf"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "max_sigma",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "40",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "array([[120.      , 272.      ,  16.777216],\n       [193.      , 213.      ,  16.777216],\n       [263.      , 245.      ,  16.777216],\n       [185.      , 347.      ,  16.777216],\n       [128.      , 154.      ,  10.48576 ],\n       [198.      , 155.      ,  10.48576 ],\n       [124.      , 337.      ,  10.48576 ],\n       [ 45.      , 336.      ,  16.777216],\n       [195.      , 102.      ,  16.777216],\n       [125.      ,  45.      ,  16.777216],\n       [261.      , 173.      ,  16.777216],\n       [194.      , 277.      ,  16.777216],\n       [127.      , 102.      ,  10.48576 ],\n       [125.      , 208.      ,  10.48576 ],\n       [267.      , 115.      ,  10.48576 ],\n       [263.      , 302.      ,  16.777216],\n       [196.      ,  43.      ,  10.48576 ],\n       [260.      ,  46.      ,  16.777216],\n       [267.      , 359.      ,  16.777216],\n       [ 54.      , 276.      ,  10.48576 ],\n       [ 58.      , 100.      ,  10.48576 ],\n       [ 52.      , 155.      ,  16.777216],\n       [ 52.      , 216.      ,  16.777216],\n       [ 54.      ,  42.      ,  16.777216]])"
        },
        "type": "Code2"
      }
    ],
    "title": null
  },
  "item_file": "/skimage/feature/blob.py",
  "item_line": 215,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "References",
    "Examples",
    "Notes"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "skimage",
          "path": "skimage.filters._gaussian.difference_of_gaussians",
          "version": "0.17.2"
        },
        "value": "skimage.filters.difference_of_gaussians"
      },
      "type": null
    }
  ],
  "signature": {
    "value": "blob_dog(image, min_sigma=1, max_sigma=50, sigma_ratio=1.6, threshold=2.0, overlap=0.5, *, exclude_border=False)"
  }
}