{
  "_content": {
    "Attributes": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Keypoint coordinates as "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "(row, col)"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "keypoints",
            "type_": "(N, 2) array"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Corresponding scales."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "scales",
            "type_": "(N, ) array"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Corresponding orientations in radians."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "orientations",
            "type_": "(N, ) array"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Corresponding Harris corner responses."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "responses",
            "type_": "(N, ) array"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "2D array of binary descriptors of size "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "descriptor_size"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " for Q keypoints after filtering out border keypoints with value at an index "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "(i, j)"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " either being "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "True"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " or "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "False"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " representing the outcome of the intensity comparison for i-th keypoint on j-th decision pixel-pair. It is "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "Q == np.sum(mask)"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "descriptors",
            "type_": "(Q, `descriptor_size`) array of dtype bool"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Number of keypoints to be returned. The function will return the best "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "n_keypoints",
                          "version": null
                        },
                        "value": "n_keypoints"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " according to the Harris corner response if more than "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "n_keypoints",
                          "version": null
                        },
                        "value": "n_keypoints"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " are detected. If not, then all the detected keypoints are returned."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "n_keypoints",
            "type_": "int, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "n"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " parameter in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "api",
                          "module": "skimage",
                          "path": "skimage.feature.corner.corner_fast",
                          "version": "*"
                        },
                        "value": "skimage.feature.corner_fast"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ". Minimum number of consecutive pixels out of 16 pixels on the circle that should all be either brighter or darker w.r.t test-pixel. A point c on the circle is darker w.r.t test pixel p if "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "Ic < Ip - threshold"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " and brighter if "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "Ic > Ip + threshold"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ". Also stands for the n in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "FAST-n"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " corner detector."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "fast_n",
            "type_": "int, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "threshold"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " parameter in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "feature.corner_fast"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ". Threshold used to decide whether the pixels on the circle are brighter, darker or similar w.r.t. the test pixel. Decrease the threshold when more corners are desired and vice-versa."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "fast_threshold",
            "type_": "float, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "k"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " parameter in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "api",
                          "module": "skimage",
                          "path": "skimage.feature.corner.corner_harris",
                          "version": "*"
                        },
                        "value": "skimage.feature.corner_harris"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ". Sensitivity factor to separate corners from edges, typically in range "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "[0, 0.2]"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ". Small values of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "k"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": " result in detection of sharp corners."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "harris_k",
            "type_": "float, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Downscale factor for the image pyramid. Default value 1.2 is chosen so that there are more dense scales which enable robust scale invariance for a subsequent feature description."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "downscale",
            "type_": "float, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Maximum number of scales from the bottom of the image pyramid to extract the features from."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "n_scales",
            "type_": "int, optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Oriented FAST and rotated BRIEF feature detector and binary descriptor extractor."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "skimage.feature.ORB"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "skimage",
              "skimage",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "feature",
              "skimage.feature",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "ORB",
              "skimage.feature.orb.ORB",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "match_descriptors",
              "skimage.feature.match.match_descriptors",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "img1",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "zeros",
              "numpy.zeros",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "100",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "100",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "img2",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "zeros_like",
              "numpy.zeros_like",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "img1",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "numpy.random",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "seed",
              "builtins.RandomState.seed",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "square",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "numpy.random",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "rand",
              "builtins.RandomState.rand",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "20",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "20",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "img1",
              "numpy.ndarray",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "40",
              "",
              "mi"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "60",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "40",
              "",
              "mi"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "60",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "square",
              null,
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "img2",
              "numpy.ndarray",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "53",
              "",
              "mi"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "73",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "53",
              "",
              "mi"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "73",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "square",
              null,
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "detector_extractor1",
              "skimage.feature.orb.ORB",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "ORB",
              "skimage.feature.orb.ORB",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "n_keypoints",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "detector_extractor2",
              "skimage.feature.orb.ORB",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "ORB",
              "skimage.feature.orb.ORB",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "n_keypoints",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "5",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "detector_extractor1",
              "skimage.feature.orb.ORB",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "detect_and_extract",
              "skimage.feature.orb.ORB.detect_and_extract",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "img1",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "detector_extractor2",
              "skimage.feature.orb.ORB",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "detect_and_extract",
              "skimage.feature.orb.ORB.detect_and_extract",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "img2",
              "numpy.ndarray",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "matches",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "match_descriptors",
              "skimage.feature.match.match_descriptors",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "detector_extractor1",
              "skimage.feature.orb.ORB",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "descriptors",
              "builtins.NoneType",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "                            ",
              "",
              ""
            ],
            [
              "detector_extractor2",
              "skimage.feature.orb.ORB",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "descriptors",
              "builtins.NoneType",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "matches",
              null,
              ""
            ]
          ],
          "out": "array([[0, 0],\n       [1, 1],\n       [2, 2],\n       [3, 3],\n       [4, 4]])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "detector_extractor1",
              "skimage.feature.orb.ORB",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "keypoints",
              "builtins.NoneType",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "matches",
              null,
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ]
          ],
          "out": "array([[42., 40.],\n       [47., 58.],\n       [44., 40.],\n       [59., 42.],\n       [45., 44.]])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "detector_extractor2",
              "skimage.feature.orb.ORB",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "keypoints",
              "builtins.NoneType",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "matches",
              null,
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "]",
              "",
              ""
            ]
          ],
          "out": "array([[55., 53.],\n       [60., 71.],\n       [57., 53.],\n       [72., 55.],\n       [58., 57.]])"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/skimage/feature/orb.py",
  "item_line": 22,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Attributes",
    "References",
    "Examples"
  ],
  "references": null,
  "refs": [
    "builtins.NoneType",
    "builtins.RandomState.rand",
    "builtins.RandomState.seed",
    "numpy",
    "numpy.ndarray",
    "numpy.random",
    "numpy.zeros",
    "numpy.zeros_like",
    "skimage",
    "skimage.feature",
    "skimage.feature.match.match_descriptors",
    "skimage.feature.orb.ORB",
    "skimage.feature.orb.ORB.detect_and_extract"
  ],
  "see_also": [],
  "signature": {
    "value": null
  }
}