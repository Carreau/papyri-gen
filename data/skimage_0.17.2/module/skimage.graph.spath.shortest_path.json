{
  "aliases": [
    "skimage.graph.shortest_path"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [],
                "param": "arr",
                "type_": "ndarray of float64"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "By default ("
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "reach = 1"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "), the shortest path can only move one row up or down for every step it moves forward (i.e., the path gradient is limited to 1). "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "reach"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " defines the number of elements that can be skipped along each non-axis dimension at each step."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "reach",
                "type_": "int, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The axis along which the path must always move forward (default -1)"
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "axis",
                "type_": "int, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "See return value "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "p",
                              "version": null
                            },
                            "value": "p"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " for explanation."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "output_indexlist",
                "type_": "bool, optional"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "For each step along "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "axis"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ", the coordinate of the shortest path. If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "output_indexlist"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " is True, then the path is returned as a list of n-d tuples that index into "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "arr"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ". If False, then the path is returned as an array listing the coordinates of the path along the non-axis dimensions for each step along the axis dimension. That is, "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "p.shape == (arr.shape[axis], arr.ndim-1)"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " except that p is squeezed before returning so if "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "arr.ndim == 2"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ", then "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "p.shape == (arr.shape[axis],)"
                          },
                          "type": "Directive"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "p",
                "type_": "iterable of int"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Cost of path.  This is the absolute sum of all the differences along the path."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "cost",
                "type_": "float"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Find the shortest path through an n-d array from one side to another."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/skimage/graph/spath.py",
  "item_line": 5,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "shortest_path(arr, reach=1, axis=-1, output_indexlist=False)"
  }
}