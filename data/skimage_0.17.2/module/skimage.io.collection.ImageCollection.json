{
  "_content": {
    "Attributes": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If a pattern string is given for "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "load_pattern",
                          "version": null
                        },
                        "value": "load_pattern"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ", this attribute stores the expanded file list. Otherwise, this is equal to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "load_pattern",
                          "version": null
                        },
                        "value": "load_pattern"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "files",
            "type_": "list of str"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Note that files are always returned in alphanumerical order. Also note that slicing returns a new ImageCollection, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": {
                    "value": "not"
                  }
                },
                "type": "Emph"
              },
              {
                "data": {
                  "value": " a view into the data."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "ImageCollection can be modified to load images from an arbitrary source by specifying a combination of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "load_pattern",
                    "version": null
                  },
                  "value": "load_pattern"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "load_func",
                    "version": null
                  },
                  "value": "load_func"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ".  For an ImageCollection "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ic"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "ic[5]"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " uses "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "load_func(file_pattern[5])"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " to load the image."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Imagine, for example, an ImageCollection that loads every tenth frame from a video file::    "
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "class AVILoader:\n    video_file = 'myvideo.avi'\n\n    def __call__(self, frame):\n        return video_read(self.video_file, frame)\n\navi_load = AVILoader()\n\nframes = range(0, 1000, 10) # 0, 10, 20, ...\nic = ImageCollection(frames, load_func=avi_load)\n\nx = ic[5] # calls avi_load(frames[5]) or equivalently avi_load(50)"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Another use of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "load_func"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " would be to convert all images to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "uint8"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "    "
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": "def imread_convert(f):\n    return imread(f).astype(np.uint8)\n\nic = ImageCollection('/tmp/*.png', load_func=imread_convert)"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "For files with multiple images, the images will be flattened into a list and added to the list of available images.  In this case, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "load_func"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " should accept the keyword argument "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "img_num"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": [
                          "imread"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " by default. See notes below."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "load_func",
            "type_": "callable"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Pattern string or list of strings to load. The filename path can be absolute or relative."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "load_pattern",
            "type_": "str or list of str"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If True, "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "module",
                        "reference": {
                          "kind": "module",
                          "module": "skimage",
                          "path": "skimage.io.collection.ImageCollection",
                          "version": "0.17.2"
                        },
                        "value": "ImageCollection"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " does not keep more than one in memory at a specific time. Otherwise, images will be cached once they are loaded."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "conserve_memory",
            "type_": "bool, optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Load and manage a collection of image files."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "skimage.io.ImageCollection"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "skimage",
              "skimage",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "io",
              "skimage.io",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "as",
              null,
              "k"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "io",
              "skimage.io",
              "nn"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "skimage",
              "skimage",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "data_dir",
              "builtins.str",
              ""
            ]
          ],
          "out": ""
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "coll",
              "skimage.io.collection.ImageCollection",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "io",
              "skimage.io",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "ImageCollection",
              "skimage.io.collection.ImageCollection",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "data_dir",
              "builtins.str",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "+",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "/chess*.png",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "len",
              "builtins.len",
              "nb"
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "coll",
              "skimage.io.collection.ImageCollection",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "2"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "coll",
              "skimage.io.collection.ImageCollection",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "shape",
              "numpy.ndarray.shape",
              ""
            ]
          ],
          "out": "(200, 200)"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "ic",
              "skimage.io.collection.ImageCollection",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "io",
              "skimage.io",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "ImageCollection",
              "skimage.io.collection.ImageCollection",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "/tmp/work/*.png",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "/tmp/other/*.jpg",
              "",
              "s1"
            ],
            [
              "'",
              "",
              "s1"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": ""
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/skimage/io/collection.py",
  "item_line": 98,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Other Parameters",
    "Attributes",
    "Notes",
    "Examples"
  ],
  "references": null,
  "refs": [
    "builtins.len",
    "builtins.str",
    "numpy.ndarray.shape",
    "skimage",
    "skimage.io",
    "skimage.io.collection.ImageCollection"
  ],
  "see_also": [],
  "signature": {
    "value": null
  }
}