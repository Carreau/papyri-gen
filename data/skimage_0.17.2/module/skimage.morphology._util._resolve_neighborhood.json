{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Depending on the values of "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "connectivity",
                    "version": null
                  },
                  "value": "connectivity"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " and "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "selem",
                    "version": null
                  },
                  "value": "selem"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " this function either creates a new structuring element ("
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "selem",
                    "version": null
                  },
                  "value": "selem"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is None) using "
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "connectivity",
                    "version": null
                  },
                  "value": "connectivity"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " or validates the given structuring element ("
                },
                "type": "Words"
              },
              {
                "data": {
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "selem",
                    "version": null
                  },
                  "value": "selem"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " is not None)."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "A structuring element used to determine the neighborhood of each evaluated pixel ("
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "True"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " denotes a connected pixel). It must be a boolean array and have the same number of dimensions as "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "image"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": ". If neither "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "selem",
                          "version": null
                        },
                        "value": "selem"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " nor "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "connectivity",
                          "version": null
                        },
                        "value": "connectivity"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " are given, all adjacent pixels are considered as part of the neighborhood."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "selem",
            "type_": "ndarray"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "A number used to determine the neighborhood of each evaluated pixel. Adjacent pixels whose squared distance from the center is less than or equal to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "connectivity",
                          "version": null
                        },
                        "value": "connectivity"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " are considered neighbors. Ignored if "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "selem",
                          "version": null
                        },
                        "value": "selem"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " is not None."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "connectivity",
            "type_": "int"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Number of dimensions "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "selem",
                          "version": null
                        },
                        "value": "selem"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " ought to have."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "ndim",
            "type_": "int"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Validated or new structuring element specifying the neighborhood."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "selem",
            "type_": "ndarray"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Validate or create structuring element."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "skimage.morphology._flood_fill._resolve_neighborhood"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "_resolve_neighborhood",
              "skimage.morphology._util._resolve_neighborhood",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "None",
              null,
              "kc"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "1",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": "array([[False,  True, False],\n       [ True,  True,  True],\n       [False,  True, False]])"
        },
        "type": "Code"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "_resolve_neighborhood",
              "skimage.morphology._util._resolve_neighborhood",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "None",
              null,
              "kc"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "None",
              null,
              "kc"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "shape",
              "numpy.ndarray.shape",
              ""
            ]
          ],
          "out": "(3, 3, 3)"
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/skimage/morphology/_util.py",
  "item_line": 129,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "references": null,
  "refs": [
    "numpy.ndarray.shape",
    "skimage.morphology._util._resolve_neighborhood"
  ],
  "see_also": [],
  "signature": {
    "value": "_resolve_neighborhood(selem, connectivity, ndim)"
  }
}