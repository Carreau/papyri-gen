{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The convex hull is the set of pixels included in the smallest convex polygon that surround all white pixels in the input image."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "This function uses "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "skimage.morphology.label"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " to define unique objects, finds the convex hull of each using "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "convex_hull_image"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ", and combines these regions with logical OR. Be aware the convex hulls of unconnected objects may overlap in the result. If this is suspected, consider using convex_hull_image separately on each object or adjust "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "connectivity"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": "."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Binary input image."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "image",
            "type_": "(M, N) ndarray"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Whether to use 4 or 8 adjacent pixels as neighbors. If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "None"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", set to 8. "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "content": {
                          "value": "Deprecated, use"
                        }
                      },
                      "type": "Strong"
                    },
                    {
                      "data": {
                        "value": " "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "connectivity"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "content": {
                          "value": "instead."
                        }
                      },
                      "type": "Strong"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "neighbors",
            "type_": "{4, 8}, int, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Determines the neighbors of each pixel. Adjacent elements within a squared distance of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "connectivity"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " from pixel center are considered neighbors. If "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "None"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", set to 2::      "
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "value": "1-connectivity      2-connectivity\n      [ ]           [ ]  [ ]  [ ]\n       |               \\  |  /\n [ ]--[x]--[ ]      [ ]--[x]--[ ]\n       |               /  |  \\\n      [ ]           [ ]  [ ]  [ ]"
                },
                "type": "BlockVerbatim"
              }
            ],
            "param": "connectivity",
            "type_": "{1, 2}, int, optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Binary image with pixels inside convex hull set to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "True"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "hull",
            "type_": "ndarray of bool"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Compute the convex hull image of individual objects in a binary image."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "skimage.morphology.convex_hull_object"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/skimage/morphology/convex_hull.py",
  "item_line": 96,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes"
  ],
  "references": null,
  "refs": [],
  "see_also": [],
  "signature": {
    "value": "convex_hull_object(image, neighbors=None, *, connectivity=None)"
  }
}