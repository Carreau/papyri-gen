{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Cycle spinning was proposed as a way to approach shift-invariance via performing several circular shifts of a shift-variant transform ."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "For a n-level discrete wavelet transforms, one may wish to perform all shifts up to "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "max_shifts = 2**n - 1"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": ". In practice, much of the benefit can often be realized with only a small number of shifts per axis."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "For transforms such as the blockwise discrete cosine transform, one may wish to evaluate shifts up to the block size used by the transform."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Data for input to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "func"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "x",
            "type_": "array-like"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "A function to apply to circularly shifted versions of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "x"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ".  Should take "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "x"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " as its first argument. Any additional arguments can be supplied via "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "func_kw"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "func",
            "type_": "function"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "If an integer, shifts in "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "range(0, max_shifts+1)"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " will be used along each axis of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "x"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ". If a tuple, "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "range(0, max_shifts[i]+1)"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " will be along axis i."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "max_shifts",
            "type_": "int or tuple"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The step size for the shifts applied along axis, i, are "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "range((0, max_shifts[i]+1, shift_steps[i]))"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ". If an integer is provided, the same step size is used for all axes."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "shift_steps",
            "type_": "int or tuple, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The number of parallel threads to use during cycle spinning. If set to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "None"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": ", the full set of available cores are used."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "num_workers",
            "type_": "int or None, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Whether to treat the final axis as channels (no cycle shifts are performed over the channels axis)."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "multichannel",
            "type_": "bool, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Additional keyword arguments to supply to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "func"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": "."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "func_kw",
            "type_": "dict, optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "The output of "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "value": [
                          "func(x, **func_kw)"
                        ]
                      },
                      "type": "Verbatim"
                    },
                    {
                      "data": {
                        "value": " averaged over all combinations of the specified axis shifts."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "avg_y",
            "type_": "np.ndarray"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Cycle spinning (repeatedly apply func to shifted versions of x)."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "skimage.restoration.cycle_spin"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "skimage",
              "skimage",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "data",
              "skimage.data",
              "nn"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "skimage",
              "skimage",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "img_as_float",
              "skimage.util.dtype.img_as_float",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "skimage",
              "skimage",
              "nn"
            ],
            [
              ".",
              "",
              "nn"
            ],
            [
              "restoration",
              "skimage.restoration",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "denoise_wavelet",
              "skimage.restoration._denoise.denoise_wavelet",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "cycle_spin",
              "skimage.restoration._cycle_spin.cycle_spin",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "img",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "img_as_float",
              "skimage.util.dtype.img_as_float",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "skimage",
              "skimage",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "data",
              "skimage.data",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "camera",
              "skimage.data.camera",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "sigma",
              "builtins.float",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0.1",
              "",
              "mf"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "img",
              "builtins.float",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "img",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "+",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "sigma",
              "builtins.float",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "numpy.random",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "standard_normal",
              "builtins.RandomState.standard_normal",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "img",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "shape",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "denoised",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "cycle_spin",
              "skimage.restoration._cycle_spin.cycle_spin",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "img",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "func",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "denoise_wavelet",
              "skimage.restoration._denoise.denoise_wavelet",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "                      ",
              "",
              ""
            ],
            [
              "max_shifts",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "3",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "# doctest: +SKIP",
              "",
              "c1"
            ]
          ],
          "out": ""
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/skimage/restoration/_cycle_spin.py",
  "item_line": 49,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "refs": [
    "builtins.RandomState.standard_normal",
    "builtins.float",
    "numpy",
    "numpy.random",
    "skimage",
    "skimage.data",
    "skimage.data.camera",
    "skimage.restoration",
    "skimage.restoration._cycle_spin.cycle_spin",
    "skimage.restoration._denoise.denoise_wavelet",
    "skimage.util.dtype.img_as_float"
  ],
  "see_also": [],
  "signature": {
    "value": "cycle_spin(x, func, max_shifts, shift_steps=1, num_workers=None, multichannel=False, func_kw={})"
  }
}