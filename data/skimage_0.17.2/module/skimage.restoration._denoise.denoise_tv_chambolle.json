{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Make sure to set the multichannel parameter appropriately for color images."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The principle of total variation denoising is explained in https://en.wikipedia.org/wiki/Total_variation_denoising"
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "The principle of total variation denoising is to minimize the total variation of the image, which can be roughly described as the integral of the norm of the image gradient. Total variation denoising tends to produce \"cartoon-like\" images, that is, piecewise-constant images."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "This code is an implementation of the algorithm of Rudin, Fatemi and Osher that was proposed by Chambolle in ."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Input data to be denoised. "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "image",
                          "version": null
                        },
                        "value": "image"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": " can be of any numeric type, but it is cast into an ndarray of floats for the computation of the denoised image."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "image",
            "type_": "ndarray of ints, uints or floats"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Denoising weight. The greater "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "exists": true,
                        "kind": "local",
                        "reference": {
                          "kind": "local",
                          "module": null,
                          "path": "weight",
                          "version": null
                        },
                        "value": "weight"
                      },
                      "type": "Link"
                    },
                    {
                      "data": {
                        "value": ", the more denoising (at the expense of fidelity to "
                      },
                      "type": "Words"
                    },
                    {
                      "data": {
                        "domain": null,
                        "role": null,
                        "value": "input"
                      },
                      "type": "Directive"
                    },
                    {
                      "data": {
                        "value": ")."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "weight",
            "type_": "float, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Relative difference of the value of the cost function that determines the stop criterion. The algorithm stops when:"
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              },
              {
                "data": {
                  "value": [
                    "(E_(n-1) - E_n) < eps * E_0"
                  ]
                },
                "type": "BlockQuote"
              }
            ],
            "param": "eps",
            "type_": "float, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Maximal number of iterations used for the optimization."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "n_iter_max",
            "type_": "int, optional"
          },
          "type": "Param"
        },
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Apply total-variation denoising separately for each channel. This option should be true for color images, otherwise the denoising is also applied in the channels dimension."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "multichannel",
            "type_": "bool, optional"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "desc": [
              {
                "data": {
                  "inline": [
                    {
                      "data": {
                        "value": "Denoised image."
                      },
                      "type": "Words"
                    }
                  ],
                  "inner": []
                },
                "type": "Paragraph"
              }
            ],
            "param": "out",
            "type_": "ndarray"
          },
          "type": "Param"
        }
      ],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "inline": [
              {
                "data": {
                  "value": "Perform total-variation denoising on n-dimensional images."
                },
                "type": "Words"
              }
            ],
            "inner": []
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "skimage.restoration.denoise_tv_chambolle"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "2D example on astronaut image:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "from",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "skimage",
              "skimage",
              "nn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "import",
              null,
              "kn"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "color",
              "skimage.color",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "data",
              "skimage.data",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "img",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "color",
              "skimage.color",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "rgb2gray",
              "skimage.color.colorconv.rgb2gray",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "data",
              "skimage.data",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "astronaut",
              "skimage.data.astronaut",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "50",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "50",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "img",
              "builtins.float",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "+",
              "",
              "o"
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0.5",
              "",
              "mf"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "img",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "std",
              null,
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "numpy.random",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "randn",
              "builtins.RandomState.randn",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "img",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "shape",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "denoised_img",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "denoise_tv_chambolle",
              "skimage.restoration._denoise.denoise_tv_chambolle",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "img",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "weight",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "60",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": ""
        },
        "type": "Code"
      },
      {
        "data": {
          "inline": [
            {
              "data": {
                "value": "3D example on synthetic data:"
              },
              "type": "Words"
            }
          ],
          "inner": []
        },
        "type": "Paragraph"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            [
              "x",
              "numpy.ndarray",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "y",
              "builtins.int",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "z",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "ogrid",
              "numpy.lib.index_tricks.OGridClass",
              ""
            ],
            [
              "[",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "20",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "20",
              "",
              "mi"
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0",
              "",
              "mi"
            ],
            [
              ":",
              "",
              ""
            ],
            [
              "20",
              "",
              "mi"
            ],
            [
              "]",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "mask",
              "builtins.int",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "x",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "22",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "+",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "y",
              "builtins.int",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "20",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "+",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "z",
              "numpy.ndarray",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "-",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "17",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "<",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "8",
              "",
              "mi"
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "2",
              "",
              "mi"
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "mask",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "mask",
              "builtins.int",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "astype",
              "numpy.ndarray.astype",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "float",
              "builtins.float",
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "mask",
              "builtins.float",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "+",
              "",
              "o"
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "0.2",
              "",
              "mf"
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "np",
              "numpy",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "random",
              "numpy.random",
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "randn",
              "builtins.RandomState.randn",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "*",
              "",
              "o"
            ],
            [
              "mask",
              null,
              ""
            ],
            [
              ".",
              "",
              "o"
            ],
            [
              "shape",
              null,
              ""
            ],
            [
              ")",
              "",
              ""
            ],
            [
              "\n",
              "",
              ""
            ],
            [
              "res",
              null,
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "denoise_tv_chambolle",
              "skimage.restoration._denoise.denoise_tv_chambolle",
              ""
            ],
            [
              "(",
              "",
              ""
            ],
            [
              "mask",
              "builtins.float",
              ""
            ],
            [
              ",",
              "",
              ""
            ],
            [
              " ",
              "",
              ""
            ],
            [
              "weight",
              null,
              ""
            ],
            [
              "=",
              "",
              "o"
            ],
            [
              "100",
              "",
              "mi"
            ],
            [
              ")",
              "",
              ""
            ]
          ],
          "out": ""
        },
        "type": "Code"
      }
    ],
    "title": null
  },
  "item_file": "/skimage/restoration/_denoise.py",
  "item_line": 396,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "refs": [
    "builtins.RandomState.randn",
    "builtins.float",
    "builtins.int",
    "numpy",
    "numpy.lib.index_tricks.OGridClass",
    "numpy.ndarray",
    "numpy.ndarray.astype",
    "numpy.random",
    "skimage",
    "skimage.color",
    "skimage.color.colorconv.rgb2gray",
    "skimage.data",
    "skimage.data.astronaut",
    "skimage.restoration._denoise.denoise_tv_chambolle"
  ],
  "see_also": [],
  "signature": {
    "value": "denoise_tv_chambolle(image, weight=0.1, eps=0.0002, n_iter_max=200, multichannel=False)"
  }
}