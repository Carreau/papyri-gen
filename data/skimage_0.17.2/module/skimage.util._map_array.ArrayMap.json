{
  "_content": {
    "Attributes": {
      "children": [],
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This class is designed to replicate the use of NumPy arrays for mapping values with indexing:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ">>> values = np.array([0.25, 0.5, 1.0])\n>>> indices = np.array([[0, 0, 1], [2, 2, 1]])\n>>> values[indices]\narray([[0.25, 0.25, 0.5 ],\n       [1.  , 1.  , 0.5 ]])"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "The issue with this indexing is that you need a very large "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "values"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " array if the values in the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "indices"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " array are large."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ">>> values = np.array([0.25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0])\n>>> indices = np.array([[0, 0, 10], [0, 10, 10]])\n>>> values[indices]\narray([[0.25, 0.25, 1.  ],\n       [0.25, 1.  , 1.  ]])"
          },
          "type": "BlockVerbatim"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Using this class, the approach is similar, but there is no need to create a large values array:"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ">>> in_indices = np.array([0, 10])\n>>> out_values = np.array([0.25, 1.0])\n>>> values = ArrayMap(in_indices, out_values)\n>>> values\nArrayMap(array([ 0, 10]), array([0.25, 1.  ]))\n>>> print(values)\nArrayMap:\n  0 \u2192 0.25\n  10 \u2192 1.0\n>>> indices = np.array([[0, 0, 10], [0, 10, 10]])\n>>> values[indices]\narray([[0.25, 0.25, 1.  ],\n       [0.25, 1.  , 1.  ]])"
          },
          "type": "BlockVerbatim"
        }
      ],
      "title": null
    },
    "Methods": {
      "children": [],
      "title": null
    },
    "Notes": {
      "children": [],
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The source values from which to map."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "in_values",
                "type_": "array of int, shape (N,)"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The destination values from which to map."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "out_values",
                "type_": "array, shape (N,)"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "title": null
    },
    "Raises": {
      "children": [],
      "title": null
    },
    "Receives": {
      "children": [],
      "title": null
    },
    "Returns": {
      "children": [],
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Class designed to mimic mapping by NumPy array indexing."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "title": null
    },
    "Warnings": {
      "children": [],
      "title": null
    },
    "Warns": {
      "children": [],
      "title": null
    },
    "Yields": {
      "children": [],
      "title": null
    }
  },
  "aliases": [
    "skimage.segmentation._join.ArrayMap"
  ],
  "arbitrary": [],
  "example_section_data": {
    "children": [],
    "title": null
  },
  "item_file": "/skimage/util/_map_array.py",
  "item_line": 61,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": null
  }
}