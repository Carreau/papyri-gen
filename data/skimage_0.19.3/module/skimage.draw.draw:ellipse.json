{
  "aliases": [
    "skimage.draw.ellipse"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The ellipse equation      "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "((x * cos(alpha) + y * sin(alpha)) / x_radius) ** 2 +\n((x * sin(alpha) - y * cos(alpha)) / y_radius) ** 2 = 1"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Note that the positions of "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "ellipse"
            },
            {
              "type": "text",
              "value": " without specified "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "shape",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "shape"
            },
            {
              "type": "text",
              "value": " can have also, negative values, as this is correct on the plane. On the other hand using these ellipse positions for an image afterwards may lead to appearing on the other side of image, because "
            },
            {
              "type": "inlineCode",
              "value": "image[-1, -1] = image[end-1, end-1]"
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": ">>> rr, cc = ellipse(1, 2, 3, 6)\n>>> img = np.zeros((6, 12), dtype=np.uint8)\n>>> img[rr, cc] = 1\n>>> img\narray([[1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1],\n       [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1],\n       [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1],\n       [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1],\n       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n       [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1]], dtype=uint8)"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Centre coordinate of ellipse."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "r, c",
              "type": "Param",
              "type_": "double"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Minor and major semi-axes. "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(r/r_radius)**2 + (c/c_radius)**2 = 1"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "r_radius, c_radius",
              "type": "Param",
              "type_": "double"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Image shape which is used to determine the maximum extent of output pixel coordinates. This is useful for ellipses which exceed the image size. By default the full extent of the ellipse are used. Must be at least length 2. Only the first two values are used to determine the extent."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "shape",
              "type": "Param",
              "type_": "tuple, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Set the ellipse rotation (rotation) in range (-PI, PI) in contra clock wise direction, so PI/2 degree means swap ellipse axis"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "rotation",
              "type": "Param",
              "type_": "float, optional (default 0.)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Pixel coordinates of ellipse. May be used to directly index into an array, e.g. "
                    },
                    {
                      "type": "inlineCode",
                      "value": "img[rr, cc] = 1"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "rr, cc",
              "type": "Param",
              "type_": "ndarray of int"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Generate coordinates of pixels within ellipse."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from skimage.draw import ellipse\nimg = np.zeros((10, 12), dtype=np.uint8)\nrr, cc = ellipse(5, 6, 3, 5, rotation=np.deg2rad(30))\nimg[rr, cc] = 1\nimg"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/skimage/draw/draw.py",
  "item_line": 46,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Examples",
    "Notes"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(r, c, r_radius, c_radius, shape=None, rotation=0.0)"
  },
  "type": "DocBlob"
}