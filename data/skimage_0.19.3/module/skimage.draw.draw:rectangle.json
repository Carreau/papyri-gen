{
  "aliases": [
    "skimage.draw.rectangle"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This function can be applied to N-dimensional images, by passing "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "start",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "start"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "end",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "end"
            },
            {
              "type": "text",
              "value": " or "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "extent",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "extent"
            },
            {
              "type": "text",
              "value": " as tuples of length N."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Origin point of the rectangle, e.g., "
                    },
                    {
                      "type": "inlineCode",
                      "value": "([plane,] row, column)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "start",
              "type": "Param",
              "type_": "tuple"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "End point of the rectangle "
                    },
                    {
                      "type": "inlineCode",
                      "value": "([plane,] row, column)"
                    },
                    {
                      "type": "text",
                      "value": ". For a 2D matrix, the slice defined by the rectangle is "
                    },
                    {
                      "type": "inlineCode",
                      "value": "[start:(end+1)]"
                    },
                    {
                      "type": "text",
                      "value": ". Either "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "end",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "end"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "extent",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "extent"
                    },
                    {
                      "type": "text",
                      "value": " must be specified."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "end",
              "type": "Param",
              "type_": "tuple"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The extent (size) of the drawn rectangle.  E.g., "
                    },
                    {
                      "type": "inlineCode",
                      "value": "([num_planes,] num_rows, num_cols)"
                    },
                    {
                      "type": "text",
                      "value": ". Either "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "end",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "end"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "extent",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "extent"
                    },
                    {
                      "type": "text",
                      "value": " must be specified. A negative extent is valid, and will result in a rectangle going along the opposite direction. If extent is negative, the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "start",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "start"
                    },
                    {
                      "type": "text",
                      "value": " point is not included."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "extent",
              "type": "Param",
              "type_": "tuple"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Image shape used to determine the maximum bounds of the output coordinates. This is useful for clipping rectangles that exceed the image size. By default, no clipping is done."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "shape",
              "type": "Param",
              "type_": "tuple, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The coordinates of all pixels in the rectangle."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "coords",
              "type": "Param",
              "type_": "array of int, shape (Ndim, Npoints)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Generate coordinates of pixels within a rectangle."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nfrom skimage.draw import rectangle\nimg = np.zeros((5, 5), dtype=np.uint8)\nstart = (1, 1)\nextent = (3, 3)\nrr, cc = rectangle(start, extent=extent, shape=img.shape)\nimg[rr, cc] = 1\nimg"
      },
      {
        "type": "code",
        "value": "img = np.zeros((5, 5), dtype=np.uint8)\nstart = (0, 1)\nend = (3, 3)\nrr, cc = rectangle(start, end=end, shape=img.shape)\nimg[rr, cc] = 1\nimg"
      },
      {
        "type": "code",
        "value": "import numpy as np\nfrom skimage.draw import rectangle\nimg = np.zeros((6, 6), dtype=np.uint8)\nstart = (3, 3)"
      },
      {
        "type": "code",
        "value": "rr, cc = rectangle(start, extent=(2, 2))\nimg[rr, cc] = 1\nrr, cc = rectangle(start, extent=(-2, 2))\nimg[rr, cc] = 2\nrr, cc = rectangle(start, extent=(-2, -2))\nimg[rr, cc] = 3\nrr, cc = rectangle(start, extent=(2, -2))\nimg[rr, cc] = 4\nprint(img)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/skimage/draw/draw.py",
  "item_line": 736,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(start, end=None, extent=None, shape=None)"
  },
  "type": "DocBlob"
}