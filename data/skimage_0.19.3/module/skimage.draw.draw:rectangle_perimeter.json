{
  "aliases": [
    "skimage.draw.rectangle_perimeter"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Origin point of the inner rectangle, e.g., "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(row, column)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "start",
              "type": "Param",
              "type_": "tuple"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "End point of the inner rectangle "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(row, column)"
                    },
                    {
                      "type": "text",
                      "value": ". For a 2D matrix, the slice defined by inner the rectangle is "
                    },
                    {
                      "type": "inlineCode",
                      "value": "[start:(end+1)]"
                    },
                    {
                      "type": "text",
                      "value": ". Either "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "end",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "end"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "extent",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "extent"
                    },
                    {
                      "type": "text",
                      "value": " must be specified."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "end",
              "type": "Param",
              "type_": "tuple"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The extent (size) of the inner rectangle.  E.g., "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(num_rows, num_cols)"
                    },
                    {
                      "type": "text",
                      "value": ". Either "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "end",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "end"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "extent",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "extent"
                    },
                    {
                      "type": "text",
                      "value": " must be specified. Negative extents are permitted. See "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "rectangle"
                    },
                    {
                      "type": "text",
                      "value": " to better understand how they behave."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "extent",
              "type": "Param",
              "type_": "tuple"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Image shape used to determine the maximum bounds of the output coordinates. This is useful for clipping perimeters that exceed the image size. By default, no clipping is done.  Must be at least length 2. Only the first two values are used to determine the extent of the input image."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "shape",
              "type": "Param",
              "type_": "tuple, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether to clip the perimeter to the provided shape. If this is set to True, the drawn figure will always be a closed polygon with all edges visible."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "clip",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The coordinates of all pixels in the rectangle."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "coords",
              "type": "Param",
              "type_": "array of int, shape (2, Npoints)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Generate coordinates of pixels that are exactly around a rectangle."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nfrom skimage.draw import rectangle_perimeter\nimg = np.zeros((5, 6), dtype=np.uint8)\nstart = (2, 3)\nend = (3, 4)\nrr, cc = rectangle_perimeter(start, end=end, shape=img.shape)\nimg[rr, cc] = 1\nimg"
      },
      {
        "type": "code",
        "value": "img = np.zeros((5, 5), dtype=np.uint8)\nr, c = rectangle_perimeter(start, (10, 10), shape=img.shape, clip=True)\nimg[r, c] = 1\nimg"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/skimage/draw/draw.py",
  "item_line": 832,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(start, end=None, extent=None, shape=None, clip=False)"
  },
  "type": "DocBlob"
}