{
  "aliases": [
    "skimage.feature.SIFT"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The sampling distance of the first octave. It's final value is 1/upsampling."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "delta_min",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The datatype of the image."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "float_dtype",
              "type": "Param",
              "type_": "type"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The sigma value of all scales in all octaves."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "scalespace_sigmas",
              "type": "Param",
              "type_": "(n_octaves, n_scales + 3) array"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Keypoint coordinates as "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(row, col)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "keypoints",
              "type": "Param",
              "type_": "(N, 2) array"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Subpixel-precision keypoint coordinates as "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(row, col)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "positions",
              "type": "Param",
              "type_": "(N, 2) array"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The corresponding sigma (blur) value of a keypoint."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "sigmas",
              "type": "Param",
              "type_": "(N, ) array"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The corresponding scale of a keypoint."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "scales",
              "type": "Param",
              "type_": "(N, ) array"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The orientations of the gradient around every keypoint."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "orientations",
              "type": "Param",
              "type_": "(N, ) array"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The corresponding octave of a keypoint."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "octaves",
              "type": "Param",
              "type_": "(N, ) array"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The descriptors of a keypoint."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "descriptors",
              "type": "Param",
              "type_": "(N, n_hist*n_hist*n_ori) array"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The SIFT algorithm was developed by David Lowe ,  and later patented by the University of British Columbia. Since the patent expired in 2020 it's free to use. The implementation here closely follows the detailed description in , including use of the same default parameters."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Prior to the feature detection the image is upscaled by a factor of 1 (no upscaling), 2 or 4. Method: Bi-cubic interpolation."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "upsampling",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Maximum number of octaves. With every octave the image size is halved and the sigma doubled. The number of octaves will be reduced as needed to keep at least 12 pixels along each dimension at the smallest scale."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "n_octaves",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Maximum number of scales in every octave."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "n_scales",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The blur level of the seed image. If upsampling is enabled sigma_min is scaled by factor 1/upsampling"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "sigma_min",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The assumed blur level of the input image."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "sigma_in",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Threshold to discard low contrast extrema in the DoG. It's final value is dependent on n_scales by the relation: final_c_dog = (2^(1/n_scales)-1) / (2^(1/3)-1) * c_dog"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "c_dog",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Threshold to discard extrema that lie in edges. If H is the Hessian of an extremum, its \"edgeness\" is described by tr(H)\u00b2/det(H). If the edgeness is higher than (c_edge + 1)\u00b2/c_edge, the extremum is discarded."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "c_edge",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of bins in the histogram that describes the gradient orientations around keypoint."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "n_bins",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The window used to find the reference orientation of a keypoint has a width of 6 * lambda_ori * sigma and is weighted by a standard deviation of 2 * lambda_ori * sigma."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "lambda_ori",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The threshold at which a secondary peak in the orientation histogram is accepted as orientation"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "c_max",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The window used to define the descriptor of a keypoint has a width of 2 * lambda_descr * sigma * (n_hist+1)/n_hist and is weighted by a standard deviation of lambda_descr * sigma."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "lambda_descr",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The window used to define the descriptor of a keypoint consists of n_hist * n_hist histograms."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "n_hist",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The number of bins in the histograms of the descriptor patch."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "n_ori",
              "type": "Param",
              "type_": "int, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "SIFT feature detection and descriptor extraction."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from skimage.feature import SIFT, match_descriptors\nfrom skimage.data import camera\nfrom skimage.transform import rotate\nimg1 = camera()\nimg2 = rotate(camera(), 90)\ndetector_extractor1 = SIFT()\ndetector_extractor2 = SIFT()\ndetector_extractor1.detect_and_extract(img1)\ndetector_extractor2.detect_and_extract(img2)\nmatches = match_descriptors(detector_extractor1.descriptors,\n                            detector_extractor2.descriptors,\n                            max_ratio=0.6)\nmatches[10:15]"
      },
      {
        "type": "code",
        "value": "detector_extractor1.keypoints[matches[10:15, 0]]"
      },
      {
        "type": "code",
        "value": "detector_extractor2.keypoints[matches[10:15, 1]]"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/skimage/feature/sift.py",
  "item_line": 90,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Attributes",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}