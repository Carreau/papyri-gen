{
  "aliases": [
    "skimage.feature.graycomatrix"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A gray level co-occurrence matrix is a histogram of co-occurring grayscale values at a given offset over an image."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Integer typed input image. Only positive valued images are supported. If type is other than uint8, the argument "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "levels",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "levels"
                    },
                    {
                      "type": "text",
                      "value": " needs to be set."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "image",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "List of pixel pair distance offsets."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "distances",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "List of pixel pair angles in radians."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "angles",
              "type": "Param",
              "type_": "array_like"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The input image should contain integers in [0, "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "levels",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "levels"
                    },
                    {
                      "type": "text",
                      "value": "-1], where levels indicate the number of gray-levels counted (typically 256 for an 8-bit image). This argument is required for 16-bit images or higher and is typically the maximum of the image. As the output matrix is at least "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "levels",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "levels"
                    },
                    {
                      "type": "text",
                      "value": " x "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "levels",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "levels"
                    },
                    {
                      "type": "text",
                      "value": ", it might be preferable to use binning of the input image rather than large values for "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "levels",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "levels"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "levels",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, the output matrix "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "P[:, :, d, theta]"
                    },
                    {
                      "type": "text",
                      "value": " is symmetric. This is accomplished by ignoring the order of value pairs, so both (i, j) and (j, i) are accumulated when (i, j) is encountered for a given offset. The default is False."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "symmetric",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, normalize each matrix "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "P[:, :, d, theta]"
                    },
                    {
                      "type": "text",
                      "value": " by dividing by the total number of accumulated co-occurrences for the given offset. The elements of the resulting matrix sum to 1. The default is False."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "normed",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The gray-level co-occurrence histogram. The value "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "P[i,j,d,theta]"
                    },
                    {
                      "type": "text",
                      "value": " is the number of times that gray-level "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "j"
                    },
                    {
                      "type": "text",
                      "value": " occurs at a distance "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "d"
                    },
                    {
                      "type": "text",
                      "value": " and at an angle "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "theta"
                    },
                    {
                      "type": "text",
                      "value": " from gray-level "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "i"
                    },
                    {
                      "type": "text",
                      "value": ". If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "normed",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "normed"
                    },
                    {
                      "type": "text",
                      "value": " is "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "False"
                    },
                    {
                      "type": "text",
                      "value": ", the output is of type uint32, otherwise it is float64. The dimensions are: levels x levels x number of distances x number of angles."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "P",
              "type": "Param",
              "type_": "4-D ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Calculate the gray-level co-occurrence matrix."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "Compute 2 GLCMs: One for a 1-pixel offset to the right, and one\nfor a 1-pixel offset upwards."
      },
      {
        "type": "code",
        "value": "image = np.array([[0, 0, 1, 1],\n                  [0, 0, 1, 1],\n                  [0, 2, 2, 2],\n                  [2, 2, 3, 3]], dtype=np.uint8)\nresult = graycomatrix(image, [1], [0, np.pi/4, np.pi/2, 3*np.pi/4],\n                      levels=4)\nresult[:, :, 0, 0]"
      },
      {
        "type": "code",
        "value": "result[:, :, 0, 1]"
      },
      {
        "type": "code",
        "value": "result[:, :, 0, 2]"
      },
      {
        "type": "code",
        "value": "result[:, :, 0, 3]"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/skimage/feature/texture.py",
  "item_line": 15,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(image, distances, angles, levels=None, symmetric=False, normed=False)"
  },
  "type": "DocBlob"
}