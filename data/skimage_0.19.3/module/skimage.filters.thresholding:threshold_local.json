{
  "aliases": [
    "skimage.filters.threshold_local"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Also known as adaptive or dynamic thresholding. The threshold value is the weighted mean for the local neighborhood of a pixel subtracted by a constant. Alternatively the threshold can be determined dynamically by a given function, using the 'generic' method."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Grayscale input image."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "image",
              "type": "Param",
              "type_": "(N, M[, ..., P]) ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Odd size of pixel neighborhood which is used to calculate the threshold value (e.g. 3, 5, 7, ..., 21, ...)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "block_size",
              "type": "Param",
              "type_": "int or sequence of int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Method used to determine adaptive threshold for local neighbourhood in weighted mean image."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "'generic': use custom function (see "
                            },
                            {
                              "type": "inlineCode",
                              "value": "param"
                            },
                            {
                              "type": "text",
                              "value": " parameter)"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "'gaussian': apply gaussian filter (see "
                            },
                            {
                              "type": "inlineCode",
                              "value": "param"
                            },
                            {
                              "type": "text",
                              "value": " parameter for custom                      sigma value)"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "'mean': apply arithmetic mean filter"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "'median': apply median rank filter"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "By default the 'gaussian' method is used."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "method",
              "type": "Param",
              "type_": "{'generic', 'gaussian', 'mean', 'median'}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Constant subtracted from weighted mean of neighborhood to calculate the local threshold value. Default offset is 0."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "offset",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The mode parameter determines how the array borders are handled, where cval is the value when mode is equal to 'constant'. Default is 'reflect'."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "mode",
              "type": "Param",
              "type_": "{'reflect', 'constant', 'nearest', 'mirror', 'wrap'}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Either specify sigma for 'gaussian' method or function object for 'generic' method. This functions takes the flat array of local neighbourhood as a single argument and returns the calculated threshold for the centre pixel."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "param",
              "type": "Param",
              "type_": "{int, function}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Value to fill past edges of input if mode is 'constant'."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cval",
              "type": "Param",
              "type_": "float, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Threshold image. All pixels in the input image higher than the corresponding pixel in the threshold image are considered foreground."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "threshold",
              "type": "Param",
              "type_": "(N, M[, ..., P]) ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Compute a threshold mask image based on local pixel neighborhood."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from skimage.data import camera\nimage = camera()[:50, :50]\nbinary_image1 = image > threshold_local(image, 15, 'mean')\nfunc = lambda arr: arr.mean()\nbinary_image2 = image > threshold_local(image, 15, 'generic',\n                                        param=func)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/skimage/filters/thresholding.py",
  "item_line": 157,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(image, block_size=3, method='gaussian', offset=0, mode='reflect', param=None, cval=0)"
  },
  "type": "DocBlob"
}