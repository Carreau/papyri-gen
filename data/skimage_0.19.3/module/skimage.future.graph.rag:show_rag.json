{
  "aliases": [
    "skimage.future.graph.show_rag"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Given a labelled image and its corresponding RAG, show the nodes and edges of the RAG on the image with the specified colors. Edges are displayed between the centroid of the 2 adjacent regions in the image."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The labelled image."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "labels",
              "type": "Param",
              "type_": "ndarray, shape (M, N)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The Region Adjacency Graph."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "rag",
              "type": "Param",
              "type_": "RAG"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Input image. If "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "colormap"
                    },
                    {
                      "type": "text",
                      "value": " is "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "None"
                    },
                    {
                      "type": "text",
                      "value": ", the image should be in RGB format."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "image",
              "type": "Param",
              "type_": "ndarray, shape (M, N[, 3])"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Color with which the borders between regions are drawn."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "border_color",
              "type": "Param",
              "type_": "color spec, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The thickness with which the RAG edges are drawn."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "edge_width",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Any matplotlib colormap with which the edges are drawn."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "edge_cmap",
              "type": "Param",
              "type_": ":py:class:`matplotlib.colors.Colormap`, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Any matplotlib colormap with which the image is draw. If set to "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "None"
                    },
                    {
                      "type": "text",
                      "value": " the image is drawn as it is."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "img_cmap",
              "type": "Param",
              "type_": ":py:class:`matplotlib.colors.Colormap`, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If set, the RAG is modified in place. For each node "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "n"
                    },
                    {
                      "type": "text",
                      "value": " the function will set a new attribute "
                    },
                    {
                      "type": "inlineCode",
                      "value": "rag.nodes[n]['centroid']"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "in_place",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The axes to draw on. If not specified, new axes are created and drawn on."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "ax",
              "type": "Param",
              "type_": ":py:class:`matplotlib.axes.Axes`, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A colection of lines that represent the edges of the graph. It can be passed to the "
                    },
                    {
                      "type": "inlineCode",
                      "value": "matplotlib.figure.Figure.colorbar"
                    },
                    {
                      "type": "text",
                      "value": " function."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "lc",
              "type": "Param",
              "type_": ":py:class:`matplotlib.collections.LineCollection`"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Show a Region Adjacency Graph on an image."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from skimage import data, segmentation\nfrom skimage.future import graph\nimport matplotlib.pyplot as plt"
      },
      {
        "type": "code",
        "value": "img = data.coffee()\nlabels = segmentation.slic(img)\ng =  graph.rag_mean_color(img, labels)\nlc = graph.show_rag(labels, g, img)\ncbar = plt.colorbar(lc)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/skimage/future/graph/rag.py",
  "item_line": 451,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(labels, rag, image, border_color='black', edge_width=1.5, edge_cmap='magma', img_cmap='bone', in_place=True, ax=None)"
  },
  "type": "DocBlob"
}