{
  "aliases": [
    "skimage.future.fit_segmenter"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Image of labels. Labels >= 1 correspond to the training set and label 0 to unlabeled pixels to be segmented."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "labels",
                "type_": "ndarray of ints"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Array of features, with the first dimension corresponding to the number of features, and the other dimensions correspond to "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "labels.shape"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "features",
                "type_": "ndarray"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "classifier object, exposing a "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "fit"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " and a "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "predict"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " method as in scikit-learn's API, for example an instance of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "RandomForestClassifier"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "LogisticRegression"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " classifier."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "clf",
                "type_": "classifier object"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [],
                "param": "",
                "type_": "NotFittedError if ``self.clf`` has not been fitted yet (use ``self.fit``)."
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "classifier trained on "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "labels"
                            ]
                          },
                          "type": "Verbatim"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "clf",
                "type_": "classifier object"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Segmentation using labeled parts of the image and a classifier."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/skimage/future/trainable_segmentation.py",
  "item_line": 89,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Raises"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "fit_segmenter(labels, features, clf)"
  }
}