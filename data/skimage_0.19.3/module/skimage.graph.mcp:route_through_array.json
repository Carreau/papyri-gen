{
  "aliases": [
    "skimage.graph.route_through_array"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "See the MCP and MCP_Geometric class documentation for explanation of the path-finding algorithm."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Array of costs."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "array",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "n-d index into "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "array",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "array"
                    },
                    {
                      "type": "text",
                      "value": " defining the starting point"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "start",
              "type": "Param",
              "type_": "iterable"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "n-d index into "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "array",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "array"
                    },
                    {
                      "type": "text",
                      "value": " defining the end point"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "end",
              "type": "Param",
              "type_": "iterable"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, diagonal moves are permitted, if False, only axial moves."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "fully_connected",
              "type": "Param",
              "type_": "bool (optional)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, the MCP_Geometric class is used to calculate costs, if False, the MCP base class is used. See the class documentation for an explanation of the differences between MCP and MCP_Geometric."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "geometric",
              "type": "Param",
              "type_": "bool (optional)"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "List of n-d index tuples defining the path from "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "start",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "start"
                    },
                    {
                      "type": "text",
                      "value": " to "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "end",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "end"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "path",
              "type": "Param",
              "type_": "list"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Cost of the path. If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "geometric",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "geometric"
                    },
                    {
                      "type": "text",
                      "value": " is False, the cost of the path is the sum of the values of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "array",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "array"
                    },
                    {
                      "type": "text",
                      "value": " along the path. If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "geometric",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "geometric"
                    },
                    {
                      "type": "text",
                      "value": " is True, a finer computation is made (see the documentation of the MCP_Geometric class)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cost",
              "type": "Param",
              "type_": "float"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Simple example of how to use the MCP and MCP_Geometric classes."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nfrom skimage.graph import route_through_array"
      },
      {
        "type": "code",
        "value": "image = np.array([[1, 3], [10, 12]])\nimage"
      },
      {
        "type": "code",
        "value": "# Forbid diagonal steps\nroute_through_array(image, [0, 0], [1, 1], fully_connected=False)"
      },
      {
        "type": "code",
        "value": "# Now allow diagonal steps: the path goes directly from start to end\nroute_through_array(image, [0, 0], [1, 1])"
      },
      {
        "type": "code",
        "value": "# Cost is the sum of array values along the path (16 = 1 + 3 + 12)\nroute_through_array(image, [0, 0], [1, 1], fully_connected=False,\ngeometric=False)"
      },
      {
        "type": "code",
        "value": "# Larger array where we display the path that is selected\nimage = np.arange((36)).reshape((6, 6))\nimage"
      },
      {
        "type": "code",
        "value": "# Find the path with lowest cost\nindices, weight = route_through_array(image, (0, 0), (5, 5))\nindices = np.stack(indices, axis=-1)\npath = np.zeros_like(image)\npath[indices[0], indices[1]] = 1\npath"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/skimage/graph/mcp.py",
  "item_line": 4,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "MCP",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "MCP"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "MCP_Geometric",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "MCP_Geometric"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(array, start, end, fully_connected=True, geometric=True)"
  },
  "type": "DocBlob"
}