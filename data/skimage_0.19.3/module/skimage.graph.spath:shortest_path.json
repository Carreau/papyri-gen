{
  "aliases": [
    "skimage.graph.shortest_path"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "arr",
              "type": "Param",
              "type_": "ndarray of float64"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "By default ("
                    },
                    {
                      "type": "inlineCode",
                      "value": "reach = 1"
                    },
                    {
                      "type": "text",
                      "value": "), the shortest path can only move one row up or down for every step it moves forward (i.e., the path gradient is limited to 1). "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "reach",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "reach"
                    },
                    {
                      "type": "text",
                      "value": " defines the number of elements that can be skipped along each non-axis dimension at each step."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "reach",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The axis along which the path must always move forward (default -1)"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axis",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "See return value "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "p",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "p"
                    },
                    {
                      "type": "text",
                      "value": " for explanation."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "output_indexlist",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "For each step along "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "axis",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "axis"
                    },
                    {
                      "type": "text",
                      "value": ", the coordinate of the shortest path. If "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "output_indexlist",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "output_indexlist"
                    },
                    {
                      "type": "text",
                      "value": " is True, then the path is returned as a list of n-d tuples that index into "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "arr",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "arr"
                    },
                    {
                      "type": "text",
                      "value": ". If False, then the path is returned as an array listing the coordinates of the path along the non-axis dimensions for each step along the axis dimension. That is, "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "p.shape == (arr.shape[axis], arr.ndim-1)"
                    },
                    {
                      "type": "text",
                      "value": " except that p is squeezed before returning so if "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "arr.ndim == 2"
                    },
                    {
                      "type": "text",
                      "value": ", then "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "p.shape == (arr.shape[axis],)"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "p",
              "type": "Param",
              "type_": "iterable of int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Cost of path.  This is the absolute sum of all the differences along the path."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cost",
              "type": "Param",
              "type_": "float"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Find the shortest path through an n-d array from one side to another."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/skimage/graph/spath.py",
  "item_line": 5,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(arr, reach=1, axis=-1, output_indexlist=False)"
  },
  "type": "DocBlob"
}