{
  "aliases": [
    "skimage.io.ImageCollection"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If a pattern string is given for "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "load_pattern",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "load_pattern"
                    },
                    {
                      "type": "text",
                      "value": ", this attribute stores the expanded file list. Otherwise, this is equal to "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "load_pattern",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "load_pattern"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "files",
              "type": "Param",
              "type_": "list of str"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Note that files are always returned in alphanumerical order. Also note that slicing returns a new ImageCollection, "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "not"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " a view into the data."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "ImageCollection can be modified to load images from an arbitrary source by specifying a combination of "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "load_pattern",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "load_pattern"
            },
            {
              "type": "text",
              "value": " and "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "load_func",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "load_func"
            },
            {
              "type": "text",
              "value": ".  For an ImageCollection "
            },
            {
              "type": "inlineCode",
              "value": "ic"
            },
            {
              "type": "text",
              "value": ", "
            },
            {
              "type": "inlineCode",
              "value": "ic[5]"
            },
            {
              "type": "text",
              "value": " uses "
            },
            {
              "type": "inlineCode",
              "value": "load_func(load_pattern[5])"
            },
            {
              "type": "text",
              "value": " to load the image."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Imagine, for example, an ImageCollection that loads every third frame from a video file    "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "video_file = 'no_time_for_that_tiny.gif'\n\ndef vidread_step(f, step):\n    vid = imageio.get_reader(f)\n    seq = [v for v in vid.iter_data()]\n    return seq[::step]\n\nic = ImageCollection(video_file, load_func=vidread_step, step=3)\n\nic  # is an ImageCollection object of length 1 because there is 1 file\n\nx = ic[0]  # calls vidread_step(video_file, step=3)\nx[5]  # is the sixth element of a list of length 8 (24 / 3)"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Another use of "
            },
            {
              "type": "inlineCode",
              "value": "load_func"
            },
            {
              "type": "text",
              "value": " would be to convert all images to "
            },
            {
              "type": "inlineCode",
              "value": "uint8"
            },
            {
              "type": "text",
              "value": "    "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "def imread_convert(f):\n    return imread(f).astype(np.uint8)\n\nic = ImageCollection('/tmp/*.png', load_func=imread_convert)"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "imread"
                    },
                    {
                      "type": "text",
                      "value": " by default. See notes below."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "load_func",
              "type": "Param",
              "type_": "callable"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Pattern string or list of strings to load. The filename path can be absolute or relative."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "load_pattern",
              "type": "Param",
              "type_": "str or list of str"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "ImageCollection"
                    },
                    {
                      "type": "text",
                      "value": " does not keep more than one in memory at a specific time. Otherwise, images will be cached once they are loaded."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "conserve_memory",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Load and manage a collection of image files."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import skimage.io as io\nfrom skimage import data_dir"
      },
      {
        "type": "code",
        "value": "coll = io.ImageCollection(data_dir + '/chess*.png')\nlen(coll)"
      },
      {
        "type": "code",
        "value": "coll[0].shape"
      },
      {
        "type": "code",
        "value": "ic = io.ImageCollection(['/tmp/work/*.png', '/tmp/other/*.jpg'])"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/skimage/io/collection.py",
  "item_line": 109,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Other Parameters",
    "Attributes",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}