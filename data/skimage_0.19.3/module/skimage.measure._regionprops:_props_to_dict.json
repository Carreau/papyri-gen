{
  "aliases": [
    "skimage.measure._regionprops._props_to_dict"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Each column contains either a scalar property, an object property, or an element in a multidimensional array."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Properties with scalar values for each region, such as \"eccentricity\", will appear as a float or int array with that property name as key."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Multidimensional properties "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "of fixed size"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " for a given image dimension, such as \"centroid\" (every centroid will have three elements in a 3D image, no matter the region size), will be split into that many columns, with the name {property_name}{separator}{element_num} (for 1D properties), {property_name}{separator}{elem_num0}{separator}{elem_num1} (for 2D properties), and so on."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For multidimensional properties that don't have a fixed size, such as \"image\" (the image of a region varies in size depending on the region size), an object array will be used, with the corresponding property name as the key."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "List of RegionProperties objects as returned by "
                    },
                    {
                      "type": "inlineCode",
                      "value": "regionprops"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "regions",
              "type": "Param",
              "type_": "(N,) list"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Properties that will be included in the resulting dictionary For a list of available properties, please see "
                    },
                    {
                      "type": "inlineCode",
                      "value": "regionprops"
                    },
                    {
                      "type": "text",
                      "value": ". Users should remember to add \"label\" to keep track of region identities."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "properties",
              "type": "Param",
              "type_": "tuple or list of str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "For non-scalar properties not listed in OBJECT_COLUMNS, each element will appear in its own column, with the index of that element separated from the property name by this separator. For example, the inertia tensor of a 2D region will appear in four columns: "
                    },
                    {
                      "type": "inlineCode",
                      "value": "inertia_tensor-0-0"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "inlineCode",
                      "value": "inertia_tensor-0-1"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "inlineCode",
                      "value": "inertia_tensor-1-0"
                    },
                    {
                      "type": "text",
                      "value": ", and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "inertia_tensor-1-1"
                    },
                    {
                      "type": "text",
                      "value": " (where the separator is "
                    },
                    {
                      "type": "inlineCode",
                      "value": "-"
                    },
                    {
                      "type": "text",
                      "value": ")."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Object columns are those that cannot be split in this way because the number of columns would change depending on the object. For example, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "image"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "coords"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "separator",
              "type": "Param",
              "type_": "str, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Dictionary mapping property names to an array of values of that property, one value per region. This dictionary can be used as input to pandas "
                    },
                    {
                      "type": "inlineCode",
                      "value": "DataFrame"
                    },
                    {
                      "type": "text",
                      "value": " to map property names to columns in the frame and regions to rows."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out_dict",
              "type": "Param",
              "type_": "dict"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Convert image region properties list into a column dictionary."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from skimage import data, util, measure\nimage = data.coins()\nlabel_image = measure.label(image > 110, connectivity=image.ndim)\nproplist = regionprops(label_image, image)\nprops = _props_to_dict(proplist, properties=['label', 'inertia_tensor',\n                                             'inertia_tensor_eigvals'])\nprops  # doctest: +ELLIPSIS +SKIP"
      },
      {
        "type": "text",
        "value": "The resulting dictionary can be directly passed to pandas, if installed, to\nobtain a clean DataFrame:"
      },
      {
        "type": "code",
        "value": "import pandas as pd  # doctest: +SKIP\ndata = pd.DataFrame(props)  # doctest: +SKIP\ndata.head()  # doctest: +SKIP"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/skimage/measure/_regionprops.py",
  "item_line": 700,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(regions, properties=('label', 'bbox'), separator='-')"
  },
  "type": "DocBlob"
}