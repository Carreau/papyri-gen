{
  "aliases": [
    "skimage.morphology.flood_fill"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Starting at a specific "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "seed_point",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "seed_point"
            },
            {
              "type": "text",
              "value": ", connected points equal or within "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "tolerance",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "tolerance"
            },
            {
              "type": "text",
              "value": " of the seed value are found, then set to "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "new_value",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "new_value"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The conceptual analogy of this operation is the 'paint bucket' tool in many raster graphics programs."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Deprecated in favor of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "footprint",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "footprint"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "deprecated 0.19"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "selem",
              "type": "Param",
              "type_": "DEPRECATED"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An n-dimensional array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "image",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The point in "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "image",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "image"
                    },
                    {
                      "type": "text",
                      "value": " used as the starting point for the flood fill.  If the image is 1D, this point may be given as an integer."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "seed_point",
              "type": "Param",
              "type_": "tuple or int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "New value to set the entire fill.  This must be chosen in agreement with the dtype of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "image",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "image"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "new_value",
              "type": "Param",
              "type_": "`image` type"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The footprint (structuring element) used to determine the neighborhood of each evaluated pixel. It must contain only 1's and 0's, have the same number of dimensions as "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "image",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "image"
                    },
                    {
                      "type": "text",
                      "value": ". If not given, all adjacent pixels are considered as part of the neighborhood (fully connected)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "footprint",
              "type": "Param",
              "type_": "ndarray, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A number used to determine the neighborhood of each evaluated pixel. Adjacent pixels whose squared distance from the center is less than or equal to "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "connectivity",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "connectivity"
                    },
                    {
                      "type": "text",
                      "value": " are considered neighbors. Ignored if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "footprint",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "footprint"
                    },
                    {
                      "type": "text",
                      "value": " is not None."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "connectivity",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If None (default), adjacent values must be strictly equal to the value of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "image",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "image"
                    },
                    {
                      "type": "text",
                      "value": " at "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "seed_point",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "seed_point"
                    },
                    {
                      "type": "text",
                      "value": " to be filled.  This is fastest. If a tolerance is provided, adjacent points with values within plus or minus tolerance from the seed point are filled (inclusive)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "tolerance",
              "type": "Param",
              "type_": "float or int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, flood filling is applied to "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "image",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "image"
                    },
                    {
                      "type": "text",
                      "value": " in place.  If False, the flood filled result is returned without modifying the input "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "image",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "image"
                    },
                    {
                      "type": "text",
                      "value": " (default)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "in_place",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An array with the same shape as "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "image",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "image"
                    },
                    {
                      "type": "text",
                      "value": " is returned, with values in areas connected to and equal (or within tolerance of) the seed point replaced with "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "new_value",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "new_value"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "filled",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Perform flood filling on an image."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from skimage.morphology import flood_fill\nimage = np.zeros((4, 7), dtype=int)\nimage[1:3, 1:3] = 1\nimage[3, 0] = 1\nimage[1:3, 4:6] = 2\nimage[3, 6] = 3\nimage"
      },
      {
        "type": "text",
        "value": "Fill connected ones with 5, with full connectivity (diagonals included):"
      },
      {
        "type": "code",
        "value": "flood_fill(image, (1, 1), 5)"
      },
      {
        "type": "text",
        "value": "Fill connected ones with 5, excluding diagonal points (connectivity 1):"
      },
      {
        "type": "code",
        "value": "flood_fill(image, (1, 1), 5, connectivity=1)"
      },
      {
        "type": "text",
        "value": "Fill with a tolerance:"
      },
      {
        "type": "code",
        "value": "flood_fill(image, (0, 0), 5, tolerance=1)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/skimage/morphology/_flood_fill.py",
  "item_line": 15,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Other Parameters",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(image, seed_point, new_value, *, footprint=None, connectivity=None, tolerance=None, in_place=False)"
  },
  "type": "DocBlob"
}