{
  "aliases": [
    "skimage.morphology.remove_small_objects"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Expects ar to be an array with labeled objects, and removes objects smaller than min_size. If "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "ar",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "ar"
            },
            {
              "type": "text",
              "value": " is bool, the image is first labeled. This leads to potentially different behavior for bool and 0-and-1 arrays."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The array containing the objects of interest. If the array type is int, the ints must be non-negative."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "ar",
              "type": "Param",
              "type_": "ndarray (arbitrary shape, int or bool type)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The smallest allowable object size."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "min_size",
              "type": "Param",
              "type_": "int, optional (default: 64)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The connectivity defining the neighborhood of a pixel. Used during labelling if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "ar",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "ar"
                    },
                    {
                      "type": "text",
                      "value": " is bool."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "connectivity",
              "type": "Param",
              "type_": "int, {1, 2, ..., ar.ndim}, optional (default: 1)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "True"
                    },
                    {
                      "type": "text",
                      "value": ", remove the objects in the input array itself. Otherwise, make a copy. Deprecated since version 0.19. Please use "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "out",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "out"
                    },
                    {
                      "type": "text",
                      "value": " instead."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "in_place",
              "type": "Param",
              "type_": "bool, optional (default: False)"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Array of the same shape as "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "ar",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "ar"
                    },
                    {
                      "type": "text",
                      "value": ", into which the output is placed. By default, a new array is created."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If the input array is of an invalid type, such as float or string."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "TypeError"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If the input array contains negative values."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "ValueError"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The input array with small connected components removed."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "ndarray, same shape and type as input `ar`"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Remove objects smaller than the specified size."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from skimage import morphology\na = np.array([[0, 0, 0, 1, 0],\n              [1, 1, 1, 0, 0],\n              [1, 1, 1, 0, 1]], bool)\nb = morphology.remove_small_objects(a, 6)\nb"
      },
      {
        "type": "code",
        "value": "c = morphology.remove_small_objects(a, 7, connectivity=2)\nc"
      },
      {
        "type": "code",
        "value": "d = morphology.remove_small_objects(a, 6, out=a)\nd is a"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/skimage/morphology/misc.py",
  "item_line": 51,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Raises",
    "Returns",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(ar, min_size=64, connectivity=1, in_place=False, *, out=None)"
  },
  "type": "DocBlob"
}