{
  "aliases": [
    "skimage.registration.optical_flow_tvl1"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The TV-L1 solver is applied at each level of the image pyramid. TV-L1 is a popular algorithm for optical flow estimation introduced by Zack et al. , improved in  and detailed in ."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Color images are not supported."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The first gray scale image of the sequence."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "reference_image",
              "type": "Param",
              "type_": "ndarray, shape (M, N[, P[, ...]])"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The second gray scale image of the sequence."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "moving_image",
              "type": "Param",
              "type_": "ndarray, shape (M, N[, P[, ...]])"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Attachment parameter ("
                    },
                    {
                      "type": "inlineMath",
                      "value": "\\lambda"
                    },
                    {
                      "type": "text",
                      "value": " in ). The smaller this parameter is, the smoother the returned result will be."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "attachment",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Tightness parameter ("
                    },
                    {
                      "type": "inlineMath",
                      "value": "\\tau"
                    },
                    {
                      "type": "text",
                      "value": " in ). It should have a small value in order to maintain attachement and regularization parts in correspondence."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "tightness",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of times image1 is warped."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "num_warp",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of fixed point iteration."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "num_iter",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Tolerance used as stopping criterion based on the L\u00b2 distance between two consecutive values of (u, v)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "tol",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether to prefilter the estimated optical flow before each image warp. When True, a median filter with window size 3 along each axis is applied. This helps to remove potential outliers."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "prefilter",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Output data type: must be floating point. Single precision provides good results and saves memory usage and computation time compared to double precision."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dtype",
              "type": "Param",
              "type_": "dtype, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The estimated optical flow components for each axis."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "flow",
              "type": "Param",
              "type_": "ndarray, shape ((image0.ndim, M, N[, P[, ...]])"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Coarse to fine optical flow estimator."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from skimage.color import rgb2gray\nfrom skimage.data import stereo_motorcycle\nfrom skimage.registration import optical_flow_tvl1\nimage0, image1, disp = stereo_motorcycle()\n# --- Convert the images to gray level: color is not supported.\nimage0 = rgb2gray(image0)\nimage1 = rgb2gray(image1)\nflow = optical_flow_tvl1(image1, image0)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/skimage/registration/_optical_flow.py",
  "item_line": 144,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(reference_image, moving_image, *, attachment=15, tightness=0.3, num_warp=5, num_iter=10, tol=0.0001, prefilter=False, dtype=<class 'numpy.float32'>)"
  },
  "type": "DocBlob"
}