{
  "aliases": [
    "skimage.restoration.denoise_bilateral"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This is an edge-preserving, denoising filter. It averages pixels based on their spatial closeness and radiometric similarity ."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Spatial closeness is measured by the Gaussian function of the Euclidean distance between two pixels and a certain standard deviation ("
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "sigma_spatial",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "sigma_spatial"
            },
            {
              "type": "text",
              "value": ")."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Radiometric similarity is measured by the Gaussian function of the Euclidean distance between two color values and a certain standard deviation ("
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "sigma_color",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "sigma_color"
            },
            {
              "type": "text",
              "value": ")."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Note that, if the image is of any "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "int"
            },
            {
              "type": "text",
              "value": " dtype, "
            },
            {
              "type": "inlineCode",
              "value": "image"
            },
            {
              "type": "text",
              "value": " will be converted using the "
            },
            {
              "domain": null,
              "role": null,
              "type": "Directive",
              "value": "img_as_float"
            },
            {
              "type": "text",
              "value": " function and thus the standard deviation ("
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "sigma_color",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "sigma_color"
            },
            {
              "type": "text",
              "value": ") will be in range "
            },
            {
              "type": "inlineCode",
              "value": "[0, 1]"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For more information on scikit-image's data type conversions and how images are rescaled in these conversions, see: https://scikit-image.org/docs/stable/user_guide/data_types.html."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Deprecated in favor of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "channel_axis",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "channel_axis"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "deprecated 0.19"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "multichannel",
              "type": "Param",
              "type_": "DEPRECATED"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Input image, 2D grayscale or RGB."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "image",
              "type": "Param",
              "type_": "ndarray, shape (M, N[, 3])"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Window size for filtering. If win_size is not specified, it is calculated as "
                    },
                    {
                      "type": "inlineCode",
                      "value": "max(5, 2 * ceil(3 * sigma_spatial) + 1)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "win_size",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Standard deviation for grayvalue/color distance (radiometric similarity). A larger value results in averaging of pixels with larger radiometric differences. If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "None"
                    },
                    {
                      "type": "text",
                      "value": ", the standard deviation of "
                    },
                    {
                      "type": "inlineCode",
                      "value": "image"
                    },
                    {
                      "type": "text",
                      "value": " will be used."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "sigma_color",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Standard deviation for range distance. A larger value results in averaging of pixels with larger spatial differences."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "sigma_spatial",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of discrete values for Gaussian weights of color filtering. A larger value results in improved accuracy."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "bins",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "How to handle values outside the image borders. See "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "api",
                        "module": "numpy:pad",
                        "path": "numpy:pad",
                        "type": "RefInfo",
                        "version": "*"
                      },
                      "type": "Link",
                      "value": "numpy.pad"
                    },
                    {
                      "type": "text",
                      "value": " for detail."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "mode",
              "type": "Param",
              "type_": "{'constant', 'edge', 'symmetric', 'reflect', 'wrap'}"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Used in conjunction with mode 'constant', the value outside the image boundaries."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cval",
              "type": "Param",
              "type_": "string"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether the last axis of the image is to be interpreted as multiple channels or another spatial dimension. This argument is deprecated: specify "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "channel_axis",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "channel_axis"
                    },
                    {
                      "type": "text",
                      "value": " instead."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "multichannel",
              "type": "Param",
              "type_": "bool"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If None, the image is assumed to be a grayscale (single channel) image. Otherwise, this parameter indicates which axis of the array corresponds to channels."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 0.19"
                        }
                      ],
                      "type": "admonitionTitle"
                    },
                    {
                      "children": [
                        {
                          "type": "inlineCode",
                          "value": "channel_axis"
                        },
                        {
                          "type": "text",
                          "value": " was added in 0.19."
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "channel_axis",
              "type": "Param",
              "type_": "int or None, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Denoised image."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "denoised",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Denoise image using bilateral filter."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from skimage import data, img_as_float\nastro = img_as_float(data.astronaut())\nastro = astro[220:300, 220:320]\nrng = np.random.default_rng()\nnoisy = astro + 0.6 * astro.std() * rng.random(astro.shape)\nnoisy = np.clip(noisy, 0, 1)\ndenoised = denoise_bilateral(noisy, sigma_color=0.05, sigma_spatial=15,\n                             channel_axis=-1)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/skimage/restoration/_denoise.py",
  "item_line": 95,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Other Parameters",
    "Notes",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(image, win_size=None, sigma_color=None, sigma_spatial=1, bins=10000, mode='constant', cval=0, multichannel=False, *, channel_axis=None)"
  },
  "type": "DocBlob"
}