{
  "aliases": [
    "skimage.segmentation.clear_border"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Imaging data labels."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "labels",
              "type": "Param",
              "type_": "(M[, N[, ..., P]]) array of int or bool"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The width of the border examined.  By default, only objects that touch the outside of the image are removed."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "buffer_size",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Cleared objects are set to this value."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "bgval",
              "type": "Param",
              "type_": "float or int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether or not to manipulate the labels array in-place. Deprecated since version 0.19. Please use "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "out",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "out"
                    },
                    {
                      "type": "text",
                      "value": " instead."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "in_place",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Image data mask. Objects in labels image overlapping with False pixels of mask will be removed. If defined, the argument buffer_size will be ignored."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "mask",
              "type": "Param",
              "type_": "ndarray of bool, same shape as `image`, optional."
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Array of the same shape as "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "labels",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "labels"
                    },
                    {
                      "type": "text",
                      "value": ", into which the output is placed. By default, a new array is created."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Imaging data labels with cleared borders"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "(M[, N[, ..., P]]) array"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Clear objects connected to the label image border."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "import numpy as np\nfrom skimage.segmentation import clear_border\nlabels = np.array([[0, 0, 0, 0, 0, 0, 0, 1, 0],\n                   [1, 1, 0, 0, 1, 0, 0, 1, 0],\n                   [1, 1, 0, 1, 0, 1, 0, 0, 0],\n                   [0, 0, 0, 1, 1, 1, 1, 0, 0],\n                   [0, 1, 1, 1, 1, 1, 1, 1, 0],\n                   [0, 0, 0, 0, 0, 0, 0, 0, 0]])\nclear_border(labels)"
      },
      {
        "type": "code",
        "value": "mask = np.array([[0, 0, 1, 1, 1, 1, 1, 1, 1],\n                 [0, 0, 1, 1, 1, 1, 1, 1, 1],\n                 [1, 1, 1, 1, 1, 1, 1, 1, 1],\n                 [1, 1, 1, 1, 1, 1, 1, 1, 1],\n                 [1, 1, 1, 1, 1, 1, 1, 1, 1],\n                 [1, 1, 1, 1, 1, 1, 1, 1, 1]]).astype(bool)\nclear_border(labels, mask=mask)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/skimage/segmentation/_clear_border.py",
  "item_line": 7,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(labels, buffer_size=0, bgval=0, in_place=False, mask=None, *, out=None)"
  },
  "type": "DocBlob"
}