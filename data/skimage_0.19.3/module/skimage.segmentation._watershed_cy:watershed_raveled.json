{
  "aliases": [
    "skimage.segmentation._watershed_cy.watershed_raveled"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The flattened image pixels."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "image",
              "type": "Param",
              "type_": "array of float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The raveled coordinates of the initial markers (aka seeds) for the watershed. NOTE: these should "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "all"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " point to nonzero entries in the output, or the algorithm will never terminate and blow up your memory!"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "marker_locations",
              "type": "Param",
              "type_": "array of int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A list of coordinate offsets to compute the raveled coordinates of each neighbor from the raveled coordinates of the current pixel."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "structure",
              "type": "Param",
              "type_": "array of int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An array of the same shape as "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "image",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "image"
                    },
                    {
                      "type": "text",
                      "value": " where each pixel contains a nonzero value if it is to be considered for flooding with watershed, zero otherwise. NOTE: it is "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "essential"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " that the border pixels (those with neighbors falling outside the volume) are all set to zero, or segfaults could occur."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "mask",
              "type": "Param",
              "type_": "array of int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An array representing the number of steps to move along each dimension. This is used in computing the Euclidean distance between raveled indices."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "strides",
              "type": "Param",
              "type_": "array of int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A value greater than 0 implements the compact watershed algorithm (see .py file)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "compactness",
              "type": "Param",
              "type_": "float"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The output array, which must already contain nonzero entries at all the seed locations."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "output",
              "type": "Param",
              "type_": "array of int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Parameter indicating whether the watershed line is calculated. If wsl is set to True, the watershed line is calculated."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "wsl",
              "type": "Param",
              "type_": "bool"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Perform watershed algorithm using a raveled image and neighborhood."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": null,
  "item_line": null,
  "item_type": "<class 'builtin_function_or_method'>",
  "ordered_sections": [
    "Summary",
    "Parameters"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}