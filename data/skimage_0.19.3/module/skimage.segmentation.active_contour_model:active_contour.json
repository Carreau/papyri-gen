{
  "aliases": [
    "skimage.segmentation.active_contour"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Active contours by fitting snakes to features of images. Supports single and multichannel 2D images. Snakes can be periodic (for segmentation) or have fixed and/or free ends. The output snake has the same length as the input boundary. As the number of points is constant, make sure that the initial snake has enough points to capture the details of the final contour."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Deprecated in favor of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "max_num_iter",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "max_num_iter"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "deprecated 0.19"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "max_iterations",
              "type": "Param",
              "type_": "DEPRECATED"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Input image."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "image",
              "type": "Param",
              "type_": "(N, M) or (N, M, 3) ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Initial snake coordinates. For periodic boundary conditions, endpoints must not be duplicated."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "snake",
              "type": "Param",
              "type_": "(N, 2) ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Snake length shape parameter. Higher values makes snake contract faster."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "alpha",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Snake smoothness shape parameter. Higher values makes snake smoother."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "beta",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Controls attraction to brightness. Use negative values to attract toward dark regions."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "w_line",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Controls attraction to edges. Use negative values to repel snake from edges."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "w_edge",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Explicit time stepping parameter."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "gamma",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Maximum pixel distance to move per iteration."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "max_px_move",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Maximum iterations to optimize snake shape."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "max_num_iter",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Convergence criteria."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "convergence",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Boundary conditions for the contour. Can be one of 'periodic', 'free', 'fixed', 'free-fixed', or 'fixed-free'. 'periodic' attaches the two ends of the snake, 'fixed' holds the end-points in place, and 'free' allows free movement of the ends. 'fixed' and 'free' can be combined by parsing 'fixed-free', 'free-fixed'. Parsing 'fixed-fixed' or 'free-free' yields same behaviour as 'fixed' and 'free', respectively."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "boundary_condition",
              "type": "Param",
              "type_": "string, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "This option remains for compatibility purpose only and has no effect. It was introduced in 0.16 with the "
                    },
                    {
                      "type": "inlineCode",
                      "value": "'xy'"
                    },
                    {
                      "type": "text",
                      "value": " option, but since 0.18, only the "
                    },
                    {
                      "type": "inlineCode",
                      "value": "'rc'"
                    },
                    {
                      "type": "text",
                      "value": " option is valid. Coordinates must be set in a row-column format."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "coordinates",
              "type": "Param",
              "type_": "{'rc'}, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Optimised snake, same shape as input parameter."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "snake",
              "type": "Param",
              "type_": "(N, 2) ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Active contour model."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from skimage.draw import circle_perimeter\nfrom skimage.filters import gaussian"
      },
      {
        "type": "text",
        "value": "Create and smooth image:"
      },
      {
        "type": "code",
        "value": "img = np.zeros((100, 100))\nrr, cc = circle_perimeter(35, 45, 25)\nimg[rr, cc] = 1\nimg = gaussian(img, 2, preserve_range=False)"
      },
      {
        "type": "text",
        "value": "Initialize spline:"
      },
      {
        "type": "code",
        "value": "s = np.linspace(0, 2*np.pi, 100)\ninit = 50 * np.array([np.sin(s), np.cos(s)]).T + 50"
      },
      {
        "type": "text",
        "value": "Fit spline to image:"
      },
      {
        "type": "code",
        "value": "snake = active_contour(img, init, w_edge=0, w_line=1, coordinates='rc')  # doctest: +SKIP\ndist = np.sqrt((45-snake[:, 0])**2 + (35-snake[:, 1])**2)  # doctest: +SKIP\nint(np.mean(dist))  # doctest: +SKIP"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/skimage/segmentation/active_contour_model.py",
  "item_line": 9,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Other Parameters",
    "References",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(image, snake, alpha=0.01, beta=0.1, w_line=0, w_edge=1, gamma=0.01, max_px_move=1.0, max_num_iter=2500, convergence=0.1, *, boundary_condition='periodic', coordinates='rc')"
  },
  "type": "DocBlob"
}