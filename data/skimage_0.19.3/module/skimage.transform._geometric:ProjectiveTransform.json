{
  "aliases": [
    "skimage.transform.ProjectiveTransform"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Homogeneous transformation matrix."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "params",
              "type": "Param",
              "type_": "(D+1, D+1) array"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Apply a projective transformation (homography) on coordinates."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "For each homogeneous coordinate "
            },
            {
              "type": "inlineMath",
              "value": "\\mathbf{x} = [x, y, 1]^T"
            },
            {
              "type": "text",
              "value": ", its target position is calculated by multiplying with the given matrix, "
            },
            {
              "type": "inlineMath",
              "value": "H"
            },
            {
              "type": "text",
              "value": ", to give "
            },
            {
              "type": "inlineMath",
              "value": "H \\mathbf{x}"
            },
            {
              "type": "text",
              "value": ":    "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "[[a0 a1 a2]\n [b0 b1 b2]\n [c0 c1 1 ]]."
        },
        {
          "children": [
            {
              "type": "text",
              "value": "E.g., to rotate by theta degrees clockwise, the matrix should be    "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "[[cos(theta) -sin(theta) 0]\n [sin(theta)  cos(theta) 0]\n [0            0         1]]"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "or, to translate x by 10 and y by 20    "
            }
          ],
          "type": "paragraph"
        },
        {
          "type": "code",
          "value": "[[1 0 10]\n [0 1 20]\n [0 0 1 ]]."
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Homogeneous transformation matrix."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "matrix",
              "type": "Param",
              "type_": "(D+1, D+1) array, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The number of dimensions of the transform. This is ignored if "
                    },
                    {
                      "type": "inlineCode",
                      "value": "matrix"
                    },
                    {
                      "type": "text",
                      "value": " is not None."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dimensionality",
              "type": "Param",
              "type_": "int, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Projective transformation."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/skimage/transform/_geometric.py",
  "item_line": 525,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Attributes"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}