{
  "aliases": [
    "skimage.transform.warp"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The input image is converted to a "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "skimage",
                        "path": "skimage.measure._regionprops:RegionProperties._image_intensity_double",
                        "type": "RefInfo",
                        "version": "0.19.3"
                      },
                      "type": "Link",
                      "value": "double"
                    },
                    {
                      "type": "text",
                      "value": " image."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "In case of a "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "SimilarityTransform"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "AffineTransform"
                    },
                    {
                      "type": "text",
                      "value": " and   "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "ProjectiveTransform"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "order",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "order"
                    },
                    {
                      "type": "text",
                      "value": " in [0, 3] this function uses the   underlying transformation matrix to warp the image with a much faster   routine."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": false,
          "spread": false,
          "start": 1,
          "type": "list"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Input image."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "image",
              "type": "Param",
              "type_": "ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Inverse coordinate map, which transforms coordinates in the output images into their corresponding coordinates in the input image."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "There are a number of different options to define this map, depending on the dimensionality of the input image. A 2-D image can have 2 dimensions for gray-scale images, or 3 dimensions with color information."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "For 2-D images, you can directly pass a transformation object,    e.g. "
                                },
                                {
                                  "anchor": null,
                                  "exists": true,
                                  "kind": "module",
                                  "reference": {
                                    "kind": "api",
                                    "module": "skimage",
                                    "path": "skimage.transform._geometric:SimilarityTransform",
                                    "type": "RefInfo",
                                    "version": "*"
                                  },
                                  "type": "Link",
                                  "value": "skimage.transform.SimilarityTransform"
                                },
                                {
                                  "type": "text",
                                  "value": ", or its inverse."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "For 2-D images, you can pass a "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "(3, 3)"
                                },
                                {
                                  "type": "text",
                                  "value": " homogeneous    transformation matrix, e.g.    "
                                },
                                {
                                  "domain": null,
                                  "role": null,
                                  "type": "Directive",
                                  "value": "skimage.transform.SimilarityTransform.params"
                                },
                                {
                                  "type": "text",
                                  "value": "."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "For 2-D images, a function that transforms a "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "(M, 2)"
                                },
                                {
                                  "type": "text",
                                  "value": " array of    "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "(col, row)"
                                },
                                {
                                  "type": "text",
                                  "value": " coordinates in the output image to their    corresponding coordinates in the input image. Extra parameters to    the function can be specified through "
                                },
                                {
                                  "anchor": null,
                                  "exists": true,
                                  "kind": "local",
                                  "reference": {
                                    "kind": "local",
                                    "module": null,
                                    "path": "map_args",
                                    "type": "RefInfo",
                                    "version": null
                                  },
                                  "type": "Link",
                                  "value": "map_args"
                                },
                                {
                                  "type": "text",
                                  "value": "."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        },
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "type": "text",
                                  "value": "For N-D images, you can directly pass an array of coordinates.    The first dimension specifies the coordinates in the input image,    while the subsequent dimensions determine the position in the    output image. E.g. in case of 2-D images, you need to pass an array    of shape "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "(2, rows, cols)"
                                },
                                {
                                  "type": "text",
                                  "value": ", where "
                                },
                                {
                                  "anchor": null,
                                  "exists": true,
                                  "kind": "module",
                                  "reference": {
                                    "kind": "module",
                                    "module": "skimage",
                                    "path": "skimage.util.unique:unique_rows",
                                    "type": "RefInfo",
                                    "version": "0.19.3"
                                  },
                                  "type": "Link",
                                  "value": "rows"
                                },
                                {
                                  "type": "text",
                                  "value": " and "
                                },
                                {
                                  "domain": null,
                                  "role": null,
                                  "type": "Directive",
                                  "value": "cols"
                                },
                                {
                                  "type": "text",
                                  "value": " determine the    shape of the output image, and the first dimension contains the    "
                                },
                                {
                                  "type": "inlineCode",
                                  "value": "(row, col)"
                                },
                                {
                                  "type": "text",
                                  "value": " coordinate in the input image.    See "
                                },
                                {
                                  "anchor": null,
                                  "exists": true,
                                  "kind": "module",
                                  "reference": {
                                    "kind": "api",
                                    "module": "scipy",
                                    "path": "scipy.ndimage._interpolation:map_coordinates",
                                    "type": "RefInfo",
                                    "version": "*"
                                  },
                                  "type": "Link",
                                  "value": "scipy.ndimage.map_coordinates"
                                },
                                {
                                  "type": "text",
                                  "value": " for further documentation."
                                }
                              ],
                              "type": "paragraph"
                            }
                          ],
                          "spread": false,
                          "type": "listItem"
                        }
                      ],
                      "ordered": false,
                      "spread": false,
                      "start": 1,
                      "type": "list"
                    }
                  ],
                  "type": "blockquote"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Note, that a "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(3, 3)"
                    },
                    {
                      "type": "text",
                      "value": " matrix is interpreted as a homogeneous transformation matrix, so you cannot interpolate values from a 3-D input, if the output is of shape "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(3,)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "See example section for usage."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "inverse_map",
              "type": "Param",
              "type_": "transformation object, callable ``cr = f(cr, **kwargs)``, or ndarray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Keyword arguments passed to "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "inverse_map",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "inverse_map"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "map_args",
              "type": "Param",
              "type_": "dict, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Shape of the output image generated. By default the shape of the input image is preserved.  Note that, even for multi-band images, only rows and columns need to be specified."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "output_shape",
              "type": "Param",
              "type_": "tuple (rows, cols), optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "dd": [
                        {
                          "children": [
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "0: Nearest-neighbor"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              "spread": false,
                              "type": "listItem"
                            },
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "1: Bi-linear (default)"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              "spread": false,
                              "type": "listItem"
                            },
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "2: Bi-quadratic"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              "spread": false,
                              "type": "listItem"
                            },
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "3: Bi-cubic"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              "spread": false,
                              "type": "listItem"
                            },
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "4: Bi-quartic"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              "spread": false,
                              "type": "listItem"
                            },
                            {
                              "children": [
                                {
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "5: Bi-quintic"
                                    }
                                  ],
                                  "type": "paragraph"
                                }
                              ],
                              "spread": false,
                              "type": "listItem"
                            }
                          ],
                          "ordered": false,
                          "spread": false,
                          "start": 1,
                          "type": "list"
                        },
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "Default is 0 if image.dtype is bool and 1 otherwise."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "dt": {
                        "children": [
                          {
                            "type": "text",
                            "value": "The order of interpolation. The order has to be in the range 0-5:"
                          }
                        ],
                        "type": "paragraph"
                      },
                      "type": "DefListItem"
                    }
                  ],
                  "type": "DefList"
                }
              ],
              "param": "order",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Points outside the boundaries of the input are filled according to the given mode.  Modes match the behaviour of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "api",
                        "module": "numpy:pad",
                        "path": "numpy:pad",
                        "type": "RefInfo",
                        "version": "*"
                      },
                      "type": "Link",
                      "value": "numpy.pad"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "mode",
              "type": "Param",
              "type_": "{'constant', 'edge', 'symmetric', 'reflect', 'wrap'}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Used in conjunction with mode 'constant', the value outside the image boundaries."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cval",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether to clip the output to the range of values of the input image. This is enabled by default, since higher order interpolation may produce values outside the given input range."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "clip",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Whether to keep the original range of values. Otherwise, the input image is converted according to the conventions of "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "img_as_float"
                    },
                    {
                      "type": "text",
                      "value": ". Also see https://scikit-image.org/docs/dev/user_guide/data_types.html"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "preserve_range",
              "type": "Param",
              "type_": "bool, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The warped input image."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "warped",
              "type": "Param",
              "type_": "double ndarray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Warp an image according to a given coordinate transformation."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from skimage.transform import warp\nfrom skimage import data\nimage = data.camera()"
      },
      {
        "type": "text",
        "value": "The following image warps are all equal but differ substantially in\nexecution time. The image is shifted to the bottom."
      },
      {
        "type": "text",
        "value": "Use a geometric transform to warp an image (fast):"
      },
      {
        "type": "code",
        "value": "from skimage.transform import SimilarityTransform\ntform = SimilarityTransform(translation=(0, -10))\nwarped = warp(image, tform)"
      },
      {
        "type": "text",
        "value": "Use a callable (slow):"
      },
      {
        "type": "code",
        "value": "def shift_down(xy):\n    xy[:, 1] -= 10\n    return xy\nwarped = warp(image, shift_down)"
      },
      {
        "type": "text",
        "value": "Use a transformation matrix to warp an image (fast):"
      },
      {
        "type": "code",
        "value": "matrix = np.array([[1, 0, 0], [0, 1, -10], [0, 0, 1]])\nwarped = warp(image, matrix)\nfrom skimage.transform import ProjectiveTransform\nwarped = warp(image, ProjectiveTransform(matrix=matrix))"
      },
      {
        "type": "text",
        "value": "You can also use the inverse of a geometric transformation (fast):"
      },
      {
        "type": "code",
        "value": "warped = warp(image, tform.inverse)"
      },
      {
        "type": "text",
        "value": "For N-D images you can pass a coordinate array, that specifies the\ncoordinates in the input image for every element in the output image. E.g.\nif you want to rescale a 3-D cube, you can do:"
      },
      {
        "type": "code",
        "value": "cube_shape = np.array([30, 30, 30])\nrng = np.random.default_rng()\ncube = rng.random(cube_shape)"
      },
      {
        "type": "text",
        "value": "Setup the coordinate array, that defines the scaling:"
      },
      {
        "type": "code",
        "value": "scale = 0.1\noutput_shape = (scale * cube_shape).astype(int)\ncoords0, coords1, coords2 = np.mgrid[:output_shape[0],\n                   :output_shape[1], :output_shape[2]]\ncoords = np.array([coords0, coords1, coords2])"
      },
      {
        "type": "text",
        "value": "Assume that the cube contains spatial data, where the first array element\ncenter is at coordinate (0.5, 0.5, 0.5) in real space, i.e. we have to\naccount for this extra offset when scaling the image:"
      },
      {
        "type": "code",
        "value": "coords = (coords + 0.5) / scale - 0.5\nwarped = warp(cube, coords)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/skimage/transform/_warps.py",
  "item_line": 747,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(image, inverse_map, map_args={}, output_shape=None, order=None, mode='constant', cval=0.0, clip=True, preserve_range=False)"
  },
  "type": "DocBlob"
}