{
  "aliases": [
    "skimage.util.montage"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Create a rectangular montage from an input array representing an ensemble of equally shaped single- (gray) or multichannel (color) images."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "For example, "
                },
                "type": "Words"
              },
              {
                "data": {
                  "value": [
                    "montage(arr_in)"
                  ]
                },
                "type": "Verbatim"
              },
              {
                "data": {
                  "value": " called with the following "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "arr_in",
                    "version": null
                  },
                  "value": "arr_in"
                },
                "type": "Link"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "+---+---+---+ | 1 | 2 | 3 | +---+---+---+"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "will return"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "+---+---+ | 1 | 2 | +---+---+ | 3 | * | +---+---+"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "where the '*' patch will be determined by the "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "fill",
                    "version": null
                  },
                  "value": "fill"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": " parameter."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Deprecated in favor of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "channel_axis",
                              "version": null
                            },
                            "value": "channel_axis"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  },
                  {
                    "data": {
                      "children": [],
                      "kind": "deprecated",
                      "title": "0.19"
                    },
                    "type": "Admonition"
                  }
                ],
                "param": "multichannel",
                "type_": "DEPRECATED"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "An array representing an ensemble of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "K"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " images of equal shape."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "arr_in",
                "type_": "(K, M, N[, C]) ndarray"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Value to fill the padding areas and/or the extra tiles in the output array. Has to be "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "float"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " for single channel collections. For multichannel collections has to be an array-like of shape of number of channels. If "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "module",
                            "reference": {
                              "kind": "module",
                              "module": "skimage",
                              "path": "skimage.filters.rank.generic.mean",
                              "version": "0.19.3"
                            },
                            "value": "mean"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": ", uses the mean value over all images."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "fill",
                "type_": "float or array-like of floats or 'mean', optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Whether to rescale the intensity of each image to [0, 1]."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "rescale_intensity",
                "type_": "bool, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The desired grid shape for the montage "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "(ntiles_row, ntiles_column)"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ". The default aspect ratio is square."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "grid_shape",
                "type_": "tuple, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "The size of the spacing between the tiles and between the tiles and the borders. If non-zero, makes the boundaries of individual images easier to perceive."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "padding_width",
                "type_": "int, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If True, the last "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "arr_in",
                              "version": null
                            },
                            "value": "arr_in"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " dimension is threated as a color channel, otherwise as spatial. This argument is deprecated: specify "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "channel_axis",
                              "version": null
                            },
                            "value": "channel_axis"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " instead."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "multichannel",
                "type_": "boolean, optional"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If None, the image is assumed to be a grayscale (single channel) image. Otherwise, this parameter indicates which axis of the array corresponds to channels."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "channel_axis",
                "type_": "int or None, optional"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Output array with input images glued together (including padding "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "p"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ")."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "arr_out",
                "type_": "(K*(M+p)+p, K*(N+p)+p[, C]) ndarray"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Create a montage of several single- or multichannel images."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            {
              "link": {
                "data": "import",
                "type": "str"
              },
              "type": "kn"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "skimage",
                    "path": "skimage.exposure.exposure._get_numpy_hist_range",
                    "version": "0.19.3"
                  },
                  "value": "numpy"
                },
                "type": "Link"
              },
              "type": "nn"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "as",
                "type": "str"
              },
              "type": "k"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "skimage",
                    "path": "skimage.exposure.exposure._get_numpy_hist_range",
                    "version": "0.19.3"
                  },
                  "value": "np"
                },
                "type": "Link"
              },
              "type": "nn"
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": "w"
            },
            {
              "link": {
                "data": "from",
                "type": "str"
              },
              "type": "kn"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "skimage",
                    "path": "skimage",
                    "version": "0.19.3"
                  },
                  "value": "skimage"
                },
                "type": "Link"
              },
              "type": "nn"
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "nn"
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "skimage",
                    "path": "skimage.util",
                    "version": "0.19.3"
                  },
                  "value": "util"
                },
                "type": "Link"
              },
              "type": "nn"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "import",
                "type": "str"
              },
              "type": "kn"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "montage",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": "w"
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.ndarray",
                    "version": "*"
                  },
                  "value": "arr_in"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "skimage",
                    "path": "skimage.exposure.exposure._get_numpy_hist_range",
                    "version": "0.19.3"
                  },
                  "value": "np"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.arange",
                    "version": "*"
                  },
                  "value": "arange"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "3",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "*",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "2",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "*",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "2",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.ndarray.reshape",
                    "version": "*"
                  },
                  "value": "reshape"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "3",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "2",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "2",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": "w"
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.ndarray",
                    "version": "*"
                  },
                  "value": "arr_in"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "  ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "# doctest: +NORMALIZE_WHITESPACE",
                "type": "str"
              },
              "type": "c1"
            }
          ],
          "out": "array([[[ 0,  1],\n        [ 2,  3]],\n       [[ 4,  5],\n        [ 6,  7]],\n       [[ 8,  9],\n        [10, 11]]])"
        },
        "type": "Code2"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            {
              "link": {
                "data": "arr_out",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "montage",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.ndarray",
                    "version": "*"
                  },
                  "value": "arr_in"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": "w"
            },
            {
              "link": {
                "data": "arr_out",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "shape",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "(4, 4)"
        },
        "type": "Code2"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            {
              "link": {
                "data": "arr_out",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "array([[ 0,  1,  4,  5],\n       [ 2,  3,  6,  7],\n       [ 8,  9,  5,  5],\n       [10, 11,  5,  5]])"
        },
        "type": "Code2"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.ndarray",
                    "version": "*"
                  },
                  "value": "arr_in"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy._ArrayOrScalarCommon.mean",
                    "version": "*"
                  },
                  "value": "mean"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "5.5"
        },
        "type": "Code2"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            {
              "link": {
                "data": "arr_out_nonsquare",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "montage",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "module",
                  "reference": {
                    "kind": "module",
                    "module": "numpy",
                    "path": "numpy.ndarray",
                    "version": "*"
                  },
                  "value": "arr_in"
                },
                "type": "Link"
              },
              "type": ""
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "grid_shape",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "=",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "(",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "1",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ",",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": " ",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "3",
                "type": "str"
              },
              "type": "mi"
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ")",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": "\n",
                "type": "str"
              },
              "type": "w"
            },
            {
              "link": {
                "data": "arr_out_nonsquare",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "array([[ 0,  1,  4,  5,  8,  9],\n       [ 2,  3,  6,  7, 10, 11]])"
        },
        "type": "Code2"
      },
      {
        "data": {
          "ce_status": "compiled",
          "entries": [
            {
              "link": {
                "data": "arr_out_nonsquare",
                "type": "str"
              },
              "type": ""
            },
            {
              "link": {
                "data": ".",
                "type": "str"
              },
              "type": "o"
            },
            {
              "link": {
                "data": "shape",
                "type": "str"
              },
              "type": ""
            }
          ],
          "out": "(2, 6)"
        },
        "type": "Code2"
      }
    ],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/skimage/util/_montage.py",
  "item_line": 9,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Other Parameters",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "montage(arr_in, fill='mean', rescale_intensity=False, grid_shape=None, padding_width=0, multichannel=False, *, channel_axis=None)"
  }
}