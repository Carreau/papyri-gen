{
  "aliases": [
    "skimage.util.regular_grid"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The returned points (as slices) should be as close to cubically-spaced as possible. Essentially, the points are spaced by the Nth root of the input array size, where N is the number of dimensions. However, if an array dimension cannot fit a full step size, it is \"discarded\", and the computation is done for only the remaining dimensions."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The shape of the space embedding the grid. "
                    },
                    {
                      "type": "inlineCode",
                      "value": "len(ar_shape)"
                    },
                    {
                      "type": "text",
                      "value": " is the number of dimensions."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "ar_shape",
              "type": "Param",
              "type_": "array-like of ints"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The (approximate) number of points to embed in the space."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "n_points",
              "type": "Param",
              "type_": "int"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A slice along each dimension of "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "ar_shape",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "ar_shape"
                    },
                    {
                      "type": "text",
                      "value": ", such that the intersection of all the slices give the coordinates of regularly spaced points."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionchanged 0.14.1"
                        }
                      ],
                      "type": "admonitionTitle"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "In scikit-image 0.14.1 and 0.15, the return type was changed from a list to a tuple to ensure "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "compatibility with Numpy 1.15"
                        },
                        {
                          "type": "text",
                          "value": " and higher. If your code requires the returned result to be a list, you may convert the output of this function to a list with:"
                        }
                      ],
                      "type": "paragraph"
                    },
                    {
                      "type": "code",
                      "value": ">>> result = list(regular_grid(ar_shape=(3, 20, 40), n_points=8))"
                    },
                    {
                      "placeholder": "target",
                      "type": "Unimplemented",
                      "value": ".. _compatibility with NumPy 1.15: https://github.com/numpy/numpy/blob/master/doc/release/1.15.0-notes.rst#deprecations"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "slices",
              "type": "Param",
              "type_": "tuple of slice objects"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Find "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "n_points",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "n_points"
            },
            {
              "type": "text",
              "value": " regularly spaced along "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "ar_shape",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "ar_shape"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "ar = np.zeros((20, 40))\ng = regular_grid(ar.shape, 8)\ng"
      },
      {
        "type": "code",
        "value": "ar[g] = 1\nar.sum()"
      },
      {
        "type": "code",
        "value": "ar = np.zeros((20, 40))\ng = regular_grid(ar.shape, 32)\ng"
      },
      {
        "type": "code",
        "value": "ar[g] = 1\nar.sum()"
      },
      {
        "type": "code",
        "value": "ar = np.zeros((3, 20, 40))\ng = regular_grid(ar.shape, 8)\ng"
      },
      {
        "type": "code",
        "value": "ar[g] = 1\nar.sum()"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/skimage/util/_regular_grid.py",
  "item_line": 4,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(ar_shape, n_points)"
  },
  "type": "DocBlob"
}