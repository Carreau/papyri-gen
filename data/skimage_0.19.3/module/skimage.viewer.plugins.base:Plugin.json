{
  "aliases": [
    "skimage.viewer.plugins.Plugin"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Window containing image used in measurement."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "image_viewer",
              "type": "Param",
              "type_": "ImageViewer"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Name of plugin. This is displayed as the window title."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "name",
              "type": "Param",
              "type_": "str"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "List of Matplotlib artists and canvastools. Any artists created by the plugin should be added to this list so that it gets cleaned up on close."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "artist",
              "type": "Param",
              "type_": "list"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "A plugin connects an image filter (or another function) to an image viewer. Note that a Plugin is initialized "
            },
            {
              "children": [
                {
                  "type": "text",
                  "value": "without"
                }
              ],
              "type": "emphasis"
            },
            {
              "type": "text",
              "value": " an image viewer and attached in a later step. See example below for details."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Window containing image used in measurement/manipulation."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "image_viewer",
              "type": "Param",
              "type_": "ImageViewer"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Function that gets called to update image in image viewer. This value can be "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "None"
                    },
                    {
                      "type": "text",
                      "value": " if, for example, you have a plugin that extracts information from an image and doesn't manipulate it. Alternatively, this function can be defined as a method in a Plugin subclass."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "image_filter",
              "type": "Param",
              "type_": "function"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Size of plugin window in pixels. Note that Qt will automatically resize a window to fit components. So if you're adding rows of components, you can leave "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "height = 0"
                    },
                    {
                      "type": "text",
                      "value": " and just let Qt determine the final height."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "height, width",
              "type": "Param",
              "type_": "int"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, use blitting to speed up animation. Only available on some Matplotlib backends. If None, set to True when using Agg backend. This only has an effect if you draw on top of an image viewer."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "useblit",
              "type": "Param",
              "type_": "bool"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Base class for plugins that interact with an ImageViewer."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "from skimage.viewer import ImageViewer\nfrom skimage.viewer.widgets import Slider\nfrom skimage import data"
      },
      {
        "type": "code",
        "value": "plugin = Plugin(image_filter=lambda img,\n                threshold: img > threshold) # doctest: +SKIP\nplugin += Slider('threshold', 0, 255)       # doctest: +SKIP"
      },
      {
        "type": "code",
        "value": "image = data.coins()\nviewer = ImageViewer(image)       # doctest: +SKIP\nviewer += plugin                  # doctest: +SKIP\nthresholded = viewer.show()[0][0] # doctest: +SKIP"
      },
      {
        "type": "text",
        "value": "The plugin will automatically delegate parameters to `image_filter` based\non its parameter type, i.e., `ptype` (widgets for required arguments must\nbe added in the order they appear in the function). The image attached\nto the viewer is **automatically passed as the first argument** to the\nfilter function."
      },
      {
        "type": "text",
        "value": "#TODO: Add flag so image is not passed to filter function by default."
      },
      {
        "type": "text",
        "value": "`ptype = 'kwarg'` is the default for most widgets so it's unnecessary here."
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/skimage/viewer/plugins/base.py",
  "item_line": 11,
  "item_type": "<class 'type'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Attributes",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": null
  },
  "type": "DocBlob"
}