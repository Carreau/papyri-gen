{
  "aliases": [
    "xarray.core.accessor_str.StringAccessor.replace"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "If "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "pat",
                    "version": null
                  },
                  "value": "pat"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ", "
                },
                "type": "Words"
              },
              {
                "data": {
                  "anchor": null,
                  "exists": true,
                  "kind": "local",
                  "reference": {
                    "kind": "local",
                    "module": null,
                    "path": "repl",
                    "version": null
                  },
                  "value": "repl"
                },
                "type": "Link"
              },
              {
                "data": {
                  "value": ", or 'n` is array-like, they are broadcast against the array and applied elementwise."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "String can be a character sequence or regular expression. If array-like, it is broadcast."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "pat",
                "type_": "str or re.Pattern or array-like of str or re.Pattern"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Replacement string or a callable. The callable is passed the regex match object and must return a replacement string to be used. See "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "re.sub"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". If array-like, it is broadcast."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "repl",
                "type_": "str or callable or array-like of str or callable"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Number of replacements to make from start. Use "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "-1"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " to replace all. If array-like, it is broadcast."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "n",
                "type_": "int or array of int, default: -1"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If True, case sensitive. Cannot be set if "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "pat",
                              "version": null
                            },
                            "value": "pat"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is a compiled regex. Equivalent to setting the "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "re.IGNORECASE"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": " flag."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "case",
                "type_": "bool, default: True"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "Flags to pass through to the re module, e.g. "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "domain": null,
                            "role": null,
                            "value": "re.IGNORECASE"
                          },
                          "type": "Directive"
                        },
                        {
                          "data": {
                            "value": ". see "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "target": "https://docs.python.org/3/howto/regex.html#compilation-flags",
                            "value": "compilation-flags"
                          },
                          "type": "ExternalLink"
                        },
                        {
                          "data": {
                            "value": ". "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "0"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": " means no flags. Flags can be combined with the bitwise or operator "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "value": [
                              "|"
                            ]
                          },
                          "type": "Verbatim"
                        },
                        {
                          "data": {
                            "value": ". Cannot be set if "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "pat",
                              "version": null
                            },
                            "value": "pat"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is a compiled regex."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "flags",
                "type_": "int, default: 0"
              },
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "If True, assumes the passed-in pattern is a regular expression. If False, treats the pattern as a literal string. Cannot be set to False if "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "pat",
                              "version": null
                            },
                            "value": "pat"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is a compiled regex or "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "repl",
                              "version": null
                            },
                            "value": "repl"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " is a callable."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "regex",
                "type_": "bool, default: True"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [
                  {
                    "data": {
                      "children": [
                        {
                          "data": {
                            "value": "A copy of the object with all matching occurrences of "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "pat",
                              "version": null
                            },
                            "value": "pat"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": " replaced by "
                          },
                          "type": "Words"
                        },
                        {
                          "data": {
                            "anchor": null,
                            "exists": true,
                            "kind": "local",
                            "reference": {
                              "kind": "local",
                              "module": null,
                              "path": "repl",
                              "version": null
                            },
                            "value": "repl"
                          },
                          "type": "Link"
                        },
                        {
                          "data": {
                            "value": "."
                          },
                          "type": "Words"
                        }
                      ]
                    },
                    "type": "Paragraph"
                  }
                ],
                "param": "replaced",
                "type_": "same type as values"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Replace occurrences of pattern/regex in the array with some string."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/xarray/core/accessor_str.py",
  "item_line": 1529,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "replace(self, pat: 'str | bytes | Pattern | Any', repl: 'str | bytes | Callable | Any', n: 'int | Any' = -1, case: 'bool | None' = None, flags: 'int' = 0, regex: 'bool' = True) -> 'T_DataArray'"
  }
}