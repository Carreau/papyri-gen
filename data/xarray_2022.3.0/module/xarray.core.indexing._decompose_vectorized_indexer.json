{
  "aliases": [
    "xarray.conventions.indexing._decompose_vectorized_indexer"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Notes": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "This function is used to realize the vectorized indexing for the backend arrays that only support basic or outer indexing."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "As an example, let us consider to index a few elements from a backend array with a vectorized indexer ([0, 3, 1], [2, 3, 2]). Even if the backend array only supports outer indexing, it is more efficient to load a subslice of the array than loading the entire array,"
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        },
        {
          "data": {
            "value": ">>> array = np.arange(36).reshape(6, 6)\n>>> backend_indexer = OuterIndexer((np.array([0, 1, 3]), np.array([2, 3])))\n>>> # load subslice of the array\n... array = NumpyIndexingAdapter(array)[backend_indexer]\n>>> np_indexer = VectorizedIndexer((np.array([0, 2, 1]), np.array([0, 1, 0])))\n>>> # vectorized indexing for on-memory np.ndarray.\n... NumpyIndexingAdapter(array)[np_indexer]\narray([ 2, 21,  8])"
          },
          "type": "BlockVerbatim"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Parameters": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [],
                "param": "indexer",
                "type_": "VectorizedIndexer"
              },
              {
                "desc": [],
                "param": "indexing_support",
                "type_": "one of IndexerSupport entries"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Returns": {
      "children": [
        {
          "data": {
            "children": [
              {
                "desc": [],
                "param": "",
                "type_": "backend_indexer: OuterIndexer or BasicIndexer"
              },
              {
                "desc": [],
                "param": "",
                "type_": "np_indexers: an ExplicitIndexer (VectorizedIndexer / BasicIndexer)"
              }
            ]
          },
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Summary": {
      "children": [
        {
          "data": {
            "children": [
              {
                "data": {
                  "value": "Decompose vectorized indexer to the successive two indexers, where the first indexer will be used to index backend arrays, while the second one is used to index loaded on-memory np.ndarray."
                },
                "type": "Words"
              }
            ]
          },
          "type": "Paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null
  },
  "item_file": "/xarray/core/indexing.py",
  "item_line": 745,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "value": "_decompose_vectorized_indexer(indexer: xarray.core.indexing.VectorizedIndexer, shape: Tuple[int, ...], indexing_support: xarray.core.indexing.IndexingSupport) -> Tuple[xarray.core.indexing.ExplicitIndexer, xarray.core.indexing.ExplicitIndexer]"
  }
}