{
  "aliases": [
    "xarray.cftime_range"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This function is an analog of "
            },
            {
              "type": "inlineCode",
              "value": "pandas.date_range"
            },
            {
              "type": "text",
              "value": " for use in generating sequences of "
            },
            {
              "type": "inlineCode",
              "value": "cftime.datetime"
            },
            {
              "type": "text",
              "value": " objects.  It supports most of the features of "
            },
            {
              "type": "inlineCode",
              "value": "pandas.date_range"
            },
            {
              "type": "text",
              "value": " (e.g. specifying how the index is "
            },
            {
              "type": "inlineCode",
              "value": "closed"
            },
            {
              "type": "text",
              "value": " on either side, or whether or not to "
            },
            {
              "type": "inlineCode",
              "value": "normalize"
            },
            {
              "type": "text",
              "value": " the start and end bounds); however, there are some notable exceptions:"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "You cannot specify a "
                    },
                    {
                      "type": "inlineCode",
                      "value": "tz"
                    },
                    {
                      "type": "text",
                      "value": " (time zone) argument."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Start or end dates specified as partial-datetime strings must use the   "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "ISO-8601 format"
                        }
                      ],
                      "title": "",
                      "type": "link",
                      "url": "https://en.wikipedia.org/wiki/ISO_8601"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "It supports many, but not all, frequencies supported by   "
                    },
                    {
                      "type": "inlineCode",
                      "value": "pandas.date_range"
                    },
                    {
                      "type": "text",
                      "value": ".  For example it does not currently support any of   the business-related or semi-monthly frequencies."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Compound sub-monthly frequencies are not supported, e.g. '1H1min', as   these can easily be written in terms of the finest common resolution,   e.g. '61min'."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "spread": false,
              "type": "listItem"
            }
          ],
          "ordered": false,
          "spread": false,
          "start": 1,
          "type": "list"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Valid simple frequency strings for use with "
            },
            {
              "type": "inlineCode",
              "value": "cftime"
            },
            {
              "type": "text",
              "value": "-calendars include any multiples of the following."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "+--------+--------------------------+ | Alias  | Description              | +========+==========================+ | A, Y   | Year-end frequency       | +--------+--------------------------+ | AS, YS | Year-start frequency     | +--------+--------------------------+ | Q      | Quarter-end frequency    | +--------+--------------------------+ | QS     | Quarter-start frequency  | +--------+--------------------------+ | M      | Month-end frequency      | +--------+--------------------------+ | MS     | Month-start frequency    | +--------+--------------------------+ | D      | Day frequency            | +--------+--------------------------+ | H      | Hour frequency           | +--------+--------------------------+ | T, min | Minute frequency         | +--------+--------------------------+ | S      | Second frequency         | +--------+--------------------------+ | L, ms  | Millisecond frequency    | +--------+--------------------------+ | U, us  | Microsecond frequency    | +--------+--------------------------+"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Any multiples of the following anchored offsets are also supported."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "+----------+--------------------------------------------------------------------+ | Alias    | Description                                                        | +==========+====================================================================+ | A(S)-JAN | Annual frequency, anchored at the end (or beginning) of January    | +----------+--------------------------------------------------------------------+ | A(S)-FEB | Annual frequency, anchored at the end (or beginning) of February   | +----------+--------------------------------------------------------------------+ | A(S)-MAR | Annual frequency, anchored at the end (or beginning) of March      | +----------+--------------------------------------------------------------------+ | A(S)-APR | Annual frequency, anchored at the end (or beginning) of April      | +----------+--------------------------------------------------------------------+ | A(S)-MAY | Annual frequency, anchored at the end (or beginning) of May        | +----------+--------------------------------------------------------------------+ | A(S)-JUN | Annual frequency, anchored at the end (or beginning) of June       | +----------+--------------------------------------------------------------------+ | A(S)-JUL | Annual frequency, anchored at the end (or beginning) of July       | +----------+--------------------------------------------------------------------+ | A(S)-AUG | Annual frequency, anchored at the end (or beginning) of August     | +----------+--------------------------------------------------------------------+ | A(S)-SEP | Annual frequency, anchored at the end (or beginning) of September  | +----------+--------------------------------------------------------------------+ | A(S)-OCT | Annual frequency, anchored at the end (or beginning) of October    | +----------+--------------------------------------------------------------------+ | A(S)-NOV | Annual frequency, anchored at the end (or beginning) of November   | +----------+--------------------------------------------------------------------+ | A(S)-DEC | Annual frequency, anchored at the end (or beginning) of December   | +----------+--------------------------------------------------------------------+ | Q(S)-JAN | Quarter frequency, anchored at the end (or beginning) of January   | +----------+--------------------------------------------------------------------+ | Q(S)-FEB | Quarter frequency, anchored at the end (or beginning) of February  | +----------+--------------------------------------------------------------------+ | Q(S)-MAR | Quarter frequency, anchored at the end (or beginning) of March     | +----------+--------------------------------------------------------------------+ | Q(S)-APR | Quarter frequency, anchored at the end (or beginning) of April     | +----------+--------------------------------------------------------------------+ | Q(S)-MAY | Quarter frequency, anchored at the end (or beginning) of May       | +----------+--------------------------------------------------------------------+ | Q(S)-JUN | Quarter frequency, anchored at the end (or beginning) of June      | +----------+--------------------------------------------------------------------+ | Q(S)-JUL | Quarter frequency, anchored at the end (or beginning) of July      | +----------+--------------------------------------------------------------------+ | Q(S)-AUG | Quarter frequency, anchored at the end (or beginning) of August    | +----------+--------------------------------------------------------------------+ | Q(S)-SEP | Quarter frequency, anchored at the end (or beginning) of September | +----------+--------------------------------------------------------------------+ | Q(S)-OCT | Quarter frequency, anchored at the end (or beginning) of October   | +----------+--------------------------------------------------------------------+ | Q(S)-NOV | Quarter frequency, anchored at the end (or beginning) of November  | +----------+--------------------------------------------------------------------+ | Q(S)-DEC | Quarter frequency, anchored at the end (or beginning) of December  | +----------+--------------------------------------------------------------------+"
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Finally, the following calendar aliases are supported."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "+--------------------------------+---------------------------------------+ | Alias                          | Date type                             | +================================+=======================================+ | standard, gregorian            | "
            },
            {
              "type": "inlineCode",
              "value": "cftime.DatetimeGregorian"
            },
            {
              "type": "text",
              "value": "          | +--------------------------------+---------------------------------------+ | proleptic_gregorian            | "
            },
            {
              "type": "inlineCode",
              "value": "cftime.DatetimeProlepticGregorian"
            },
            {
              "type": "text",
              "value": " | +--------------------------------+---------------------------------------+ | noleap, 365_day                | "
            },
            {
              "type": "inlineCode",
              "value": "cftime.DatetimeNoLeap"
            },
            {
              "type": "text",
              "value": "             | +--------------------------------+---------------------------------------+ | all_leap, 366_day              | "
            },
            {
              "type": "inlineCode",
              "value": "cftime.DatetimeAllLeap"
            },
            {
              "type": "text",
              "value": "            | +--------------------------------+---------------------------------------+ | 360_day                        | "
            },
            {
              "type": "inlineCode",
              "value": "cftime.Datetime360Day"
            },
            {
              "type": "text",
              "value": "             | +--------------------------------+---------------------------------------+ | julian                         | "
            },
            {
              "type": "inlineCode",
              "value": "cftime.DatetimeJulian"
            },
            {
              "type": "text",
              "value": "             | +--------------------------------+---------------------------------------+"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Left bound for generating dates."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "start",
              "type": "Param",
              "type_": "str or cftime.datetime, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Right bound for generating dates."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "end",
              "type": "Param",
              "type_": "str or cftime.datetime, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of periods to generate."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "periods",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Frequency strings can have multiples, e.g. \"5H\"."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "freq",
              "type": "Param",
              "type_": "str or None, default: \"D\""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Normalize start/end dates to midnight before generating date range."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "normalize",
              "type": "Param",
              "type_": "bool, default: False"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Name of the resulting index"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "name",
              "type": "Param",
              "type_": "str, default: None"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Make the interval closed with respect to the given frequency to the \"left\", \"right\", or both sides (None)."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "deprecated 2023.02.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "Following pandas, the "
                        },
                        {
                          "type": "inlineCode",
                          "value": "closed"
                        },
                        {
                          "type": "text",
                          "value": " parameter is deprecated in favor of the "
                        },
                        {
                          "type": "inlineCode",
                          "value": "inclusive"
                        },
                        {
                          "type": "text",
                          "value": " parameter, and will be removed in a future version of xarray."
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "closed",
              "type": "Param",
              "type_": "{None, \"left\", \"right\"}, default: \"NO_DEFAULT\""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Include boundaries; whether to set each bound as closed or open."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 2023.02.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "inclusive",
              "type": "Param",
              "type_": "{None, \"both\", \"neither\", \"left\", \"right\"}, default None"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Calendar type for the datetimes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "calendar",
              "type": "Param",
              "type_": "str, default: \"standard\""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "",
              "type": "Param",
              "type_": "CFTimeIndex"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return a fixed frequency CFTimeIndex."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "text",
        "value": "This function returns a ``CFTimeIndex``, populated with ``cftime.datetime``\nobjects associated with the specified calendar type, e.g."
      },
      {
        "type": "code",
        "value": "xr.cftime_range(start=\"2000\", periods=6, freq=\"2MS\", calendar=\"noleap\")"
      },
      {
        "type": "text",
        "value": "As in the standard pandas function, three of the ``start``, ``end``,\n``periods``, or ``freq`` arguments must be specified at a given time, with\nthe other set to ``None``.  See the `pandas documentation\n<https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.date_range.html>`_\nfor more examples of the behavior of ``date_range`` with each of the\nparameters."
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/xarray/coding/cftime_offsets.py",
  "item_line": 896,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Notes",
    "Examples",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "pandas.date_range",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "pandas.date_range"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(start=None, end=None, periods=None, freq='D', normalize=False, name=None, closed: 'NoDefault | SideOptions' = <no_default>, inclusive: 'None | InclusiveOptions' = None, calendar='standard')"
  },
  "type": "DocBlob"
}