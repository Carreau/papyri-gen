{
  "aliases": [
    "xarray.date_range"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "The type ("
            },
            {
              "type": "inlineCode",
              "value": "xarray.CFTimeIndex"
            },
            {
              "type": "text",
              "value": " or "
            },
            {
              "type": "inlineCode",
              "value": "pandas.DatetimeIndex"
            },
            {
              "type": "text",
              "value": ") of the returned index depends on the requested calendar and on "
            },
            {
              "anchor": null,
              "exists": true,
              "kind": "local",
              "reference": {
                "kind": "local",
                "module": null,
                "path": "use_cftime",
                "type": "RefInfo",
                "version": null
              },
              "type": "Link",
              "value": "use_cftime"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Left bound for generating dates."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "start",
              "type": "Param",
              "type_": "str or datetime-like, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Right bound for generating dates."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "end",
              "type": "Param",
              "type_": "str or datetime-like, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Number of periods to generate."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "periods",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Frequency strings can have multiples, e.g. \"5H\"."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "freq",
              "type": "Param",
              "type_": "str or None, default: \"D\""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Time zone name for returning localized DatetimeIndex, for example 'Asia/Hong_Kong'. By default, the resulting DatetimeIndex is timezone-naive. Only valid with pandas DatetimeIndex."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "tz",
              "type": "Param",
              "type_": "str or tzinfo, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Normalize start/end dates to midnight before generating date range."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "normalize",
              "type": "Param",
              "type_": "bool, default: False"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Name of the resulting index"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "name",
              "type": "Param",
              "type_": "str, default: None"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Make the interval closed with respect to the given frequency to the \"left\", \"right\", or both sides (None)."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "deprecated 2023.02.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "Following pandas, the "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "closed"
                        },
                        {
                          "type": "text",
                          "value": " parameter is deprecated in favor of the "
                        },
                        {
                          "domain": null,
                          "role": null,
                          "type": "Directive",
                          "value": "inclusive"
                        },
                        {
                          "type": "text",
                          "value": " parameter, and will be removed in a future version of xarray."
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "closed",
              "type": "Param",
              "type_": "{None, \"left\", \"right\"}, default: \"NO_DEFAULT\""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Include boundaries; whether to set each bound as closed or open."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "versionadded 2023.02.0"
                        }
                      ],
                      "type": "admonitionTitle"
                    }
                  ],
                  "kind": "note",
                  "type": "admonition"
                }
              ],
              "param": "inclusive",
              "type": "Param",
              "type_": "{None, \"both\", \"neither\", \"left\", \"right\"}, default: None"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Calendar type for the datetimes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "calendar",
              "type": "Param",
              "type_": "str, default: \"standard\""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, always return a CFTimeIndex. If False, return a pd.DatetimeIndex if possible or raise a ValueError. If None (default), return a pd.DatetimeIndex if possible, otherwise return a CFTimeIndex. Defaults to False if "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "tz",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "tz"
                    },
                    {
                      "type": "text",
                      "value": " is not None."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "use_cftime",
              "type": "Param",
              "type_": "boolean, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "",
              "type": "Param",
              "type_": "CFTimeIndex or pd.DatetimeIndex"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return a fixed frequency datetime index."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/xarray/coding/cftime_offsets.py",
  "item_line": 1134,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "pandas.date_range",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "pandas.date_range"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "xarray",
          "path": "xarray.coding.cftime_offsets:cftime_range",
          "type": "RefInfo",
          "version": "2023.5.0"
        },
        "type": "Link",
        "value": "cftime_range"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "xarray",
          "path": "xarray.coding.cftime_offsets:date_range_like",
          "type": "RefInfo",
          "version": "2023.5.0"
        },
        "type": "Link",
        "value": "date_range_like"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(start=None, end=None, periods=None, freq='D', tz=None, normalize=False, name=None, closed: 'NoDefault | SideOptions' = <no_default>, inclusive: 'None | InclusiveOptions' = None, calendar='standard', use_cftime=None)"
  },
  "type": "DocBlob"
}