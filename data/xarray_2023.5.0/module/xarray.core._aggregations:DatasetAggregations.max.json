{
  "aliases": [
    "xarray.core._aggregations.DatasetAggregations.max"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Name of dimension[s] along which to apply "
                    },
                    {
                      "type": "inlineCode",
                      "value": "max"
                    },
                    {
                      "type": "text",
                      "value": ". For e.g. "
                    },
                    {
                      "type": "inlineCode",
                      "value": "dim=\"x\""
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "type": "inlineCode",
                      "value": "dim=[\"x\", \"y\"]"
                    },
                    {
                      "type": "text",
                      "value": ". If \"...\" or None, will reduce over all dimensions."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dim",
              "type": "Param",
              "type_": "str, Iterable of Hashable, \"...\" or None, default: None"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, skip missing values (as marked by NaN). By default, only skips missing values for float dtypes; other dtypes either do not have a sentinel missing value (int) or "
                    },
                    {
                      "type": "inlineCode",
                      "value": "skipna=True"
                    },
                    {
                      "type": "text",
                      "value": " has not been implemented (object, datetime64 or timedelta64)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "skipna",
              "type": "Param",
              "type_": "bool or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "attrs"
                    },
                    {
                      "type": "text",
                      "value": " will be copied from the original object to the new one.  If False, the new object will be returned without attributes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "keep_attrs",
              "type": "Param",
              "type_": "bool or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Additional keyword arguments passed on to the appropriate array function for calculating "
                    },
                    {
                      "type": "inlineCode",
                      "value": "max"
                    },
                    {
                      "type": "text",
                      "value": " on this object's data. These could include dask-specific kwargs like "
                    },
                    {
                      "type": "inlineCode",
                      "value": "split_every"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "**kwargs",
              "type": "Param",
              "type_": "Any"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "New Dataset with "
                    },
                    {
                      "type": "inlineCode",
                      "value": "max"
                    },
                    {
                      "type": "text",
                      "value": " applied to its data and the indicated dimension(s) removed"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "reduced",
              "type": "Param",
              "type_": "Dataset"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Reduce this Dataset's data by applying "
            },
            {
              "type": "inlineCode",
              "value": "max"
            },
            {
              "type": "text",
              "value": " along some dimension(s)."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "da = xr.DataArray(\n    np.array([1, 2, 3, 1, 2, np.nan]),\n    dims=\"time\",\n    coords=dict(\n        time=(\"time\", pd.date_range(\"2001-01-01\", freq=\"M\", periods=6)),\n        labels=(\"time\", np.array([\"a\", \"b\", \"c\", \"c\", \"b\", \"a\"])),\n    ),\n)\nds = xr.Dataset(dict(da=da))\nds"
      },
      {
        "type": "code",
        "value": "ds.max()"
      },
      {
        "type": "text",
        "value": "Use ``skipna`` to control whether NaNs are ignored."
      },
      {
        "type": "code",
        "value": "ds.max(skipna=False)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/xarray/core/_aggregations.py",
  "item_line": 252,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "numpy.max",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "numpy.max"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "dask.array.max",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "dask.array.max"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "DataArray.max",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "DataArray.max"
      },
      "type": null
    },
    {
      "descriptions": [
        {
          "children": [
            {
              "type": "text",
              "value": "User guide on reduction or aggregation operations."
            }
          ],
          "type": "paragraph"
        }
      ],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "agg",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "agg"
      },
      "type": "ref"
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self, dim: 'Dims' = None, *, skipna: 'bool | None' = None, keep_attrs: 'bool | None' = None, **kwargs: 'Any') -> 'Dataset'"
  },
  "type": "DocBlob"
}