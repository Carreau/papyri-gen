{
  "aliases": [
    "xarray.align"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Array from the aligned objects are suitable as input to mathematical operators, because along each dimension they have the same index and size."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "Missing values (if "
            },
            {
              "type": "inlineCode",
              "value": "join != 'inner'"
            },
            {
              "type": "text",
              "value": ") are filled with "
            },
            {
              "type": "inlineCode",
              "value": "fill_value"
            },
            {
              "type": "text",
              "value": ". The default fill value is NaN."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Objects to align."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "*objects",
              "type": "Param",
              "type_": "Dataset or DataArray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Method for joining the indexes of the passed objects along each dimension:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "\"outer\": use the union of object indexes"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "\"inner\": use the intersection of object indexes"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "\"left\": use indexes from the first object with each dimension"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "\"right\": use indexes from the last object with each dimension"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "\"exact\": instead of aligning, raise "
                            },
                            {
                              "domain": null,
                              "role": null,
                              "type": "Directive",
                              "value": "ValueError"
                            },
                            {
                              "type": "text",
                              "value": " when indexes to be   aligned are not equal"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "\"override\": if indexes are of same size, rewrite indexes to be   those of the first object with that dimension. Indexes for the same   dimension must have the same size in all objects."
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                }
              ],
              "param": "join",
              "type": "Param",
              "type_": "{\"outer\", \"inner\", \"left\", \"right\", \"exact\", \"override\"}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "copy=True"
                    },
                    {
                      "type": "text",
                      "value": ", data in the return values is always copied. If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "copy=False"
                    },
                    {
                      "type": "text",
                      "value": " and reindexing is unnecessary, or can be performed with only slice operations, then the output may share memory with the input. In either case, new xarray objects are always returned."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "copy",
              "type": "Param",
              "type_": "bool, default: True"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Any indexes explicitly provided with the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "indexes",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "indexes"
                    },
                    {
                      "type": "text",
                      "value": " argument should be used in preference to the aligned indexes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "indexes",
              "type": "Param",
              "type_": "dict-like, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Dimensions that must be excluded from alignment"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "exclude",
              "type": "Param",
              "type_": "sequence of str, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Value to use for newly missing values. If a dict-like, maps variable names to fill values. Use a data array's name to refer to its values."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "fill_value",
              "type": "Param",
              "type_": "scalar or dict-like, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If any dimensions without labels on the arguments have different sizes, or a different size than the size of the aligned dimension labels."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "",
              "type": "Param",
              "type_": "ValueError"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Tuple of objects with the same type as "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "*objects",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "*objects"
                    },
                    {
                      "type": "text",
                      "value": " with aligned coordinates."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "aligned",
              "type": "Param",
              "type_": "tuple of DataArray or Dataset"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Given any number of Dataset and/or DataArray objects, returns new objects with aligned indexes and dimension sizes."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "x = xr.DataArray(\n    [[25, 35], [10, 24]],\n    dims=(\"lat\", \"lon\"),\n    coords={\"lat\": [35.0, 40.0], \"lon\": [100.0, 120.0]},\n)\ny = xr.DataArray(\n    [[20, 5], [7, 13]],\n    dims=(\"lat\", \"lon\"),\n    coords={\"lat\": [35.0, 42.0], \"lon\": [100.0, 120.0]},\n)"
      },
      {
        "type": "code",
        "value": "x"
      },
      {
        "type": "code",
        "value": "y"
      },
      {
        "type": "code",
        "value": "a, b = xr.align(x, y)\na"
      },
      {
        "type": "code",
        "value": "b"
      },
      {
        "type": "code",
        "value": "a, b = xr.align(x, y, join=\"outer\")\na"
      },
      {
        "type": "code",
        "value": "b"
      },
      {
        "type": "code",
        "value": "a, b = xr.align(x, y, join=\"outer\", fill_value=-999)\na"
      },
      {
        "type": "code",
        "value": "b"
      },
      {
        "type": "code",
        "value": "a, b = xr.align(x, y, join=\"left\")\na"
      },
      {
        "type": "code",
        "value": "b"
      },
      {
        "type": "code",
        "value": "a, b = xr.align(x, y, join=\"right\")\na"
      },
      {
        "type": "code",
        "value": "b"
      },
      {
        "type": "code",
        "value": "a, b = xr.align(x, y, join=\"exact\")"
      },
      {
        "type": "code",
        "value": "a, b = xr.align(x, y, join=\"override\")\na"
      },
      {
        "type": "code",
        "value": "b"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/xarray/core/alignment.py",
  "item_line": 583,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(*objects: 'DataAlignable', join: 'JoinOptions' = 'inner', copy: 'bool' = True, indexes=None, exclude=frozenset(), fill_value=<NA>) -> 'tuple[DataAlignable, ...]'"
  },
  "type": "DocBlob"
}