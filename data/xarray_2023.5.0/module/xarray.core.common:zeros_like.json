{
  "aliases": [
    "xarray.zeros_like"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The reference object. The output will have the same dimensions and coordinates as this object."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "other",
              "type": "Param",
              "type_": "DataArray, Dataset or Variable"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "dtype of the new array. If omitted, it defaults to other.dtype."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dtype",
              "type": "Param",
              "type_": "dtype, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Chunk sizes along each dimension, e.g., "
                    },
                    {
                      "type": "inlineCode",
                      "value": "5"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "inlineCode",
                      "value": "\"auto\""
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "inlineCode",
                      "value": "(5, 5)"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "type": "inlineCode",
                      "value": "{\"x\": 5, \"y\": 5}"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "chunks",
              "type": "Param",
              "type_": "int, \"auto\", tuple of int or mapping of Hashable to int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Which chunked array type to coerce the underlying data array to. Defaults to 'dask' if installed, else whatever is registered via the "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "ChunkManagerEnetryPoint"
                    },
                    {
                      "type": "text",
                      "value": " system. Experimental API that should not be relied upon."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "chunked_array_type: str, optional",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Additional keyword arguments passed on to the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "xarray",
                        "path": "xarray.core.parallelcompat:ChunkManagerEntrypoint.from_array",
                        "type": "RefInfo",
                        "version": "2023.5.0"
                      },
                      "type": "Link",
                      "value": "ChunkManagerEntrypoint.from_array"
                    },
                    {
                      "type": "text",
                      "value": " method used to create chunked arrays, via whichever chunk manager is specified through the "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "xarray",
                        "path": "xarray.core.parallelcompat:get_chunked_array_type",
                        "type": "RefInfo",
                        "version": "2023.5.0"
                      },
                      "type": "Link",
                      "value": "chunked_array_type"
                    },
                    {
                      "type": "text",
                      "value": " kwarg. For example, with dask as the default chunked array type, this method would pass additional kwargs to "
                    },
                    {
                      "type": "inlineCode",
                      "value": "dask.array.from_array"
                    },
                    {
                      "type": "text",
                      "value": ". Experimental API that should not be relied upon."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "from_array_kwargs: dict, optional",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "New object of zeros with the same shape and type as other."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "out",
              "type": "Param",
              "type_": "DataArray, Dataset or Variable"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Return a new object of zeros with the same shape and type as a given dataarray or dataset."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "x = xr.DataArray(\n    np.arange(6).reshape(2, 3),\n    dims=[\"lat\", \"lon\"],\n    coords={\"lat\": [1, 2], \"lon\": [0, 1, 2]},\n)\nx"
      },
      {
        "type": "code",
        "value": "xr.zeros_like(x)"
      },
      {
        "type": "code",
        "value": "xr.zeros_like(x, dtype=float)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/xarray/core/common.py",
  "item_line": 1754,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Examples",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "xarray",
          "path": "xarray.core.common:ones_like",
          "type": "RefInfo",
          "version": "2023.5.0"
        },
        "type": "Link",
        "value": "ones_like"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "full_like",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "full_like"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(other: 'Dataset | DataArray | Variable', dtype: 'DTypeMaybeMapping | None' = None, *, chunks: 'T_Chunks' = None, chunked_array_type: 'str | None' = None, from_array_kwargs: 'dict[str, Any] | None' = None) -> 'Dataset | DataArray | Variable'"
  },
  "type": "DocBlob"
}