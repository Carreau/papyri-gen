{
  "aliases": [
    "xarray.DataArray.argmin"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "If a sequence is passed to 'dim', then result returned as dict of DataArrays, which can be passed directly to isel(). If a single str is passed to 'dim' then returns a DataArray with dtype int."
            }
          ],
          "type": "paragraph"
        },
        {
          "children": [
            {
              "type": "text",
              "value": "If there are multiple minima, the indices of the first one found will be returned."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The dimensions over which to find the minimum. By default, finds minimum over all dimensions - for now returning an int for backward compatibility, but this is deprecated, in future will return a dict with indices for all dimensions; to return a dict with all dimensions now, pass '...'."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dim",
              "type": "Param",
              "type_": "\"...\", str, Iterable of Hashable or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Axis over which to apply "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "module",
                        "module": "xarray",
                        "path": "xarray.core.dataarray:DataArray.argmin",
                        "type": "RefInfo",
                        "version": "2023.5.0"
                      },
                      "type": "Link",
                      "value": "argmin"
                    },
                    {
                      "type": "text",
                      "value": ". Only one of the 'dim' and 'axis' arguments can be supplied."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "axis",
              "type": "Param",
              "type_": "int or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, the attributes ("
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "module",
                      "reference": {
                        "kind": "api",
                        "module": "attrs",
                        "path": "attrs",
                        "type": "RefInfo",
                        "version": "*"
                      },
                      "type": "Link",
                      "value": "attrs"
                    },
                    {
                      "type": "text",
                      "value": ") will be copied from the original object to the new one. If False, the new object will be returned without attributes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "keep_attrs",
              "type": "Param",
              "type_": "bool or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, skip missing values (as marked by NaN). By default, only skips missing values for float dtypes; other dtypes either do not have a sentinel missing value (int) or skipna=True has not been implemented (object, datetime64 or timedelta64)."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "skipna",
              "type": "Param",
              "type_": "bool or None, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "result",
              "type": "Param",
              "type_": "DataArray or dict of DataArray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Index or indices of the minimum of the DataArray over one or more dimensions."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "array = xr.DataArray([0, 2, -1, 3], dims=\"x\")\narray.min()"
      },
      {
        "type": "code",
        "value": "array.argmin(...)"
      },
      {
        "type": "code",
        "value": "array.isel(array.argmin(...))"
      },
      {
        "type": "code",
        "value": "array = xr.DataArray(\n    [[[3, 2, 1], [3, 1, 2], [2, 1, 3]], [[1, 3, 2], [2, -5, 1], [2, 3, 1]]],\n    dims=(\"x\", \"y\", \"z\"),\n)\narray.min(dim=\"x\")"
      },
      {
        "type": "code",
        "value": "array.argmin(dim=\"x\")"
      },
      {
        "type": "code",
        "value": "array.argmin(dim=[\"x\"])"
      },
      {
        "type": "code",
        "value": "array.min(dim=(\"x\", \"z\"))"
      },
      {
        "type": "code",
        "value": "array.argmin(dim=[\"x\", \"z\"])"
      },
      {
        "type": "code",
        "value": "array.isel(array.argmin(dim=[\"x\", \"z\"]))"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/xarray/core/dataarray.py",
  "item_line": 5845,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "xarray",
          "path": "xarray.core.variable:Variable.argmin",
          "type": "RefInfo",
          "version": "2023.5.0"
        },
        "type": "Link",
        "value": "Variable.argmin"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "xarray",
          "path": "xarray.core.dataarray:DataArray.idxmin",
          "type": "RefInfo",
          "version": "2023.5.0"
        },
        "type": "Link",
        "value": "DataArray.idxmin"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self, dim: 'Dims' = None, axis: 'int | None' = None, keep_attrs: 'bool | None' = None, skipna: 'bool | None' = None) -> 'DataArray | dict[Hashable, DataArray]'"
  },
  "type": "DocBlob"
}