{
  "aliases": [
    "xarray.DataArray.dot"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Equivalent to taking taking tensordot over all shared dims."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The other array with which the dot product is performed."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "other",
              "type": "Param",
              "type_": "DataArray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Which dimensions to sum over. Ellipsis ("
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "..."
                    },
                    {
                      "type": "text",
                      "value": ") sums over all dimensions. If not specified, then all the common dimensions are summed over."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dims",
              "type": "Param",
              "type_": "..., str, Iterable of Hashable or None, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Array resulting from the dot product over all shared dimensions."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "result",
              "type": "Param",
              "type_": "DataArray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Perform dot product of two DataArrays along their shared dims."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "da_vals = np.arange(6 * 5 * 4).reshape((6, 5, 4))\nda = xr.DataArray(da_vals, dims=[\"x\", \"y\", \"z\"])\ndm_vals = np.arange(4)\ndm = xr.DataArray(dm_vals, dims=[\"z\"])"
      },
      {
        "type": "code",
        "value": "dm.dims"
      },
      {
        "type": "code",
        "value": "da.dims"
      },
      {
        "type": "code",
        "value": "dot_result = da.dot(dm)\ndot_result.dims"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/xarray/core/dataarray.py",
  "item_line": 4834,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "xarray",
          "path": "xarray.core.dataarray:DataArray.dot",
          "type": "RefInfo",
          "version": "2023.5.0"
        },
        "type": "Link",
        "value": "dot"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "numpy.tensordot",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "numpy.tensordot"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self: 'T_DataArray', other: 'T_DataArray', dims: 'Dims' = None) -> 'T_DataArray'"
  },
  "type": "DocBlob"
}