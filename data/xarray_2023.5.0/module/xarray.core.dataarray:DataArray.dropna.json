{
  "aliases": [
    "xarray.DataArray.dropna"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Dimension along which to drop missing values. Dropping along multiple dimensions simultaneously is not yet supported."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dim",
              "type": "Param",
              "type_": "Hashable"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "children": [],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                }
              ],
              "param": "how",
              "type": "Param",
              "type_": "{\"any\", \"all\"}, default: \"any\""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If supplied, require this many non-NA values."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "thresh",
              "type": "Param",
              "type_": "int or None, default: None"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "dropped",
              "type": "Param",
              "type_": "DataArray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Returns a new array with dropped labels for missing values along the provided dimension."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "temperature = [\n    [0, 4, 2, 9],\n    [np.nan, np.nan, np.nan, np.nan],\n    [np.nan, 4, 2, 0],\n    [3, 1, 0, 0],\n]\nda = xr.DataArray(\n    data=temperature,\n    dims=[\"Y\", \"X\"],\n    coords=dict(\n        lat=(\"Y\", np.array([-20.0, -20.25, -20.50, -20.75])),\n        lon=(\"X\", np.array([10.0, 10.25, 10.5, 10.75])),\n    ),\n)\nda"
      },
      {
        "type": "code",
        "value": "da.dropna(dim=\"Y\", how=\"any\")"
      },
      {
        "type": "text",
        "value": "Drop values only if all values along the dimension are NaN:"
      },
      {
        "type": "code",
        "value": "da.dropna(dim=\"Y\", how=\"all\")"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/xarray/core/dataarray.py",
  "item_line": 3184,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self: 'T_DataArray', dim: 'Hashable', how: \"Literal['any', 'all']\" = 'any', thresh: 'int | None' = None) -> 'T_DataArray'"
  },
  "type": "DocBlob"
}