{
  "aliases": [
    "xarray.DataArray.fillna"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This operation follows the normal broadcasting and alignment rules that xarray uses for binary arithmetic, except the result is aligned to this object ("
            },
            {
              "type": "inlineCode",
              "value": "join='left'"
            },
            {
              "type": "text",
              "value": ") instead of aligned to the intersection of index coordinates ("
            },
            {
              "type": "inlineCode",
              "value": "join='inner'"
            },
            {
              "type": "text",
              "value": ")."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Used to fill all matching missing values in this array. If the argument is a DataArray, it is first aligned with (reindexed to) this array."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "value",
              "type": "Param",
              "type_": "scalar, ndarray or DataArray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "filled",
              "type": "Param",
              "type_": "DataArray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Fill missing values in this object."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "da = xr.DataArray(\n    np.array([1, 4, np.nan, 0, 3, np.nan]),\n    dims=\"Z\",\n    coords=dict(\n        Z=(\"Z\", np.arange(6)),\n        height=(\"Z\", np.array([0, 10, 20, 30, 40, 50])),\n    ),\n)\nda"
      },
      {
        "type": "text",
        "value": "Fill all NaN values with 0:"
      },
      {
        "type": "code",
        "value": "da.fillna(0)"
      },
      {
        "type": "text",
        "value": "Fill NaN values with corresponding values in array:"
      },
      {
        "type": "code",
        "value": "da.fillna(np.array([2, 9, 4, 2, 8, 9]))"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/xarray/core/dataarray.py",
  "item_line": 3260,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self: 'T_DataArray', value: 'Any') -> 'T_DataArray'"
  },
  "type": "DocBlob"
}