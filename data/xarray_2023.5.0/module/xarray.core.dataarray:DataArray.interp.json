{
  "aliases": [
    "xarray.DataArray.interp"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Performs univariate or multivariate interpolation of a DataArray onto new coordinates using scipy's interpolation routines. If interpolating along an existing dimension, "
            },
            {
              "type": "inlineCode",
              "value": "scipy.interpolate.interp1d"
            },
            {
              "type": "text",
              "value": " is called. When interpolating along multiple existing dimensions, an attempt is made to decompose the interpolation into multiple 1-dimensional interpolations. If this is possible, "
            },
            {
              "type": "inlineCode",
              "value": "scipy.interpolate.interp1d"
            },
            {
              "type": "text",
              "value": " is called. Otherwise, "
            },
            {
              "type": "inlineCode",
              "value": "scipy.interpolate.interpn"
            },
            {
              "type": "text",
              "value": " is called."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "scipy is required."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Mapping from dimension names to the new coordinates. New coordinate can be a scalar, array-like or DataArray. If DataArrays are passed as new coordinates, their dimensions are used for the broadcasting. Missing values are skipped."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "coords",
              "type": "Param",
              "type_": "dict, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The method used to interpolate. The method should be supported by the scipy interpolator:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "inlineCode",
                              "value": "interp1d"
                            },
                            {
                              "type": "text",
                              "value": ": {\"linear\", \"nearest\", \"zero\", \"slinear\",   \"quadratic\", \"cubic\", \"polynomial\"}"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "inlineCode",
                              "value": "interpn"
                            },
                            {
                              "type": "text",
                              "value": ": {\"linear\", \"nearest\"}"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "\"polynomial\""
                    },
                    {
                      "type": "text",
                      "value": " is passed, the "
                    },
                    {
                      "type": "inlineCode",
                      "value": "order"
                    },
                    {
                      "type": "text",
                      "value": " keyword argument must also be provided."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "method",
              "type": "Param",
              "type_": "{\"linear\", \"nearest\", \"zero\", \"slinear\", \"quadratic\", \"cubic\", \"polynomial\"}, default: \"linear\""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If False, values of x can be in any order and they are sorted first. If True, x has to be an array of monotonically increasing values."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "assume_sorted",
              "type": "Param",
              "type_": "bool, default: False"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Additional keyword arguments passed to scipy's interpolator. Valid options and their behavior depend whether "
                    },
                    {
                      "type": "inlineCode",
                      "value": "interp1d"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "type": "inlineCode",
                      "value": "interpn"
                    },
                    {
                      "type": "text",
                      "value": " is used."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "kwargs",
              "type": "Param",
              "type_": "dict-like or None, default: None"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The keyword arguments form of "
                    },
                    {
                      "type": "inlineCode",
                      "value": "coords"
                    },
                    {
                      "type": "text",
                      "value": ". One of coords or coords_kwargs must be provided."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "**coords_kwargs",
              "type": "Param",
              "type_": "{dim: coordinate, ...}, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "New dataarray on the new coordinates."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "interpolated",
              "type": "Param",
              "type_": "DataArray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Interpolate a DataArray onto new coordinates"
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "da = xr.DataArray(\n    data=[[1, 4, 2, 9], [2, 7, 6, np.nan], [6, np.nan, 5, 8]],\n    dims=(\"x\", \"y\"),\n    coords={\"x\": [0, 1, 2], \"y\": [10, 12, 14, 16]},\n)\nda"
      },
      {
        "type": "text",
        "value": "1D linear interpolation (the default):"
      },
      {
        "type": "code",
        "value": "da.interp(x=[0, 0.75, 1.25, 1.75])"
      },
      {
        "type": "text",
        "value": "1D nearest interpolation:"
      },
      {
        "type": "code",
        "value": "da.interp(x=[0, 0.75, 1.25, 1.75], method=\"nearest\")"
      },
      {
        "type": "text",
        "value": "1D linear extrapolation:"
      },
      {
        "type": "code",
        "value": "da.interp(\n    x=[1, 1.5, 2.5, 3.5],\n    method=\"linear\",\n    kwargs={\"fill_value\": \"extrapolate\"},\n)"
      },
      {
        "type": "text",
        "value": "2D linear interpolation:"
      },
      {
        "type": "code",
        "value": "da.interp(x=[0, 0.75, 1.25, 1.75], y=[11, 13, 15], method=\"linear\")"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/xarray/core/dataarray.py",
  "item_line": 2068,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Notes",
    "See Also",
    "Examples"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "scipy.interpolate.interp1d",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "scipy.interpolate.interp1d"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "scipy.interpolate.interpn",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "scipy.interpolate.interpn"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self: 'T_DataArray', coords: 'Mapping[Any, Any] | None' = None, method: 'InterpOptions' = 'linear', assume_sorted: 'bool' = False, kwargs: 'Mapping[str, Any] | None' = None, **coords_kwargs: 'Any') -> 'T_DataArray'"
  },
  "type": "DocBlob"
}