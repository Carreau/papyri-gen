{
  "aliases": [
    "xarray.DataArray.reindex_like"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Object with an 'indexes' attribute giving a mapping from dimension names to pandas.Index objects, which provides coordinates upon which to index the variables in this dataset. The indexes on this other object need not be the same as the indexes on this dataset. Any mis-matched index values will be filled in with NaN, and any mis-matched dimension names will simply be ignored."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "other",
              "type": "Param",
              "type_": "Dataset or DataArray"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Method to use for filling index values from other not found on this data array:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "None (default): don't fill gaps"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "pad / ffill: propagate last valid index value forward"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "backfill / bfill: propagate next valid index value backward"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "text",
                              "value": "nearest: use nearest valid index value"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                }
              ],
              "param": "method",
              "type": "Param",
              "type_": "{None, \"nearest\", \"pad\", \"ffill\", \"backfill\", \"bfill\"}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Maximum distance between original and new labels for inexact matches. The values of the index at the matching locations must satisfy the equation "
                    },
                    {
                      "type": "inlineCode",
                      "value": "abs(index[indexer] - target) <= tolerance"
                    },
                    {
                      "type": "text",
                      "value": ". Tolerance may be a scalar value, which applies the same tolerance to all values, or list-like, which applies variable tolerance per element. List-like must be the same size as the index and its dtype must exactly match the index\u2019s type."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "tolerance",
              "type": "Param",
              "type_": "optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "copy=True"
                    },
                    {
                      "type": "text",
                      "value": ", data in the return value is always copied. If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "copy=False"
                    },
                    {
                      "type": "text",
                      "value": " and reindexing is unnecessary, or can be performed with only slice operations, then the output may share memory with the input. In either case, a new xarray object is always returned."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "copy",
              "type": "Param",
              "type_": "bool, default: True"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Value to use for newly missing values. If a dict-like, maps variable names (including coordinates) to fill values. Use this data array's name to refer to the data array's values."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "fill_value",
              "type": "Param",
              "type_": "scalar or dict-like, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Another dataset array, with this array's data but coordinates from the other object."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "reindexed",
              "type": "Param",
              "type_": "DataArray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Conform this object onto the indexes of another object, filling in missing values with "
            },
            {
              "type": "inlineCode",
              "value": "fill_value"
            },
            {
              "type": "text",
              "value": ". The default fill value is NaN."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "data = np.arange(12).reshape(4, 3)\nda1 = xr.DataArray(\n    data=data,\n    dims=[\"x\", \"y\"],\n    coords={\"x\": [10, 20, 30, 40], \"y\": [70, 80, 90]},\n)\nda1"
      },
      {
        "type": "code",
        "value": "da2 = xr.DataArray(\n    data=data,\n    dims=[\"x\", \"y\"],\n    coords={\"x\": [40, 30, 20, 10], \"y\": [90, 80, 70]},\n)\nda2"
      },
      {
        "type": "text",
        "value": "Reindexing with both DataArrays having the same coordinates set, but in different order:"
      },
      {
        "type": "code",
        "value": "da1.reindex_like(da2)"
      },
      {
        "type": "text",
        "value": "Reindexing with the other array having coordinates which the source array doesn't have:"
      },
      {
        "type": "code",
        "value": "data = np.arange(12).reshape(4, 3)\nda1 = xr.DataArray(\n    data=data,\n    dims=[\"x\", \"y\"],\n    coords={\"x\": [10, 20, 30, 40], \"y\": [70, 80, 90]},\n)\nda2 = xr.DataArray(\n    data=data,\n    dims=[\"x\", \"y\"],\n    coords={\"x\": [20, 10, 29, 39], \"y\": [70, 80, 90]},\n)\nda1.reindex_like(da2)"
      },
      {
        "type": "text",
        "value": "Filling missing values with the previous valid index with respect to the coordinates' value:"
      },
      {
        "type": "code",
        "value": "da1.reindex_like(da2, method=\"ffill\")"
      },
      {
        "type": "text",
        "value": "Filling missing values while tolerating specified error for inexact matches:"
      },
      {
        "type": "code",
        "value": "da1.reindex_like(da2, method=\"ffill\", tolerance=5)"
      },
      {
        "type": "text",
        "value": "Filling missing values with manually specified values:"
      },
      {
        "type": "code",
        "value": "da1.reindex_like(da2, fill_value=19)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/xarray/core/dataarray.py",
  "item_line": 1807,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Parameters",
    "Returns",
    "Examples",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "to-resolve",
          "module": "current-module",
          "path": "DataArray.reindex",
          "type": "RefInfo",
          "version": "current-version"
        },
        "type": "Link",
        "value": "DataArray.reindex"
      },
      "type": null
    },
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "xarray",
          "path": "xarray.core.alignment:Aligner.align",
          "type": "RefInfo",
          "version": "2023.5.0"
        },
        "type": "Link",
        "value": "align"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self: 'T_DataArray', other: 'DataArray | Dataset', method: 'ReindexMethodOptions' = None, tolerance: 'int | float | Iterable[int | float] | None' = None, copy: 'bool' = True, fill_value=<NA>) -> 'T_DataArray'"
  },
  "type": "DocBlob"
}