{
  "aliases": [
    "xarray.DataArray.stack"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "New dimensions will be added at the end, and the corresponding coordinate variables will be combined into a MultiIndex."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Mapping of the form "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "new_name=(dim1, dim2, ...)"
                    },
                    {
                      "type": "text",
                      "value": ". Names of new dimensions, and the existing dimensions that they replace. An ellipsis ("
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "..."
                    },
                    {
                      "type": "text",
                      "value": ") will be replaced by all unlisted dimensions. Passing a list containing an ellipsis ("
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": "stacked_dim=[...]"
                    },
                    {
                      "type": "text",
                      "value": ") will stack over all dimensions."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dimensions",
              "type": "Param",
              "type_": "mapping of Hashable to sequence of Hashable"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True, create a multi-index for each of the stacked dimensions. If False, don't create any index. If None, create a multi-index only if exactly one single (1-d) coordinate index is found for every dimension to stack."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "create_index",
              "type": "Param",
              "type_": "bool or None, default: True"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Can be used to pass a custom multi-index type. Must be an Xarray index that implements "
                    },
                    {
                      "domain": null,
                      "role": null,
                      "type": "Directive",
                      "value": ".stack()"
                    },
                    {
                      "type": "text",
                      "value": ". By default, a pandas multi-index wrapper is used."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "index_cls: class, optional",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The keyword arguments form of "
                    },
                    {
                      "type": "inlineCode",
                      "value": "dimensions"
                    },
                    {
                      "type": "text",
                      "value": ". One of dimensions or dimensions_kwargs must be provided."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "**dimensions_kwargs",
              "type": "Param",
              "type_": ""
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "DataArray with stacked data."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "stacked",
              "type": "Param",
              "type_": "DataArray"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Stack any number of existing dimensions into a single new dimension."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "arr = xr.DataArray(\n    np.arange(6).reshape(2, 3),\n    coords=[(\"x\", [\"a\", \"b\"]), (\"y\", [0, 1, 2])],\n)\narr"
      },
      {
        "type": "code",
        "value": "stacked = arr.stack(z=(\"x\", \"y\"))\nstacked.indexes[\"z\"]"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/xarray/core/dataarray.py",
  "item_line": 2696,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples",
    "See Also"
  ],
  "references": null,
  "see_also": [
    {
      "descriptions": [],
      "name": {
        "anchor": null,
        "exists": true,
        "kind": "module",
        "reference": {
          "kind": "module",
          "module": "xarray",
          "path": "xarray.core.dataarray:DataArray.unstack",
          "type": "RefInfo",
          "version": "2023.5.0"
        },
        "type": "Link",
        "value": "DataArray.unstack"
      },
      "type": null
    }
  ],
  "signature": {
    "type": "Signature",
    "value": "(self: 'T_DataArray', dimensions: 'Mapping[Any, Sequence[Hashable]] | None' = None, create_index: 'bool | None' = True, index_cls: 'type[Index]' = <class 'xarray.core.indexes.PandasMultiIndex'>, **dimensions_kwargs: 'Sequence[Hashable]') -> 'T_DataArray'"
  },
  "type": "DocBlob"
}