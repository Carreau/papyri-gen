{
  "aliases": [
    "xarray.Dataset.fillna"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This operation follows the normal broadcasting and alignment rules that xarray uses for binary arithmetic, except the result is aligned to this object ("
            },
            {
              "type": "inlineCode",
              "value": "join='left'"
            },
            {
              "type": "text",
              "value": ") instead of aligned to the intersection of index coordinates ("
            },
            {
              "type": "inlineCode",
              "value": "join='inner'"
            },
            {
              "type": "text",
              "value": ")."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Used to fill all matching missing values in this dataset's data variables. Scalars, ndarrays or DataArrays arguments are used to fill all data with aligned coordinates (for DataArrays). Dictionaries or datasets match data variables and then align coordinates if necessary."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "value",
              "type": "Param",
              "type_": "scalar, ndarray, DataArray, dict or Dataset"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "",
              "type": "Param",
              "type_": "Dataset"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Fill missing values in this object."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [
      {
        "type": "code",
        "value": "ds = xr.Dataset(\n    {\n        \"A\": (\"x\", [np.nan, 2, np.nan, 0]),\n        \"B\": (\"x\", [3, 4, np.nan, 1]),\n        \"C\": (\"x\", [np.nan, np.nan, np.nan, 5]),\n        \"D\": (\"x\", [np.nan, 3, np.nan, 4]),\n    },\n    coords={\"x\": [0, 1, 2, 3]},\n)\nds"
      },
      {
        "type": "text",
        "value": "Replace all `NaN` values with 0s."
      },
      {
        "type": "code",
        "value": "ds.fillna(0)"
      },
      {
        "type": "text",
        "value": "Replace all `NaN` elements in column \u2018A\u2019, \u2018B\u2019, \u2018C\u2019, and \u2018D\u2019, with 0, 1, 2, and 3 respectively."
      },
      {
        "type": "code",
        "value": "values = {\"A\": 0, \"B\": 1, \"C\": 2, \"D\": 3}\nds.fillna(value=values)"
      }
    ],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/xarray/core/dataset.py",
  "item_line": 5589,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Examples"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(self: 'T_Dataset', value: 'Any') -> 'T_Dataset'"
  },
  "type": "DocBlob"
}