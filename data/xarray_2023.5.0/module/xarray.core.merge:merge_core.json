{
  "aliases": [
    "xarray.core.merge.merge_core"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "This is not public API."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "All values must be convertible to labeled arrays."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "objects",
              "type": "Param",
              "type_": "list of mapping"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Compatibility checks to use when merging variables."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "compat",
              "type": "Param",
              "type_": "{\"identical\", \"equals\", \"broadcast_equals\", \"no_conflicts\", \"override\"}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "How to combine objects with different indexes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "join",
              "type": "Param",
              "type_": "{\"outer\", \"inner\", \"left\", \"right\"}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "How to combine attributes of objects"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "combine_attrs",
              "type": "Param",
              "type_": "{\"drop\", \"identical\", \"no_conflicts\", \"drop_conflicts\",                      \"override\"} or callable, default: \"override\""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Optional argument in "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "objects",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "objects"
                    },
                    {
                      "type": "text",
                      "value": " that takes precedence over the others."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "priority_arg",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "An explicit list of variables from "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "objects",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "objects"
                    },
                    {
                      "type": "text",
                      "value": " that are coordinates."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "explicit_coords",
              "type": "Param",
              "type_": "set, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Dictionary with values given by xarray.Index objects or anything that may be cast to pandas.Index objects."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "indexes",
              "type": "Param",
              "type_": "dict, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Value to use for newly missing values"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "fill_value",
              "type": "Param",
              "type_": "scalar, optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "",
              "type": "Param",
              "type_": "MergeError if the merge cannot be done successfully."
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [
        {
          "children": [
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Dictionary of Variable objects."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "variables",
              "type": "Param",
              "type_": "dict"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Set of coordinate names."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "coord_names",
              "type": "Param",
              "type_": "set"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Dictionary mapping from dimension names to sizes."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "dims",
              "type": "Param",
              "type_": "dict"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Dictionary of attributes"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "attrs",
              "type": "Param",
              "type_": "dict"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Core logic for merging labeled objects."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/xarray/core/merge.py",
  "item_line": 685,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters",
    "Returns",
    "Raises"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(objects: 'Iterable[CoercibleMapping]', compat: 'CompatOptions' = 'broadcast_equals', join: 'JoinOptions' = 'outer', combine_attrs: 'CombineAttrsOptions' = 'override', priority_arg: 'int | None' = None, explicit_coords: 'Sequence | None' = None, indexes: 'Mapping[Any, Any] | None' = None, fill_value: 'object' = <NA>) -> '_MergeResult'"
  },
  "type": "DocBlob"
}