{
  "aliases": [
    "xarray.plot.dataset_plot.streamplot",
    "xarray.core.dataset.DatasetPlotAccessor.streamplot"
  ],
  "arbitrary": [],
  "content": {
    "Attributes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Extended Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Wraps "
            },
            {
              "type": "inlineCode",
              "value": "matplotlib:matplotlib.pyplot.streamplot"
            },
            {
              "type": "text",
              "value": "."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Methods": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Notes": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Other Parameters": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Parameters": {
      "children": [
        {
          "children": [
            {
              "desc": [],
              "param": "ds",
              "type": "Param",
              "type_": "Dataset"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Variable name for x-axis."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "x",
              "type": "Param",
              "type_": "Hashable or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Variable name for y-axis."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "y",
              "type": "Param",
              "type_": "Hashable or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Variable name for the "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "u"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " velocity (in "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "x"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " direction). quiver/streamplot plots only."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "u",
              "type": "Param",
              "type_": "Hashable or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Variable name for the "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "v"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " velocity (in "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "y"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " direction). quiver/streamplot plots only."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "v",
              "type": "Param",
              "type_": "Hashable or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Variable by which to color scatter points or arrows."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "hue: Hashable or None, optional",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "How to use the "
                    },
                    {
                      "type": "inlineCode",
                      "value": "hue"
                    },
                    {
                      "type": "text",
                      "value": " variable:"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "inlineCode",
                              "value": "'continuous'"
                            },
                            {
                              "type": "text",
                              "value": " -- continuous color scale   (default for numeric "
                            },
                            {
                              "type": "inlineCode",
                              "value": "hue"
                            },
                            {
                              "type": "text",
                              "value": " variables)"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "inlineCode",
                              "value": "'discrete'"
                            },
                            {
                              "type": "text",
                              "value": " -- a color for each unique value, using the default color cycle   (default for non-numeric "
                            },
                            {
                              "type": "inlineCode",
                              "value": "hue"
                            },
                            {
                              "type": "text",
                              "value": " variables)"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                }
              ],
              "param": "hue_style: {'continuous', 'discrete'} or None, optional",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If passed, make row faceted plots on this dimension name."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "row",
              "type": "Param",
              "type_": "Hashable or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If passed, make column faceted plots on this dimension name."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "col",
              "type": "Param",
              "type_": "Hashable or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Use together with "
                    },
                    {
                      "type": "inlineCode",
                      "value": "col"
                    },
                    {
                      "type": "text",
                      "value": " to wrap faceted plots."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "col_wrap",
              "type": "Param",
              "type_": "int, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "None"
                    },
                    {
                      "type": "text",
                      "value": ", use the current axes. Not applicable when using facets."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "ax",
              "type": "Param",
              "type_": "matplotlib axes object or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A tuple (width, height) of the figure in inches. Mutually exclusive with "
                    },
                    {
                      "type": "inlineCode",
                      "value": "size"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "ax"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "figsize",
              "type": "Param",
              "type_": "Iterable[float] or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If provided, create a new figure for the plot with the given size. Height (in inches) of each plot. See also: "
                    },
                    {
                      "type": "inlineCode",
                      "value": "aspect"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "size",
              "type": "Param",
              "type_": "scalar, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Aspect ratio of plot, so that "
                    },
                    {
                      "type": "inlineCode",
                      "value": "aspect * size"
                    },
                    {
                      "type": "text",
                      "value": " gives the width in inches. Only used if a "
                    },
                    {
                      "type": "inlineCode",
                      "value": "size"
                    },
                    {
                      "type": "text",
                      "value": " is provided."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "aspect",
              "type": "Param",
              "type_": "\"auto\", \"equal\", scalar or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True all subplots share the same x-axis."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "sharex",
              "type": "Param",
              "type_": "bool or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True all subplots share the same y-axis."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "sharey",
              "type": "Param",
              "type_": "bool or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Add a guide that depends on "
                    },
                    {
                      "type": "inlineCode",
                      "value": "hue_style"
                    },
                    {
                      "type": "text",
                      "value": ":"
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "inlineCode",
                              "value": "'continuous'"
                            },
                            {
                              "type": "text",
                              "value": " -- build a colorbar"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    },
                    {
                      "children": [
                        {
                          "children": [
                            {
                              "type": "inlineCode",
                              "value": "'discrete'"
                            },
                            {
                              "type": "text",
                              "value": " -- build a legend"
                            }
                          ],
                          "type": "paragraph"
                        }
                      ],
                      "spread": false,
                      "type": "listItem"
                    }
                  ],
                  "ordered": false,
                  "spread": false,
                  "start": 1,
                  "type": "list"
                }
              ],
              "param": "add_guide: bool or None, optional",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Dictionary of keyword arguments for Matplotlib subplots (see "
                    },
                    {
                      "type": "inlineCode",
                      "value": "matplotlib:matplotlib.figure.Figure.add_subplot"
                    },
                    {
                      "type": "text",
                      "value": "). Only applies to FacetGrid plotting."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "subplot_kws",
              "type": "Param",
              "type_": "dict or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Dictionary of keyword arguments to pass to the colorbar (see "
                    },
                    {
                      "type": "inlineCode",
                      "value": "matplotlib:matplotlib.figure.Figure.colorbar"
                    },
                    {
                      "type": "text",
                      "value": ")."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cbar_kwargs",
              "type": "Param",
              "type_": "dict, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Axes in which to draw the colorbar."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cbar_ax",
              "type": "Param",
              "type_": "matplotlib axes object, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The mapping from data values to color space. Either a Matplotlib colormap name or object. If not provided, this will be either "
                    },
                    {
                      "type": "inlineCode",
                      "value": "'viridis'"
                    },
                    {
                      "type": "text",
                      "value": " (if the function infers a sequential dataset) or "
                    },
                    {
                      "type": "inlineCode",
                      "value": "'RdBu_r'"
                    },
                    {
                      "type": "text",
                      "value": " (if the function infers a diverging dataset). See "
                    },
                    {
                      "type": "inlineCode",
                      "value": "Choosing Colormaps in Matplotlib <matplotlib:tutorials/colors/colormaps>"
                    },
                    {
                      "type": "text",
                      "value": " for more information."
                    }
                  ],
                  "type": "paragraph"
                },
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "seaborn"
                        }
                      ],
                      "type": "emphasis"
                    },
                    {
                      "type": "text",
                      "value": " is installed, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "cmap"
                    },
                    {
                      "type": "text",
                      "value": " may also be a "
                    },
                    {
                      "children": [
                        {
                          "type": "text",
                          "value": "seaborn color palette"
                        }
                      ],
                      "title": "",
                      "type": "link",
                      "url": "https://seaborn.pydata.org/tutorial/color_palettes.html"
                    },
                    {
                      "type": "text",
                      "value": ". Note: if "
                    },
                    {
                      "type": "inlineCode",
                      "value": "cmap"
                    },
                    {
                      "type": "text",
                      "value": " is a seaborn color palette, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "levels"
                    },
                    {
                      "type": "text",
                      "value": " must also be specified."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "cmap",
              "type": "Param",
              "type_": "matplotlib colormap name or colormap, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Lower value to anchor the colormap, otherwise it is inferred from the data and other keyword arguments. When a diverging dataset is inferred, setting "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "vmin",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "vmin"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "vmax",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "vmax"
                    },
                    {
                      "type": "text",
                      "value": " will fix the other by symmetry around "
                    },
                    {
                      "type": "inlineCode",
                      "value": "center"
                    },
                    {
                      "type": "text",
                      "value": ". Setting both values prevents use of a diverging colormap. If discrete levels are provided as an explicit list, both of these values are ignored."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "vmin",
              "type": "Param",
              "type_": "float or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Upper value to anchor the colormap, otherwise it is inferred from the data and other keyword arguments. When a diverging dataset is inferred, setting "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "vmin",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "vmin"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "anchor": null,
                      "exists": true,
                      "kind": "local",
                      "reference": {
                        "kind": "local",
                        "module": null,
                        "path": "vmax",
                        "type": "RefInfo",
                        "version": null
                      },
                      "type": "Link",
                      "value": "vmax"
                    },
                    {
                      "type": "text",
                      "value": " will fix the other by symmetry around "
                    },
                    {
                      "type": "inlineCode",
                      "value": "center"
                    },
                    {
                      "type": "text",
                      "value": ". Setting both values prevents use of a diverging colormap. If discrete levels are provided as an explicit list, both of these values are ignored."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "vmax",
              "type": "Param",
              "type_": "float or None, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "norm"
                    },
                    {
                      "type": "text",
                      "value": " has "
                    },
                    {
                      "type": "inlineCode",
                      "value": "vmin"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "type": "inlineCode",
                      "value": "vmax"
                    },
                    {
                      "type": "text",
                      "value": " specified, the corresponding kwarg must be "
                    },
                    {
                      "type": "inlineCode",
                      "value": "None"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "norm",
              "type": "Param",
              "type_": "matplotlib.colors.Normalize, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If True the intervals are inferred."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "infer_intervals: bool | None",
              "type": "Param",
              "type_": ""
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "The value at which to center the colormap. Passing this value implies use of a diverging colormap. Setting it to "
                    },
                    {
                      "type": "inlineCode",
                      "value": "False"
                    },
                    {
                      "type": "text",
                      "value": " prevents use of a diverging colormap."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "center",
              "type": "Param",
              "type_": "float, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "If "
                    },
                    {
                      "type": "inlineCode",
                      "value": "True"
                    },
                    {
                      "type": "text",
                      "value": " and "
                    },
                    {
                      "type": "inlineCode",
                      "value": "vmin"
                    },
                    {
                      "type": "text",
                      "value": " or "
                    },
                    {
                      "type": "inlineCode",
                      "value": "vmax"
                    },
                    {
                      "type": "text",
                      "value": " are absent, the colormap range is computed with 2nd and 98th percentiles instead of the extreme values."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "robust",
              "type": "Param",
              "type_": "bool, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "A single color or a list of colors. The "
                    },
                    {
                      "type": "inlineCode",
                      "value": "levels"
                    },
                    {
                      "type": "text",
                      "value": " argument is required."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "colors",
              "type": "Param",
              "type_": "str or array-like of color-like, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "How to draw arrows extending the colorbar beyond its limits. If not provided, "
                    },
                    {
                      "type": "inlineCode",
                      "value": "extend"
                    },
                    {
                      "type": "text",
                      "value": " is inferred from "
                    },
                    {
                      "type": "inlineCode",
                      "value": "vmin"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "inlineCode",
                      "value": "vmax"
                    },
                    {
                      "type": "text",
                      "value": " and the data limits."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "extend",
              "type": "Param",
              "type_": "{'neither', 'both', 'min', 'max'}, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Split the colormap ("
                    },
                    {
                      "type": "inlineCode",
                      "value": "cmap"
                    },
                    {
                      "type": "text",
                      "value": ") into discrete color intervals. If an integer is provided, \"nice\" levels are chosen based on the data range: this can imply that the final number of levels is not exactly the expected one. Setting "
                    },
                    {
                      "type": "inlineCode",
                      "value": "vmin"
                    },
                    {
                      "type": "text",
                      "value": " and/or "
                    },
                    {
                      "type": "inlineCode",
                      "value": "vmax"
                    },
                    {
                      "type": "text",
                      "value": " with "
                    },
                    {
                      "type": "inlineCode",
                      "value": "levels=N"
                    },
                    {
                      "type": "text",
                      "value": " is equivalent to setting "
                    },
                    {
                      "type": "inlineCode",
                      "value": "levels=np.linspace(vmin, vmax, N)"
                    },
                    {
                      "type": "text",
                      "value": "."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "levels",
              "type": "Param",
              "type_": "int or array-like, optional"
            },
            {
              "desc": [
                {
                  "children": [
                    {
                      "type": "text",
                      "value": "Additional keyword arguments to wrapped Matplotlib function."
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "param": "**kwargs",
              "type": "Param",
              "type_": "optional"
            }
          ],
          "type": "Parameters"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Raises": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Receives": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Returns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Summary": {
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "Plot streamlines of Dataset variables."
            }
          ],
          "type": "paragraph"
        }
      ],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warnings": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Warns": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    },
    "Yields": {
      "children": [],
      "level": 0,
      "target": null,
      "title": null,
      "type": "Section"
    }
  },
  "example_section_data": {
    "children": [],
    "level": 0,
    "target": null,
    "title": null,
    "type": "Section"
  },
  "item_file": "/xarray/plot/dataset_plot.py",
  "item_line": 158,
  "item_type": "<class 'function'>",
  "ordered_sections": [
    "Summary",
    "Extended Summary",
    "Parameters"
  ],
  "references": null,
  "see_also": [],
  "signature": {
    "type": "Signature",
    "value": "(ds: 'Dataset', *args: 'Any', x: 'Hashable | None' = None, y: 'Hashable | None' = None, u: 'Hashable | None' = None, v: 'Hashable | None' = None, hue: 'Hashable | None' = None, hue_style: 'HueStyleOptions' = None, row: 'Hashable | None' = None, col: 'Hashable | None' = None, col_wrap: 'int | None' = None, ax: 'Axes | None' = None, figsize: 'Iterable[float] | None' = None, size: 'float | None' = None, aspect: 'AspectOptions' = None, sharex: 'bool' = True, sharey: 'bool' = True, add_guide: 'bool | None' = None, subplot_kws: 'dict[str, Any] | None' = None, cbar_kwargs: 'dict[str, Any] | None' = None, cbar_ax: 'Axes | None' = None, cmap: 'str | Colormap | None' = None, vmin: 'float | None' = None, vmax: 'float | None' = None, norm: 'Normalize | None' = None, infer_intervals: 'bool | None' = None, center: 'float | None' = None, robust: 'bool | None' = None, colors: 'str | ArrayLike | None' = None, extend: 'ExtendOptions' = None, levels: 'ArrayLike | None' = None, **kwargs: 'Any') -> 'Any'"
  },
  "type": "DocBlob"
}